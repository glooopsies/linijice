use types;
use types::c;

// Built-in loader
@symbol("eglGetProcAddress") fn eglGetProcAddress(procName: *c::char) *opaque;

fn get_proc_address(proc_name: str) *opaque = {
	let cstr = ((&proc_name): *types::string).data: *c::char;
	return eglGetProcAddress(cstr);
};

// Types
export type gl_enum = uint;
export type gl_bitfield = uint;

export type GLDEBUGPROC = nullable *fn(
	source: gl_enum,
	type_: gl_enum,
	id: uint,
	severity: gl_enum,
	length: i32,
	message: nullable *c::char,
	userParam: nullable *opaque
) void;
export type GLDEBUGPROCARB = nullable *fn(
	source: gl_enum,
	type_: gl_enum,
	id: uint,
	severity: gl_enum,
	length: i32,
	message: nullable *c::char,
	userParam: nullable *opaque
) void;
export type GLDEBUGPROCKHR = nullable *fn(
	source: gl_enum,
	type_: gl_enum,
	id: uint,
	severity: gl_enum,
	length: i32,
	message: nullable *c::char,
	userParam: nullable *opaque
) void;
export type GLDEBUGPROCAMD = nullable *fn(
	id: uint,
	category: gl_enum,
	severity: gl_enum,
	length: i32,
	message: nullable *c::char,
	userParam: nullable *opaque
) void;
export type GLVULKANPROCNV = nullable *fn() void;

// Constants
export def GL_1PASS_EXT: uint = 0x80A1;
export def GL_1PASS_SGIS: uint = 0x80A1;
export def GL_2PASS_0_EXT: uint = 0x80A2;
export def GL_2PASS_0_SGIS: uint = 0x80A2;
export def GL_2PASS_1_EXT: uint = 0x80A3;
export def GL_2PASS_1_SGIS: uint = 0x80A3;
export def GL_2X_BIT_ATI: uint = 0x00000001;
export def GL_422_AVERAGE_EXT: uint = 0x80CE;
export def GL_422_EXT: uint = 0x80CC;
export def GL_422_REV_AVERAGE_EXT: uint = 0x80CF;
export def GL_422_REV_EXT: uint = 0x80CD;
export def GL_4PASS_0_EXT: uint = 0x80A4;
export def GL_4PASS_0_SGIS: uint = 0x80A4;
export def GL_4PASS_1_EXT: uint = 0x80A5;
export def GL_4PASS_1_SGIS: uint = 0x80A5;
export def GL_4PASS_2_EXT: uint = 0x80A6;
export def GL_4PASS_2_SGIS: uint = 0x80A6;
export def GL_4PASS_3_EXT: uint = 0x80A7;
export def GL_4PASS_3_SGIS: uint = 0x80A7;
export def GL_4X_BIT_ATI: uint = 0x00000002;
export def GL_8X_BIT_ATI: uint = 0x00000004;
export def GL_ABGR_EXT: uint = 0x8000;
export def GL_ACCUM_ADJACENT_PAIRS_NV: uint = 0x90AD;
export def GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: uint = 0x92D9;
export def GL_ACTIVE_ATTRIBUTES: uint = 0x8B89;
export def GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: uint = 0x8B8A;
export def GL_ACTIVE_PROGRAM: uint = 0x8259;
export def GL_ACTIVE_PROGRAM_EXT: uint = 0x8B8D;
export def GL_ACTIVE_RESOURCES: uint = 0x92F5;
export def GL_ACTIVE_STENCIL_FACE_EXT: uint = 0x8911;
export def GL_ACTIVE_SUBROUTINES: uint = 0x8DE5;
export def GL_ACTIVE_SUBROUTINE_MAX_LENGTH: uint = 0x8E48;
export def GL_ACTIVE_SUBROUTINE_UNIFORMS: uint = 0x8DE6;
export def GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: uint = 0x8E47;
export def GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: uint = 0x8E49;
export def GL_ACTIVE_TEXTURE: uint = 0x84E0;
export def GL_ACTIVE_TEXTURE_ARB: uint = 0x84E0;
export def GL_ACTIVE_UNIFORMS: uint = 0x8B86;
export def GL_ACTIVE_UNIFORM_BLOCKS: uint = 0x8A36;
export def GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: uint = 0x8A35;
export def GL_ACTIVE_UNIFORM_MAX_LENGTH: uint = 0x8B87;
export def GL_ACTIVE_VARIABLES: uint = 0x9305;
export def GL_ACTIVE_VARYINGS_NV: uint = 0x8C81;
export def GL_ACTIVE_VARYING_MAX_LENGTH_NV: uint = 0x8C82;
export def GL_ACTIVE_VERTEX_UNITS_ARB: uint = 0x86A5;
export def GL_ADD_ATI: uint = 0x8963;
export def GL_ADD_SIGNED_ARB: uint = 0x8574;
export def GL_ADD_SIGNED_EXT: uint = 0x8574;
export def GL_ADJACENT_PAIRS_NV: uint = 0x90AE;
export def GL_AFFINE_2D_NV: uint = 0x9092;
export def GL_AFFINE_3D_NV: uint = 0x9094;
export def GL_ALIASED_LINE_WIDTH_RANGE: uint = 0x846E;
export def GL_ALLOW_DRAW_FRG_HINT_PGI: uint = 0x1A210;
export def GL_ALLOW_DRAW_MEM_HINT_PGI: uint = 0x1A211;
export def GL_ALLOW_DRAW_OBJ_HINT_PGI: uint = 0x1A20E;
export def GL_ALLOW_DRAW_WIN_HINT_PGI: uint = 0x1A20F;
export def GL_ALL_BARRIER_BITS: uint = 0xFFFFFFFF;
export def GL_ALL_BARRIER_BITS_EXT: uint = 0xFFFFFFFF;
export def GL_ALL_COMPLETED_NV: uint = 0x84F2;
export def GL_ALL_PIXELS_AMD: uint = 0xFFFFFFFF;
export def GL_ALL_SHADER_BITS: uint = 0xFFFFFFFF;
export def GL_ALL_STATIC_DATA_IBM: uint = 103060;
export def GL_ALPHA: uint = 0x1906;
export def GL_ALPHA12_EXT: uint = 0x803D;
export def GL_ALPHA16F_ARB: uint = 0x881C;
export def GL_ALPHA16F_EXT: uint = 0x881C;
export def GL_ALPHA16I_EXT: uint = 0x8D8A;
export def GL_ALPHA16UI_EXT: uint = 0x8D78;
export def GL_ALPHA16_EXT: uint = 0x803E;
export def GL_ALPHA16_SNORM: uint = 0x9018;
export def GL_ALPHA32F_ARB: uint = 0x8816;
export def GL_ALPHA32F_EXT: uint = 0x8816;
export def GL_ALPHA32I_EXT: uint = 0x8D84;
export def GL_ALPHA32UI_EXT: uint = 0x8D72;
export def GL_ALPHA4_EXT: uint = 0x803B;
export def GL_ALPHA8I_EXT: uint = 0x8D90;
export def GL_ALPHA8UI_EXT: uint = 0x8D7E;
export def GL_ALPHA8_EXT: uint = 0x803C;
export def GL_ALPHA8_SNORM: uint = 0x9014;
export def GL_ALPHA_FLOAT16_APPLE: uint = 0x881C;
export def GL_ALPHA_FLOAT16_ATI: uint = 0x881C;
export def GL_ALPHA_FLOAT32_APPLE: uint = 0x8816;
export def GL_ALPHA_FLOAT32_ATI: uint = 0x8816;
export def GL_ALPHA_INTEGER_EXT: uint = 0x8D97;
export def GL_ALPHA_MAX_CLAMP_INGR: uint = 0x8567;
export def GL_ALPHA_MAX_SGIX: uint = 0x8321;
export def GL_ALPHA_MIN_CLAMP_INGR: uint = 0x8563;
export def GL_ALPHA_MIN_SGIX: uint = 0x8320;
export def GL_ALPHA_REF_COMMAND_NV: uint = 0x000F;
export def GL_ALPHA_SNORM: uint = 0x9010;
export def GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV: uint = 0x934D;
export def GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV: uint = 0x934F;
export def GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV: uint = 0x934E;
export def GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV: uint = 0x92BF;
export def GL_ALREADY_SIGNALED: uint = 0x911A;
export def GL_ALWAYS: uint = 0x0207;
export def GL_ALWAYS_FAST_HINT_PGI: uint = 0x1A20C;
export def GL_ALWAYS_SOFT_HINT_PGI: uint = 0x1A20D;
export def GL_AND: uint = 0x1501;
export def GL_AND_INVERTED: uint = 0x1504;
export def GL_AND_REVERSE: uint = 0x1502;
export def GL_ANY_SAMPLES_PASSED: uint = 0x8C2F;
export def GL_ANY_SAMPLES_PASSED_CONSERVATIVE: uint = 0x8D6A;
export def GL_ARC_TO_NV: uint = 0xFE;
export def GL_ARRAY_BUFFER: uint = 0x8892;
export def GL_ARRAY_BUFFER_ARB: uint = 0x8892;
export def GL_ARRAY_BUFFER_BINDING: uint = 0x8894;
export def GL_ARRAY_BUFFER_BINDING_ARB: uint = 0x8894;
export def GL_ARRAY_ELEMENT_LOCK_COUNT_EXT: uint = 0x81A9;
export def GL_ARRAY_ELEMENT_LOCK_FIRST_EXT: uint = 0x81A8;
export def GL_ARRAY_OBJECT_BUFFER_ATI: uint = 0x8766;
export def GL_ARRAY_OBJECT_OFFSET_ATI: uint = 0x8767;
export def GL_ARRAY_SIZE: uint = 0x92FB;
export def GL_ARRAY_STRIDE: uint = 0x92FE;
export def GL_ASYNC_DRAW_PIXELS_SGIX: uint = 0x835D;
export def GL_ASYNC_HISTOGRAM_SGIX: uint = 0x832C;
export def GL_ASYNC_MARKER_SGIX: uint = 0x8329;
export def GL_ASYNC_READ_PIXELS_SGIX: uint = 0x835E;
export def GL_ASYNC_TEX_IMAGE_SGIX: uint = 0x835C;
export def GL_ATOMIC_COUNTER_BARRIER_BIT: uint = 0x00001000;
export def GL_ATOMIC_COUNTER_BARRIER_BIT_EXT: uint = 0x00001000;
export def GL_ATOMIC_COUNTER_BUFFER: uint = 0x92C0;
export def GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: uint = 0x92C5;
export def GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: uint = 0x92C6;
export def GL_ATOMIC_COUNTER_BUFFER_BINDING: uint = 0x92C1;
export def GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE: uint = 0x92C4;
export def GL_ATOMIC_COUNTER_BUFFER_INDEX: uint = 0x9301;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: uint = 0x90ED;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: uint = 0x92CB;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: uint = 0x92CA;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV: uint = 0x959E;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV: uint = 0x959F;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: uint = 0x92C8;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: uint = 0x92C9;
export def GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: uint = 0x92C7;
export def GL_ATOMIC_COUNTER_BUFFER_SIZE: uint = 0x92C3;
export def GL_ATOMIC_COUNTER_BUFFER_START: uint = 0x92C2;
export def GL_ATTACHED_MEMORY_OBJECT_NV: uint = 0x95A4;
export def GL_ATTACHED_MEMORY_OFFSET_NV: uint = 0x95A5;
export def GL_ATTACHED_SHADERS: uint = 0x8B85;
export def GL_ATTENUATION_EXT: uint = 0x834D;
export def GL_ATTRIBUTE_ADDRESS_COMMAND_NV: uint = 0x0009;
export def GL_ATTRIB_ARRAY_POINTER_NV: uint = 0x8645;
export def GL_ATTRIB_ARRAY_SIZE_NV: uint = 0x8623;
export def GL_ATTRIB_ARRAY_STRIDE_NV: uint = 0x8624;
export def GL_ATTRIB_ARRAY_TYPE_NV: uint = 0x8625;
export def GL_AUTO_GENERATE_MIPMAP: uint = 0x8295;
export def GL_AUX_DEPTH_STENCIL_APPLE: uint = 0x8A14;
export def GL_AVERAGE_EXT: uint = 0x8335;
export def GL_AVERAGE_HP: uint = 0x8160;
export def GL_BACK: uint = 0x0405;
export def GL_BACK_LEFT: uint = 0x0402;
export def GL_BACK_NORMALS_HINT_PGI: uint = 0x1A223;
export def GL_BACK_PRIMARY_COLOR_NV: uint = 0x8C77;
export def GL_BACK_RIGHT: uint = 0x0403;
export def GL_BACK_SECONDARY_COLOR_NV: uint = 0x8C78;
export def GL_BEVEL_NV: uint = 0x90A6;
export def GL_BGR: uint = 0x80E0;
export def GL_BGRA: uint = 0x80E1;
export def GL_BGRA8_EXT: uint = 0x93A1;
export def GL_BGRA_EXT: uint = 0x80E1;
export def GL_BGRA_INTEGER: uint = 0x8D9B;
export def GL_BGRA_INTEGER_EXT: uint = 0x8D9B;
export def GL_BGR_EXT: uint = 0x80E0;
export def GL_BGR_INTEGER: uint = 0x8D9A;
export def GL_BGR_INTEGER_EXT: uint = 0x8D9A;
export def GL_BIAS_BIT_ATI: uint = 0x00000008;
export def GL_BIAS_BY_NEGATIVE_ONE_HALF_NV: uint = 0x8541;
export def GL_BINORMAL_ARRAY_EXT: uint = 0x843A;
export def GL_BINORMAL_ARRAY_POINTER_EXT: uint = 0x8443;
export def GL_BINORMAL_ARRAY_STRIDE_EXT: uint = 0x8441;
export def GL_BINORMAL_ARRAY_TYPE_EXT: uint = 0x8440;
export def GL_BLACKHOLE_RENDER_INTEL: uint = 0x83FC;
export def GL_BLEND: uint = 0x0BE2;
export def GL_BLEND_ADVANCED_COHERENT_KHR: uint = 0x9285;
export def GL_BLEND_ADVANCED_COHERENT_NV: uint = 0x9285;
export def GL_BLEND_COLOR: uint = 0x8005;
export def GL_BLEND_COLOR_COMMAND_NV: uint = 0x000B;
export def GL_BLEND_COLOR_EXT: uint = 0x8005;
export def GL_BLEND_DST: uint = 0x0BE0;
export def GL_BLEND_DST_ALPHA: uint = 0x80CA;
export def GL_BLEND_DST_ALPHA_EXT: uint = 0x80CA;
export def GL_BLEND_DST_RGB: uint = 0x80C8;
export def GL_BLEND_DST_RGB_EXT: uint = 0x80C8;
export def GL_BLEND_EQUATION: uint = 0x8009;
export def GL_BLEND_EQUATION_ALPHA: uint = 0x883D;
export def GL_BLEND_EQUATION_ALPHA_EXT: uint = 0x883D;
export def GL_BLEND_EQUATION_EXT: uint = 0x8009;
export def GL_BLEND_EQUATION_RGB: uint = 0x8009;
export def GL_BLEND_EQUATION_RGB_EXT: uint = 0x8009;
export def GL_BLEND_OVERLAP_NV: uint = 0x9281;
export def GL_BLEND_PREMULTIPLIED_SRC_NV: uint = 0x9280;
export def GL_BLEND_SRC: uint = 0x0BE1;
export def GL_BLEND_SRC_ALPHA: uint = 0x80CB;
export def GL_BLEND_SRC_ALPHA_EXT: uint = 0x80CB;
export def GL_BLEND_SRC_RGB: uint = 0x80C9;
export def GL_BLEND_SRC_RGB_EXT: uint = 0x80C9;
export def GL_BLOCK_INDEX: uint = 0x92FD;
export def GL_BLUE: uint = 0x1905;
export def GL_BLUE_BIT_ATI: uint = 0x00000004;
export def GL_BLUE_INTEGER: uint = 0x8D96;
export def GL_BLUE_INTEGER_EXT: uint = 0x8D96;
export def GL_BLUE_MAX_CLAMP_INGR: uint = 0x8566;
export def GL_BLUE_MIN_CLAMP_INGR: uint = 0x8562;
export def GL_BLUE_NV: uint = 0x1905;
export def GL_BOLD_BIT_NV: uint = 0x01;
export def GL_BOOL: uint = 0x8B56;
export def GL_BOOL_ARB: uint = 0x8B56;
export def GL_BOOL_VEC2: uint = 0x8B57;
export def GL_BOOL_VEC2_ARB: uint = 0x8B57;
export def GL_BOOL_VEC3: uint = 0x8B58;
export def GL_BOOL_VEC3_ARB: uint = 0x8B58;
export def GL_BOOL_VEC4: uint = 0x8B59;
export def GL_BOOL_VEC4_ARB: uint = 0x8B59;
export def GL_BOUNDING_BOX_NV: uint = 0x908D;
export def GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV: uint = 0x909C;
export def GL_BUFFER: uint = 0x82E0;
export def GL_BUFFER_ACCESS: uint = 0x88BB;
export def GL_BUFFER_ACCESS_ARB: uint = 0x88BB;
export def GL_BUFFER_ACCESS_FLAGS: uint = 0x911F;
export def GL_BUFFER_BINDING: uint = 0x9302;
export def GL_BUFFER_DATA_SIZE: uint = 0x9303;
export def GL_BUFFER_FLUSHING_UNMAP_APPLE: uint = 0x8A13;
export def GL_BUFFER_GPU_ADDRESS_NV: uint = 0x8F1D;
export def GL_BUFFER_IMMUTABLE_STORAGE: uint = 0x821F;
export def GL_BUFFER_MAPPED: uint = 0x88BC;
export def GL_BUFFER_MAPPED_ARB: uint = 0x88BC;
export def GL_BUFFER_MAP_LENGTH: uint = 0x9120;
export def GL_BUFFER_MAP_OFFSET: uint = 0x9121;
export def GL_BUFFER_MAP_POINTER: uint = 0x88BD;
export def GL_BUFFER_MAP_POINTER_ARB: uint = 0x88BD;
export def GL_BUFFER_OBJECT_APPLE: uint = 0x85B3;
export def GL_BUFFER_OBJECT_EXT: uint = 0x9151;
export def GL_BUFFER_SERIALIZED_MODIFY_APPLE: uint = 0x8A12;
export def GL_BUFFER_SIZE: uint = 0x8764;
export def GL_BUFFER_SIZE_ARB: uint = 0x8764;
export def GL_BUFFER_STORAGE_FLAGS: uint = 0x8220;
export def GL_BUFFER_UPDATE_BARRIER_BIT: uint = 0x00000200;
export def GL_BUFFER_UPDATE_BARRIER_BIT_EXT: uint = 0x00000200;
export def GL_BUFFER_USAGE: uint = 0x8765;
export def GL_BUFFER_USAGE_ARB: uint = 0x8765;
export def GL_BUFFER_VARIABLE: uint = 0x92E5;
export def GL_BUMP_ENVMAP_ATI: uint = 0x877B;
export def GL_BUMP_NUM_TEX_UNITS_ATI: uint = 0x8777;
export def GL_BUMP_ROT_MATRIX_ATI: uint = 0x8775;
export def GL_BUMP_ROT_MATRIX_SIZE_ATI: uint = 0x8776;
export def GL_BUMP_TARGET_ATI: uint = 0x877C;
export def GL_BUMP_TEX_UNITS_ATI: uint = 0x8778;
export def GL_BYTE: uint = 0x1400;
export def GL_CALLIGRAPHIC_FRAGMENT_SGIX: uint = 0x8183;
export def GL_CAVEAT_SUPPORT: uint = 0x82B8;
export def GL_CCW: uint = 0x0901;
export def GL_CIRCULAR_CCW_ARC_TO_NV: uint = 0xF8;
export def GL_CIRCULAR_CW_ARC_TO_NV: uint = 0xFA;
export def GL_CIRCULAR_TANGENT_ARC_TO_NV: uint = 0xFC;
export def GL_CLAMP_FRAGMENT_COLOR_ARB: uint = 0x891B;
export def GL_CLAMP_READ_COLOR: uint = 0x891C;
export def GL_CLAMP_READ_COLOR_ARB: uint = 0x891C;
export def GL_CLAMP_TO_BORDER: uint = 0x812D;
export def GL_CLAMP_TO_BORDER_ARB: uint = 0x812D;
export def GL_CLAMP_TO_BORDER_SGIS: uint = 0x812D;
export def GL_CLAMP_TO_EDGE: uint = 0x812F;
export def GL_CLAMP_TO_EDGE_SGIS: uint = 0x812F;
export def GL_CLAMP_VERTEX_COLOR_ARB: uint = 0x891A;
export def GL_CLEAR: uint = 0x1500;
export def GL_CLEAR_BUFFER: uint = 0x82B4;
export def GL_CLEAR_TEXTURE: uint = 0x9365;
export def GL_CLIENT_ACTIVE_TEXTURE_ARB: uint = 0x84E1;
export def GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: uint = 0x00004000;
export def GL_CLIENT_STORAGE_BIT: uint = 0x0200;
export def GL_CLIPPING_INPUT_PRIMITIVES: uint = 0x82F6;
export def GL_CLIPPING_INPUT_PRIMITIVES_ARB: uint = 0x82F6;
export def GL_CLIPPING_OUTPUT_PRIMITIVES: uint = 0x82F7;
export def GL_CLIPPING_OUTPUT_PRIMITIVES_ARB: uint = 0x82F7;
export def GL_CLIP_DEPTH_MODE: uint = 0x935D;
export def GL_CLIP_DISTANCE0: uint = 0x3000;
export def GL_CLIP_DISTANCE1: uint = 0x3001;
export def GL_CLIP_DISTANCE2: uint = 0x3002;
export def GL_CLIP_DISTANCE3: uint = 0x3003;
export def GL_CLIP_DISTANCE4: uint = 0x3004;
export def GL_CLIP_DISTANCE5: uint = 0x3005;
export def GL_CLIP_DISTANCE6: uint = 0x3006;
export def GL_CLIP_DISTANCE7: uint = 0x3007;
export def GL_CLIP_DISTANCE_NV: uint = 0x8C7A;
export def GL_CLIP_FAR_HINT_PGI: uint = 0x1A221;
export def GL_CLIP_NEAR_HINT_PGI: uint = 0x1A220;
export def GL_CLIP_ORIGIN: uint = 0x935C;
export def GL_CLIP_VOLUME_CLIPPING_HINT_EXT: uint = 0x80F0;
export def GL_CLOSE_PATH_NV: uint = 0x00;
export def GL_CMYKA_EXT: uint = 0x800D;
export def GL_CMYK_EXT: uint = 0x800C;
export def GL_CND0_ATI: uint = 0x896B;
export def GL_CND_ATI: uint = 0x896A;
export def GL_COLOR: uint = 0x1800;
export def GL_COLOR3_BIT_PGI: uint = 0x00010000;
export def GL_COLOR4_BIT_PGI: uint = 0x00020000;
export def GL_COLORBURN_KHR: uint = 0x929A;
export def GL_COLORBURN_NV: uint = 0x929A;
export def GL_COLORDODGE_KHR: uint = 0x9299;
export def GL_COLORDODGE_NV: uint = 0x9299;
export def GL_COLOR_ALPHA_PAIRING_ATI: uint = 0x8975;
export def GL_COLOR_ARRAY_ADDRESS_NV: uint = 0x8F23;
export def GL_COLOR_ARRAY_BUFFER_BINDING_ARB: uint = 0x8898;
export def GL_COLOR_ARRAY_COUNT_EXT: uint = 0x8084;
export def GL_COLOR_ARRAY_EXT: uint = 0x8076;
export def GL_COLOR_ARRAY_LENGTH_NV: uint = 0x8F2D;
export def GL_COLOR_ARRAY_LIST_IBM: uint = 103072;
export def GL_COLOR_ARRAY_LIST_STRIDE_IBM: uint = 103082;
export def GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL: uint = 0x83F7;
export def GL_COLOR_ARRAY_POINTER_EXT: uint = 0x8090;
export def GL_COLOR_ARRAY_SIZE_EXT: uint = 0x8081;
export def GL_COLOR_ARRAY_STRIDE_EXT: uint = 0x8083;
export def GL_COLOR_ARRAY_TYPE_EXT: uint = 0x8082;
export def GL_COLOR_ATTACHMENT0: uint = 0x8CE0;
export def GL_COLOR_ATTACHMENT0_EXT: uint = 0x8CE0;
export def GL_COLOR_ATTACHMENT1: uint = 0x8CE1;
export def GL_COLOR_ATTACHMENT10: uint = 0x8CEA;
export def GL_COLOR_ATTACHMENT10_EXT: uint = 0x8CEA;
export def GL_COLOR_ATTACHMENT11: uint = 0x8CEB;
export def GL_COLOR_ATTACHMENT11_EXT: uint = 0x8CEB;
export def GL_COLOR_ATTACHMENT12: uint = 0x8CEC;
export def GL_COLOR_ATTACHMENT12_EXT: uint = 0x8CEC;
export def GL_COLOR_ATTACHMENT13: uint = 0x8CED;
export def GL_COLOR_ATTACHMENT13_EXT: uint = 0x8CED;
export def GL_COLOR_ATTACHMENT14: uint = 0x8CEE;
export def GL_COLOR_ATTACHMENT14_EXT: uint = 0x8CEE;
export def GL_COLOR_ATTACHMENT15: uint = 0x8CEF;
export def GL_COLOR_ATTACHMENT15_EXT: uint = 0x8CEF;
export def GL_COLOR_ATTACHMENT16: uint = 0x8CF0;
export def GL_COLOR_ATTACHMENT17: uint = 0x8CF1;
export def GL_COLOR_ATTACHMENT18: uint = 0x8CF2;
export def GL_COLOR_ATTACHMENT19: uint = 0x8CF3;
export def GL_COLOR_ATTACHMENT1_EXT: uint = 0x8CE1;
export def GL_COLOR_ATTACHMENT2: uint = 0x8CE2;
export def GL_COLOR_ATTACHMENT20: uint = 0x8CF4;
export def GL_COLOR_ATTACHMENT21: uint = 0x8CF5;
export def GL_COLOR_ATTACHMENT22: uint = 0x8CF6;
export def GL_COLOR_ATTACHMENT23: uint = 0x8CF7;
export def GL_COLOR_ATTACHMENT24: uint = 0x8CF8;
export def GL_COLOR_ATTACHMENT25: uint = 0x8CF9;
export def GL_COLOR_ATTACHMENT26: uint = 0x8CFA;
export def GL_COLOR_ATTACHMENT27: uint = 0x8CFB;
export def GL_COLOR_ATTACHMENT28: uint = 0x8CFC;
export def GL_COLOR_ATTACHMENT29: uint = 0x8CFD;
export def GL_COLOR_ATTACHMENT2_EXT: uint = 0x8CE2;
export def GL_COLOR_ATTACHMENT3: uint = 0x8CE3;
export def GL_COLOR_ATTACHMENT30: uint = 0x8CFE;
export def GL_COLOR_ATTACHMENT31: uint = 0x8CFF;
export def GL_COLOR_ATTACHMENT3_EXT: uint = 0x8CE3;
export def GL_COLOR_ATTACHMENT4: uint = 0x8CE4;
export def GL_COLOR_ATTACHMENT4_EXT: uint = 0x8CE4;
export def GL_COLOR_ATTACHMENT5: uint = 0x8CE5;
export def GL_COLOR_ATTACHMENT5_EXT: uint = 0x8CE5;
export def GL_COLOR_ATTACHMENT6: uint = 0x8CE6;
export def GL_COLOR_ATTACHMENT6_EXT: uint = 0x8CE6;
export def GL_COLOR_ATTACHMENT7: uint = 0x8CE7;
export def GL_COLOR_ATTACHMENT7_EXT: uint = 0x8CE7;
export def GL_COLOR_ATTACHMENT8: uint = 0x8CE8;
export def GL_COLOR_ATTACHMENT8_EXT: uint = 0x8CE8;
export def GL_COLOR_ATTACHMENT9: uint = 0x8CE9;
export def GL_COLOR_ATTACHMENT9_EXT: uint = 0x8CE9;
export def GL_COLOR_BUFFER_BIT: uint = 0x00004000;
export def GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI: uint = 0x8835;
export def GL_COLOR_CLEAR_VALUE: uint = 0x0C22;
export def GL_COLOR_COMPONENTS: uint = 0x8283;
export def GL_COLOR_ENCODING: uint = 0x8296;
export def GL_COLOR_FLOAT_APPLE: uint = 0x8A0F;
export def GL_COLOR_INDEX12_EXT: uint = 0x80E6;
export def GL_COLOR_INDEX16_EXT: uint = 0x80E7;
export def GL_COLOR_INDEX1_EXT: uint = 0x80E2;
export def GL_COLOR_INDEX2_EXT: uint = 0x80E3;
export def GL_COLOR_INDEX4_EXT: uint = 0x80E4;
export def GL_COLOR_INDEX8_EXT: uint = 0x80E5;
export def GL_COLOR_LOGIC_OP: uint = 0x0BF2;
export def GL_COLOR_MATRIX_SGI: uint = 0x80B1;
export def GL_COLOR_MATRIX_STACK_DEPTH_SGI: uint = 0x80B2;
export def GL_COLOR_RENDERABLE: uint = 0x8286;
export def GL_COLOR_SAMPLES_NV: uint = 0x8E20;
export def GL_COLOR_SUM_ARB: uint = 0x8458;
export def GL_COLOR_SUM_CLAMP_NV: uint = 0x854F;
export def GL_COLOR_SUM_EXT: uint = 0x8458;
export def GL_COLOR_TABLE_ALPHA_SIZE_SGI: uint = 0x80DD;
export def GL_COLOR_TABLE_BIAS_SGI: uint = 0x80D7;
export def GL_COLOR_TABLE_BLUE_SIZE_SGI: uint = 0x80DC;
export def GL_COLOR_TABLE_FORMAT_SGI: uint = 0x80D8;
export def GL_COLOR_TABLE_GREEN_SIZE_SGI: uint = 0x80DB;
export def GL_COLOR_TABLE_INTENSITY_SIZE_SGI: uint = 0x80DF;
export def GL_COLOR_TABLE_LUMINANCE_SIZE_SGI: uint = 0x80DE;
export def GL_COLOR_TABLE_RED_SIZE_SGI: uint = 0x80DA;
export def GL_COLOR_TABLE_SCALE_SGI: uint = 0x80D6;
export def GL_COLOR_TABLE_SGI: uint = 0x80D0;
export def GL_COLOR_TABLE_WIDTH_SGI: uint = 0x80D9;
export def GL_COLOR_WRITEMASK: uint = 0x0C23;
export def GL_COMBINE4_NV: uint = 0x8503;
export def GL_COMBINER0_NV: uint = 0x8550;
export def GL_COMBINER1_NV: uint = 0x8551;
export def GL_COMBINER2_NV: uint = 0x8552;
export def GL_COMBINER3_NV: uint = 0x8553;
export def GL_COMBINER4_NV: uint = 0x8554;
export def GL_COMBINER5_NV: uint = 0x8555;
export def GL_COMBINER6_NV: uint = 0x8556;
export def GL_COMBINER7_NV: uint = 0x8557;
export def GL_COMBINER_AB_DOT_PRODUCT_NV: uint = 0x8545;
export def GL_COMBINER_AB_OUTPUT_NV: uint = 0x854A;
export def GL_COMBINER_BIAS_NV: uint = 0x8549;
export def GL_COMBINER_CD_DOT_PRODUCT_NV: uint = 0x8546;
export def GL_COMBINER_CD_OUTPUT_NV: uint = 0x854B;
export def GL_COMBINER_COMPONENT_USAGE_NV: uint = 0x8544;
export def GL_COMBINER_INPUT_NV: uint = 0x8542;
export def GL_COMBINER_MAPPING_NV: uint = 0x8543;
export def GL_COMBINER_MUX_SUM_NV: uint = 0x8547;
export def GL_COMBINER_SCALE_NV: uint = 0x8548;
export def GL_COMBINER_SUM_OUTPUT_NV: uint = 0x854C;
export def GL_COMBINE_ALPHA_ARB: uint = 0x8572;
export def GL_COMBINE_ALPHA_EXT: uint = 0x8572;
export def GL_COMBINE_ARB: uint = 0x8570;
export def GL_COMBINE_EXT: uint = 0x8570;
export def GL_COMBINE_RGB_ARB: uint = 0x8571;
export def GL_COMBINE_RGB_EXT: uint = 0x8571;
export def GL_COMMAND_BARRIER_BIT: uint = 0x00000040;
export def GL_COMMAND_BARRIER_BIT_EXT: uint = 0x00000040;
export def GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT: uint = 0x884E;
export def GL_COMPARE_REF_TO_TEXTURE: uint = 0x884E;
export def GL_COMPARE_R_TO_TEXTURE_ARB: uint = 0x884E;
export def GL_COMPATIBLE_SUBROUTINES: uint = 0x8E4B;
export def GL_COMPILE_STATUS: uint = 0x8B81;
export def GL_COMPLETION_STATUS_ARB: uint = 0x91B1;
export def GL_COMPLETION_STATUS_KHR: uint = 0x91B1;
export def GL_COMPRESSED_ALPHA_ARB: uint = 0x84E9;
export def GL_COMPRESSED_INTENSITY_ARB: uint = 0x84EC;
export def GL_COMPRESSED_LUMINANCE_ALPHA_ARB: uint = 0x84EB;
export def GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT: uint = 0x8C72;
export def GL_COMPRESSED_LUMINANCE_ARB: uint = 0x84EA;
export def GL_COMPRESSED_LUMINANCE_LATC1_EXT: uint = 0x8C70;
export def GL_COMPRESSED_R11_EAC: uint = 0x9270;
export def GL_COMPRESSED_RED: uint = 0x8225;
export def GL_COMPRESSED_RED_GREEN_RGTC2_EXT: uint = 0x8DBD;
export def GL_COMPRESSED_RED_RGTC1: uint = 0x8DBB;
export def GL_COMPRESSED_RED_RGTC1_EXT: uint = 0x8DBB;
export def GL_COMPRESSED_RG: uint = 0x8226;
export def GL_COMPRESSED_RG11_EAC: uint = 0x9272;
export def GL_COMPRESSED_RGB: uint = 0x84ED;
export def GL_COMPRESSED_RGB8_ETC2: uint = 0x9274;
export def GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: uint = 0x9276;
export def GL_COMPRESSED_RGBA: uint = 0x84EE;
export def GL_COMPRESSED_RGBA8_ETC2_EAC: uint = 0x9278;
export def GL_COMPRESSED_RGBA_ARB: uint = 0x84EE;
export def GL_COMPRESSED_RGBA_ASTC_10x10_KHR: uint = 0x93BB;
export def GL_COMPRESSED_RGBA_ASTC_10x5_KHR: uint = 0x93B8;
export def GL_COMPRESSED_RGBA_ASTC_10x6_KHR: uint = 0x93B9;
export def GL_COMPRESSED_RGBA_ASTC_10x8_KHR: uint = 0x93BA;
export def GL_COMPRESSED_RGBA_ASTC_12x10_KHR: uint = 0x93BC;
export def GL_COMPRESSED_RGBA_ASTC_12x12_KHR: uint = 0x93BD;
export def GL_COMPRESSED_RGBA_ASTC_4x4_KHR: uint = 0x93B0;
export def GL_COMPRESSED_RGBA_ASTC_5x4_KHR: uint = 0x93B1;
export def GL_COMPRESSED_RGBA_ASTC_5x5_KHR: uint = 0x93B2;
export def GL_COMPRESSED_RGBA_ASTC_6x5_KHR: uint = 0x93B3;
export def GL_COMPRESSED_RGBA_ASTC_6x6_KHR: uint = 0x93B4;
export def GL_COMPRESSED_RGBA_ASTC_8x5_KHR: uint = 0x93B5;
export def GL_COMPRESSED_RGBA_ASTC_8x6_KHR: uint = 0x93B6;
export def GL_COMPRESSED_RGBA_ASTC_8x8_KHR: uint = 0x93B7;
export def GL_COMPRESSED_RGBA_BPTC_UNORM_ARB: uint = 0x8E8C;
export def GL_COMPRESSED_RGBA_FXT1_3DFX: uint = 0x86B1;
export def GL_COMPRESSED_RGBA_S3TC_DXT1_EXT: uint = 0x83F1;
export def GL_COMPRESSED_RGBA_S3TC_DXT3_EXT: uint = 0x83F2;
export def GL_COMPRESSED_RGBA_S3TC_DXT5_EXT: uint = 0x83F3;
export def GL_COMPRESSED_RGB_ARB: uint = 0x84ED;
export def GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB: uint = 0x8E8E;
export def GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB: uint = 0x8E8F;
export def GL_COMPRESSED_RGB_FXT1_3DFX: uint = 0x86B0;
export def GL_COMPRESSED_RGB_S3TC_DXT1_EXT: uint = 0x83F0;
export def GL_COMPRESSED_RG_RGTC2: uint = 0x8DBD;
export def GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT: uint = 0x8C73;
export def GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT: uint = 0x8C71;
export def GL_COMPRESSED_SIGNED_R11_EAC: uint = 0x9271;
export def GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: uint = 0x8DBE;
export def GL_COMPRESSED_SIGNED_RED_RGTC1: uint = 0x8DBC;
export def GL_COMPRESSED_SIGNED_RED_RGTC1_EXT: uint = 0x8DBC;
export def GL_COMPRESSED_SIGNED_RG11_EAC: uint = 0x9273;
export def GL_COMPRESSED_SIGNED_RG_RGTC2: uint = 0x8DBE;
export def GL_COMPRESSED_SLUMINANCE_ALPHA_EXT: uint = 0x8C4B;
export def GL_COMPRESSED_SLUMINANCE_EXT: uint = 0x8C4A;
export def GL_COMPRESSED_SRGB: uint = 0x8C48;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: uint = 0x93DB;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: uint = 0x93D8;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: uint = 0x93D9;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: uint = 0x93DA;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: uint = 0x93DC;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: uint = 0x93DD;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: uint = 0x93D0;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: uint = 0x93D1;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: uint = 0x93D2;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: uint = 0x93D3;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: uint = 0x93D4;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: uint = 0x93D5;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: uint = 0x93D6;
export def GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: uint = 0x93D7;
export def GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: uint = 0x9279;
export def GL_COMPRESSED_SRGB8_ETC2: uint = 0x9275;
export def GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: uint = 0x9277;
export def GL_COMPRESSED_SRGB_ALPHA: uint = 0x8C49;
export def GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB: uint = 0x8E8D;
export def GL_COMPRESSED_SRGB_ALPHA_EXT: uint = 0x8C49;
export def GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: uint = 0x8C4D;
export def GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: uint = 0x8C4E;
export def GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: uint = 0x8C4F;
export def GL_COMPRESSED_SRGB_EXT: uint = 0x8C48;
export def GL_COMPRESSED_SRGB_S3TC_DXT1_EXT: uint = 0x8C4C;
export def GL_COMPRESSED_TEXTURE_FORMATS: uint = 0x86A3;
export def GL_COMPRESSED_TEXTURE_FORMATS_ARB: uint = 0x86A3;
export def GL_COMPUTE_PROGRAM_NV: uint = 0x90FB;
export def GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x90FC;
export def GL_COMPUTE_SHADER: uint = 0x91B9;
export def GL_COMPUTE_SHADER_BIT: uint = 0x00000020;
export def GL_COMPUTE_SHADER_INVOCATIONS: uint = 0x82F5;
export def GL_COMPUTE_SHADER_INVOCATIONS_ARB: uint = 0x82F5;
export def GL_COMPUTE_SUBROUTINE: uint = 0x92ED;
export def GL_COMPUTE_SUBROUTINE_UNIFORM: uint = 0x92F3;
export def GL_COMPUTE_TEXTURE: uint = 0x82A0;
export def GL_COMPUTE_WORK_GROUP_SIZE: uint = 0x8267;
export def GL_COMP_BIT_ATI: uint = 0x00000002;
export def GL_CONDITION_SATISFIED: uint = 0x911C;
export def GL_CONFORMANT_NV: uint = 0x9374;
export def GL_CONIC_CURVE_TO_NV: uint = 0x1A;
export def GL_CONJOINT_NV: uint = 0x9284;
export def GL_CONSERVATIVE_RASTERIZATION_INTEL: uint = 0x83FE;
export def GL_CONSERVATIVE_RASTERIZATION_NV: uint = 0x9346;
export def GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV: uint = 0x937B;
export def GL_CONSERVATIVE_RASTER_DILATE_NV: uint = 0x9379;
export def GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV: uint = 0x937A;
export def GL_CONSERVATIVE_RASTER_MODE_NV: uint = 0x954D;
export def GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV: uint = 0x954E;
export def GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV: uint = 0x9550;
export def GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV: uint = 0x954F;
export def GL_CONSERVE_MEMORY_HINT_PGI: uint = 0x1A1FD;
export def GL_CONSTANT_ALPHA: uint = 0x8003;
export def GL_CONSTANT_ALPHA_EXT: uint = 0x8003;
export def GL_CONSTANT_ARB: uint = 0x8576;
export def GL_CONSTANT_BORDER_HP: uint = 0x8151;
export def GL_CONSTANT_COLOR: uint = 0x8001;
export def GL_CONSTANT_COLOR0_NV: uint = 0x852A;
export def GL_CONSTANT_COLOR1_NV: uint = 0x852B;
export def GL_CONSTANT_COLOR_EXT: uint = 0x8001;
export def GL_CONSTANT_EXT: uint = 0x8576;
export def GL_CONST_EYE_NV: uint = 0x86E5;
export def GL_CONTEXT_COMPATIBILITY_PROFILE_BIT: uint = 0x00000002;
export def GL_CONTEXT_CORE_PROFILE_BIT: uint = 0x00000001;
export def GL_CONTEXT_FLAGS: uint = 0x821E;
export def GL_CONTEXT_FLAG_DEBUG_BIT: uint = 0x00000002;
export def GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: uint = 0x00000001;
export def GL_CONTEXT_FLAG_NO_ERROR_BIT: uint = 0x00000008;
export def GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR: uint = 0x00000008;
export def GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB: uint = 0x00000004;
export def GL_CONTEXT_LOST: uint = 0x0507;
export def GL_CONTEXT_PROFILE_MASK: uint = 0x9126;
export def GL_CONTEXT_RELEASE_BEHAVIOR: uint = 0x82FB;
export def GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: uint = 0x82FC;
export def GL_CONTEXT_ROBUST_ACCESS: uint = 0x90F3;
export def GL_CONTINUOUS_AMD: uint = 0x9007;
export def GL_CONTRAST_NV: uint = 0x92A1;
export def GL_CONVEX_HULL_NV: uint = 0x908B;
export def GL_CONVOLUTION_1D_EXT: uint = 0x8010;
export def GL_CONVOLUTION_2D_EXT: uint = 0x8011;
export def GL_CONVOLUTION_BORDER_COLOR_HP: uint = 0x8154;
export def GL_CONVOLUTION_BORDER_MODE_EXT: uint = 0x8013;
export def GL_CONVOLUTION_FILTER_BIAS_EXT: uint = 0x8015;
export def GL_CONVOLUTION_FILTER_SCALE_EXT: uint = 0x8014;
export def GL_CONVOLUTION_FORMAT_EXT: uint = 0x8017;
export def GL_CONVOLUTION_HEIGHT_EXT: uint = 0x8019;
export def GL_CONVOLUTION_HINT_SGIX: uint = 0x8316;
export def GL_CONVOLUTION_WIDTH_EXT: uint = 0x8018;
export def GL_CON_0_ATI: uint = 0x8941;
export def GL_CON_10_ATI: uint = 0x894B;
export def GL_CON_11_ATI: uint = 0x894C;
export def GL_CON_12_ATI: uint = 0x894D;
export def GL_CON_13_ATI: uint = 0x894E;
export def GL_CON_14_ATI: uint = 0x894F;
export def GL_CON_15_ATI: uint = 0x8950;
export def GL_CON_16_ATI: uint = 0x8951;
export def GL_CON_17_ATI: uint = 0x8952;
export def GL_CON_18_ATI: uint = 0x8953;
export def GL_CON_19_ATI: uint = 0x8954;
export def GL_CON_1_ATI: uint = 0x8942;
export def GL_CON_20_ATI: uint = 0x8955;
export def GL_CON_21_ATI: uint = 0x8956;
export def GL_CON_22_ATI: uint = 0x8957;
export def GL_CON_23_ATI: uint = 0x8958;
export def GL_CON_24_ATI: uint = 0x8959;
export def GL_CON_25_ATI: uint = 0x895A;
export def GL_CON_26_ATI: uint = 0x895B;
export def GL_CON_27_ATI: uint = 0x895C;
export def GL_CON_28_ATI: uint = 0x895D;
export def GL_CON_29_ATI: uint = 0x895E;
export def GL_CON_2_ATI: uint = 0x8943;
export def GL_CON_30_ATI: uint = 0x895F;
export def GL_CON_31_ATI: uint = 0x8960;
export def GL_CON_3_ATI: uint = 0x8944;
export def GL_CON_4_ATI: uint = 0x8945;
export def GL_CON_5_ATI: uint = 0x8946;
export def GL_CON_6_ATI: uint = 0x8947;
export def GL_CON_7_ATI: uint = 0x8948;
export def GL_CON_8_ATI: uint = 0x8949;
export def GL_CON_9_ATI: uint = 0x894A;
export def GL_COORD_REPLACE_ARB: uint = 0x8862;
export def GL_COORD_REPLACE_NV: uint = 0x8862;
export def GL_COPY: uint = 0x1503;
export def GL_COPY_INVERTED: uint = 0x150C;
export def GL_COPY_READ_BUFFER: uint = 0x8F36;
export def GL_COPY_WRITE_BUFFER: uint = 0x8F37;
export def GL_COUNTER_RANGE_AMD: uint = 0x8BC1;
export def GL_COUNTER_TYPE_AMD: uint = 0x8BC0;
export def GL_COUNT_DOWN_NV: uint = 0x9089;
export def GL_COUNT_UP_NV: uint = 0x9088;
export def GL_COVERAGE_MODULATION_NV: uint = 0x9332;
export def GL_COVERAGE_MODULATION_TABLE_NV: uint = 0x9331;
export def GL_COVERAGE_MODULATION_TABLE_SIZE_NV: uint = 0x9333;
export def GL_CUBIC_CURVE_TO_NV: uint = 0x0C;
export def GL_CUBIC_EXT: uint = 0x8334;
export def GL_CUBIC_HP: uint = 0x815F;
export def GL_CULL_FACE: uint = 0x0B44;
export def GL_CULL_FACE_MODE: uint = 0x0B45;
export def GL_CULL_FRAGMENT_NV: uint = 0x86E7;
export def GL_CULL_MODES_NV: uint = 0x86E0;
export def GL_CULL_VERTEX_EXT: uint = 0x81AA;
export def GL_CULL_VERTEX_EYE_POSITION_EXT: uint = 0x81AB;
export def GL_CULL_VERTEX_IBM: uint = 103050;
export def GL_CULL_VERTEX_OBJECT_POSITION_EXT: uint = 0x81AC;
export def GL_CURRENT_ATTRIB_NV: uint = 0x8626;
export def GL_CURRENT_BINORMAL_EXT: uint = 0x843C;
export def GL_CURRENT_FOG_COORDINATE_EXT: uint = 0x8453;
export def GL_CURRENT_MATRIX_ARB: uint = 0x8641;
export def GL_CURRENT_MATRIX_INDEX_ARB: uint = 0x8845;
export def GL_CURRENT_MATRIX_NV: uint = 0x8641;
export def GL_CURRENT_MATRIX_STACK_DEPTH_ARB: uint = 0x8640;
export def GL_CURRENT_MATRIX_STACK_DEPTH_NV: uint = 0x8640;
export def GL_CURRENT_OCCLUSION_QUERY_ID_NV: uint = 0x8865;
export def GL_CURRENT_PALETTE_MATRIX_ARB: uint = 0x8843;
export def GL_CURRENT_PROGRAM: uint = 0x8B8D;
export def GL_CURRENT_QUERY: uint = 0x8865;
export def GL_CURRENT_QUERY_ARB: uint = 0x8865;
export def GL_CURRENT_RASTER_NORMAL_SGIX: uint = 0x8406;
export def GL_CURRENT_SECONDARY_COLOR_EXT: uint = 0x8459;
export def GL_CURRENT_TANGENT_EXT: uint = 0x843B;
export def GL_CURRENT_TIME_NV: uint = 0x8E28;
export def GL_CURRENT_VERTEX_ATTRIB: uint = 0x8626;
export def GL_CURRENT_VERTEX_ATTRIB_ARB: uint = 0x8626;
export def GL_CURRENT_VERTEX_EXT: uint = 0x87E2;
export def GL_CURRENT_VERTEX_WEIGHT_EXT: uint = 0x850B;
export def GL_CURRENT_WEIGHT_ARB: uint = 0x86A8;
export def GL_CW: uint = 0x0900;
export def GL_D3D12_FENCE_VALUE_EXT: uint = 0x9595;
export def GL_DARKEN_KHR: uint = 0x9297;
export def GL_DARKEN_NV: uint = 0x9297;
export def GL_DATA_BUFFER_AMD: uint = 0x9151;
export def GL_DEBUG_CALLBACK_FUNCTION: uint = 0x8244;
export def GL_DEBUG_CALLBACK_FUNCTION_ARB: uint = 0x8244;
export def GL_DEBUG_CALLBACK_USER_PARAM: uint = 0x8245;
export def GL_DEBUG_CALLBACK_USER_PARAM_ARB: uint = 0x8245;
export def GL_DEBUG_CATEGORY_API_ERROR_AMD: uint = 0x9149;
export def GL_DEBUG_CATEGORY_APPLICATION_AMD: uint = 0x914F;
export def GL_DEBUG_CATEGORY_DEPRECATION_AMD: uint = 0x914B;
export def GL_DEBUG_CATEGORY_OTHER_AMD: uint = 0x9150;
export def GL_DEBUG_CATEGORY_PERFORMANCE_AMD: uint = 0x914D;
export def GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD: uint = 0x914E;
export def GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD: uint = 0x914C;
export def GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD: uint = 0x914A;
export def GL_DEBUG_GROUP_STACK_DEPTH: uint = 0x826D;
export def GL_DEBUG_LOGGED_MESSAGES: uint = 0x9145;
export def GL_DEBUG_LOGGED_MESSAGES_AMD: uint = 0x9145;
export def GL_DEBUG_LOGGED_MESSAGES_ARB: uint = 0x9145;
export def GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: uint = 0x8243;
export def GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB: uint = 0x8243;
export def GL_DEBUG_OUTPUT: uint = 0x92E0;
export def GL_DEBUG_OUTPUT_SYNCHRONOUS: uint = 0x8242;
export def GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB: uint = 0x8242;
export def GL_DEBUG_SEVERITY_HIGH: uint = 0x9146;
export def GL_DEBUG_SEVERITY_HIGH_AMD: uint = 0x9146;
export def GL_DEBUG_SEVERITY_HIGH_ARB: uint = 0x9146;
export def GL_DEBUG_SEVERITY_LOW: uint = 0x9148;
export def GL_DEBUG_SEVERITY_LOW_AMD: uint = 0x9148;
export def GL_DEBUG_SEVERITY_LOW_ARB: uint = 0x9148;
export def GL_DEBUG_SEVERITY_MEDIUM: uint = 0x9147;
export def GL_DEBUG_SEVERITY_MEDIUM_AMD: uint = 0x9147;
export def GL_DEBUG_SEVERITY_MEDIUM_ARB: uint = 0x9147;
export def GL_DEBUG_SEVERITY_NOTIFICATION: uint = 0x826B;
export def GL_DEBUG_SOURCE_API: uint = 0x8246;
export def GL_DEBUG_SOURCE_API_ARB: uint = 0x8246;
export def GL_DEBUG_SOURCE_APPLICATION: uint = 0x824A;
export def GL_DEBUG_SOURCE_APPLICATION_ARB: uint = 0x824A;
export def GL_DEBUG_SOURCE_OTHER: uint = 0x824B;
export def GL_DEBUG_SOURCE_OTHER_ARB: uint = 0x824B;
export def GL_DEBUG_SOURCE_SHADER_COMPILER: uint = 0x8248;
export def GL_DEBUG_SOURCE_SHADER_COMPILER_ARB: uint = 0x8248;
export def GL_DEBUG_SOURCE_THIRD_PARTY: uint = 0x8249;
export def GL_DEBUG_SOURCE_THIRD_PARTY_ARB: uint = 0x8249;
export def GL_DEBUG_SOURCE_WINDOW_SYSTEM: uint = 0x8247;
export def GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB: uint = 0x8247;
export def GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: uint = 0x824D;
export def GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB: uint = 0x824D;
export def GL_DEBUG_TYPE_ERROR: uint = 0x824C;
export def GL_DEBUG_TYPE_ERROR_ARB: uint = 0x824C;
export def GL_DEBUG_TYPE_MARKER: uint = 0x8268;
export def GL_DEBUG_TYPE_OTHER: uint = 0x8251;
export def GL_DEBUG_TYPE_OTHER_ARB: uint = 0x8251;
export def GL_DEBUG_TYPE_PERFORMANCE: uint = 0x8250;
export def GL_DEBUG_TYPE_PERFORMANCE_ARB: uint = 0x8250;
export def GL_DEBUG_TYPE_POP_GROUP: uint = 0x826A;
export def GL_DEBUG_TYPE_PORTABILITY: uint = 0x824F;
export def GL_DEBUG_TYPE_PORTABILITY_ARB: uint = 0x824F;
export def GL_DEBUG_TYPE_PUSH_GROUP: uint = 0x8269;
export def GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: uint = 0x824E;
export def GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB: uint = 0x824E;
export def GL_DECODE_EXT: uint = 0x8A49;
export def GL_DECR: uint = 0x1E03;
export def GL_DECR_WRAP: uint = 0x8508;
export def GL_DECR_WRAP_EXT: uint = 0x8508;
export def GL_DEDICATED_MEMORY_OBJECT_EXT: uint = 0x9581;
export def GL_DEFORMATIONS_MASK_SGIX: uint = 0x8196;
export def GL_DELETE_STATUS: uint = 0x8B80;
export def GL_DEPENDENT_AR_TEXTURE_2D_NV: uint = 0x86E9;
export def GL_DEPENDENT_GB_TEXTURE_2D_NV: uint = 0x86EA;
export def GL_DEPENDENT_HILO_TEXTURE_2D_NV: uint = 0x8858;
export def GL_DEPENDENT_RGB_TEXTURE_3D_NV: uint = 0x8859;
export def GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV: uint = 0x885A;
export def GL_DEPTH: uint = 0x1801;
export def GL_DEPTH24_STENCIL8: uint = 0x88F0;
export def GL_DEPTH24_STENCIL8_EXT: uint = 0x88F0;
export def GL_DEPTH32F_STENCIL8: uint = 0x8CAD;
export def GL_DEPTH32F_STENCIL8_NV: uint = 0x8DAC;
export def GL_DEPTH_ATTACHMENT: uint = 0x8D00;
export def GL_DEPTH_ATTACHMENT_EXT: uint = 0x8D00;
export def GL_DEPTH_BOUNDS_EXT: uint = 0x8891;
export def GL_DEPTH_BOUNDS_TEST_EXT: uint = 0x8890;
export def GL_DEPTH_BUFFER_BIT: uint = 0x00000100;
export def GL_DEPTH_BUFFER_FLOAT_MODE_NV: uint = 0x8DAF;
export def GL_DEPTH_CLAMP: uint = 0x864F;
export def GL_DEPTH_CLAMP_FAR_AMD: uint = 0x901F;
export def GL_DEPTH_CLAMP_NEAR_AMD: uint = 0x901E;
export def GL_DEPTH_CLAMP_NV: uint = 0x864F;
export def GL_DEPTH_CLEAR_VALUE: uint = 0x0B73;
export def GL_DEPTH_COMPONENT: uint = 0x1902;
export def GL_DEPTH_COMPONENT16: uint = 0x81A5;
export def GL_DEPTH_COMPONENT16_ARB: uint = 0x81A5;
export def GL_DEPTH_COMPONENT16_SGIX: uint = 0x81A5;
export def GL_DEPTH_COMPONENT24: uint = 0x81A6;
export def GL_DEPTH_COMPONENT24_ARB: uint = 0x81A6;
export def GL_DEPTH_COMPONENT24_SGIX: uint = 0x81A6;
export def GL_DEPTH_COMPONENT32: uint = 0x81A7;
export def GL_DEPTH_COMPONENT32F: uint = 0x8CAC;
export def GL_DEPTH_COMPONENT32F_NV: uint = 0x8DAB;
export def GL_DEPTH_COMPONENT32_ARB: uint = 0x81A7;
export def GL_DEPTH_COMPONENT32_SGIX: uint = 0x81A7;
export def GL_DEPTH_COMPONENTS: uint = 0x8284;
export def GL_DEPTH_FUNC: uint = 0x0B74;
export def GL_DEPTH_RANGE: uint = 0x0B70;
export def GL_DEPTH_RENDERABLE: uint = 0x8287;
export def GL_DEPTH_SAMPLES_NV: uint = 0x932D;
export def GL_DEPTH_STENCIL: uint = 0x84F9;
export def GL_DEPTH_STENCIL_ATTACHMENT: uint = 0x821A;
export def GL_DEPTH_STENCIL_EXT: uint = 0x84F9;
export def GL_DEPTH_STENCIL_NV: uint = 0x84F9;
export def GL_DEPTH_STENCIL_TEXTURE_MODE: uint = 0x90EA;
export def GL_DEPTH_STENCIL_TO_BGRA_NV: uint = 0x886F;
export def GL_DEPTH_STENCIL_TO_RGBA_NV: uint = 0x886E;
export def GL_DEPTH_TEST: uint = 0x0B71;
export def GL_DEPTH_TEXTURE_MODE_ARB: uint = 0x884B;
export def GL_DEPTH_WRITEMASK: uint = 0x0B72;
export def GL_DETACHED_BUFFERS_NV: uint = 0x95AB;
export def GL_DETACHED_MEMORY_INCARNATION_NV: uint = 0x95A9;
export def GL_DETACHED_TEXTURES_NV: uint = 0x95AA;
export def GL_DETAIL_TEXTURE_2D_BINDING_SGIS: uint = 0x8096;
export def GL_DETAIL_TEXTURE_2D_SGIS: uint = 0x8095;
export def GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS: uint = 0x809C;
export def GL_DETAIL_TEXTURE_LEVEL_SGIS: uint = 0x809A;
export def GL_DETAIL_TEXTURE_MODE_SGIS: uint = 0x809B;
export def GL_DEVICE_LUID_EXT: uint = 0x9599;
export def GL_DEVICE_NODE_MASK_EXT: uint = 0x959A;
export def GL_DEVICE_UUID_EXT: uint = 0x9597;
export def GL_DIFFERENCE_KHR: uint = 0x929E;
export def GL_DIFFERENCE_NV: uint = 0x929E;
export def GL_DISCARD_ATI: uint = 0x8763;
export def GL_DISCARD_NV: uint = 0x8530;
export def GL_DISCRETE_AMD: uint = 0x9006;
export def GL_DISJOINT_NV: uint = 0x9283;
export def GL_DISPATCH_INDIRECT_BUFFER: uint = 0x90EE;
export def GL_DISPATCH_INDIRECT_BUFFER_BINDING: uint = 0x90EF;
export def GL_DISTANCE_ATTENUATION_EXT: uint = 0x8129;
export def GL_DISTANCE_ATTENUATION_SGIS: uint = 0x8129;
export def GL_DITHER: uint = 0x0BD0;
export def GL_DONT_CARE: uint = 0x1100;
export def GL_DOT2_ADD_ATI: uint = 0x896C;
export def GL_DOT3_ATI: uint = 0x8966;
export def GL_DOT3_RGBA_ARB: uint = 0x86AF;
export def GL_DOT3_RGBA_EXT: uint = 0x8741;
export def GL_DOT3_RGB_ARB: uint = 0x86AE;
export def GL_DOT3_RGB_EXT: uint = 0x8740;
export def GL_DOT4_ATI: uint = 0x8967;
export def GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV: uint = 0x885D;
export def GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV: uint = 0x86F3;
export def GL_DOT_PRODUCT_DEPTH_REPLACE_NV: uint = 0x86ED;
export def GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV: uint = 0x86F1;
export def GL_DOT_PRODUCT_NV: uint = 0x86EC;
export def GL_DOT_PRODUCT_PASS_THROUGH_NV: uint = 0x885B;
export def GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV: uint = 0x86F2;
export def GL_DOT_PRODUCT_TEXTURE_1D_NV: uint = 0x885C;
export def GL_DOT_PRODUCT_TEXTURE_2D_NV: uint = 0x86EE;
export def GL_DOT_PRODUCT_TEXTURE_3D_NV: uint = 0x86EF;
export def GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV: uint = 0x86F0;
export def GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV: uint = 0x864E;
export def GL_DOUBLE: uint = 0x140A;
export def GL_DOUBLEBUFFER: uint = 0x0C32;
export def GL_DOUBLE_MAT2: uint = 0x8F46;
export def GL_DOUBLE_MAT2_EXT: uint = 0x8F46;
export def GL_DOUBLE_MAT2x3: uint = 0x8F49;
export def GL_DOUBLE_MAT2x3_EXT: uint = 0x8F49;
export def GL_DOUBLE_MAT2x4: uint = 0x8F4A;
export def GL_DOUBLE_MAT2x4_EXT: uint = 0x8F4A;
export def GL_DOUBLE_MAT3: uint = 0x8F47;
export def GL_DOUBLE_MAT3_EXT: uint = 0x8F47;
export def GL_DOUBLE_MAT3x2: uint = 0x8F4B;
export def GL_DOUBLE_MAT3x2_EXT: uint = 0x8F4B;
export def GL_DOUBLE_MAT3x4: uint = 0x8F4C;
export def GL_DOUBLE_MAT3x4_EXT: uint = 0x8F4C;
export def GL_DOUBLE_MAT4: uint = 0x8F48;
export def GL_DOUBLE_MAT4_EXT: uint = 0x8F48;
export def GL_DOUBLE_MAT4x2: uint = 0x8F4D;
export def GL_DOUBLE_MAT4x2_EXT: uint = 0x8F4D;
export def GL_DOUBLE_MAT4x3: uint = 0x8F4E;
export def GL_DOUBLE_MAT4x3_EXT: uint = 0x8F4E;
export def GL_DOUBLE_VEC2: uint = 0x8FFC;
export def GL_DOUBLE_VEC2_EXT: uint = 0x8FFC;
export def GL_DOUBLE_VEC3: uint = 0x8FFD;
export def GL_DOUBLE_VEC3_EXT: uint = 0x8FFD;
export def GL_DOUBLE_VEC4: uint = 0x8FFE;
export def GL_DOUBLE_VEC4_EXT: uint = 0x8FFE;
export def GL_DRAW_ARRAYS_COMMAND_NV: uint = 0x0003;
export def GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV: uint = 0x0007;
export def GL_DRAW_ARRAYS_STRIP_COMMAND_NV: uint = 0x0005;
export def GL_DRAW_BUFFER: uint = 0x0C01;
export def GL_DRAW_BUFFER0: uint = 0x8825;
export def GL_DRAW_BUFFER0_ARB: uint = 0x8825;
export def GL_DRAW_BUFFER0_ATI: uint = 0x8825;
export def GL_DRAW_BUFFER1: uint = 0x8826;
export def GL_DRAW_BUFFER10: uint = 0x882F;
export def GL_DRAW_BUFFER10_ARB: uint = 0x882F;
export def GL_DRAW_BUFFER10_ATI: uint = 0x882F;
export def GL_DRAW_BUFFER11: uint = 0x8830;
export def GL_DRAW_BUFFER11_ARB: uint = 0x8830;
export def GL_DRAW_BUFFER11_ATI: uint = 0x8830;
export def GL_DRAW_BUFFER12: uint = 0x8831;
export def GL_DRAW_BUFFER12_ARB: uint = 0x8831;
export def GL_DRAW_BUFFER12_ATI: uint = 0x8831;
export def GL_DRAW_BUFFER13: uint = 0x8832;
export def GL_DRAW_BUFFER13_ARB: uint = 0x8832;
export def GL_DRAW_BUFFER13_ATI: uint = 0x8832;
export def GL_DRAW_BUFFER14: uint = 0x8833;
export def GL_DRAW_BUFFER14_ARB: uint = 0x8833;
export def GL_DRAW_BUFFER14_ATI: uint = 0x8833;
export def GL_DRAW_BUFFER15: uint = 0x8834;
export def GL_DRAW_BUFFER15_ARB: uint = 0x8834;
export def GL_DRAW_BUFFER15_ATI: uint = 0x8834;
export def GL_DRAW_BUFFER1_ARB: uint = 0x8826;
export def GL_DRAW_BUFFER1_ATI: uint = 0x8826;
export def GL_DRAW_BUFFER2: uint = 0x8827;
export def GL_DRAW_BUFFER2_ARB: uint = 0x8827;
export def GL_DRAW_BUFFER2_ATI: uint = 0x8827;
export def GL_DRAW_BUFFER3: uint = 0x8828;
export def GL_DRAW_BUFFER3_ARB: uint = 0x8828;
export def GL_DRAW_BUFFER3_ATI: uint = 0x8828;
export def GL_DRAW_BUFFER4: uint = 0x8829;
export def GL_DRAW_BUFFER4_ARB: uint = 0x8829;
export def GL_DRAW_BUFFER4_ATI: uint = 0x8829;
export def GL_DRAW_BUFFER5: uint = 0x882A;
export def GL_DRAW_BUFFER5_ARB: uint = 0x882A;
export def GL_DRAW_BUFFER5_ATI: uint = 0x882A;
export def GL_DRAW_BUFFER6: uint = 0x882B;
export def GL_DRAW_BUFFER6_ARB: uint = 0x882B;
export def GL_DRAW_BUFFER6_ATI: uint = 0x882B;
export def GL_DRAW_BUFFER7: uint = 0x882C;
export def GL_DRAW_BUFFER7_ARB: uint = 0x882C;
export def GL_DRAW_BUFFER7_ATI: uint = 0x882C;
export def GL_DRAW_BUFFER8: uint = 0x882D;
export def GL_DRAW_BUFFER8_ARB: uint = 0x882D;
export def GL_DRAW_BUFFER8_ATI: uint = 0x882D;
export def GL_DRAW_BUFFER9: uint = 0x882E;
export def GL_DRAW_BUFFER9_ARB: uint = 0x882E;
export def GL_DRAW_BUFFER9_ATI: uint = 0x882E;
export def GL_DRAW_ELEMENTS_COMMAND_NV: uint = 0x0002;
export def GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV: uint = 0x0006;
export def GL_DRAW_ELEMENTS_STRIP_COMMAND_NV: uint = 0x0004;
export def GL_DRAW_FRAMEBUFFER: uint = 0x8CA9;
export def GL_DRAW_FRAMEBUFFER_BINDING: uint = 0x8CA6;
export def GL_DRAW_FRAMEBUFFER_BINDING_EXT: uint = 0x8CA6;
export def GL_DRAW_FRAMEBUFFER_EXT: uint = 0x8CA9;
export def GL_DRAW_INDIRECT_ADDRESS_NV: uint = 0x8F41;
export def GL_DRAW_INDIRECT_BUFFER: uint = 0x8F3F;
export def GL_DRAW_INDIRECT_BUFFER_BINDING: uint = 0x8F43;
export def GL_DRAW_INDIRECT_LENGTH_NV: uint = 0x8F42;
export def GL_DRAW_INDIRECT_UNIFIED_NV: uint = 0x8F40;
export def GL_DRAW_PIXELS_APPLE: uint = 0x8A0A;
export def GL_DRIVER_UUID_EXT: uint = 0x9598;
export def GL_DSDT8_MAG8_INTENSITY8_NV: uint = 0x870B;
export def GL_DSDT8_MAG8_NV: uint = 0x870A;
export def GL_DSDT8_NV: uint = 0x8709;
export def GL_DSDT_MAG_INTENSITY_NV: uint = 0x86DC;
export def GL_DSDT_MAG_NV: uint = 0x86F6;
export def GL_DSDT_MAG_VIB_NV: uint = 0x86F7;
export def GL_DSDT_NV: uint = 0x86F5;
export def GL_DST_ALPHA: uint = 0x0304;
export def GL_DST_ATOP_NV: uint = 0x928F;
export def GL_DST_COLOR: uint = 0x0306;
export def GL_DST_IN_NV: uint = 0x928B;
export def GL_DST_NV: uint = 0x9287;
export def GL_DST_OUT_NV: uint = 0x928D;
export def GL_DST_OVER_NV: uint = 0x9289;
export def GL_DS_BIAS_NV: uint = 0x8716;
export def GL_DS_SCALE_NV: uint = 0x8710;
export def GL_DT_BIAS_NV: uint = 0x8717;
export def GL_DT_SCALE_NV: uint = 0x8711;
export def GL_DU8DV8_ATI: uint = 0x877A;
export def GL_DUAL_ALPHA12_SGIS: uint = 0x8112;
export def GL_DUAL_ALPHA16_SGIS: uint = 0x8113;
export def GL_DUAL_ALPHA4_SGIS: uint = 0x8110;
export def GL_DUAL_ALPHA8_SGIS: uint = 0x8111;
export def GL_DUAL_INTENSITY12_SGIS: uint = 0x811A;
export def GL_DUAL_INTENSITY16_SGIS: uint = 0x811B;
export def GL_DUAL_INTENSITY4_SGIS: uint = 0x8118;
export def GL_DUAL_INTENSITY8_SGIS: uint = 0x8119;
export def GL_DUAL_LUMINANCE12_SGIS: uint = 0x8116;
export def GL_DUAL_LUMINANCE16_SGIS: uint = 0x8117;
export def GL_DUAL_LUMINANCE4_SGIS: uint = 0x8114;
export def GL_DUAL_LUMINANCE8_SGIS: uint = 0x8115;
export def GL_DUAL_LUMINANCE_ALPHA4_SGIS: uint = 0x811C;
export def GL_DUAL_LUMINANCE_ALPHA8_SGIS: uint = 0x811D;
export def GL_DUAL_TEXTURE_SELECT_SGIS: uint = 0x8124;
export def GL_DUDV_ATI: uint = 0x8779;
export def GL_DUP_FIRST_CUBIC_CURVE_TO_NV: uint = 0xF2;
export def GL_DUP_LAST_CUBIC_CURVE_TO_NV: uint = 0xF4;
export def GL_DYNAMIC_ATI: uint = 0x8761;
export def GL_DYNAMIC_COPY: uint = 0x88EA;
export def GL_DYNAMIC_COPY_ARB: uint = 0x88EA;
export def GL_DYNAMIC_DRAW: uint = 0x88E8;
export def GL_DYNAMIC_DRAW_ARB: uint = 0x88E8;
export def GL_DYNAMIC_READ: uint = 0x88E9;
export def GL_DYNAMIC_READ_ARB: uint = 0x88E9;
export def GL_DYNAMIC_STORAGE_BIT: uint = 0x0100;
export def GL_EDGEFLAG_BIT_PGI: uint = 0x00040000;
export def GL_EDGE_FLAG_ARRAY_ADDRESS_NV: uint = 0x8F26;
export def GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB: uint = 0x889B;
export def GL_EDGE_FLAG_ARRAY_COUNT_EXT: uint = 0x808D;
export def GL_EDGE_FLAG_ARRAY_EXT: uint = 0x8079;
export def GL_EDGE_FLAG_ARRAY_LENGTH_NV: uint = 0x8F30;
export def GL_EDGE_FLAG_ARRAY_LIST_IBM: uint = 103075;
export def GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM: uint = 103085;
export def GL_EDGE_FLAG_ARRAY_POINTER_EXT: uint = 0x8093;
export def GL_EDGE_FLAG_ARRAY_STRIDE_EXT: uint = 0x808C;
export def GL_EFFECTIVE_RASTER_SAMPLES_EXT: uint = 0x932C;
export def GL_EIGHTH_BIT_ATI: uint = 0x00000020;
export def GL_ELEMENT_ADDRESS_COMMAND_NV: uint = 0x0008;
export def GL_ELEMENT_ARRAY_ADDRESS_NV: uint = 0x8F29;
export def GL_ELEMENT_ARRAY_APPLE: uint = 0x8A0C;
export def GL_ELEMENT_ARRAY_ATI: uint = 0x8768;
export def GL_ELEMENT_ARRAY_BARRIER_BIT: uint = 0x00000002;
export def GL_ELEMENT_ARRAY_BARRIER_BIT_EXT: uint = 0x00000002;
export def GL_ELEMENT_ARRAY_BUFFER: uint = 0x8893;
export def GL_ELEMENT_ARRAY_BUFFER_ARB: uint = 0x8893;
export def GL_ELEMENT_ARRAY_BUFFER_BINDING: uint = 0x8895;
export def GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB: uint = 0x8895;
export def GL_ELEMENT_ARRAY_LENGTH_NV: uint = 0x8F33;
export def GL_ELEMENT_ARRAY_POINTER_APPLE: uint = 0x8A0E;
export def GL_ELEMENT_ARRAY_POINTER_ATI: uint = 0x876A;
export def GL_ELEMENT_ARRAY_TYPE_APPLE: uint = 0x8A0D;
export def GL_ELEMENT_ARRAY_TYPE_ATI: uint = 0x8769;
export def GL_ELEMENT_ARRAY_UNIFIED_NV: uint = 0x8F1F;
export def GL_EMBOSS_CONSTANT_NV: uint = 0x855E;
export def GL_EMBOSS_LIGHT_NV: uint = 0x855D;
export def GL_EMBOSS_MAP_NV: uint = 0x855F;
export def GL_EQUAL: uint = 0x0202;
export def GL_EQUIV: uint = 0x1509;
export def GL_EVAL_2D_NV: uint = 0x86C0;
export def GL_EVAL_FRACTIONAL_TESSELLATION_NV: uint = 0x86C5;
export def GL_EVAL_TRIANGULAR_2D_NV: uint = 0x86C1;
export def GL_EVAL_VERTEX_ATTRIB0_NV: uint = 0x86C6;
export def GL_EVAL_VERTEX_ATTRIB10_NV: uint = 0x86D0;
export def GL_EVAL_VERTEX_ATTRIB11_NV: uint = 0x86D1;
export def GL_EVAL_VERTEX_ATTRIB12_NV: uint = 0x86D2;
export def GL_EVAL_VERTEX_ATTRIB13_NV: uint = 0x86D3;
export def GL_EVAL_VERTEX_ATTRIB14_NV: uint = 0x86D4;
export def GL_EVAL_VERTEX_ATTRIB15_NV: uint = 0x86D5;
export def GL_EVAL_VERTEX_ATTRIB1_NV: uint = 0x86C7;
export def GL_EVAL_VERTEX_ATTRIB2_NV: uint = 0x86C8;
export def GL_EVAL_VERTEX_ATTRIB3_NV: uint = 0x86C9;
export def GL_EVAL_VERTEX_ATTRIB4_NV: uint = 0x86CA;
export def GL_EVAL_VERTEX_ATTRIB5_NV: uint = 0x86CB;
export def GL_EVAL_VERTEX_ATTRIB6_NV: uint = 0x86CC;
export def GL_EVAL_VERTEX_ATTRIB7_NV: uint = 0x86CD;
export def GL_EVAL_VERTEX_ATTRIB8_NV: uint = 0x86CE;
export def GL_EVAL_VERTEX_ATTRIB9_NV: uint = 0x86CF;
export def GL_EXCLUSION_KHR: uint = 0x92A0;
export def GL_EXCLUSION_NV: uint = 0x92A0;
export def GL_EXCLUSIVE_EXT: uint = 0x8F11;
export def GL_EXPAND_NEGATE_NV: uint = 0x8539;
export def GL_EXPAND_NORMAL_NV: uint = 0x8538;
export def GL_EXTENSIONS: uint = 0x1F03;
export def GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD: uint = 0x9160;
export def GL_EYE_DISTANCE_TO_LINE_SGIS: uint = 0x81F2;
export def GL_EYE_DISTANCE_TO_POINT_SGIS: uint = 0x81F0;
export def GL_EYE_LINE_SGIS: uint = 0x81F6;
export def GL_EYE_PLANE: uint = 0x2502;
export def GL_EYE_PLANE_ABSOLUTE_NV: uint = 0x855C;
export def GL_EYE_POINT_SGIS: uint = 0x81F4;
export def GL_EYE_RADIAL_NV: uint = 0x855B;
export def GL_E_TIMES_F_NV: uint = 0x8531;
export def GL_FACTOR_MAX_AMD: uint = 0x901D;
export def GL_FACTOR_MIN_AMD: uint = 0x901C;
export def GL_FAILURE_NV: uint = 0x9030;
export def GL_FALSE: u8 = 0;
export def GL_FASTEST: uint = 0x1101;
export def GL_FENCE_APPLE: uint = 0x8A0B;
export def GL_FENCE_CONDITION_NV: uint = 0x84F4;
export def GL_FENCE_STATUS_NV: uint = 0x84F3;
export def GL_FIELDS_NV: uint = 0x8E27;
export def GL_FIELD_LOWER_NV: uint = 0x9023;
export def GL_FIELD_UPPER_NV: uint = 0x9022;
export def GL_FILE_NAME_NV: uint = 0x9074;
export def GL_FILL: uint = 0x1B02;
export def GL_FILL_RECTANGLE_NV: uint = 0x933C;
export def GL_FILTER: uint = 0x829A;
export def GL_FILTER4_SGIS: uint = 0x8146;
export def GL_FIRST_TO_REST_NV: uint = 0x90AF;
export def GL_FIRST_VERTEX_CONVENTION: uint = 0x8E4D;
export def GL_FIRST_VERTEX_CONVENTION_EXT: uint = 0x8E4D;
export def GL_FIXED: uint = 0x140C;
export def GL_FIXED_OES: uint = 0x140C;
export def GL_FIXED_ONLY: uint = 0x891D;
export def GL_FIXED_ONLY_ARB: uint = 0x891D;
export def GL_FLOAT: uint = 0x1406;
export def GL_FLOAT16_MAT2_AMD: uint = 0x91C5;
export def GL_FLOAT16_MAT2x3_AMD: uint = 0x91C8;
export def GL_FLOAT16_MAT2x4_AMD: uint = 0x91C9;
export def GL_FLOAT16_MAT3_AMD: uint = 0x91C6;
export def GL_FLOAT16_MAT3x2_AMD: uint = 0x91CA;
export def GL_FLOAT16_MAT3x4_AMD: uint = 0x91CB;
export def GL_FLOAT16_MAT4_AMD: uint = 0x91C7;
export def GL_FLOAT16_MAT4x2_AMD: uint = 0x91CC;
export def GL_FLOAT16_MAT4x3_AMD: uint = 0x91CD;
export def GL_FLOAT16_NV: uint = 0x8FF8;
export def GL_FLOAT16_VEC2_NV: uint = 0x8FF9;
export def GL_FLOAT16_VEC3_NV: uint = 0x8FFA;
export def GL_FLOAT16_VEC4_NV: uint = 0x8FFB;
export def GL_FLOAT_32_UNSIGNED_INT_24_8_REV: uint = 0x8DAD;
export def GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV: uint = 0x8DAD;
export def GL_FLOAT_CLEAR_COLOR_VALUE_NV: uint = 0x888D;
export def GL_FLOAT_MAT2: uint = 0x8B5A;
export def GL_FLOAT_MAT2_ARB: uint = 0x8B5A;
export def GL_FLOAT_MAT2x3: uint = 0x8B65;
export def GL_FLOAT_MAT2x4: uint = 0x8B66;
export def GL_FLOAT_MAT3: uint = 0x8B5B;
export def GL_FLOAT_MAT3_ARB: uint = 0x8B5B;
export def GL_FLOAT_MAT3x2: uint = 0x8B67;
export def GL_FLOAT_MAT3x4: uint = 0x8B68;
export def GL_FLOAT_MAT4: uint = 0x8B5C;
export def GL_FLOAT_MAT4_ARB: uint = 0x8B5C;
export def GL_FLOAT_MAT4x2: uint = 0x8B69;
export def GL_FLOAT_MAT4x3: uint = 0x8B6A;
export def GL_FLOAT_R16_NV: uint = 0x8884;
export def GL_FLOAT_R32_NV: uint = 0x8885;
export def GL_FLOAT_RG16_NV: uint = 0x8886;
export def GL_FLOAT_RG32_NV: uint = 0x8887;
export def GL_FLOAT_RGB16_NV: uint = 0x8888;
export def GL_FLOAT_RGB32_NV: uint = 0x8889;
export def GL_FLOAT_RGBA16_NV: uint = 0x888A;
export def GL_FLOAT_RGBA32_NV: uint = 0x888B;
export def GL_FLOAT_RGBA_MODE_NV: uint = 0x888E;
export def GL_FLOAT_RGBA_NV: uint = 0x8883;
export def GL_FLOAT_RGB_NV: uint = 0x8882;
export def GL_FLOAT_RG_NV: uint = 0x8881;
export def GL_FLOAT_R_NV: uint = 0x8880;
export def GL_FLOAT_VEC2: uint = 0x8B50;
export def GL_FLOAT_VEC2_ARB: uint = 0x8B50;
export def GL_FLOAT_VEC3: uint = 0x8B51;
export def GL_FLOAT_VEC3_ARB: uint = 0x8B51;
export def GL_FLOAT_VEC4: uint = 0x8B52;
export def GL_FLOAT_VEC4_ARB: uint = 0x8B52;
export def GL_FOG: uint = 0x0B60;
export def GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB: uint = 0x889D;
export def GL_FOG_COORDINATE_ARRAY_EXT: uint = 0x8457;
export def GL_FOG_COORDINATE_ARRAY_LIST_IBM: uint = 103076;
export def GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM: uint = 103086;
export def GL_FOG_COORDINATE_ARRAY_POINTER_EXT: uint = 0x8456;
export def GL_FOG_COORDINATE_ARRAY_STRIDE_EXT: uint = 0x8455;
export def GL_FOG_COORDINATE_ARRAY_TYPE_EXT: uint = 0x8454;
export def GL_FOG_COORDINATE_EXT: uint = 0x8451;
export def GL_FOG_COORDINATE_SOURCE_EXT: uint = 0x8450;
export def GL_FOG_COORD_ARRAY_ADDRESS_NV: uint = 0x8F28;
export def GL_FOG_COORD_ARRAY_LENGTH_NV: uint = 0x8F32;
export def GL_FOG_DISTANCE_MODE_NV: uint = 0x855A;
export def GL_FOG_FUNC_POINTS_SGIS: uint = 0x812B;
export def GL_FOG_FUNC_SGIS: uint = 0x812A;
export def GL_FOG_OFFSET_SGIX: uint = 0x8198;
export def GL_FOG_OFFSET_VALUE_SGIX: uint = 0x8199;
export def GL_FOG_SPECULAR_TEXTURE_WIN: uint = 0x80EC;
export def GL_FONT_ASCENDER_BIT_NV: uint = 0x00200000;
export def GL_FONT_DESCENDER_BIT_NV: uint = 0x00400000;
export def GL_FONT_GLYPHS_AVAILABLE_NV: uint = 0x9368;
export def GL_FONT_HAS_KERNING_BIT_NV: uint = 0x10000000;
export def GL_FONT_HEIGHT_BIT_NV: uint = 0x00800000;
export def GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV: uint = 0x02000000;
export def GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV: uint = 0x01000000;
export def GL_FONT_NUM_GLYPH_INDICES_BIT_NV: uint = 0x20000000;
export def GL_FONT_TARGET_UNAVAILABLE_NV: uint = 0x9369;
export def GL_FONT_UNAVAILABLE_NV: uint = 0x936A;
export def GL_FONT_UNDERLINE_POSITION_BIT_NV: uint = 0x04000000;
export def GL_FONT_UNDERLINE_THICKNESS_BIT_NV: uint = 0x08000000;
export def GL_FONT_UNINTELLIGIBLE_NV: uint = 0x936B;
export def GL_FONT_UNITS_PER_EM_BIT_NV: uint = 0x00100000;
export def GL_FONT_X_MAX_BOUNDS_BIT_NV: uint = 0x00040000;
export def GL_FONT_X_MIN_BOUNDS_BIT_NV: uint = 0x00010000;
export def GL_FONT_Y_MAX_BOUNDS_BIT_NV: uint = 0x00080000;
export def GL_FONT_Y_MIN_BOUNDS_BIT_NV: uint = 0x00020000;
export def GL_FORCE_BLUE_TO_ONE_NV: uint = 0x8860;
export def GL_FORMAT_SUBSAMPLE_244_244_OML: uint = 0x8983;
export def GL_FORMAT_SUBSAMPLE_24_24_OML: uint = 0x8982;
export def GL_FRACTIONAL_EVEN: uint = 0x8E7C;
export def GL_FRACTIONAL_ODD: uint = 0x8E7B;
export def GL_FRAGMENT_COLOR_EXT: uint = 0x834C;
export def GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX: uint = 0x8402;
export def GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX: uint = 0x8403;
export def GL_FRAGMENT_COLOR_MATERIAL_SGIX: uint = 0x8401;
export def GL_FRAGMENT_COVERAGE_COLOR_NV: uint = 0x92DE;
export def GL_FRAGMENT_COVERAGE_TO_COLOR_NV: uint = 0x92DD;
export def GL_FRAGMENT_DEPTH_EXT: uint = 0x8452;
export def GL_FRAGMENT_INPUT_NV: uint = 0x936D;
export def GL_FRAGMENT_INTERPOLATION_OFFSET_BITS: uint = 0x8E5D;
export def GL_FRAGMENT_LIGHT0_SGIX: uint = 0x840C;
export def GL_FRAGMENT_LIGHT1_SGIX: uint = 0x840D;
export def GL_FRAGMENT_LIGHT2_SGIX: uint = 0x840E;
export def GL_FRAGMENT_LIGHT3_SGIX: uint = 0x840F;
export def GL_FRAGMENT_LIGHT4_SGIX: uint = 0x8410;
export def GL_FRAGMENT_LIGHT5_SGIX: uint = 0x8411;
export def GL_FRAGMENT_LIGHT6_SGIX: uint = 0x8412;
export def GL_FRAGMENT_LIGHT7_SGIX: uint = 0x8413;
export def GL_FRAGMENT_LIGHTING_SGIX: uint = 0x8400;
export def GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX: uint = 0x840A;
export def GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX: uint = 0x8408;
export def GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX: uint = 0x840B;
export def GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX: uint = 0x8409;
export def GL_FRAGMENT_MATERIAL_EXT: uint = 0x8349;
export def GL_FRAGMENT_NORMAL_EXT: uint = 0x834A;
export def GL_FRAGMENT_PROGRAM_ARB: uint = 0x8804;
export def GL_FRAGMENT_PROGRAM_BINDING_NV: uint = 0x8873;
export def GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV: uint = 0x8E5D;
export def GL_FRAGMENT_PROGRAM_NV: uint = 0x8870;
export def GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x8DA4;
export def GL_FRAGMENT_SHADER: uint = 0x8B30;
export def GL_FRAGMENT_SHADER_ARB: uint = 0x8B30;
export def GL_FRAGMENT_SHADER_ATI: uint = 0x8920;
export def GL_FRAGMENT_SHADER_BIT: uint = 0x00000002;
export def GL_FRAGMENT_SHADER_DERIVATIVE_HINT: uint = 0x8B8B;
export def GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB: uint = 0x8B8B;
export def GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT: uint = 0x8A52;
export def GL_FRAGMENT_SHADER_INVOCATIONS: uint = 0x82F4;
export def GL_FRAGMENT_SHADER_INVOCATIONS_ARB: uint = 0x82F4;
export def GL_FRAGMENT_SUBROUTINE: uint = 0x92EC;
export def GL_FRAGMENT_SUBROUTINE_UNIFORM: uint = 0x92F2;
export def GL_FRAGMENT_TEXTURE: uint = 0x829F;
export def GL_FRAMEBUFFER: uint = 0x8D40;
export def GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: uint = 0x8215;
export def GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: uint = 0x8214;
export def GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: uint = 0x8210;
export def GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: uint = 0x8211;
export def GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: uint = 0x8216;
export def GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: uint = 0x8213;
export def GL_FRAMEBUFFER_ATTACHMENT_LAYERED: uint = 0x8DA7;
export def GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB: uint = 0x8DA7;
export def GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT: uint = 0x8DA7;
export def GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: uint = 0x8CD1;
export def GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT: uint = 0x8CD1;
export def GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: uint = 0x8CD0;
export def GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT: uint = 0x8CD0;
export def GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: uint = 0x8212;
export def GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: uint = 0x8217;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT: uint = 0x8CD4;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: uint = 0x9632;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: uint = 0x8CD3;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT: uint = 0x8CD3;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: uint = 0x8CD4;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT: uint = 0x8CD4;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: uint = 0x8CD2;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT: uint = 0x8CD2;
export def GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: uint = 0x9630;
export def GL_FRAMEBUFFER_BARRIER_BIT: uint = 0x00000400;
export def GL_FRAMEBUFFER_BARRIER_BIT_EXT: uint = 0x00000400;
export def GL_FRAMEBUFFER_BINDING: uint = 0x8CA6;
export def GL_FRAMEBUFFER_BINDING_EXT: uint = 0x8CA6;
export def GL_FRAMEBUFFER_BLEND: uint = 0x828B;
export def GL_FRAMEBUFFER_COMPLETE: uint = 0x8CD5;
export def GL_FRAMEBUFFER_COMPLETE_EXT: uint = 0x8CD5;
export def GL_FRAMEBUFFER_DEFAULT: uint = 0x8218;
export def GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: uint = 0x9314;
export def GL_FRAMEBUFFER_DEFAULT_HEIGHT: uint = 0x9311;
export def GL_FRAMEBUFFER_DEFAULT_LAYERS: uint = 0x9312;
export def GL_FRAMEBUFFER_DEFAULT_SAMPLES: uint = 0x9313;
export def GL_FRAMEBUFFER_DEFAULT_WIDTH: uint = 0x9310;
export def GL_FRAMEBUFFER_EXT: uint = 0x8D40;
export def GL_FRAMEBUFFER_FLIP_X_MESA: uint = 0x8BBC;
export def GL_FRAMEBUFFER_FLIP_Y_MESA: uint = 0x8BBB;
export def GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: uint = 0x8CD6;
export def GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT: uint = 0x8CD6;
export def GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT: uint = 0x8CD9;
export def GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: uint = 0x8CDB;
export def GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT: uint = 0x8CDB;
export def GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT: uint = 0x8CDA;
export def GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB: uint = 0x8DA9;
export def GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT: uint = 0x8DA9;
export def GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: uint = 0x8DA8;
export def GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB: uint = 0x8DA8;
export def GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT: uint = 0x8DA8;
export def GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: uint = 0x8CD7;
export def GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT: uint = 0x8CD7;
export def GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: uint = 0x8D56;
export def GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT: uint = 0x8D56;
export def GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: uint = 0x8CDC;
export def GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT: uint = 0x8CDC;
export def GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: uint = 0x9633;
export def GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB: uint = 0x9342;
export def GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV: uint = 0x9342;
export def GL_FRAMEBUFFER_RENDERABLE: uint = 0x8289;
export def GL_FRAMEBUFFER_RENDERABLE_LAYERED: uint = 0x828A;
export def GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB: uint = 0x9343;
export def GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV: uint = 0x9343;
export def GL_FRAMEBUFFER_SRGB: uint = 0x8DB9;
export def GL_FRAMEBUFFER_SRGB_CAPABLE_EXT: uint = 0x8DBA;
export def GL_FRAMEBUFFER_SRGB_EXT: uint = 0x8DB9;
export def GL_FRAMEBUFFER_SWAP_XY_MESA: uint = 0x8BBD;
export def GL_FRAMEBUFFER_UNDEFINED: uint = 0x8219;
export def GL_FRAMEBUFFER_UNSUPPORTED: uint = 0x8CDD;
export def GL_FRAMEBUFFER_UNSUPPORTED_EXT: uint = 0x8CDD;
export def GL_FRAMEZOOM_FACTOR_SGIX: uint = 0x818C;
export def GL_FRAMEZOOM_SGIX: uint = 0x818B;
export def GL_FRAME_NV: uint = 0x8E26;
export def GL_FRONT: uint = 0x0404;
export def GL_FRONT_AND_BACK: uint = 0x0408;
export def GL_FRONT_FACE: uint = 0x0B46;
export def GL_FRONT_FACE_COMMAND_NV: uint = 0x0012;
export def GL_FRONT_LEFT: uint = 0x0400;
export def GL_FRONT_RIGHT: uint = 0x0401;
export def GL_FULL_RANGE_EXT: uint = 0x87E1;
export def GL_FULL_STIPPLE_HINT_PGI: uint = 0x1A219;
export def GL_FULL_SUPPORT: uint = 0x82B7;
export def GL_FUNC_ADD: uint = 0x8006;
export def GL_FUNC_ADD_EXT: uint = 0x8006;
export def GL_FUNC_REVERSE_SUBTRACT: uint = 0x800B;
export def GL_FUNC_REVERSE_SUBTRACT_EXT: uint = 0x800B;
export def GL_FUNC_SUBTRACT: uint = 0x800A;
export def GL_FUNC_SUBTRACT_EXT: uint = 0x800A;
export def GL_GENERATE_MIPMAP_HINT_SGIS: uint = 0x8192;
export def GL_GENERATE_MIPMAP_SGIS: uint = 0x8191;
export def GL_GENERIC_ATTRIB_NV: uint = 0x8C7D;
export def GL_GEOMETRY_DEFORMATION_BIT_SGIX: uint = 0x00000002;
export def GL_GEOMETRY_DEFORMATION_SGIX: uint = 0x8194;
export def GL_GEOMETRY_INPUT_TYPE: uint = 0x8917;
export def GL_GEOMETRY_INPUT_TYPE_ARB: uint = 0x8DDB;
export def GL_GEOMETRY_INPUT_TYPE_EXT: uint = 0x8DDB;
export def GL_GEOMETRY_OUTPUT_TYPE: uint = 0x8918;
export def GL_GEOMETRY_OUTPUT_TYPE_ARB: uint = 0x8DDC;
export def GL_GEOMETRY_OUTPUT_TYPE_EXT: uint = 0x8DDC;
export def GL_GEOMETRY_PROGRAM_NV: uint = 0x8C26;
export def GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x8DA3;
export def GL_GEOMETRY_SHADER: uint = 0x8DD9;
export def GL_GEOMETRY_SHADER_ARB: uint = 0x8DD9;
export def GL_GEOMETRY_SHADER_BIT: uint = 0x00000004;
export def GL_GEOMETRY_SHADER_EXT: uint = 0x8DD9;
export def GL_GEOMETRY_SHADER_INVOCATIONS: uint = 0x887F;
export def GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED: uint = 0x82F3;
export def GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB: uint = 0x82F3;
export def GL_GEOMETRY_SUBROUTINE: uint = 0x92EB;
export def GL_GEOMETRY_SUBROUTINE_UNIFORM: uint = 0x92F1;
export def GL_GEOMETRY_TEXTURE: uint = 0x829E;
export def GL_GEOMETRY_VERTICES_OUT: uint = 0x8916;
export def GL_GEOMETRY_VERTICES_OUT_ARB: uint = 0x8DDA;
export def GL_GEOMETRY_VERTICES_OUT_EXT: uint = 0x8DDA;
export def GL_GEQUAL: uint = 0x0206;
export def GL_GET_TEXTURE_IMAGE_FORMAT: uint = 0x8291;
export def GL_GET_TEXTURE_IMAGE_TYPE: uint = 0x8292;
export def GL_GLOBAL_ALPHA_FACTOR_SUN: uint = 0x81DA;
export def GL_GLOBAL_ALPHA_SUN: uint = 0x81D9;
export def GL_GLYPH_HAS_KERNING_BIT_NV: uint = 0x100;
export def GL_GLYPH_HEIGHT_BIT_NV: uint = 0x02;
export def GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV: uint = 0x10;
export def GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV: uint = 0x04;
export def GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV: uint = 0x08;
export def GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV: uint = 0x80;
export def GL_GLYPH_VERTICAL_BEARING_X_BIT_NV: uint = 0x20;
export def GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV: uint = 0x40;
export def GL_GLYPH_WIDTH_BIT_NV: uint = 0x01;
export def GL_GPU_ADDRESS_NV: uint = 0x8F34;
export def GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX: uint = 0x9049;
export def GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX: uint = 0x9047;
export def GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX: uint = 0x904B;
export def GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX: uint = 0x904A;
export def GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX: uint = 0x9048;
export def GL_GREATER: uint = 0x0204;
export def GL_GREEN: uint = 0x1904;
export def GL_GREEN_BIT_ATI: uint = 0x00000002;
export def GL_GREEN_INTEGER: uint = 0x8D95;
export def GL_GREEN_INTEGER_EXT: uint = 0x8D95;
export def GL_GREEN_MAX_CLAMP_INGR: uint = 0x8565;
export def GL_GREEN_MIN_CLAMP_INGR: uint = 0x8561;
export def GL_GREEN_NV: uint = 0x1904;
export def GL_GUILTY_CONTEXT_RESET: uint = 0x8253;
export def GL_GUILTY_CONTEXT_RESET_ARB: uint = 0x8253;
export def GL_HALF_APPLE: uint = 0x140B;
export def GL_HALF_BIAS_NEGATE_NV: uint = 0x853B;
export def GL_HALF_BIAS_NORMAL_NV: uint = 0x853A;
export def GL_HALF_BIT_ATI: uint = 0x00000008;
export def GL_HALF_FLOAT: uint = 0x140B;
export def GL_HALF_FLOAT_ARB: uint = 0x140B;
export def GL_HALF_FLOAT_NV: uint = 0x140B;
export def GL_HANDLE_TYPE_D3D11_IMAGE_EXT: uint = 0x958B;
export def GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT: uint = 0x958C;
export def GL_HANDLE_TYPE_D3D12_FENCE_EXT: uint = 0x9594;
export def GL_HANDLE_TYPE_D3D12_RESOURCE_EXT: uint = 0x958A;
export def GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT: uint = 0x9589;
export def GL_HANDLE_TYPE_OPAQUE_FD_EXT: uint = 0x9586;
export def GL_HANDLE_TYPE_OPAQUE_WIN32_EXT: uint = 0x9587;
export def GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT: uint = 0x9588;
export def GL_HARDLIGHT_KHR: uint = 0x929B;
export def GL_HARDLIGHT_NV: uint = 0x929B;
export def GL_HARDMIX_NV: uint = 0x92A9;
export def GL_HIGH_FLOAT: uint = 0x8DF2;
export def GL_HIGH_INT: uint = 0x8DF5;
export def GL_HILO16_NV: uint = 0x86F8;
export def GL_HILO8_NV: uint = 0x885E;
export def GL_HILO_NV: uint = 0x86F4;
export def GL_HISTOGRAM_ALPHA_SIZE_EXT: uint = 0x802B;
export def GL_HISTOGRAM_BLUE_SIZE_EXT: uint = 0x802A;
export def GL_HISTOGRAM_EXT: uint = 0x8024;
export def GL_HISTOGRAM_FORMAT_EXT: uint = 0x8027;
export def GL_HISTOGRAM_GREEN_SIZE_EXT: uint = 0x8029;
export def GL_HISTOGRAM_LUMINANCE_SIZE_EXT: uint = 0x802C;
export def GL_HISTOGRAM_RED_SIZE_EXT: uint = 0x8028;
export def GL_HISTOGRAM_SINK_EXT: uint = 0x802D;
export def GL_HISTOGRAM_WIDTH_EXT: uint = 0x8026;
export def GL_HI_BIAS_NV: uint = 0x8714;
export def GL_HI_SCALE_NV: uint = 0x870E;
export def GL_HORIZONTAL_LINE_TO_NV: uint = 0x06;
export def GL_HSL_COLOR_KHR: uint = 0x92AF;
export def GL_HSL_COLOR_NV: uint = 0x92AF;
export def GL_HSL_HUE_KHR: uint = 0x92AD;
export def GL_HSL_HUE_NV: uint = 0x92AD;
export def GL_HSL_LUMINOSITY_KHR: uint = 0x92B0;
export def GL_HSL_LUMINOSITY_NV: uint = 0x92B0;
export def GL_HSL_SATURATION_KHR: uint = 0x92AE;
export def GL_HSL_SATURATION_NV: uint = 0x92AE;
export def GL_IDENTITY_NV: uint = 0x862A;
export def GL_IGNORE_BORDER_HP: uint = 0x8150;
export def GL_IMAGE_1D: uint = 0x904C;
export def GL_IMAGE_1D_ARRAY: uint = 0x9052;
export def GL_IMAGE_1D_ARRAY_EXT: uint = 0x9052;
export def GL_IMAGE_1D_EXT: uint = 0x904C;
export def GL_IMAGE_2D: uint = 0x904D;
export def GL_IMAGE_2D_ARRAY: uint = 0x9053;
export def GL_IMAGE_2D_ARRAY_EXT: uint = 0x9053;
export def GL_IMAGE_2D_EXT: uint = 0x904D;
export def GL_IMAGE_2D_MULTISAMPLE: uint = 0x9055;
export def GL_IMAGE_2D_MULTISAMPLE_ARRAY: uint = 0x9056;
export def GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: uint = 0x9056;
export def GL_IMAGE_2D_MULTISAMPLE_EXT: uint = 0x9055;
export def GL_IMAGE_2D_RECT: uint = 0x904F;
export def GL_IMAGE_2D_RECT_EXT: uint = 0x904F;
export def GL_IMAGE_3D: uint = 0x904E;
export def GL_IMAGE_3D_EXT: uint = 0x904E;
export def GL_IMAGE_BINDING_ACCESS: uint = 0x8F3E;
export def GL_IMAGE_BINDING_ACCESS_EXT: uint = 0x8F3E;
export def GL_IMAGE_BINDING_FORMAT: uint = 0x906E;
export def GL_IMAGE_BINDING_FORMAT_EXT: uint = 0x906E;
export def GL_IMAGE_BINDING_LAYER: uint = 0x8F3D;
export def GL_IMAGE_BINDING_LAYERED: uint = 0x8F3C;
export def GL_IMAGE_BINDING_LAYERED_EXT: uint = 0x8F3C;
export def GL_IMAGE_BINDING_LAYER_EXT: uint = 0x8F3D;
export def GL_IMAGE_BINDING_LEVEL: uint = 0x8F3B;
export def GL_IMAGE_BINDING_LEVEL_EXT: uint = 0x8F3B;
export def GL_IMAGE_BINDING_NAME: uint = 0x8F3A;
export def GL_IMAGE_BINDING_NAME_EXT: uint = 0x8F3A;
export def GL_IMAGE_BUFFER: uint = 0x9051;
export def GL_IMAGE_BUFFER_EXT: uint = 0x9051;
export def GL_IMAGE_CLASS_10_10_10_2: uint = 0x82C3;
export def GL_IMAGE_CLASS_11_11_10: uint = 0x82C2;
export def GL_IMAGE_CLASS_1_X_16: uint = 0x82BE;
export def GL_IMAGE_CLASS_1_X_32: uint = 0x82BB;
export def GL_IMAGE_CLASS_1_X_8: uint = 0x82C1;
export def GL_IMAGE_CLASS_2_X_16: uint = 0x82BD;
export def GL_IMAGE_CLASS_2_X_32: uint = 0x82BA;
export def GL_IMAGE_CLASS_2_X_8: uint = 0x82C0;
export def GL_IMAGE_CLASS_4_X_16: uint = 0x82BC;
export def GL_IMAGE_CLASS_4_X_32: uint = 0x82B9;
export def GL_IMAGE_CLASS_4_X_8: uint = 0x82BF;
export def GL_IMAGE_COMPATIBILITY_CLASS: uint = 0x82A8;
export def GL_IMAGE_CUBE: uint = 0x9050;
export def GL_IMAGE_CUBE_EXT: uint = 0x9050;
export def GL_IMAGE_CUBE_MAP_ARRAY: uint = 0x9054;
export def GL_IMAGE_CUBE_MAP_ARRAY_EXT: uint = 0x9054;
export def GL_IMAGE_CUBIC_WEIGHT_HP: uint = 0x815E;
export def GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: uint = 0x90C9;
export def GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: uint = 0x90C8;
export def GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: uint = 0x90C7;
export def GL_IMAGE_MAG_FILTER_HP: uint = 0x815C;
export def GL_IMAGE_MIN_FILTER_HP: uint = 0x815D;
export def GL_IMAGE_PIXEL_FORMAT: uint = 0x82A9;
export def GL_IMAGE_PIXEL_TYPE: uint = 0x82AA;
export def GL_IMAGE_ROTATE_ANGLE_HP: uint = 0x8159;
export def GL_IMAGE_ROTATE_ORIGIN_X_HP: uint = 0x815A;
export def GL_IMAGE_ROTATE_ORIGIN_Y_HP: uint = 0x815B;
export def GL_IMAGE_SCALE_X_HP: uint = 0x8155;
export def GL_IMAGE_SCALE_Y_HP: uint = 0x8156;
export def GL_IMAGE_TEXEL_SIZE: uint = 0x82A7;
export def GL_IMAGE_TRANSFORM_2D_HP: uint = 0x8161;
export def GL_IMAGE_TRANSLATE_X_HP: uint = 0x8157;
export def GL_IMAGE_TRANSLATE_Y_HP: uint = 0x8158;
export def GL_IMPLEMENTATION_COLOR_READ_FORMAT: uint = 0x8B9B;
export def GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES: uint = 0x8B9B;
export def GL_IMPLEMENTATION_COLOR_READ_TYPE: uint = 0x8B9A;
export def GL_IMPLEMENTATION_COLOR_READ_TYPE_OES: uint = 0x8B9A;
export def GL_INCLUSIVE_EXT: uint = 0x8F10;
export def GL_INCR: uint = 0x1E02;
export def GL_INCR_WRAP: uint = 0x8507;
export def GL_INCR_WRAP_EXT: uint = 0x8507;
export def GL_INDEX_ARRAY_ADDRESS_NV: uint = 0x8F24;
export def GL_INDEX_ARRAY_BUFFER_BINDING_ARB: uint = 0x8899;
export def GL_INDEX_ARRAY_COUNT_EXT: uint = 0x8087;
export def GL_INDEX_ARRAY_EXT: uint = 0x8077;
export def GL_INDEX_ARRAY_LENGTH_NV: uint = 0x8F2E;
export def GL_INDEX_ARRAY_LIST_IBM: uint = 103073;
export def GL_INDEX_ARRAY_LIST_STRIDE_IBM: uint = 103083;
export def GL_INDEX_ARRAY_POINTER_EXT: uint = 0x8091;
export def GL_INDEX_ARRAY_STRIDE_EXT: uint = 0x8086;
export def GL_INDEX_ARRAY_TYPE_EXT: uint = 0x8085;
export def GL_INDEX_BIT_PGI: uint = 0x00080000;
export def GL_INDEX_MATERIAL_EXT: uint = 0x81B8;
export def GL_INDEX_MATERIAL_FACE_EXT: uint = 0x81BA;
export def GL_INDEX_MATERIAL_PARAMETER_EXT: uint = 0x81B9;
export def GL_INDEX_TEST_EXT: uint = 0x81B5;
export def GL_INDEX_TEST_FUNC_EXT: uint = 0x81B6;
export def GL_INDEX_TEST_REF_EXT: uint = 0x81B7;
export def GL_INFO_LOG_LENGTH: uint = 0x8B84;
export def GL_INNOCENT_CONTEXT_RESET: uint = 0x8254;
export def GL_INNOCENT_CONTEXT_RESET_ARB: uint = 0x8254;
export def GL_INSTRUMENT_BUFFER_POINTER_SGIX: uint = 0x8180;
export def GL_INSTRUMENT_MEASUREMENTS_SGIX: uint = 0x8181;
export def GL_INT: uint = 0x1404;
export def GL_INT16_NV: uint = 0x8FE4;
export def GL_INT16_VEC2_NV: uint = 0x8FE5;
export def GL_INT16_VEC3_NV: uint = 0x8FE6;
export def GL_INT16_VEC4_NV: uint = 0x8FE7;
export def GL_INT64_ARB: uint = 0x140E;
export def GL_INT64_NV: uint = 0x140E;
export def GL_INT64_VEC2_ARB: uint = 0x8FE9;
export def GL_INT64_VEC2_NV: uint = 0x8FE9;
export def GL_INT64_VEC3_ARB: uint = 0x8FEA;
export def GL_INT64_VEC3_NV: uint = 0x8FEA;
export def GL_INT64_VEC4_ARB: uint = 0x8FEB;
export def GL_INT64_VEC4_NV: uint = 0x8FEB;
export def GL_INT8_NV: uint = 0x8FE0;
export def GL_INT8_VEC2_NV: uint = 0x8FE1;
export def GL_INT8_VEC3_NV: uint = 0x8FE2;
export def GL_INT8_VEC4_NV: uint = 0x8FE3;
export def GL_INTENSITY12_EXT: uint = 0x804C;
export def GL_INTENSITY16F_ARB: uint = 0x881D;
export def GL_INTENSITY16I_EXT: uint = 0x8D8B;
export def GL_INTENSITY16UI_EXT: uint = 0x8D79;
export def GL_INTENSITY16_EXT: uint = 0x804D;
export def GL_INTENSITY16_SNORM: uint = 0x901B;
export def GL_INTENSITY32F_ARB: uint = 0x8817;
export def GL_INTENSITY32I_EXT: uint = 0x8D85;
export def GL_INTENSITY32UI_EXT: uint = 0x8D73;
export def GL_INTENSITY4_EXT: uint = 0x804A;
export def GL_INTENSITY8I_EXT: uint = 0x8D91;
export def GL_INTENSITY8UI_EXT: uint = 0x8D7F;
export def GL_INTENSITY8_EXT: uint = 0x804B;
export def GL_INTENSITY8_SNORM: uint = 0x9017;
export def GL_INTENSITY_EXT: uint = 0x8049;
export def GL_INTENSITY_FLOAT16_APPLE: uint = 0x881D;
export def GL_INTENSITY_FLOAT16_ATI: uint = 0x881D;
export def GL_INTENSITY_FLOAT32_APPLE: uint = 0x8817;
export def GL_INTENSITY_FLOAT32_ATI: uint = 0x8817;
export def GL_INTENSITY_SNORM: uint = 0x9013;
export def GL_INTERLACE_OML: uint = 0x8980;
export def GL_INTERLACE_READ_INGR: uint = 0x8568;
export def GL_INTERLACE_READ_OML: uint = 0x8981;
export def GL_INTERLACE_SGIX: uint = 0x8094;
export def GL_INTERLEAVED_ATTRIBS: uint = 0x8C8C;
export def GL_INTERLEAVED_ATTRIBS_EXT: uint = 0x8C8C;
export def GL_INTERLEAVED_ATTRIBS_NV: uint = 0x8C8C;
export def GL_INTERNALFORMAT_ALPHA_SIZE: uint = 0x8274;
export def GL_INTERNALFORMAT_ALPHA_TYPE: uint = 0x827B;
export def GL_INTERNALFORMAT_BLUE_SIZE: uint = 0x8273;
export def GL_INTERNALFORMAT_BLUE_TYPE: uint = 0x827A;
export def GL_INTERNALFORMAT_DEPTH_SIZE: uint = 0x8275;
export def GL_INTERNALFORMAT_DEPTH_TYPE: uint = 0x827C;
export def GL_INTERNALFORMAT_GREEN_SIZE: uint = 0x8272;
export def GL_INTERNALFORMAT_GREEN_TYPE: uint = 0x8279;
export def GL_INTERNALFORMAT_PREFERRED: uint = 0x8270;
export def GL_INTERNALFORMAT_RED_SIZE: uint = 0x8271;
export def GL_INTERNALFORMAT_RED_TYPE: uint = 0x8278;
export def GL_INTERNALFORMAT_SHARED_SIZE: uint = 0x8277;
export def GL_INTERNALFORMAT_STENCIL_SIZE: uint = 0x8276;
export def GL_INTERNALFORMAT_STENCIL_TYPE: uint = 0x827D;
export def GL_INTERNALFORMAT_SUPPORTED: uint = 0x826F;
export def GL_INTERPOLATE_ARB: uint = 0x8575;
export def GL_INTERPOLATE_EXT: uint = 0x8575;
export def GL_INT_2_10_10_10_REV: uint = 0x8D9F;
export def GL_INT_IMAGE_1D: uint = 0x9057;
export def GL_INT_IMAGE_1D_ARRAY: uint = 0x905D;
export def GL_INT_IMAGE_1D_ARRAY_EXT: uint = 0x905D;
export def GL_INT_IMAGE_1D_EXT: uint = 0x9057;
export def GL_INT_IMAGE_2D: uint = 0x9058;
export def GL_INT_IMAGE_2D_ARRAY: uint = 0x905E;
export def GL_INT_IMAGE_2D_ARRAY_EXT: uint = 0x905E;
export def GL_INT_IMAGE_2D_EXT: uint = 0x9058;
export def GL_INT_IMAGE_2D_MULTISAMPLE: uint = 0x9060;
export def GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY: uint = 0x9061;
export def GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: uint = 0x9061;
export def GL_INT_IMAGE_2D_MULTISAMPLE_EXT: uint = 0x9060;
export def GL_INT_IMAGE_2D_RECT: uint = 0x905A;
export def GL_INT_IMAGE_2D_RECT_EXT: uint = 0x905A;
export def GL_INT_IMAGE_3D: uint = 0x9059;
export def GL_INT_IMAGE_3D_EXT: uint = 0x9059;
export def GL_INT_IMAGE_BUFFER: uint = 0x905C;
export def GL_INT_IMAGE_BUFFER_EXT: uint = 0x905C;
export def GL_INT_IMAGE_CUBE: uint = 0x905B;
export def GL_INT_IMAGE_CUBE_EXT: uint = 0x905B;
export def GL_INT_IMAGE_CUBE_MAP_ARRAY: uint = 0x905F;
export def GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT: uint = 0x905F;
export def GL_INT_SAMPLER_1D: uint = 0x8DC9;
export def GL_INT_SAMPLER_1D_ARRAY: uint = 0x8DCE;
export def GL_INT_SAMPLER_1D_ARRAY_EXT: uint = 0x8DCE;
export def GL_INT_SAMPLER_1D_EXT: uint = 0x8DC9;
export def GL_INT_SAMPLER_2D: uint = 0x8DCA;
export def GL_INT_SAMPLER_2D_ARRAY: uint = 0x8DCF;
export def GL_INT_SAMPLER_2D_ARRAY_EXT: uint = 0x8DCF;
export def GL_INT_SAMPLER_2D_EXT: uint = 0x8DCA;
export def GL_INT_SAMPLER_2D_MULTISAMPLE: uint = 0x9109;
export def GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: uint = 0x910C;
export def GL_INT_SAMPLER_2D_RECT: uint = 0x8DCD;
export def GL_INT_SAMPLER_2D_RECT_EXT: uint = 0x8DCD;
export def GL_INT_SAMPLER_3D: uint = 0x8DCB;
export def GL_INT_SAMPLER_3D_EXT: uint = 0x8DCB;
export def GL_INT_SAMPLER_BUFFER: uint = 0x8DD0;
export def GL_INT_SAMPLER_BUFFER_AMD: uint = 0x9002;
export def GL_INT_SAMPLER_BUFFER_EXT: uint = 0x8DD0;
export def GL_INT_SAMPLER_CUBE: uint = 0x8DCC;
export def GL_INT_SAMPLER_CUBE_EXT: uint = 0x8DCC;
export def GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB: uint = 0x900E;
export def GL_INT_SAMPLER_RENDERBUFFER_NV: uint = 0x8E57;
export def GL_INT_VEC2: uint = 0x8B53;
export def GL_INT_VEC2_ARB: uint = 0x8B53;
export def GL_INT_VEC3: uint = 0x8B54;
export def GL_INT_VEC3_ARB: uint = 0x8B54;
export def GL_INT_VEC4: uint = 0x8B55;
export def GL_INT_VEC4_ARB: uint = 0x8B55;
export def GL_INVALID_ENUM: uint = 0x0500;
export def GL_INVALID_FRAMEBUFFER_OPERATION: uint = 0x0506;
export def GL_INVALID_FRAMEBUFFER_OPERATION_EXT: uint = 0x0506;
export def GL_INVALID_INDEX: uint = 0xFFFFFFFF;
export def GL_INVALID_OPERATION: uint = 0x0502;
export def GL_INVALID_VALUE: uint = 0x0501;
export def GL_INVARIANT_DATATYPE_EXT: uint = 0x87EB;
export def GL_INVARIANT_EXT: uint = 0x87C2;
export def GL_INVARIANT_VALUE_EXT: uint = 0x87EA;
export def GL_INVERSE_NV: uint = 0x862B;
export def GL_INVERSE_TRANSPOSE_NV: uint = 0x862D;
export def GL_INVERT: uint = 0x150A;
export def GL_INVERTED_SCREEN_W_REND: uint = 0x8491;
export def GL_INVERT_OVG_NV: uint = 0x92B4;
export def GL_INVERT_RGB_NV: uint = 0x92A3;
export def GL_IR_INSTRUMENT1_SGIX: uint = 0x817F;
export def GL_ISOLINES: uint = 0x8E7A;
export def GL_IS_PER_PATCH: uint = 0x92E7;
export def GL_IS_ROW_MAJOR: uint = 0x9300;
export def GL_ITALIC_BIT_NV: uint = 0x02;
export def GL_IUI_N3F_V2F_EXT: uint = 0x81AF;
export def GL_IUI_N3F_V3F_EXT: uint = 0x81B0;
export def GL_IUI_V2F_EXT: uint = 0x81AD;
export def GL_IUI_V3F_EXT: uint = 0x81AE;
export def GL_KEEP: uint = 0x1E00;
export def GL_LARGE_CCW_ARC_TO_NV: uint = 0x16;
export def GL_LARGE_CW_ARC_TO_NV: uint = 0x18;
export def GL_LAST_VERTEX_CONVENTION: uint = 0x8E4E;
export def GL_LAST_VERTEX_CONVENTION_EXT: uint = 0x8E4E;
export def GL_LAST_VIDEO_CAPTURE_STATUS_NV: uint = 0x9027;
export def GL_LAYER_NV: uint = 0x8DAA;
export def GL_LAYER_PROVOKING_VERTEX: uint = 0x825E;
export def GL_LAYOUT_COLOR_ATTACHMENT_EXT: uint = 0x958E;
export def GL_LAYOUT_DEFAULT_INTEL: uint = 0;
export def GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT: uint = 0x9531;
export def GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT: uint = 0x9530;
export def GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT: uint = 0x958F;
export def GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT: uint = 0x9590;
export def GL_LAYOUT_GENERAL_EXT: uint = 0x958D;
export def GL_LAYOUT_LINEAR_CPU_CACHED_INTEL: uint = 2;
export def GL_LAYOUT_LINEAR_INTEL: uint = 1;
export def GL_LAYOUT_SHADER_READ_ONLY_EXT: uint = 0x9591;
export def GL_LAYOUT_TRANSFER_DST_EXT: uint = 0x9593;
export def GL_LAYOUT_TRANSFER_SRC_EXT: uint = 0x9592;
export def GL_LEFT: uint = 0x0406;
export def GL_LEQUAL: uint = 0x0203;
export def GL_LERP_ATI: uint = 0x8969;
export def GL_LESS: uint = 0x0201;
export def GL_LGPU_SEPARATE_STORAGE_BIT_NVX: uint = 0x0800;
export def GL_LIGHTEN_KHR: uint = 0x9298;
export def GL_LIGHTEN_NV: uint = 0x9298;
export def GL_LIGHT_ENV_MODE_SGIX: uint = 0x8407;
export def GL_LIGHT_MODEL_COLOR_CONTROL_EXT: uint = 0x81F8;
export def GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE: uint = 0x85B0;
export def GL_LINE: uint = 0x1B01;
export def GL_LINEAR: uint = 0x2601;
export def GL_LINEARBURN_NV: uint = 0x92A5;
export def GL_LINEARDODGE_NV: uint = 0x92A4;
export def GL_LINEARLIGHT_NV: uint = 0x92A7;
export def GL_LINEAR_CLIPMAP_LINEAR_SGIX: uint = 0x8170;
export def GL_LINEAR_CLIPMAP_NEAREST_SGIX: uint = 0x844F;
export def GL_LINEAR_DETAIL_ALPHA_SGIS: uint = 0x8098;
export def GL_LINEAR_DETAIL_COLOR_SGIS: uint = 0x8099;
export def GL_LINEAR_DETAIL_SGIS: uint = 0x8097;
export def GL_LINEAR_MIPMAP_LINEAR: uint = 0x2703;
export def GL_LINEAR_MIPMAP_NEAREST: uint = 0x2701;
export def GL_LINEAR_SHARPEN_ALPHA_SGIS: uint = 0x80AE;
export def GL_LINEAR_SHARPEN_COLOR_SGIS: uint = 0x80AF;
export def GL_LINEAR_SHARPEN_SGIS: uint = 0x80AD;
export def GL_LINEAR_TILING_EXT: uint = 0x9585;
export def GL_LINES: uint = 0x0001;
export def GL_LINES_ADJACENCY: uint = 0x000A;
export def GL_LINES_ADJACENCY_ARB: uint = 0x000A;
export def GL_LINES_ADJACENCY_EXT: uint = 0x000A;
export def GL_LINE_LOOP: uint = 0x0002;
export def GL_LINE_SMOOTH: uint = 0x0B20;
export def GL_LINE_SMOOTH_HINT: uint = 0x0C52;
export def GL_LINE_STRIP: uint = 0x0003;
export def GL_LINE_STRIP_ADJACENCY: uint = 0x000B;
export def GL_LINE_STRIP_ADJACENCY_ARB: uint = 0x000B;
export def GL_LINE_STRIP_ADJACENCY_EXT: uint = 0x000B;
export def GL_LINE_TO_NV: uint = 0x04;
export def GL_LINE_WIDTH: uint = 0x0B21;
export def GL_LINE_WIDTH_COMMAND_NV: uint = 0x000D;
export def GL_LINE_WIDTH_GRANULARITY: uint = 0x0B23;
export def GL_LINE_WIDTH_RANGE: uint = 0x0B22;
export def GL_LINK_STATUS: uint = 0x8B82;
export def GL_LIST_PRIORITY_SGIX: uint = 0x8182;
export def GL_LOCAL_CONSTANT_DATATYPE_EXT: uint = 0x87ED;
export def GL_LOCAL_CONSTANT_EXT: uint = 0x87C3;
export def GL_LOCAL_CONSTANT_VALUE_EXT: uint = 0x87EC;
export def GL_LOCAL_EXT: uint = 0x87C4;
export def GL_LOCATION: uint = 0x930E;
export def GL_LOCATION_COMPONENT: uint = 0x934A;
export def GL_LOCATION_INDEX: uint = 0x930F;
export def GL_LOGIC_OP_MODE: uint = 0x0BF0;
export def GL_LOSE_CONTEXT_ON_RESET: uint = 0x8252;
export def GL_LOSE_CONTEXT_ON_RESET_ARB: uint = 0x8252;
export def GL_LOWER_LEFT: uint = 0x8CA1;
export def GL_LOW_FLOAT: uint = 0x8DF0;
export def GL_LOW_INT: uint = 0x8DF3;
export def GL_LO_BIAS_NV: uint = 0x8715;
export def GL_LO_SCALE_NV: uint = 0x870F;
export def GL_LUID_SIZE_EXT: uint = 8;
export def GL_LUMINANCE12_ALPHA12_EXT: uint = 0x8047;
export def GL_LUMINANCE12_ALPHA4_EXT: uint = 0x8046;
export def GL_LUMINANCE12_EXT: uint = 0x8041;
export def GL_LUMINANCE16F_ARB: uint = 0x881E;
export def GL_LUMINANCE16F_EXT: uint = 0x881E;
export def GL_LUMINANCE16I_EXT: uint = 0x8D8C;
export def GL_LUMINANCE16UI_EXT: uint = 0x8D7A;
export def GL_LUMINANCE16_ALPHA16_EXT: uint = 0x8048;
export def GL_LUMINANCE16_ALPHA16_SNORM: uint = 0x901A;
export def GL_LUMINANCE16_EXT: uint = 0x8042;
export def GL_LUMINANCE16_SNORM: uint = 0x9019;
export def GL_LUMINANCE32F_ARB: uint = 0x8818;
export def GL_LUMINANCE32F_EXT: uint = 0x8818;
export def GL_LUMINANCE32I_EXT: uint = 0x8D86;
export def GL_LUMINANCE32UI_EXT: uint = 0x8D74;
export def GL_LUMINANCE4_ALPHA4_EXT: uint = 0x8043;
export def GL_LUMINANCE4_EXT: uint = 0x803F;
export def GL_LUMINANCE6_ALPHA2_EXT: uint = 0x8044;
export def GL_LUMINANCE8I_EXT: uint = 0x8D92;
export def GL_LUMINANCE8UI_EXT: uint = 0x8D80;
export def GL_LUMINANCE8_ALPHA8_EXT: uint = 0x8045;
export def GL_LUMINANCE8_ALPHA8_SNORM: uint = 0x9016;
export def GL_LUMINANCE8_EXT: uint = 0x8040;
export def GL_LUMINANCE8_SNORM: uint = 0x9015;
export def GL_LUMINANCE_ALPHA16F_ARB: uint = 0x881F;
export def GL_LUMINANCE_ALPHA16F_EXT: uint = 0x881F;
export def GL_LUMINANCE_ALPHA16I_EXT: uint = 0x8D8D;
export def GL_LUMINANCE_ALPHA16UI_EXT: uint = 0x8D7B;
export def GL_LUMINANCE_ALPHA32F_ARB: uint = 0x8819;
export def GL_LUMINANCE_ALPHA32F_EXT: uint = 0x8819;
export def GL_LUMINANCE_ALPHA32I_EXT: uint = 0x8D87;
export def GL_LUMINANCE_ALPHA32UI_EXT: uint = 0x8D75;
export def GL_LUMINANCE_ALPHA8I_EXT: uint = 0x8D93;
export def GL_LUMINANCE_ALPHA8UI_EXT: uint = 0x8D81;
export def GL_LUMINANCE_ALPHA_FLOAT16_APPLE: uint = 0x881F;
export def GL_LUMINANCE_ALPHA_FLOAT16_ATI: uint = 0x881F;
export def GL_LUMINANCE_ALPHA_FLOAT32_APPLE: uint = 0x8819;
export def GL_LUMINANCE_ALPHA_FLOAT32_ATI: uint = 0x8819;
export def GL_LUMINANCE_ALPHA_INTEGER_EXT: uint = 0x8D9D;
export def GL_LUMINANCE_ALPHA_SNORM: uint = 0x9012;
export def GL_LUMINANCE_FLOAT16_APPLE: uint = 0x881E;
export def GL_LUMINANCE_FLOAT16_ATI: uint = 0x881E;
export def GL_LUMINANCE_FLOAT32_APPLE: uint = 0x8818;
export def GL_LUMINANCE_FLOAT32_ATI: uint = 0x8818;
export def GL_LUMINANCE_INTEGER_EXT: uint = 0x8D9C;
export def GL_LUMINANCE_SNORM: uint = 0x9011;
export def GL_MAD_ATI: uint = 0x8968;
export def GL_MAGNITUDE_BIAS_NV: uint = 0x8718;
export def GL_MAGNITUDE_SCALE_NV: uint = 0x8712;
export def GL_MAJOR_VERSION: uint = 0x821B;
export def GL_MANUAL_GENERATE_MIPMAP: uint = 0x8294;
export def GL_MAP1_BINORMAL_EXT: uint = 0x8446;
export def GL_MAP1_TANGENT_EXT: uint = 0x8444;
export def GL_MAP1_VERTEX_ATTRIB0_4_NV: uint = 0x8660;
export def GL_MAP1_VERTEX_ATTRIB10_4_NV: uint = 0x866A;
export def GL_MAP1_VERTEX_ATTRIB11_4_NV: uint = 0x866B;
export def GL_MAP1_VERTEX_ATTRIB12_4_NV: uint = 0x866C;
export def GL_MAP1_VERTEX_ATTRIB13_4_NV: uint = 0x866D;
export def GL_MAP1_VERTEX_ATTRIB14_4_NV: uint = 0x866E;
export def GL_MAP1_VERTEX_ATTRIB15_4_NV: uint = 0x866F;
export def GL_MAP1_VERTEX_ATTRIB1_4_NV: uint = 0x8661;
export def GL_MAP1_VERTEX_ATTRIB2_4_NV: uint = 0x8662;
export def GL_MAP1_VERTEX_ATTRIB3_4_NV: uint = 0x8663;
export def GL_MAP1_VERTEX_ATTRIB4_4_NV: uint = 0x8664;
export def GL_MAP1_VERTEX_ATTRIB5_4_NV: uint = 0x8665;
export def GL_MAP1_VERTEX_ATTRIB6_4_NV: uint = 0x8666;
export def GL_MAP1_VERTEX_ATTRIB7_4_NV: uint = 0x8667;
export def GL_MAP1_VERTEX_ATTRIB8_4_NV: uint = 0x8668;
export def GL_MAP1_VERTEX_ATTRIB9_4_NV: uint = 0x8669;
export def GL_MAP2_BINORMAL_EXT: uint = 0x8447;
export def GL_MAP2_TANGENT_EXT: uint = 0x8445;
export def GL_MAP2_VERTEX_ATTRIB0_4_NV: uint = 0x8670;
export def GL_MAP2_VERTEX_ATTRIB10_4_NV: uint = 0x867A;
export def GL_MAP2_VERTEX_ATTRIB11_4_NV: uint = 0x867B;
export def GL_MAP2_VERTEX_ATTRIB12_4_NV: uint = 0x867C;
export def GL_MAP2_VERTEX_ATTRIB13_4_NV: uint = 0x867D;
export def GL_MAP2_VERTEX_ATTRIB14_4_NV: uint = 0x867E;
export def GL_MAP2_VERTEX_ATTRIB15_4_NV: uint = 0x867F;
export def GL_MAP2_VERTEX_ATTRIB1_4_NV: uint = 0x8671;
export def GL_MAP2_VERTEX_ATTRIB2_4_NV: uint = 0x8672;
export def GL_MAP2_VERTEX_ATTRIB3_4_NV: uint = 0x8673;
export def GL_MAP2_VERTEX_ATTRIB4_4_NV: uint = 0x8674;
export def GL_MAP2_VERTEX_ATTRIB5_4_NV: uint = 0x8675;
export def GL_MAP2_VERTEX_ATTRIB6_4_NV: uint = 0x8676;
export def GL_MAP2_VERTEX_ATTRIB7_4_NV: uint = 0x8677;
export def GL_MAP2_VERTEX_ATTRIB8_4_NV: uint = 0x8678;
export def GL_MAP2_VERTEX_ATTRIB9_4_NV: uint = 0x8679;
export def GL_MAP_ATTRIB_U_ORDER_NV: uint = 0x86C3;
export def GL_MAP_ATTRIB_V_ORDER_NV: uint = 0x86C4;
export def GL_MAP_COHERENT_BIT: uint = 0x0080;
export def GL_MAP_FLUSH_EXPLICIT_BIT: uint = 0x0010;
export def GL_MAP_INVALIDATE_BUFFER_BIT: uint = 0x0008;
export def GL_MAP_INVALIDATE_RANGE_BIT: uint = 0x0004;
export def GL_MAP_PERSISTENT_BIT: uint = 0x0040;
export def GL_MAP_READ_BIT: uint = 0x0001;
export def GL_MAP_TESSELLATION_NV: uint = 0x86C2;
export def GL_MAP_UNSYNCHRONIZED_BIT: uint = 0x0020;
export def GL_MAP_WRITE_BIT: uint = 0x0002;
export def GL_MATERIAL_SIDE_HINT_PGI: uint = 0x1A22C;
export def GL_MATRIX0_ARB: uint = 0x88C0;
export def GL_MATRIX0_NV: uint = 0x8630;
export def GL_MATRIX10_ARB: uint = 0x88CA;
export def GL_MATRIX11_ARB: uint = 0x88CB;
export def GL_MATRIX12_ARB: uint = 0x88CC;
export def GL_MATRIX13_ARB: uint = 0x88CD;
export def GL_MATRIX14_ARB: uint = 0x88CE;
export def GL_MATRIX15_ARB: uint = 0x88CF;
export def GL_MATRIX16_ARB: uint = 0x88D0;
export def GL_MATRIX17_ARB: uint = 0x88D1;
export def GL_MATRIX18_ARB: uint = 0x88D2;
export def GL_MATRIX19_ARB: uint = 0x88D3;
export def GL_MATRIX1_ARB: uint = 0x88C1;
export def GL_MATRIX1_NV: uint = 0x8631;
export def GL_MATRIX20_ARB: uint = 0x88D4;
export def GL_MATRIX21_ARB: uint = 0x88D5;
export def GL_MATRIX22_ARB: uint = 0x88D6;
export def GL_MATRIX23_ARB: uint = 0x88D7;
export def GL_MATRIX24_ARB: uint = 0x88D8;
export def GL_MATRIX25_ARB: uint = 0x88D9;
export def GL_MATRIX26_ARB: uint = 0x88DA;
export def GL_MATRIX27_ARB: uint = 0x88DB;
export def GL_MATRIX28_ARB: uint = 0x88DC;
export def GL_MATRIX29_ARB: uint = 0x88DD;
export def GL_MATRIX2_ARB: uint = 0x88C2;
export def GL_MATRIX2_NV: uint = 0x8632;
export def GL_MATRIX30_ARB: uint = 0x88DE;
export def GL_MATRIX31_ARB: uint = 0x88DF;
export def GL_MATRIX3_ARB: uint = 0x88C3;
export def GL_MATRIX3_NV: uint = 0x8633;
export def GL_MATRIX4_ARB: uint = 0x88C4;
export def GL_MATRIX4_NV: uint = 0x8634;
export def GL_MATRIX5_ARB: uint = 0x88C5;
export def GL_MATRIX5_NV: uint = 0x8635;
export def GL_MATRIX6_ARB: uint = 0x88C6;
export def GL_MATRIX6_NV: uint = 0x8636;
export def GL_MATRIX7_ARB: uint = 0x88C7;
export def GL_MATRIX7_NV: uint = 0x8637;
export def GL_MATRIX8_ARB: uint = 0x88C8;
export def GL_MATRIX9_ARB: uint = 0x88C9;
export def GL_MATRIX_EXT: uint = 0x87C0;
export def GL_MATRIX_INDEX_ARRAY_ARB: uint = 0x8844;
export def GL_MATRIX_INDEX_ARRAY_POINTER_ARB: uint = 0x8849;
export def GL_MATRIX_INDEX_ARRAY_SIZE_ARB: uint = 0x8846;
export def GL_MATRIX_INDEX_ARRAY_STRIDE_ARB: uint = 0x8848;
export def GL_MATRIX_INDEX_ARRAY_TYPE_ARB: uint = 0x8847;
export def GL_MATRIX_PALETTE_ARB: uint = 0x8840;
export def GL_MATRIX_STRIDE: uint = 0x92FF;
export def GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI: uint = 0x00200000;
export def GL_MAT_AMBIENT_BIT_PGI: uint = 0x00100000;
export def GL_MAT_COLOR_INDEXES_BIT_PGI: uint = 0x01000000;
export def GL_MAT_DIFFUSE_BIT_PGI: uint = 0x00400000;
export def GL_MAT_EMISSION_BIT_PGI: uint = 0x00800000;
export def GL_MAT_SHININESS_BIT_PGI: uint = 0x02000000;
export def GL_MAT_SPECULAR_BIT_PGI: uint = 0x04000000;
export def GL_MAX: uint = 0x8008;
export def GL_MAX_3D_TEXTURE_SIZE: uint = 0x8073;
export def GL_MAX_3D_TEXTURE_SIZE_EXT: uint = 0x8073;
export def GL_MAX_4D_TEXTURE_SIZE_SGIS: uint = 0x8138;
export def GL_MAX_ACTIVE_LIGHTS_SGIX: uint = 0x8405;
export def GL_MAX_ARRAY_TEXTURE_LAYERS: uint = 0x88FF;
export def GL_MAX_ARRAY_TEXTURE_LAYERS_EXT: uint = 0x88FF;
export def GL_MAX_ASYNC_DRAW_PIXELS_SGIX: uint = 0x8360;
export def GL_MAX_ASYNC_HISTOGRAM_SGIX: uint = 0x832D;
export def GL_MAX_ASYNC_READ_PIXELS_SGIX: uint = 0x8361;
export def GL_MAX_ASYNC_TEX_IMAGE_SGIX: uint = 0x835F;
export def GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: uint = 0x92DC;
export def GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: uint = 0x92D8;
export def GL_MAX_BINDABLE_UNIFORM_SIZE_EXT: uint = 0x8DED;
export def GL_MAX_CLIPMAP_DEPTH_SGIX: uint = 0x8177;
export def GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX: uint = 0x8178;
export def GL_MAX_CLIP_DISTANCES: uint = 0x0D32;
export def GL_MAX_COARSE_FRAGMENT_SAMPLES_NV: uint = 0x955F;
export def GL_MAX_COLOR_ATTACHMENTS: uint = 0x8CDF;
export def GL_MAX_COLOR_ATTACHMENTS_EXT: uint = 0x8CDF;
export def GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD: uint = 0x91B3;
export def GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD: uint = 0x91B4;
export def GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI: uint = 0x80B3;
export def GL_MAX_COLOR_TEXTURE_SAMPLES: uint = 0x910E;
export def GL_MAX_COMBINED_ATOMIC_COUNTERS: uint = 0x92D7;
export def GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: uint = 0x92D1;
export def GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES: uint = 0x82FA;
export def GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: uint = 0x8266;
export def GL_MAX_COMBINED_DIMENSIONS: uint = 0x8282;
export def GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: uint = 0x8A33;
export def GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: uint = 0x8A32;
export def GL_MAX_COMBINED_IMAGE_UNIFORMS: uint = 0x90CF;
export def GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: uint = 0x8F39;
export def GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT: uint = 0x8F39;
export def GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV: uint = 0x8E67;
export def GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: uint = 0x8F39;
export def GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: uint = 0x90DC;
export def GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV: uint = 0x8E6F;
export def GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: uint = 0x8E1E;
export def GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: uint = 0x8E1F;
export def GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: uint = 0x8B4D;
export def GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB: uint = 0x8B4D;
export def GL_MAX_COMBINED_UNIFORM_BLOCKS: uint = 0x8A2E;
export def GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: uint = 0x8A31;
export def GL_MAX_COMPUTE_ATOMIC_COUNTERS: uint = 0x8265;
export def GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: uint = 0x8264;
export def GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB: uint = 0x90EB;
export def GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB: uint = 0x91BF;
export def GL_MAX_COMPUTE_IMAGE_UNIFORMS: uint = 0x91BD;
export def GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: uint = 0x90DB;
export def GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: uint = 0x8262;
export def GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: uint = 0x91BC;
export def GL_MAX_COMPUTE_UNIFORM_BLOCKS: uint = 0x91BB;
export def GL_MAX_COMPUTE_UNIFORM_COMPONENTS: uint = 0x8263;
export def GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB: uint = 0x9344;
export def GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB: uint = 0x9345;
export def GL_MAX_COMPUTE_WORK_GROUP_COUNT: uint = 0x91BE;
export def GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: uint = 0x90EB;
export def GL_MAX_COMPUTE_WORK_GROUP_SIZE: uint = 0x91BF;
export def GL_MAX_CONVOLUTION_HEIGHT_EXT: uint = 0x801B;
export def GL_MAX_CONVOLUTION_WIDTH_EXT: uint = 0x801A;
export def GL_MAX_CUBE_MAP_TEXTURE_SIZE: uint = 0x851C;
export def GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB: uint = 0x851C;
export def GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT: uint = 0x851C;
export def GL_MAX_CULL_DISTANCES: uint = 0x82F9;
export def GL_MAX_DEBUG_GROUP_STACK_DEPTH: uint = 0x826C;
export def GL_MAX_DEBUG_LOGGED_MESSAGES: uint = 0x9144;
export def GL_MAX_DEBUG_LOGGED_MESSAGES_AMD: uint = 0x9144;
export def GL_MAX_DEBUG_LOGGED_MESSAGES_ARB: uint = 0x9144;
export def GL_MAX_DEBUG_MESSAGE_LENGTH: uint = 0x9143;
export def GL_MAX_DEBUG_MESSAGE_LENGTH_AMD: uint = 0x9143;
export def GL_MAX_DEBUG_MESSAGE_LENGTH_ARB: uint = 0x9143;
export def GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV: uint = 0x90D1;
export def GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV: uint = 0x90D0;
export def GL_MAX_DEFORMATION_ORDER_SGIX: uint = 0x8197;
export def GL_MAX_DEPTH: uint = 0x8280;
export def GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD: uint = 0x91B5;
export def GL_MAX_DEPTH_TEXTURE_SAMPLES: uint = 0x910F;
export def GL_MAX_DETACHED_BUFFERS_NV: uint = 0x95AD;
export def GL_MAX_DETACHED_TEXTURES_NV: uint = 0x95AC;
export def GL_MAX_DRAW_BUFFERS: uint = 0x8824;
export def GL_MAX_DRAW_BUFFERS_ARB: uint = 0x8824;
export def GL_MAX_DRAW_BUFFERS_ATI: uint = 0x8824;
export def GL_MAX_DRAW_MESH_TASKS_COUNT_NV: uint = 0x953D;
export def GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: uint = 0x88FC;
export def GL_MAX_ELEMENTS_INDICES: uint = 0x80E9;
export def GL_MAX_ELEMENTS_INDICES_EXT: uint = 0x80E9;
export def GL_MAX_ELEMENTS_VERTICES: uint = 0x80E8;
export def GL_MAX_ELEMENTS_VERTICES_EXT: uint = 0x80E8;
export def GL_MAX_ELEMENT_INDEX: uint = 0x8D6B;
export def GL_MAX_EXT: uint = 0x8008;
export def GL_MAX_FOG_FUNC_POINTS_SGIS: uint = 0x812C;
export def GL_MAX_FRAGMENT_ATOMIC_COUNTERS: uint = 0x92D6;
export def GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: uint = 0x92D0;
export def GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT: uint = 0x8DE3;
export def GL_MAX_FRAGMENT_IMAGE_UNIFORMS: uint = 0x90CE;
export def GL_MAX_FRAGMENT_INPUT_COMPONENTS: uint = 0x9125;
export def GL_MAX_FRAGMENT_INTERPOLATION_OFFSET: uint = 0x8E5C;
export def GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV: uint = 0x8E5C;
export def GL_MAX_FRAGMENT_LIGHTS_SGIX: uint = 0x8404;
export def GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV: uint = 0x8868;
export def GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: uint = 0x90DA;
export def GL_MAX_FRAGMENT_UNIFORM_BLOCKS: uint = 0x8A2D;
export def GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: uint = 0x8B49;
export def GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB: uint = 0x8B49;
export def GL_MAX_FRAGMENT_UNIFORM_VECTORS: uint = 0x8DFD;
export def GL_MAX_FRAMEBUFFER_HEIGHT: uint = 0x9316;
export def GL_MAX_FRAMEBUFFER_LAYERS: uint = 0x9317;
export def GL_MAX_FRAMEBUFFER_SAMPLES: uint = 0x9318;
export def GL_MAX_FRAMEBUFFER_WIDTH: uint = 0x9315;
export def GL_MAX_FRAMEZOOM_FACTOR_SGIX: uint = 0x818D;
export def GL_MAX_GENERAL_COMBINERS_NV: uint = 0x854D;
export def GL_MAX_GEOMETRY_ATOMIC_COUNTERS: uint = 0x92D5;
export def GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: uint = 0x92CF;
export def GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT: uint = 0x8DE4;
export def GL_MAX_GEOMETRY_IMAGE_UNIFORMS: uint = 0x90CD;
export def GL_MAX_GEOMETRY_INPUT_COMPONENTS: uint = 0x9123;
export def GL_MAX_GEOMETRY_OUTPUT_COMPONENTS: uint = 0x9124;
export def GL_MAX_GEOMETRY_OUTPUT_VERTICES: uint = 0x8DE0;
export def GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB: uint = 0x8DE0;
export def GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT: uint = 0x8DE0;
export def GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV: uint = 0x8E5A;
export def GL_MAX_GEOMETRY_SHADER_INVOCATIONS: uint = 0x8E5A;
export def GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: uint = 0x90D7;
export def GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: uint = 0x8C29;
export def GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB: uint = 0x8C29;
export def GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT: uint = 0x8C29;
export def GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: uint = 0x8DE1;
export def GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB: uint = 0x8DE1;
export def GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT: uint = 0x8DE1;
export def GL_MAX_GEOMETRY_UNIFORM_BLOCKS: uint = 0x8A2C;
export def GL_MAX_GEOMETRY_UNIFORM_COMPONENTS: uint = 0x8DDF;
export def GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB: uint = 0x8DDF;
export def GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT: uint = 0x8DDF;
export def GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB: uint = 0x8DDD;
export def GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT: uint = 0x8DDD;
export def GL_MAX_HEIGHT: uint = 0x827F;
export def GL_MAX_IMAGE_SAMPLES: uint = 0x906D;
export def GL_MAX_IMAGE_SAMPLES_EXT: uint = 0x906D;
export def GL_MAX_IMAGE_UNITS: uint = 0x8F38;
export def GL_MAX_IMAGE_UNITS_EXT: uint = 0x8F38;
export def GL_MAX_INTEGER_SAMPLES: uint = 0x9110;
export def GL_MAX_LABEL_LENGTH: uint = 0x82E8;
export def GL_MAX_LAYERS: uint = 0x8281;
export def GL_MAX_LGPU_GPUS_NVX: uint = 0x92BA;
export def GL_MAX_MAP_TESSELLATION_NV: uint = 0x86D6;
export def GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB: uint = 0x8841;
export def GL_MAX_MESH_ATOMIC_COUNTERS_NV: uint = 0x8E65;
export def GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV: uint = 0x8E64;
export def GL_MAX_MESH_IMAGE_UNIFORMS_NV: uint = 0x8E62;
export def GL_MAX_MESH_OUTPUT_PRIMITIVES_NV: uint = 0x9539;
export def GL_MAX_MESH_OUTPUT_VERTICES_NV: uint = 0x9538;
export def GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV: uint = 0x8E66;
export def GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV: uint = 0x8E61;
export def GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV: uint = 0x9536;
export def GL_MAX_MESH_UNIFORM_BLOCKS_NV: uint = 0x8E60;
export def GL_MAX_MESH_UNIFORM_COMPONENTS_NV: uint = 0x8E63;
export def GL_MAX_MESH_VIEWS_NV: uint = 0x9557;
export def GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV: uint = 0x95A2;
export def GL_MAX_MESH_WORK_GROUP_SIZE_NV: uint = 0x953B;
export def GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV: uint = 0x8E11;
export def GL_MAX_NAME_LENGTH: uint = 0x92F6;
export def GL_MAX_NUM_ACTIVE_VARIABLES: uint = 0x92F7;
export def GL_MAX_NUM_COMPATIBLE_SUBROUTINES: uint = 0x92F8;
export def GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT: uint = 0x87CA;
export def GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT: uint = 0x87CD;
export def GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT: uint = 0x87CE;
export def GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: uint = 0x87CC;
export def GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT: uint = 0x87CB;
export def GL_MAX_PALETTE_MATRICES_ARB: uint = 0x8842;
export def GL_MAX_PATCH_VERTICES: uint = 0x8E7D;
export def GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT: uint = 0x8337;
export def GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI: uint = 0x87F1;
export def GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB: uint = 0x88B1;
export def GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB: uint = 0x880B;
export def GL_MAX_PROGRAM_ATTRIBS_ARB: uint = 0x88AD;
export def GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV: uint = 0x8908;
export def GL_MAX_PROGRAM_CALL_DEPTH_NV: uint = 0x88F5;
export def GL_MAX_PROGRAM_ENV_PARAMETERS_ARB: uint = 0x88B5;
export def GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV: uint = 0x88F4;
export def GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV: uint = 0x8DA5;
export def GL_MAX_PROGRAM_GENERIC_RESULTS_NV: uint = 0x8DA6;
export def GL_MAX_PROGRAM_IF_DEPTH_NV: uint = 0x88F6;
export def GL_MAX_PROGRAM_INSTRUCTIONS_ARB: uint = 0x88A1;
export def GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB: uint = 0x88B4;
export def GL_MAX_PROGRAM_LOOP_COUNT_NV: uint = 0x88F8;
export def GL_MAX_PROGRAM_LOOP_DEPTH_NV: uint = 0x88F7;
export def GL_MAX_PROGRAM_MATRICES_ARB: uint = 0x862F;
export def GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB: uint = 0x862E;
export def GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: uint = 0x88B3;
export def GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: uint = 0x880E;
export def GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB: uint = 0x88AF;
export def GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB: uint = 0x88A3;
export def GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB: uint = 0x88AB;
export def GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB: uint = 0x88A7;
export def GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: uint = 0x8810;
export def GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: uint = 0x880F;
export def GL_MAX_PROGRAM_OUTPUT_VERTICES_NV: uint = 0x8C27;
export def GL_MAX_PROGRAM_PARAMETERS_ARB: uint = 0x88A9;
export def GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV: uint = 0x8DA0;
export def GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV: uint = 0x8DA1;
export def GL_MAX_PROGRAM_PATCH_ATTRIBS_NV: uint = 0x86D8;
export def GL_MAX_PROGRAM_RESULT_COMPONENTS_NV: uint = 0x8909;
export def GL_MAX_PROGRAM_SUBROUTINE_NUM_NV: uint = 0x8F45;
export def GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV: uint = 0x8F44;
export def GL_MAX_PROGRAM_TEMPORARIES_ARB: uint = 0x88A5;
export def GL_MAX_PROGRAM_TEXEL_OFFSET: uint = 0x8905;
export def GL_MAX_PROGRAM_TEXEL_OFFSET_EXT: uint = 0x8905;
export def GL_MAX_PROGRAM_TEXEL_OFFSET_NV: uint = 0x8905;
export def GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB: uint = 0x8F9F;
export def GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: uint = 0x8E5F;
export def GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV: uint = 0x8E5F;
export def GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB: uint = 0x880D;
export def GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB: uint = 0x880C;
export def GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV: uint = 0x8C28;
export def GL_MAX_RASTER_SAMPLES_EXT: uint = 0x9329;
export def GL_MAX_RATIONAL_EVAL_ORDER_NV: uint = 0x86D7;
export def GL_MAX_RECTANGLE_TEXTURE_SIZE: uint = 0x84F8;
export def GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB: uint = 0x84F8;
export def GL_MAX_RECTANGLE_TEXTURE_SIZE_NV: uint = 0x84F8;
export def GL_MAX_RENDERBUFFER_SIZE: uint = 0x84E8;
export def GL_MAX_RENDERBUFFER_SIZE_EXT: uint = 0x84E8;
export def GL_MAX_SAMPLES: uint = 0x8D57;
export def GL_MAX_SAMPLES_EXT: uint = 0x8D57;
export def GL_MAX_SAMPLE_MASK_WORDS: uint = 0x8E59;
export def GL_MAX_SAMPLE_MASK_WORDS_NV: uint = 0x8E59;
export def GL_MAX_SERVER_WAIT_TIMEOUT: uint = 0x9111;
export def GL_MAX_SHADER_BUFFER_ADDRESS_NV: uint = 0x8F35;
export def GL_MAX_SHADER_COMPILER_THREADS_ARB: uint = 0x91B0;
export def GL_MAX_SHADER_COMPILER_THREADS_KHR: uint = 0x91B0;
export def GL_MAX_SHADER_STORAGE_BLOCK_SIZE: uint = 0x90DE;
export def GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: uint = 0x90DD;
export def GL_MAX_SHININESS_NV: uint = 0x8504;
export def GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD: uint = 0x9199;
export def GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB: uint = 0x9199;
export def GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS: uint = 0x919A;
export def GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB: uint = 0x919A;
export def GL_MAX_SPARSE_TEXTURE_SIZE_AMD: uint = 0x9198;
export def GL_MAX_SPARSE_TEXTURE_SIZE_ARB: uint = 0x9198;
export def GL_MAX_SPOT_EXPONENT_NV: uint = 0x8505;
export def GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV: uint = 0x9349;
export def GL_MAX_SUBROUTINES: uint = 0x8DE7;
export def GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS: uint = 0x8DE8;
export def GL_MAX_TASK_ATOMIC_COUNTERS_NV: uint = 0x8E6D;
export def GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV: uint = 0x8E6C;
export def GL_MAX_TASK_IMAGE_UNIFORMS_NV: uint = 0x8E6A;
export def GL_MAX_TASK_OUTPUT_COUNT_NV: uint = 0x953A;
export def GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV: uint = 0x8E6E;
export def GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV: uint = 0x8E69;
export def GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV: uint = 0x9537;
export def GL_MAX_TASK_UNIFORM_BLOCKS_NV: uint = 0x8E68;
export def GL_MAX_TASK_UNIFORM_COMPONENTS_NV: uint = 0x8E6B;
export def GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV: uint = 0x95A3;
export def GL_MAX_TASK_WORK_GROUP_SIZE_NV: uint = 0x953C;
export def GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS: uint = 0x92D3;
export def GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: uint = 0x92CD;
export def GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS: uint = 0x90CB;
export def GL_MAX_TESS_CONTROL_INPUT_COMPONENTS: uint = 0x886C;
export def GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS: uint = 0x8E83;
export def GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: uint = 0x90D8;
export def GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: uint = 0x8E81;
export def GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: uint = 0x8E85;
export def GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS: uint = 0x8E89;
export def GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS: uint = 0x8E7F;
export def GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS: uint = 0x92D4;
export def GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: uint = 0x92CE;
export def GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS: uint = 0x90CC;
export def GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS: uint = 0x886D;
export def GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: uint = 0x8E86;
export def GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: uint = 0x90D9;
export def GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: uint = 0x8E82;
export def GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS: uint = 0x8E8A;
export def GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: uint = 0x8E80;
export def GL_MAX_TESS_GEN_LEVEL: uint = 0x8E7E;
export def GL_MAX_TESS_PATCH_COMPONENTS: uint = 0x8E84;
export def GL_MAX_TEXTURE_BUFFER_SIZE: uint = 0x8C2B;
export def GL_MAX_TEXTURE_BUFFER_SIZE_ARB: uint = 0x8C2B;
export def GL_MAX_TEXTURE_BUFFER_SIZE_EXT: uint = 0x8C2B;
export def GL_MAX_TEXTURE_COORDS_ARB: uint = 0x8871;
export def GL_MAX_TEXTURE_COORDS_NV: uint = 0x8871;
export def GL_MAX_TEXTURE_IMAGE_UNITS: uint = 0x8872;
export def GL_MAX_TEXTURE_IMAGE_UNITS_ARB: uint = 0x8872;
export def GL_MAX_TEXTURE_IMAGE_UNITS_NV: uint = 0x8872;
export def GL_MAX_TEXTURE_LOD_BIAS: uint = 0x84FD;
export def GL_MAX_TEXTURE_LOD_BIAS_EXT: uint = 0x84FD;
export def GL_MAX_TEXTURE_MAX_ANISOTROPY: uint = 0x84FF;
export def GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT: uint = 0x84FF;
export def GL_MAX_TEXTURE_SIZE: uint = 0x0D33;
export def GL_MAX_TEXTURE_UNITS_ARB: uint = 0x84E2;
export def GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV: uint = 0x95B6;
export def GL_MAX_TRACK_MATRICES_NV: uint = 0x862F;
export def GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV: uint = 0x862E;
export def GL_MAX_TRANSFORM_FEEDBACK_BUFFERS: uint = 0x8E70;
export def GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: uint = 0x8C8A;
export def GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT: uint = 0x8C8A;
export def GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV: uint = 0x8C8A;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: uint = 0x8C8B;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT: uint = 0x8C8B;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV: uint = 0x8C8B;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: uint = 0x8C80;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT: uint = 0x8C80;
export def GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV: uint = 0x8C80;
export def GL_MAX_UNIFORM_BLOCK_SIZE: uint = 0x8A30;
export def GL_MAX_UNIFORM_BUFFER_BINDINGS: uint = 0x8A2F;
export def GL_MAX_UNIFORM_LOCATIONS: uint = 0x826E;
export def GL_MAX_VARYING_COMPONENTS: uint = 0x8B4B;
export def GL_MAX_VARYING_COMPONENTS_EXT: uint = 0x8B4B;
export def GL_MAX_VARYING_FLOATS: uint = 0x8B4B;
export def GL_MAX_VARYING_FLOATS_ARB: uint = 0x8B4B;
export def GL_MAX_VARYING_VECTORS: uint = 0x8DFC;
export def GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV: uint = 0x8520;
export def GL_MAX_VERTEX_ATOMIC_COUNTERS: uint = 0x92D2;
export def GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: uint = 0x92CC;
export def GL_MAX_VERTEX_ATTRIBS: uint = 0x8869;
export def GL_MAX_VERTEX_ATTRIBS_ARB: uint = 0x8869;
export def GL_MAX_VERTEX_ATTRIB_BINDINGS: uint = 0x82DA;
export def GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: uint = 0x82D9;
export def GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT: uint = 0x8DE2;
export def GL_MAX_VERTEX_HINT_PGI: uint = 0x1A22D;
export def GL_MAX_VERTEX_IMAGE_UNIFORMS: uint = 0x90CA;
export def GL_MAX_VERTEX_OUTPUT_COMPONENTS: uint = 0x9122;
export def GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT: uint = 0x87C5;
export def GL_MAX_VERTEX_SHADER_INVARIANTS_EXT: uint = 0x87C7;
export def GL_MAX_VERTEX_SHADER_LOCALS_EXT: uint = 0x87C9;
export def GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: uint = 0x87C8;
export def GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: uint = 0x90D6;
export def GL_MAX_VERTEX_SHADER_VARIANTS_EXT: uint = 0x87C6;
export def GL_MAX_VERTEX_STREAMS: uint = 0x8E71;
export def GL_MAX_VERTEX_STREAMS_ATI: uint = 0x876B;
export def GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: uint = 0x8B4C;
export def GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB: uint = 0x8B4C;
export def GL_MAX_VERTEX_UNIFORM_BLOCKS: uint = 0x8A2B;
export def GL_MAX_VERTEX_UNIFORM_COMPONENTS: uint = 0x8B4A;
export def GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB: uint = 0x8B4A;
export def GL_MAX_VERTEX_UNIFORM_VECTORS: uint = 0x8DFB;
export def GL_MAX_VERTEX_UNITS_ARB: uint = 0x86A4;
export def GL_MAX_VERTEX_VARYING_COMPONENTS_ARB: uint = 0x8DDE;
export def GL_MAX_VERTEX_VARYING_COMPONENTS_EXT: uint = 0x8DDE;
export def GL_MAX_VIEWPORTS: uint = 0x825B;
export def GL_MAX_VIEWPORT_DIMS: uint = 0x0D3A;
export def GL_MAX_VIEWS_OVR: uint = 0x9631;
export def GL_MAX_WIDTH: uint = 0x827E;
export def GL_MAX_WINDOW_RECTANGLES_EXT: uint = 0x8F14;
export def GL_MEDIUM_FLOAT: uint = 0x8DF1;
export def GL_MEDIUM_INT: uint = 0x8DF4;
export def GL_MEMORY_ATTACHABLE_ALIGNMENT_NV: uint = 0x95A6;
export def GL_MEMORY_ATTACHABLE_NV: uint = 0x95A8;
export def GL_MEMORY_ATTACHABLE_SIZE_NV: uint = 0x95A7;
export def GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV: uint = 0x9543;
export def GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV: uint = 0x92DF;
export def GL_MESH_OUTPUT_TYPE_NV: uint = 0x957B;
export def GL_MESH_PRIMITIVES_OUT_NV: uint = 0x957A;
export def GL_MESH_SHADER_BIT_NV: uint = 0x00000040;
export def GL_MESH_SHADER_NV: uint = 0x9559;
export def GL_MESH_SUBROUTINE_NV: uint = 0x957C;
export def GL_MESH_SUBROUTINE_UNIFORM_NV: uint = 0x957E;
export def GL_MESH_VERTICES_OUT_NV: uint = 0x9579;
export def GL_MESH_WORK_GROUP_SIZE_NV: uint = 0x953E;
export def GL_MIN: uint = 0x8007;
export def GL_MINMAX_EXT: uint = 0x802E;
export def GL_MINMAX_FORMAT_EXT: uint = 0x802F;
export def GL_MINMAX_SINK_EXT: uint = 0x8030;
export def GL_MINOR_VERSION: uint = 0x821C;
export def GL_MINUS_CLAMPED_NV: uint = 0x92B3;
export def GL_MINUS_NV: uint = 0x929F;
export def GL_MIN_EXT: uint = 0x8007;
export def GL_MIN_FRAGMENT_INTERPOLATION_OFFSET: uint = 0x8E5B;
export def GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV: uint = 0x8E5B;
export def GL_MIN_LOD_WARNING_AMD: uint = 0x919C;
export def GL_MIN_MAP_BUFFER_ALIGNMENT: uint = 0x90BC;
export def GL_MIN_PROGRAM_TEXEL_OFFSET: uint = 0x8904;
export def GL_MIN_PROGRAM_TEXEL_OFFSET_EXT: uint = 0x8904;
export def GL_MIN_PROGRAM_TEXEL_OFFSET_NV: uint = 0x8904;
export def GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: uint = 0x8E5E;
export def GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV: uint = 0x8E5E;
export def GL_MIN_SAMPLE_SHADING_VALUE_ARB: uint = 0x8C37;
export def GL_MIN_SPARSE_LEVEL_AMD: uint = 0x919B;
export def GL_MIPMAP: uint = 0x8293;
export def GL_MIRRORED_REPEAT: uint = 0x8370;
export def GL_MIRRORED_REPEAT_ARB: uint = 0x8370;
export def GL_MIRRORED_REPEAT_IBM: uint = 0x8370;
export def GL_MIRROR_CLAMP_ATI: uint = 0x8742;
export def GL_MIRROR_CLAMP_EXT: uint = 0x8742;
export def GL_MIRROR_CLAMP_TO_BORDER_EXT: uint = 0x8912;
export def GL_MIRROR_CLAMP_TO_EDGE: uint = 0x8743;
export def GL_MIRROR_CLAMP_TO_EDGE_ATI: uint = 0x8743;
export def GL_MIRROR_CLAMP_TO_EDGE_EXT: uint = 0x8743;
export def GL_MITER_REVERT_NV: uint = 0x90A7;
export def GL_MITER_TRUNCATE_NV: uint = 0x90A8;
export def GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV: uint = 0x932F;
export def GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV: uint = 0x9330;
export def GL_MODELVIEW0_ARB: uint = 0x1700;
export def GL_MODELVIEW0_EXT: uint = 0x1700;
export def GL_MODELVIEW0_MATRIX_EXT: uint = 0x0BA6;
export def GL_MODELVIEW0_STACK_DEPTH_EXT: uint = 0x0BA3;
export def GL_MODELVIEW10_ARB: uint = 0x872A;
export def GL_MODELVIEW11_ARB: uint = 0x872B;
export def GL_MODELVIEW12_ARB: uint = 0x872C;
export def GL_MODELVIEW13_ARB: uint = 0x872D;
export def GL_MODELVIEW14_ARB: uint = 0x872E;
export def GL_MODELVIEW15_ARB: uint = 0x872F;
export def GL_MODELVIEW16_ARB: uint = 0x8730;
export def GL_MODELVIEW17_ARB: uint = 0x8731;
export def GL_MODELVIEW18_ARB: uint = 0x8732;
export def GL_MODELVIEW19_ARB: uint = 0x8733;
export def GL_MODELVIEW1_ARB: uint = 0x850A;
export def GL_MODELVIEW1_EXT: uint = 0x850A;
export def GL_MODELVIEW1_MATRIX_EXT: uint = 0x8506;
export def GL_MODELVIEW1_STACK_DEPTH_EXT: uint = 0x8502;
export def GL_MODELVIEW20_ARB: uint = 0x8734;
export def GL_MODELVIEW21_ARB: uint = 0x8735;
export def GL_MODELVIEW22_ARB: uint = 0x8736;
export def GL_MODELVIEW23_ARB: uint = 0x8737;
export def GL_MODELVIEW24_ARB: uint = 0x8738;
export def GL_MODELVIEW25_ARB: uint = 0x8739;
export def GL_MODELVIEW26_ARB: uint = 0x873A;
export def GL_MODELVIEW27_ARB: uint = 0x873B;
export def GL_MODELVIEW28_ARB: uint = 0x873C;
export def GL_MODELVIEW29_ARB: uint = 0x873D;
export def GL_MODELVIEW2_ARB: uint = 0x8722;
export def GL_MODELVIEW30_ARB: uint = 0x873E;
export def GL_MODELVIEW31_ARB: uint = 0x873F;
export def GL_MODELVIEW3_ARB: uint = 0x8723;
export def GL_MODELVIEW4_ARB: uint = 0x8724;
export def GL_MODELVIEW5_ARB: uint = 0x8725;
export def GL_MODELVIEW6_ARB: uint = 0x8726;
export def GL_MODELVIEW7_ARB: uint = 0x8727;
export def GL_MODELVIEW8_ARB: uint = 0x8728;
export def GL_MODELVIEW9_ARB: uint = 0x8729;
export def GL_MODELVIEW_PROJECTION_NV: uint = 0x8629;
export def GL_MODULATE_ADD_ATI: uint = 0x8744;
export def GL_MODULATE_SIGNED_ADD_ATI: uint = 0x8745;
export def GL_MODULATE_SUBTRACT_ATI: uint = 0x8746;
export def GL_MOVE_TO_CONTINUES_NV: uint = 0x90B6;
export def GL_MOVE_TO_NV: uint = 0x02;
export def GL_MOVE_TO_RESETS_NV: uint = 0x90B5;
export def GL_MOV_ATI: uint = 0x8961;
export def GL_MULTICAST_GPUS_NV: uint = 0x92BA;
export def GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV: uint = 0x9549;
export def GL_MULTIPLY_KHR: uint = 0x9294;
export def GL_MULTIPLY_NV: uint = 0x9294;
export def GL_MULTISAMPLE: uint = 0x809D;
export def GL_MULTISAMPLES_NV: uint = 0x9371;
export def GL_MULTISAMPLE_3DFX: uint = 0x86B2;
export def GL_MULTISAMPLE_ARB: uint = 0x809D;
export def GL_MULTISAMPLE_BIT_3DFX: uint = 0x20000000;
export def GL_MULTISAMPLE_BIT_ARB: uint = 0x20000000;
export def GL_MULTISAMPLE_BIT_EXT: uint = 0x20000000;
export def GL_MULTISAMPLE_COVERAGE_MODES_NV: uint = 0x8E12;
export def GL_MULTISAMPLE_EXT: uint = 0x809D;
export def GL_MULTISAMPLE_FILTER_HINT_NV: uint = 0x8534;
export def GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB: uint = 0x9382;
export def GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB: uint = 0x9381;
export def GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT: uint = 0x932B;
export def GL_MULTISAMPLE_SGIS: uint = 0x809D;
export def GL_MUL_ATI: uint = 0x8964;
export def GL_MVP_MATRIX_EXT: uint = 0x87E3;
export def GL_NAMED_STRING_LENGTH_ARB: uint = 0x8DE9;
export def GL_NAMED_STRING_TYPE_ARB: uint = 0x8DEA;
export def GL_NAME_LENGTH: uint = 0x92F9;
export def GL_NAND: uint = 0x150E;
export def GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI: uint = 0x1A203;
export def GL_NATIVE_GRAPHICS_END_HINT_PGI: uint = 0x1A204;
export def GL_NATIVE_GRAPHICS_HANDLE_PGI: uint = 0x1A202;
export def GL_NEAREST: uint = 0x2600;
export def GL_NEAREST_CLIPMAP_LINEAR_SGIX: uint = 0x844E;
export def GL_NEAREST_CLIPMAP_NEAREST_SGIX: uint = 0x844D;
export def GL_NEAREST_MIPMAP_LINEAR: uint = 0x2702;
export def GL_NEAREST_MIPMAP_NEAREST: uint = 0x2700;
export def GL_NEGATE_BIT_ATI: uint = 0x00000004;
export def GL_NEGATIVE_ONE_EXT: uint = 0x87DF;
export def GL_NEGATIVE_ONE_TO_ONE: uint = 0x935E;
export def GL_NEGATIVE_W_EXT: uint = 0x87DC;
export def GL_NEGATIVE_X_EXT: uint = 0x87D9;
export def GL_NEGATIVE_Y_EXT: uint = 0x87DA;
export def GL_NEGATIVE_Z_EXT: uint = 0x87DB;
export def GL_NEVER: uint = 0x0200;
export def GL_NEXT_BUFFER_NV: int = -2;
export def GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV: uint = 0x9025;
export def GL_NICEST: uint = 0x1102;
export def GL_NONE: uint = 0;
export def GL_NOOP: uint = 0x1505;
export def GL_NOP_COMMAND_NV: uint = 0x0001;
export def GL_NOR: uint = 0x1508;
export def GL_NORMALIZED_RANGE_EXT: uint = 0x87E0;
export def GL_NORMAL_ARRAY_ADDRESS_NV: uint = 0x8F22;
export def GL_NORMAL_ARRAY_BUFFER_BINDING_ARB: uint = 0x8897;
export def GL_NORMAL_ARRAY_COUNT_EXT: uint = 0x8080;
export def GL_NORMAL_ARRAY_EXT: uint = 0x8075;
export def GL_NORMAL_ARRAY_LENGTH_NV: uint = 0x8F2C;
export def GL_NORMAL_ARRAY_LIST_IBM: uint = 103071;
export def GL_NORMAL_ARRAY_LIST_STRIDE_IBM: uint = 103081;
export def GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL: uint = 0x83F6;
export def GL_NORMAL_ARRAY_POINTER_EXT: uint = 0x808F;
export def GL_NORMAL_ARRAY_STRIDE_EXT: uint = 0x807F;
export def GL_NORMAL_ARRAY_TYPE_EXT: uint = 0x807E;
export def GL_NORMAL_BIT_PGI: uint = 0x08000000;
export def GL_NORMAL_MAP_ARB: uint = 0x8511;
export def GL_NORMAL_MAP_EXT: uint = 0x8511;
export def GL_NORMAL_MAP_NV: uint = 0x8511;
export def GL_NOTEQUAL: uint = 0x0205;
export def GL_NO_ERROR: uint = 0;
export def GL_NO_RESET_NOTIFICATION: uint = 0x8261;
export def GL_NO_RESET_NOTIFICATION_ARB: uint = 0x8261;
export def GL_NUM_ACTIVE_VARIABLES: uint = 0x9304;
export def GL_NUM_COMPATIBLE_SUBROUTINES: uint = 0x8E4A;
export def GL_NUM_COMPRESSED_TEXTURE_FORMATS: uint = 0x86A2;
export def GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB: uint = 0x86A2;
export def GL_NUM_DEVICE_UUIDS_EXT: uint = 0x9596;
export def GL_NUM_EXTENSIONS: uint = 0x821D;
export def GL_NUM_FILL_STREAMS_NV: uint = 0x8E29;
export def GL_NUM_FRAGMENT_CONSTANTS_ATI: uint = 0x896F;
export def GL_NUM_FRAGMENT_REGISTERS_ATI: uint = 0x896E;
export def GL_NUM_GENERAL_COMBINERS_NV: uint = 0x854E;
export def GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI: uint = 0x8973;
export def GL_NUM_INSTRUCTIONS_PER_PASS_ATI: uint = 0x8971;
export def GL_NUM_INSTRUCTIONS_TOTAL_ATI: uint = 0x8972;
export def GL_NUM_LOOPBACK_COMPONENTS_ATI: uint = 0x8974;
export def GL_NUM_PASSES_ATI: uint = 0x8970;
export def GL_NUM_PROGRAM_BINARY_FORMATS: uint = 0x87FE;
export def GL_NUM_SAMPLE_COUNTS: uint = 0x9380;
export def GL_NUM_SHADER_BINARY_FORMATS: uint = 0x8DF9;
export def GL_NUM_SPARSE_LEVELS_ARB: uint = 0x91AA;
export def GL_NUM_SPIR_V_EXTENSIONS: uint = 0x9554;
export def GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD: uint = 0x91B6;
export def GL_NUM_TILING_TYPES_EXT: uint = 0x9582;
export def GL_NUM_VIDEO_CAPTURE_STREAMS_NV: uint = 0x9024;
export def GL_NUM_VIRTUAL_PAGE_SIZES_ARB: uint = 0x91A8;
export def GL_NUM_WINDOW_RECTANGLES_EXT: uint = 0x8F15;
export def GL_OBJECT_ACTIVE_ATTRIBUTES_ARB: uint = 0x8B89;
export def GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB: uint = 0x8B8A;
export def GL_OBJECT_ACTIVE_UNIFORMS_ARB: uint = 0x8B86;
export def GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB: uint = 0x8B87;
export def GL_OBJECT_ATTACHED_OBJECTS_ARB: uint = 0x8B85;
export def GL_OBJECT_BUFFER_SIZE_ATI: uint = 0x8764;
export def GL_OBJECT_BUFFER_USAGE_ATI: uint = 0x8765;
export def GL_OBJECT_COMPILE_STATUS_ARB: uint = 0x8B81;
export def GL_OBJECT_DELETE_STATUS_ARB: uint = 0x8B80;
export def GL_OBJECT_DISTANCE_TO_LINE_SGIS: uint = 0x81F3;
export def GL_OBJECT_DISTANCE_TO_POINT_SGIS: uint = 0x81F1;
export def GL_OBJECT_INFO_LOG_LENGTH_ARB: uint = 0x8B84;
export def GL_OBJECT_LINE_SGIS: uint = 0x81F7;
export def GL_OBJECT_LINK_STATUS_ARB: uint = 0x8B82;
export def GL_OBJECT_POINT_SGIS: uint = 0x81F5;
export def GL_OBJECT_SHADER_SOURCE_LENGTH_ARB: uint = 0x8B88;
export def GL_OBJECT_SUBTYPE_ARB: uint = 0x8B4F;
export def GL_OBJECT_TYPE: uint = 0x9112;
export def GL_OBJECT_TYPE_ARB: uint = 0x8B4E;
export def GL_OBJECT_VALIDATE_STATUS_ARB: uint = 0x8B83;
export def GL_OCCLUSION_QUERY_EVENT_MASK_AMD: uint = 0x874F;
export def GL_OCCLUSION_TEST_HP: uint = 0x8165;
export def GL_OCCLUSION_TEST_RESULT_HP: uint = 0x8166;
export def GL_OFFSET: uint = 0x92FC;
export def GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV: uint = 0x8856;
export def GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV: uint = 0x8857;
export def GL_OFFSET_HILO_TEXTURE_2D_NV: uint = 0x8854;
export def GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV: uint = 0x8855;
export def GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV: uint = 0x8850;
export def GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV: uint = 0x8851;
export def GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV: uint = 0x8852;
export def GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV: uint = 0x8853;
export def GL_OFFSET_TEXTURE_2D_BIAS_NV: uint = 0x86E3;
export def GL_OFFSET_TEXTURE_2D_MATRIX_NV: uint = 0x86E1;
export def GL_OFFSET_TEXTURE_2D_NV: uint = 0x86E8;
export def GL_OFFSET_TEXTURE_2D_SCALE_NV: uint = 0x86E2;
export def GL_OFFSET_TEXTURE_BIAS_NV: uint = 0x86E3;
export def GL_OFFSET_TEXTURE_MATRIX_NV: uint = 0x86E1;
export def GL_OFFSET_TEXTURE_RECTANGLE_NV: uint = 0x864C;
export def GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV: uint = 0x864D;
export def GL_OFFSET_TEXTURE_SCALE_NV: uint = 0x86E2;
export def GL_ONE: uint = 1;
export def GL_ONE_EXT: uint = 0x87DE;
export def GL_ONE_MINUS_CONSTANT_ALPHA: uint = 0x8004;
export def GL_ONE_MINUS_CONSTANT_ALPHA_EXT: uint = 0x8004;
export def GL_ONE_MINUS_CONSTANT_COLOR: uint = 0x8002;
export def GL_ONE_MINUS_CONSTANT_COLOR_EXT: uint = 0x8002;
export def GL_ONE_MINUS_DST_ALPHA: uint = 0x0305;
export def GL_ONE_MINUS_DST_COLOR: uint = 0x0307;
export def GL_ONE_MINUS_SRC1_ALPHA: uint = 0x88FB;
export def GL_ONE_MINUS_SRC1_COLOR: uint = 0x88FA;
export def GL_ONE_MINUS_SRC_ALPHA: uint = 0x0303;
export def GL_ONE_MINUS_SRC_COLOR: uint = 0x0301;
export def GL_OPERAND0_ALPHA_ARB: uint = 0x8598;
export def GL_OPERAND0_ALPHA_EXT: uint = 0x8598;
export def GL_OPERAND0_RGB_ARB: uint = 0x8590;
export def GL_OPERAND0_RGB_EXT: uint = 0x8590;
export def GL_OPERAND1_ALPHA_ARB: uint = 0x8599;
export def GL_OPERAND1_ALPHA_EXT: uint = 0x8599;
export def GL_OPERAND1_RGB_ARB: uint = 0x8591;
export def GL_OPERAND1_RGB_EXT: uint = 0x8591;
export def GL_OPERAND2_ALPHA_ARB: uint = 0x859A;
export def GL_OPERAND2_ALPHA_EXT: uint = 0x859A;
export def GL_OPERAND2_RGB_ARB: uint = 0x8592;
export def GL_OPERAND2_RGB_EXT: uint = 0x8592;
export def GL_OPERAND3_ALPHA_NV: uint = 0x859B;
export def GL_OPERAND3_RGB_NV: uint = 0x8593;
export def GL_OPTIMAL_TILING_EXT: uint = 0x9584;
export def GL_OP_ADD_EXT: uint = 0x8787;
export def GL_OP_CLAMP_EXT: uint = 0x878E;
export def GL_OP_CROSS_PRODUCT_EXT: uint = 0x8797;
export def GL_OP_DOT3_EXT: uint = 0x8784;
export def GL_OP_DOT4_EXT: uint = 0x8785;
export def GL_OP_EXP_BASE_2_EXT: uint = 0x8791;
export def GL_OP_FLOOR_EXT: uint = 0x878F;
export def GL_OP_FRAC_EXT: uint = 0x8789;
export def GL_OP_INDEX_EXT: uint = 0x8782;
export def GL_OP_LOG_BASE_2_EXT: uint = 0x8792;
export def GL_OP_MADD_EXT: uint = 0x8788;
export def GL_OP_MAX_EXT: uint = 0x878A;
export def GL_OP_MIN_EXT: uint = 0x878B;
export def GL_OP_MOV_EXT: uint = 0x8799;
export def GL_OP_MULTIPLY_MATRIX_EXT: uint = 0x8798;
export def GL_OP_MUL_EXT: uint = 0x8786;
export def GL_OP_NEGATE_EXT: uint = 0x8783;
export def GL_OP_POWER_EXT: uint = 0x8793;
export def GL_OP_RECIP_EXT: uint = 0x8794;
export def GL_OP_RECIP_SQRT_EXT: uint = 0x8795;
export def GL_OP_ROUND_EXT: uint = 0x8790;
export def GL_OP_SET_GE_EXT: uint = 0x878C;
export def GL_OP_SET_LT_EXT: uint = 0x878D;
export def GL_OP_SUB_EXT: uint = 0x8796;
export def GL_OR: uint = 0x1507;
export def GL_OR_INVERTED: uint = 0x150D;
export def GL_OR_REVERSE: uint = 0x150B;
export def GL_OUTPUT_COLOR0_EXT: uint = 0x879B;
export def GL_OUTPUT_COLOR1_EXT: uint = 0x879C;
export def GL_OUTPUT_FOG_EXT: uint = 0x87BD;
export def GL_OUTPUT_TEXTURE_COORD0_EXT: uint = 0x879D;
export def GL_OUTPUT_TEXTURE_COORD10_EXT: uint = 0x87A7;
export def GL_OUTPUT_TEXTURE_COORD11_EXT: uint = 0x87A8;
export def GL_OUTPUT_TEXTURE_COORD12_EXT: uint = 0x87A9;
export def GL_OUTPUT_TEXTURE_COORD13_EXT: uint = 0x87AA;
export def GL_OUTPUT_TEXTURE_COORD14_EXT: uint = 0x87AB;
export def GL_OUTPUT_TEXTURE_COORD15_EXT: uint = 0x87AC;
export def GL_OUTPUT_TEXTURE_COORD16_EXT: uint = 0x87AD;
export def GL_OUTPUT_TEXTURE_COORD17_EXT: uint = 0x87AE;
export def GL_OUTPUT_TEXTURE_COORD18_EXT: uint = 0x87AF;
export def GL_OUTPUT_TEXTURE_COORD19_EXT: uint = 0x87B0;
export def GL_OUTPUT_TEXTURE_COORD1_EXT: uint = 0x879E;
export def GL_OUTPUT_TEXTURE_COORD20_EXT: uint = 0x87B1;
export def GL_OUTPUT_TEXTURE_COORD21_EXT: uint = 0x87B2;
export def GL_OUTPUT_TEXTURE_COORD22_EXT: uint = 0x87B3;
export def GL_OUTPUT_TEXTURE_COORD23_EXT: uint = 0x87B4;
export def GL_OUTPUT_TEXTURE_COORD24_EXT: uint = 0x87B5;
export def GL_OUTPUT_TEXTURE_COORD25_EXT: uint = 0x87B6;
export def GL_OUTPUT_TEXTURE_COORD26_EXT: uint = 0x87B7;
export def GL_OUTPUT_TEXTURE_COORD27_EXT: uint = 0x87B8;
export def GL_OUTPUT_TEXTURE_COORD28_EXT: uint = 0x87B9;
export def GL_OUTPUT_TEXTURE_COORD29_EXT: uint = 0x87BA;
export def GL_OUTPUT_TEXTURE_COORD2_EXT: uint = 0x879F;
export def GL_OUTPUT_TEXTURE_COORD30_EXT: uint = 0x87BB;
export def GL_OUTPUT_TEXTURE_COORD31_EXT: uint = 0x87BC;
export def GL_OUTPUT_TEXTURE_COORD3_EXT: uint = 0x87A0;
export def GL_OUTPUT_TEXTURE_COORD4_EXT: uint = 0x87A1;
export def GL_OUTPUT_TEXTURE_COORD5_EXT: uint = 0x87A2;
export def GL_OUTPUT_TEXTURE_COORD6_EXT: uint = 0x87A3;
export def GL_OUTPUT_TEXTURE_COORD7_EXT: uint = 0x87A4;
export def GL_OUTPUT_TEXTURE_COORD8_EXT: uint = 0x87A5;
export def GL_OUTPUT_TEXTURE_COORD9_EXT: uint = 0x87A6;
export def GL_OUTPUT_VERTEX_EXT: uint = 0x879A;
export def GL_OUT_OF_MEMORY: uint = 0x0505;
export def GL_OVERLAY_KHR: uint = 0x9296;
export def GL_OVERLAY_NV: uint = 0x9296;
export def GL_PACK_ALIGNMENT: uint = 0x0D05;
export def GL_PACK_CMYK_HINT_EXT: uint = 0x800E;
export def GL_PACK_COMPRESSED_BLOCK_DEPTH: uint = 0x912D;
export def GL_PACK_COMPRESSED_BLOCK_HEIGHT: uint = 0x912C;
export def GL_PACK_COMPRESSED_BLOCK_SIZE: uint = 0x912E;
export def GL_PACK_COMPRESSED_BLOCK_WIDTH: uint = 0x912B;
export def GL_PACK_IMAGE_DEPTH_SGIS: uint = 0x8131;
export def GL_PACK_IMAGE_HEIGHT: uint = 0x806C;
export def GL_PACK_IMAGE_HEIGHT_EXT: uint = 0x806C;
export def GL_PACK_INVERT_MESA: uint = 0x8758;
export def GL_PACK_LSB_FIRST: uint = 0x0D01;
export def GL_PACK_RESAMPLE_OML: uint = 0x8984;
export def GL_PACK_RESAMPLE_SGIX: uint = 0x842E;
export def GL_PACK_ROW_BYTES_APPLE: uint = 0x8A15;
export def GL_PACK_ROW_LENGTH: uint = 0x0D02;
export def GL_PACK_SKIP_IMAGES: uint = 0x806B;
export def GL_PACK_SKIP_IMAGES_EXT: uint = 0x806B;
export def GL_PACK_SKIP_PIXELS: uint = 0x0D04;
export def GL_PACK_SKIP_ROWS: uint = 0x0D03;
export def GL_PACK_SKIP_VOLUMES_SGIS: uint = 0x8130;
export def GL_PACK_SUBSAMPLE_RATE_SGIX: uint = 0x85A0;
export def GL_PACK_SWAP_BYTES: uint = 0x0D00;
export def GL_PALETTE4_R5_G6_B5_OES: uint = 0x8B92;
export def GL_PALETTE4_RGB5_A1_OES: uint = 0x8B94;
export def GL_PALETTE4_RGB8_OES: uint = 0x8B90;
export def GL_PALETTE4_RGBA4_OES: uint = 0x8B93;
export def GL_PALETTE4_RGBA8_OES: uint = 0x8B91;
export def GL_PALETTE8_R5_G6_B5_OES: uint = 0x8B97;
export def GL_PALETTE8_RGB5_A1_OES: uint = 0x8B99;
export def GL_PALETTE8_RGB8_OES: uint = 0x8B95;
export def GL_PALETTE8_RGBA4_OES: uint = 0x8B98;
export def GL_PALETTE8_RGBA8_OES: uint = 0x8B96;
export def GL_PARALLEL_ARRAYS_INTEL: uint = 0x83F4;
export def GL_PARAMETER_BUFFER: uint = 0x80EE;
export def GL_PARAMETER_BUFFER_ARB: uint = 0x80EE;
export def GL_PARAMETER_BUFFER_BINDING: uint = 0x80EF;
export def GL_PARAMETER_BUFFER_BINDING_ARB: uint = 0x80EF;
export def GL_PARTIAL_SUCCESS_NV: uint = 0x902E;
export def GL_PASS_THROUGH_NV: uint = 0x86E6;
export def GL_PATCHES: uint = 0x000E;
export def GL_PATCH_DEFAULT_INNER_LEVEL: uint = 0x8E73;
export def GL_PATCH_DEFAULT_OUTER_LEVEL: uint = 0x8E74;
export def GL_PATCH_VERTICES: uint = 0x8E72;
export def GL_PATH_CLIENT_LENGTH_NV: uint = 0x907F;
export def GL_PATH_COMMAND_COUNT_NV: uint = 0x909D;
export def GL_PATH_COMPUTED_LENGTH_NV: uint = 0x90A0;
export def GL_PATH_COORD_COUNT_NV: uint = 0x909E;
export def GL_PATH_COVER_DEPTH_FUNC_NV: uint = 0x90BF;
export def GL_PATH_DASH_ARRAY_COUNT_NV: uint = 0x909F;
export def GL_PATH_DASH_CAPS_NV: uint = 0x907B;
export def GL_PATH_DASH_OFFSET_NV: uint = 0x907E;
export def GL_PATH_DASH_OFFSET_RESET_NV: uint = 0x90B4;
export def GL_PATH_END_CAPS_NV: uint = 0x9076;
export def GL_PATH_ERROR_POSITION_NV: uint = 0x90AB;
export def GL_PATH_FILL_BOUNDING_BOX_NV: uint = 0x90A1;
export def GL_PATH_FILL_COVER_MODE_NV: uint = 0x9082;
export def GL_PATH_FILL_MASK_NV: uint = 0x9081;
export def GL_PATH_FILL_MODE_NV: uint = 0x9080;
export def GL_PATH_FORMAT_PS_NV: uint = 0x9071;
export def GL_PATH_FORMAT_SVG_NV: uint = 0x9070;
export def GL_PATH_GEN_COEFF_NV: uint = 0x90B1;
export def GL_PATH_GEN_COMPONENTS_NV: uint = 0x90B3;
export def GL_PATH_GEN_MODE_NV: uint = 0x90B0;
export def GL_PATH_INITIAL_DASH_CAP_NV: uint = 0x907C;
export def GL_PATH_INITIAL_END_CAP_NV: uint = 0x9077;
export def GL_PATH_JOIN_STYLE_NV: uint = 0x9079;
export def GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV: uint = 0x0D36;
export def GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV: uint = 0x0D38;
export def GL_PATH_MITER_LIMIT_NV: uint = 0x907A;
export def GL_PATH_MODELVIEW_MATRIX_NV: uint = 0x0BA6;
export def GL_PATH_MODELVIEW_NV: uint = 0x1700;
export def GL_PATH_MODELVIEW_STACK_DEPTH_NV: uint = 0x0BA3;
export def GL_PATH_OBJECT_BOUNDING_BOX_NV: uint = 0x908A;
export def GL_PATH_PROJECTION_MATRIX_NV: uint = 0x0BA7;
export def GL_PATH_PROJECTION_NV: uint = 0x1701;
export def GL_PATH_PROJECTION_STACK_DEPTH_NV: uint = 0x0BA4;
export def GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV: uint = 0x90BD;
export def GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV: uint = 0x90BE;
export def GL_PATH_STENCIL_FUNC_NV: uint = 0x90B7;
export def GL_PATH_STENCIL_REF_NV: uint = 0x90B8;
export def GL_PATH_STENCIL_VALUE_MASK_NV: uint = 0x90B9;
export def GL_PATH_STROKE_BOUNDING_BOX_NV: uint = 0x90A2;
export def GL_PATH_STROKE_COVER_MODE_NV: uint = 0x9083;
export def GL_PATH_STROKE_MASK_NV: uint = 0x9084;
export def GL_PATH_STROKE_WIDTH_NV: uint = 0x9075;
export def GL_PATH_TERMINAL_DASH_CAP_NV: uint = 0x907D;
export def GL_PATH_TERMINAL_END_CAP_NV: uint = 0x9078;
export def GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV: uint = 0x84E3;
export def GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV: uint = 0x84E4;
export def GL_PERCENTAGE_AMD: uint = 0x8BC3;
export def GL_PERFMON_RESULT_AMD: uint = 0x8BC6;
export def GL_PERFMON_RESULT_AVAILABLE_AMD: uint = 0x8BC4;
export def GL_PERFMON_RESULT_SIZE_AMD: uint = 0x8BC5;
export def GL_PERFORMANCE_MONITOR_AMD: uint = 0x9152;
export def GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL: uint = 0x94FC;
export def GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL: uint = 0x94FB;
export def GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL: uint = 0x94FA;
export def GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL: uint = 0x94F8;
export def GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL: uint = 0x94F9;
export def GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL: uint = 0x94FF;
export def GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL: uint = 0x94F1;
export def GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL: uint = 0x94F2;
export def GL_PERFQUERY_COUNTER_EVENT_INTEL: uint = 0x94F0;
export def GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL: uint = 0x94FE;
export def GL_PERFQUERY_COUNTER_RAW_INTEL: uint = 0x94F4;
export def GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL: uint = 0x94F3;
export def GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL: uint = 0x94F5;
export def GL_PERFQUERY_DONOT_FLUSH_INTEL: uint = 0x83F9;
export def GL_PERFQUERY_FLUSH_INTEL: uint = 0x83FA;
export def GL_PERFQUERY_GLOBAL_CONTEXT_INTEL: uint = 0x00000001;
export def GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL: uint = 0x9500;
export def GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL: uint = 0x94FD;
export def GL_PERFQUERY_SINGLE_CONTEXT_INTEL: uint = 0x00000000;
export def GL_PERFQUERY_WAIT_INTEL: uint = 0x83FB;
export def GL_PERTURB_EXT: uint = 0x85AE;
export def GL_PER_GPU_STORAGE_BIT_NV: uint = 0x0800;
export def GL_PER_GPU_STORAGE_NV: uint = 0x9548;
export def GL_PER_STAGE_CONSTANTS_NV: uint = 0x8535;
export def GL_PHONG_HINT_WIN: uint = 0x80EB;
export def GL_PHONG_WIN: uint = 0x80EA;
export def GL_PINLIGHT_NV: uint = 0x92A8;
export def GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD: uint = 0x91AE;
export def GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD: uint = 0x91AF;
export def GL_PIXEL_BUFFER_BARRIER_BIT: uint = 0x00000080;
export def GL_PIXEL_BUFFER_BARRIER_BIT_EXT: uint = 0x00000080;
export def GL_PIXEL_COUNTER_BITS_NV: uint = 0x8864;
export def GL_PIXEL_COUNT_AVAILABLE_NV: uint = 0x8867;
export def GL_PIXEL_COUNT_NV: uint = 0x8866;
export def GL_PIXEL_CUBIC_WEIGHT_EXT: uint = 0x8333;
export def GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS: uint = 0x8355;
export def GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS: uint = 0x8354;
export def GL_PIXEL_GROUP_COLOR_SGIS: uint = 0x8356;
export def GL_PIXEL_MAG_FILTER_EXT: uint = 0x8331;
export def GL_PIXEL_MIN_FILTER_EXT: uint = 0x8332;
export def GL_PIXEL_PACK_BUFFER: uint = 0x88EB;
export def GL_PIXEL_PACK_BUFFER_ARB: uint = 0x88EB;
export def GL_PIXEL_PACK_BUFFER_BINDING: uint = 0x88ED;
export def GL_PIXEL_PACK_BUFFER_BINDING_ARB: uint = 0x88ED;
export def GL_PIXEL_PACK_BUFFER_BINDING_EXT: uint = 0x88ED;
export def GL_PIXEL_PACK_BUFFER_EXT: uint = 0x88EB;
export def GL_PIXEL_SUBSAMPLE_2424_SGIX: uint = 0x85A3;
export def GL_PIXEL_SUBSAMPLE_4242_SGIX: uint = 0x85A4;
export def GL_PIXEL_SUBSAMPLE_4444_SGIX: uint = 0x85A2;
export def GL_PIXEL_TEXTURE_SGIS: uint = 0x8353;
export def GL_PIXEL_TEX_GEN_MODE_SGIX: uint = 0x832B;
export def GL_PIXEL_TEX_GEN_SGIX: uint = 0x8139;
export def GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX: uint = 0x813E;
export def GL_PIXEL_TILE_CACHE_INCREMENT_SGIX: uint = 0x813F;
export def GL_PIXEL_TILE_CACHE_SIZE_SGIX: uint = 0x8145;
export def GL_PIXEL_TILE_GRID_DEPTH_SGIX: uint = 0x8144;
export def GL_PIXEL_TILE_GRID_HEIGHT_SGIX: uint = 0x8143;
export def GL_PIXEL_TILE_GRID_WIDTH_SGIX: uint = 0x8142;
export def GL_PIXEL_TILE_HEIGHT_SGIX: uint = 0x8141;
export def GL_PIXEL_TILE_WIDTH_SGIX: uint = 0x8140;
export def GL_PIXEL_TRANSFORM_2D_EXT: uint = 0x8330;
export def GL_PIXEL_TRANSFORM_2D_MATRIX_EXT: uint = 0x8338;
export def GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT: uint = 0x8336;
export def GL_PIXEL_UNPACK_BUFFER: uint = 0x88EC;
export def GL_PIXEL_UNPACK_BUFFER_ARB: uint = 0x88EC;
export def GL_PIXEL_UNPACK_BUFFER_BINDING: uint = 0x88EF;
export def GL_PIXEL_UNPACK_BUFFER_BINDING_ARB: uint = 0x88EF;
export def GL_PIXEL_UNPACK_BUFFER_BINDING_EXT: uint = 0x88EF;
export def GL_PIXEL_UNPACK_BUFFER_EXT: uint = 0x88EC;
export def GL_PLUS_CLAMPED_ALPHA_NV: uint = 0x92B2;
export def GL_PLUS_CLAMPED_NV: uint = 0x92B1;
export def GL_PLUS_DARKER_NV: uint = 0x9292;
export def GL_PLUS_NV: uint = 0x9291;
export def GL_PN_TRIANGLES_ATI: uint = 0x87F0;
export def GL_PN_TRIANGLES_NORMAL_MODE_ATI: uint = 0x87F3;
export def GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI: uint = 0x87F7;
export def GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI: uint = 0x87F8;
export def GL_PN_TRIANGLES_POINT_MODE_ATI: uint = 0x87F2;
export def GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI: uint = 0x87F6;
export def GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI: uint = 0x87F5;
export def GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI: uint = 0x87F4;
export def GL_POINT: uint = 0x1B00;
export def GL_POINTS: uint = 0x0000;
export def GL_POINT_DISTANCE_ATTENUATION_ARB: uint = 0x8129;
export def GL_POINT_FADE_THRESHOLD_SIZE: uint = 0x8128;
export def GL_POINT_FADE_THRESHOLD_SIZE_ARB: uint = 0x8128;
export def GL_POINT_FADE_THRESHOLD_SIZE_EXT: uint = 0x8128;
export def GL_POINT_FADE_THRESHOLD_SIZE_SGIS: uint = 0x8128;
export def GL_POINT_SIZE: uint = 0x0B11;
export def GL_POINT_SIZE_GRANULARITY: uint = 0x0B13;
export def GL_POINT_SIZE_MAX_ARB: uint = 0x8127;
export def GL_POINT_SIZE_MAX_EXT: uint = 0x8127;
export def GL_POINT_SIZE_MAX_SGIS: uint = 0x8127;
export def GL_POINT_SIZE_MIN_ARB: uint = 0x8126;
export def GL_POINT_SIZE_MIN_EXT: uint = 0x8126;
export def GL_POINT_SIZE_MIN_SGIS: uint = 0x8126;
export def GL_POINT_SIZE_RANGE: uint = 0x0B12;
export def GL_POINT_SPRITE_ARB: uint = 0x8861;
export def GL_POINT_SPRITE_COORD_ORIGIN: uint = 0x8CA0;
export def GL_POINT_SPRITE_NV: uint = 0x8861;
export def GL_POINT_SPRITE_R_MODE_NV: uint = 0x8863;
export def GL_POLYGON_MODE: uint = 0x0B40;
export def GL_POLYGON_OFFSET_BIAS_EXT: uint = 0x8039;
export def GL_POLYGON_OFFSET_CLAMP: uint = 0x8E1B;
export def GL_POLYGON_OFFSET_CLAMP_EXT: uint = 0x8E1B;
export def GL_POLYGON_OFFSET_COMMAND_NV: uint = 0x000E;
export def GL_POLYGON_OFFSET_EXT: uint = 0x8037;
export def GL_POLYGON_OFFSET_FACTOR: uint = 0x8038;
export def GL_POLYGON_OFFSET_FACTOR_EXT: uint = 0x8038;
export def GL_POLYGON_OFFSET_FILL: uint = 0x8037;
export def GL_POLYGON_OFFSET_LINE: uint = 0x2A02;
export def GL_POLYGON_OFFSET_POINT: uint = 0x2A01;
export def GL_POLYGON_OFFSET_UNITS: uint = 0x2A00;
export def GL_POLYGON_SMOOTH: uint = 0x0B41;
export def GL_POLYGON_SMOOTH_HINT: uint = 0x0C53;
export def GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI: uint = 0x80BB;
export def GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI: uint = 0x80B7;
export def GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI: uint = 0x80BA;
export def GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI: uint = 0x80B6;
export def GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI: uint = 0x80D2;
export def GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI: uint = 0x80B9;
export def GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI: uint = 0x80B5;
export def GL_POST_COLOR_MATRIX_RED_BIAS_SGI: uint = 0x80B8;
export def GL_POST_COLOR_MATRIX_RED_SCALE_SGI: uint = 0x80B4;
export def GL_POST_CONVOLUTION_ALPHA_BIAS_EXT: uint = 0x8023;
export def GL_POST_CONVOLUTION_ALPHA_SCALE_EXT: uint = 0x801F;
export def GL_POST_CONVOLUTION_BLUE_BIAS_EXT: uint = 0x8022;
export def GL_POST_CONVOLUTION_BLUE_SCALE_EXT: uint = 0x801E;
export def GL_POST_CONVOLUTION_COLOR_TABLE_SGI: uint = 0x80D1;
export def GL_POST_CONVOLUTION_GREEN_BIAS_EXT: uint = 0x8021;
export def GL_POST_CONVOLUTION_GREEN_SCALE_EXT: uint = 0x801D;
export def GL_POST_CONVOLUTION_RED_BIAS_EXT: uint = 0x8020;
export def GL_POST_CONVOLUTION_RED_SCALE_EXT: uint = 0x801C;
export def GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP: uint = 0x8162;
export def GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX: uint = 0x817B;
export def GL_POST_TEXTURE_FILTER_BIAS_SGIX: uint = 0x8179;
export def GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX: uint = 0x817C;
export def GL_POST_TEXTURE_FILTER_SCALE_SGIX: uint = 0x817A;
export def GL_PREFER_DOUBLEBUFFER_HINT_PGI: uint = 0x1A1F8;
export def GL_PRESENT_DURATION_NV: uint = 0x8E2B;
export def GL_PRESENT_TIME_NV: uint = 0x8E2A;
export def GL_PRESERVE_ATI: uint = 0x8762;
export def GL_PREVIOUS_ARB: uint = 0x8578;
export def GL_PREVIOUS_EXT: uint = 0x8578;
export def GL_PREVIOUS_TEXTURE_INPUT_NV: uint = 0x86E4;
export def GL_PRIMARY_COLOR_ARB: uint = 0x8577;
export def GL_PRIMARY_COLOR_EXT: uint = 0x8577;
export def GL_PRIMARY_COLOR_NV: uint = 0x852C;
export def GL_PRIMITIVES_GENERATED: uint = 0x8C87;
export def GL_PRIMITIVES_GENERATED_EXT: uint = 0x8C87;
export def GL_PRIMITIVES_GENERATED_NV: uint = 0x8C87;
export def GL_PRIMITIVES_SUBMITTED: uint = 0x82EF;
export def GL_PRIMITIVES_SUBMITTED_ARB: uint = 0x82EF;
export def GL_PRIMITIVE_BOUNDING_BOX_ARB: uint = 0x92BE;
export def GL_PRIMITIVE_ID_NV: uint = 0x8C7C;
export def GL_PRIMITIVE_RESTART: uint = 0x8F9D;
export def GL_PRIMITIVE_RESTART_FIXED_INDEX: uint = 0x8D69;
export def GL_PRIMITIVE_RESTART_INDEX: uint = 0x8F9E;
export def GL_PRIMITIVE_RESTART_INDEX_NV: uint = 0x8559;
export def GL_PRIMITIVE_RESTART_NV: uint = 0x8558;
export def GL_PROGRAM: uint = 0x82E2;
export def GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB: uint = 0x9341;
export def GL_PROGRAMMABLE_SAMPLE_LOCATION_NV: uint = 0x9341;
export def GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB: uint = 0x9340;
export def GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV: uint = 0x9340;
export def GL_PROGRAM_ADDRESS_REGISTERS_ARB: uint = 0x88B0;
export def GL_PROGRAM_ALU_INSTRUCTIONS_ARB: uint = 0x8805;
export def GL_PROGRAM_ATTRIBS_ARB: uint = 0x88AC;
export def GL_PROGRAM_ATTRIB_COMPONENTS_NV: uint = 0x8906;
export def GL_PROGRAM_BINARY_FORMATS: uint = 0x87FF;
export def GL_PROGRAM_BINARY_FORMAT_MESA: uint = 0x875F;
export def GL_PROGRAM_BINARY_LENGTH: uint = 0x8741;
export def GL_PROGRAM_BINARY_RETRIEVABLE_HINT: uint = 0x8257;
export def GL_PROGRAM_BINDING_ARB: uint = 0x8677;
export def GL_PROGRAM_ERROR_POSITION_ARB: uint = 0x864B;
export def GL_PROGRAM_ERROR_POSITION_NV: uint = 0x864B;
export def GL_PROGRAM_ERROR_STRING_ARB: uint = 0x8874;
export def GL_PROGRAM_ERROR_STRING_NV: uint = 0x8874;
export def GL_PROGRAM_FORMAT_ARB: uint = 0x8876;
export def GL_PROGRAM_FORMAT_ASCII_ARB: uint = 0x8875;
export def GL_PROGRAM_INPUT: uint = 0x92E3;
export def GL_PROGRAM_INSTRUCTIONS_ARB: uint = 0x88A0;
export def GL_PROGRAM_LENGTH_ARB: uint = 0x8627;
export def GL_PROGRAM_LENGTH_NV: uint = 0x8627;
export def GL_PROGRAM_MATRIX_EXT: uint = 0x8E2D;
export def GL_PROGRAM_MATRIX_STACK_DEPTH_EXT: uint = 0x8E2F;
export def GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: uint = 0x88B2;
export def GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: uint = 0x8808;
export def GL_PROGRAM_NATIVE_ATTRIBS_ARB: uint = 0x88AE;
export def GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB: uint = 0x88A2;
export def GL_PROGRAM_NATIVE_PARAMETERS_ARB: uint = 0x88AA;
export def GL_PROGRAM_NATIVE_TEMPORARIES_ARB: uint = 0x88A6;
export def GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: uint = 0x880A;
export def GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: uint = 0x8809;
export def GL_PROGRAM_OBJECT_ARB: uint = 0x8B40;
export def GL_PROGRAM_OBJECT_EXT: uint = 0x8B40;
export def GL_PROGRAM_OUTPUT: uint = 0x92E4;
export def GL_PROGRAM_PARAMETERS_ARB: uint = 0x88A8;
export def GL_PROGRAM_PARAMETER_NV: uint = 0x8644;
export def GL_PROGRAM_PIPELINE: uint = 0x82E4;
export def GL_PROGRAM_PIPELINE_BINDING: uint = 0x825A;
export def GL_PROGRAM_PIPELINE_OBJECT_EXT: uint = 0x8A4F;
export def GL_PROGRAM_POINT_SIZE: uint = 0x8642;
export def GL_PROGRAM_POINT_SIZE_ARB: uint = 0x8642;
export def GL_PROGRAM_POINT_SIZE_EXT: uint = 0x8642;
export def GL_PROGRAM_RESIDENT_NV: uint = 0x8647;
export def GL_PROGRAM_RESULT_COMPONENTS_NV: uint = 0x8907;
export def GL_PROGRAM_SEPARABLE: uint = 0x8258;
export def GL_PROGRAM_STRING_ARB: uint = 0x8628;
export def GL_PROGRAM_STRING_NV: uint = 0x8628;
export def GL_PROGRAM_TARGET_NV: uint = 0x8646;
export def GL_PROGRAM_TEMPORARIES_ARB: uint = 0x88A4;
export def GL_PROGRAM_TEX_INDIRECTIONS_ARB: uint = 0x8807;
export def GL_PROGRAM_TEX_INSTRUCTIONS_ARB: uint = 0x8806;
export def GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB: uint = 0x88B6;
export def GL_PROTECTED_MEMORY_OBJECT_EXT: uint = 0x959B;
export def GL_PROVOKING_VERTEX: uint = 0x8E4F;
export def GL_PROVOKING_VERTEX_EXT: uint = 0x8E4F;
export def GL_PROXY_COLOR_TABLE_SGI: uint = 0x80D3;
export def GL_PROXY_HISTOGRAM_EXT: uint = 0x8025;
export def GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI: uint = 0x80D5;
export def GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI: uint = 0x80D4;
export def GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP: uint = 0x8163;
export def GL_PROXY_TEXTURE_1D: uint = 0x8063;
export def GL_PROXY_TEXTURE_1D_ARRAY: uint = 0x8C19;
export def GL_PROXY_TEXTURE_1D_ARRAY_EXT: uint = 0x8C19;
export def GL_PROXY_TEXTURE_1D_EXT: uint = 0x8063;
export def GL_PROXY_TEXTURE_1D_STACK_MESAX: uint = 0x875B;
export def GL_PROXY_TEXTURE_2D: uint = 0x8064;
export def GL_PROXY_TEXTURE_2D_ARRAY: uint = 0x8C1B;
export def GL_PROXY_TEXTURE_2D_ARRAY_EXT: uint = 0x8C1B;
export def GL_PROXY_TEXTURE_2D_EXT: uint = 0x8064;
export def GL_PROXY_TEXTURE_2D_MULTISAMPLE: uint = 0x9101;
export def GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: uint = 0x9103;
export def GL_PROXY_TEXTURE_2D_STACK_MESAX: uint = 0x875C;
export def GL_PROXY_TEXTURE_3D: uint = 0x8070;
export def GL_PROXY_TEXTURE_3D_EXT: uint = 0x8070;
export def GL_PROXY_TEXTURE_4D_SGIS: uint = 0x8135;
export def GL_PROXY_TEXTURE_COLOR_TABLE_SGI: uint = 0x80BD;
export def GL_PROXY_TEXTURE_CUBE_MAP: uint = 0x851B;
export def GL_PROXY_TEXTURE_CUBE_MAP_ARB: uint = 0x851B;
export def GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB: uint = 0x900B;
export def GL_PROXY_TEXTURE_CUBE_MAP_EXT: uint = 0x851B;
export def GL_PROXY_TEXTURE_RECTANGLE: uint = 0x84F7;
export def GL_PROXY_TEXTURE_RECTANGLE_ARB: uint = 0x84F7;
export def GL_PROXY_TEXTURE_RECTANGLE_NV: uint = 0x84F7;
export def GL_PURGEABLE_APPLE: uint = 0x8A1D;
export def GL_PURGED_CONTEXT_RESET_NV: uint = 0x92BB;
export def GL_QUADRATIC_CURVE_TO_NV: uint = 0x0A;
export def GL_QUADS: uint = 0x0007;
export def GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: uint = 0x8E4C;
export def GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT: uint = 0x8E4C;
export def GL_QUAD_ALPHA4_SGIS: uint = 0x811E;
export def GL_QUAD_ALPHA8_SGIS: uint = 0x811F;
export def GL_QUAD_INTENSITY4_SGIS: uint = 0x8122;
export def GL_QUAD_INTENSITY8_SGIS: uint = 0x8123;
export def GL_QUAD_LUMINANCE4_SGIS: uint = 0x8120;
export def GL_QUAD_LUMINANCE8_SGIS: uint = 0x8121;
export def GL_QUAD_MESH_SUN: uint = 0x8614;
export def GL_QUAD_TEXTURE_SELECT_SGIS: uint = 0x8125;
export def GL_QUARTER_BIT_ATI: uint = 0x00000010;
export def GL_QUERY: uint = 0x82E3;
export def GL_QUERY_ALL_EVENT_BITS_AMD: uint = 0xFFFFFFFF;
export def GL_QUERY_BUFFER: uint = 0x9192;
export def GL_QUERY_BUFFER_AMD: uint = 0x9192;
export def GL_QUERY_BUFFER_BARRIER_BIT: uint = 0x00008000;
export def GL_QUERY_BUFFER_BINDING: uint = 0x9193;
export def GL_QUERY_BUFFER_BINDING_AMD: uint = 0x9193;
export def GL_QUERY_BY_REGION_NO_WAIT: uint = 0x8E16;
export def GL_QUERY_BY_REGION_NO_WAIT_INVERTED: uint = 0x8E1A;
export def GL_QUERY_BY_REGION_NO_WAIT_NV: uint = 0x8E16;
export def GL_QUERY_BY_REGION_WAIT: uint = 0x8E15;
export def GL_QUERY_BY_REGION_WAIT_INVERTED: uint = 0x8E19;
export def GL_QUERY_BY_REGION_WAIT_NV: uint = 0x8E15;
export def GL_QUERY_COUNTER_BITS: uint = 0x8864;
export def GL_QUERY_COUNTER_BITS_ARB: uint = 0x8864;
export def GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD: uint = 0x00000008;
export def GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD: uint = 0x00000002;
export def GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD: uint = 0x00000001;
export def GL_QUERY_NO_WAIT: uint = 0x8E14;
export def GL_QUERY_NO_WAIT_INVERTED: uint = 0x8E18;
export def GL_QUERY_NO_WAIT_NV: uint = 0x8E14;
export def GL_QUERY_OBJECT_AMD: uint = 0x9153;
export def GL_QUERY_OBJECT_EXT: uint = 0x9153;
export def GL_QUERY_RESOURCE_BUFFEROBJECT_NV: uint = 0x9547;
export def GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV: uint = 0x9542;
export def GL_QUERY_RESOURCE_RENDERBUFFER_NV: uint = 0x9546;
export def GL_QUERY_RESOURCE_SYS_RESERVED_NV: uint = 0x9544;
export def GL_QUERY_RESOURCE_TEXTURE_NV: uint = 0x9545;
export def GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV: uint = 0x9540;
export def GL_QUERY_RESULT: uint = 0x8866;
export def GL_QUERY_RESULT_ARB: uint = 0x8866;
export def GL_QUERY_RESULT_AVAILABLE: uint = 0x8867;
export def GL_QUERY_RESULT_AVAILABLE_ARB: uint = 0x8867;
export def GL_QUERY_RESULT_NO_WAIT: uint = 0x9194;
export def GL_QUERY_RESULT_NO_WAIT_AMD: uint = 0x9194;
export def GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD: uint = 0x00000004;
export def GL_QUERY_TARGET: uint = 0x82EA;
export def GL_QUERY_WAIT: uint = 0x8E13;
export def GL_QUERY_WAIT_INVERTED: uint = 0x8E17;
export def GL_QUERY_WAIT_NV: uint = 0x8E13;
export def GL_R11F_G11F_B10F: uint = 0x8C3A;
export def GL_R11F_G11F_B10F_EXT: uint = 0x8C3A;
export def GL_R16: uint = 0x822A;
export def GL_R16F: uint = 0x822D;
export def GL_R16F_EXT: uint = 0x822D;
export def GL_R16I: uint = 0x8233;
export def GL_R16UI: uint = 0x8234;
export def GL_R16_SNORM: uint = 0x8F98;
export def GL_R1UI_C3F_V3F_SUN: uint = 0x85C6;
export def GL_R1UI_C4F_N3F_V3F_SUN: uint = 0x85C8;
export def GL_R1UI_C4UB_V3F_SUN: uint = 0x85C5;
export def GL_R1UI_N3F_V3F_SUN: uint = 0x85C7;
export def GL_R1UI_T2F_C4F_N3F_V3F_SUN: uint = 0x85CB;
export def GL_R1UI_T2F_N3F_V3F_SUN: uint = 0x85CA;
export def GL_R1UI_T2F_V3F_SUN: uint = 0x85C9;
export def GL_R1UI_V3F_SUN: uint = 0x85C4;
export def GL_R32F: uint = 0x822E;
export def GL_R32F_EXT: uint = 0x822E;
export def GL_R32I: uint = 0x8235;
export def GL_R32UI: uint = 0x8236;
export def GL_R3_G3_B2: uint = 0x2A10;
export def GL_R8: uint = 0x8229;
export def GL_R8I: uint = 0x8231;
export def GL_R8UI: uint = 0x8232;
export def GL_R8_EXT: uint = 0x8229;
export def GL_R8_SNORM: uint = 0x8F94;
export def GL_RASTERIZER_DISCARD: uint = 0x8C89;
export def GL_RASTERIZER_DISCARD_EXT: uint = 0x8C89;
export def GL_RASTERIZER_DISCARD_NV: uint = 0x8C89;
export def GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT: uint = 0x932A;
export def GL_RASTER_MULTISAMPLE_EXT: uint = 0x9327;
export def GL_RASTER_POSITION_UNCLIPPED_IBM: uint = 0x19262;
export def GL_RASTER_SAMPLES_EXT: uint = 0x9328;
export def GL_READ_BUFFER: uint = 0x0C02;
export def GL_READ_FRAMEBUFFER: uint = 0x8CA8;
export def GL_READ_FRAMEBUFFER_BINDING: uint = 0x8CAA;
export def GL_READ_FRAMEBUFFER_BINDING_EXT: uint = 0x8CAA;
export def GL_READ_FRAMEBUFFER_EXT: uint = 0x8CA8;
export def GL_READ_ONLY: uint = 0x88B8;
export def GL_READ_ONLY_ARB: uint = 0x88B8;
export def GL_READ_PIXELS: uint = 0x828C;
export def GL_READ_PIXELS_FORMAT: uint = 0x828D;
export def GL_READ_PIXELS_TYPE: uint = 0x828E;
export def GL_READ_PIXEL_DATA_RANGE_LENGTH_NV: uint = 0x887B;
export def GL_READ_PIXEL_DATA_RANGE_NV: uint = 0x8879;
export def GL_READ_PIXEL_DATA_RANGE_POINTER_NV: uint = 0x887D;
export def GL_READ_WRITE: uint = 0x88BA;
export def GL_READ_WRITE_ARB: uint = 0x88BA;
export def GL_RECLAIM_MEMORY_HINT_PGI: uint = 0x1A1FE;
export def GL_RECT_NV: uint = 0xF6;
export def GL_RED: uint = 0x1903;
export def GL_REDUCE_EXT: uint = 0x8016;
export def GL_RED_BIT_ATI: uint = 0x00000001;
export def GL_RED_INTEGER: uint = 0x8D94;
export def GL_RED_INTEGER_EXT: uint = 0x8D94;
export def GL_RED_MAX_CLAMP_INGR: uint = 0x8564;
export def GL_RED_MIN_CLAMP_INGR: uint = 0x8560;
export def GL_RED_NV: uint = 0x1903;
export def GL_RED_SNORM: uint = 0x8F90;
export def GL_REFERENCED_BY_COMPUTE_SHADER: uint = 0x930B;
export def GL_REFERENCED_BY_FRAGMENT_SHADER: uint = 0x930A;
export def GL_REFERENCED_BY_GEOMETRY_SHADER: uint = 0x9309;
export def GL_REFERENCED_BY_MESH_SHADER_NV: uint = 0x95A0;
export def GL_REFERENCED_BY_TASK_SHADER_NV: uint = 0x95A1;
export def GL_REFERENCED_BY_TESS_CONTROL_SHADER: uint = 0x9307;
export def GL_REFERENCED_BY_TESS_EVALUATION_SHADER: uint = 0x9308;
export def GL_REFERENCED_BY_VERTEX_SHADER: uint = 0x9306;
export def GL_REFERENCE_PLANE_EQUATION_SGIX: uint = 0x817E;
export def GL_REFERENCE_PLANE_SGIX: uint = 0x817D;
export def GL_REFLECTION_MAP_ARB: uint = 0x8512;
export def GL_REFLECTION_MAP_EXT: uint = 0x8512;
export def GL_REFLECTION_MAP_NV: uint = 0x8512;
export def GL_REGISTER_COMBINERS_NV: uint = 0x8522;
export def GL_REG_0_ATI: uint = 0x8921;
export def GL_REG_10_ATI: uint = 0x892B;
export def GL_REG_11_ATI: uint = 0x892C;
export def GL_REG_12_ATI: uint = 0x892D;
export def GL_REG_13_ATI: uint = 0x892E;
export def GL_REG_14_ATI: uint = 0x892F;
export def GL_REG_15_ATI: uint = 0x8930;
export def GL_REG_16_ATI: uint = 0x8931;
export def GL_REG_17_ATI: uint = 0x8932;
export def GL_REG_18_ATI: uint = 0x8933;
export def GL_REG_19_ATI: uint = 0x8934;
export def GL_REG_1_ATI: uint = 0x8922;
export def GL_REG_20_ATI: uint = 0x8935;
export def GL_REG_21_ATI: uint = 0x8936;
export def GL_REG_22_ATI: uint = 0x8937;
export def GL_REG_23_ATI: uint = 0x8938;
export def GL_REG_24_ATI: uint = 0x8939;
export def GL_REG_25_ATI: uint = 0x893A;
export def GL_REG_26_ATI: uint = 0x893B;
export def GL_REG_27_ATI: uint = 0x893C;
export def GL_REG_28_ATI: uint = 0x893D;
export def GL_REG_29_ATI: uint = 0x893E;
export def GL_REG_2_ATI: uint = 0x8923;
export def GL_REG_30_ATI: uint = 0x893F;
export def GL_REG_31_ATI: uint = 0x8940;
export def GL_REG_3_ATI: uint = 0x8924;
export def GL_REG_4_ATI: uint = 0x8925;
export def GL_REG_5_ATI: uint = 0x8926;
export def GL_REG_6_ATI: uint = 0x8927;
export def GL_REG_7_ATI: uint = 0x8928;
export def GL_REG_8_ATI: uint = 0x8929;
export def GL_REG_9_ATI: uint = 0x892A;
export def GL_RELATIVE_ARC_TO_NV: uint = 0xFF;
export def GL_RELATIVE_CONIC_CURVE_TO_NV: uint = 0x1B;
export def GL_RELATIVE_CUBIC_CURVE_TO_NV: uint = 0x0D;
export def GL_RELATIVE_HORIZONTAL_LINE_TO_NV: uint = 0x07;
export def GL_RELATIVE_LARGE_CCW_ARC_TO_NV: uint = 0x17;
export def GL_RELATIVE_LARGE_CW_ARC_TO_NV: uint = 0x19;
export def GL_RELATIVE_LINE_TO_NV: uint = 0x05;
export def GL_RELATIVE_MOVE_TO_NV: uint = 0x03;
export def GL_RELATIVE_QUADRATIC_CURVE_TO_NV: uint = 0x0B;
export def GL_RELATIVE_RECT_NV: uint = 0xF7;
export def GL_RELATIVE_ROUNDED_RECT2_NV: uint = 0xEB;
export def GL_RELATIVE_ROUNDED_RECT4_NV: uint = 0xED;
export def GL_RELATIVE_ROUNDED_RECT8_NV: uint = 0xEF;
export def GL_RELATIVE_ROUNDED_RECT_NV: uint = 0xE9;
export def GL_RELATIVE_SMALL_CCW_ARC_TO_NV: uint = 0x13;
export def GL_RELATIVE_SMALL_CW_ARC_TO_NV: uint = 0x15;
export def GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV: uint = 0x11;
export def GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV: uint = 0x0F;
export def GL_RELATIVE_VERTICAL_LINE_TO_NV: uint = 0x09;
export def GL_RELEASED_APPLE: uint = 0x8A19;
export def GL_RENDERBUFFER: uint = 0x8D41;
export def GL_RENDERBUFFER_ALPHA_SIZE: uint = 0x8D53;
export def GL_RENDERBUFFER_ALPHA_SIZE_EXT: uint = 0x8D53;
export def GL_RENDERBUFFER_BINDING: uint = 0x8CA7;
export def GL_RENDERBUFFER_BINDING_EXT: uint = 0x8CA7;
export def GL_RENDERBUFFER_BLUE_SIZE: uint = 0x8D52;
export def GL_RENDERBUFFER_BLUE_SIZE_EXT: uint = 0x8D52;
export def GL_RENDERBUFFER_COLOR_SAMPLES_NV: uint = 0x8E10;
export def GL_RENDERBUFFER_COVERAGE_SAMPLES_NV: uint = 0x8CAB;
export def GL_RENDERBUFFER_DEPTH_SIZE: uint = 0x8D54;
export def GL_RENDERBUFFER_DEPTH_SIZE_EXT: uint = 0x8D54;
export def GL_RENDERBUFFER_EXT: uint = 0x8D41;
export def GL_RENDERBUFFER_FREE_MEMORY_ATI: uint = 0x87FD;
export def GL_RENDERBUFFER_GREEN_SIZE: uint = 0x8D51;
export def GL_RENDERBUFFER_GREEN_SIZE_EXT: uint = 0x8D51;
export def GL_RENDERBUFFER_HEIGHT: uint = 0x8D43;
export def GL_RENDERBUFFER_HEIGHT_EXT: uint = 0x8D43;
export def GL_RENDERBUFFER_INTERNAL_FORMAT: uint = 0x8D44;
export def GL_RENDERBUFFER_INTERNAL_FORMAT_EXT: uint = 0x8D44;
export def GL_RENDERBUFFER_RED_SIZE: uint = 0x8D50;
export def GL_RENDERBUFFER_RED_SIZE_EXT: uint = 0x8D50;
export def GL_RENDERBUFFER_SAMPLES: uint = 0x8CAB;
export def GL_RENDERBUFFER_SAMPLES_EXT: uint = 0x8CAB;
export def GL_RENDERBUFFER_STENCIL_SIZE: uint = 0x8D55;
export def GL_RENDERBUFFER_STENCIL_SIZE_EXT: uint = 0x8D55;
export def GL_RENDERBUFFER_STORAGE_SAMPLES_AMD: uint = 0x91B2;
export def GL_RENDERBUFFER_WIDTH: uint = 0x8D42;
export def GL_RENDERBUFFER_WIDTH_EXT: uint = 0x8D42;
export def GL_RENDERER: uint = 0x1F01;
export def GL_RENDER_GPU_MASK_NV: uint = 0x9558;
export def GL_REPEAT: uint = 0x2901;
export def GL_REPLACE: uint = 0x1E01;
export def GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN: uint = 0x85C3;
export def GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN: uint = 0x85C2;
export def GL_REPLACEMENT_CODE_ARRAY_SUN: uint = 0x85C0;
export def GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN: uint = 0x85C1;
export def GL_REPLACEMENT_CODE_SUN: uint = 0x81D8;
export def GL_REPLACE_EXT: uint = 0x8062;
export def GL_REPLACE_MIDDLE_SUN: uint = 0x0002;
export def GL_REPLACE_OLDEST_SUN: uint = 0x0003;
export def GL_REPLACE_VALUE_AMD: uint = 0x874B;
export def GL_REPLICATE_BORDER_HP: uint = 0x8153;
export def GL_REPRESENTATIVE_FRAGMENT_TEST_NV: uint = 0x937F;
export def GL_RESAMPLE_AVERAGE_OML: uint = 0x8988;
export def GL_RESAMPLE_DECIMATE_OML: uint = 0x8989;
export def GL_RESAMPLE_DECIMATE_SGIX: uint = 0x8430;
export def GL_RESAMPLE_REPLICATE_OML: uint = 0x8986;
export def GL_RESAMPLE_REPLICATE_SGIX: uint = 0x8433;
export def GL_RESAMPLE_ZERO_FILL_OML: uint = 0x8987;
export def GL_RESAMPLE_ZERO_FILL_SGIX: uint = 0x8434;
export def GL_RESCALE_NORMAL_EXT: uint = 0x803A;
export def GL_RESET_NOTIFICATION_STRATEGY: uint = 0x8256;
export def GL_RESET_NOTIFICATION_STRATEGY_ARB: uint = 0x8256;
export def GL_RESTART_PATH_NV: uint = 0xF0;
export def GL_RESTART_SUN: uint = 0x0001;
export def GL_RETAINED_APPLE: uint = 0x8A1B;
export def GL_RG: uint = 0x8227;
export def GL_RG16: uint = 0x822C;
export def GL_RG16F: uint = 0x822F;
export def GL_RG16F_EXT: uint = 0x822F;
export def GL_RG16I: uint = 0x8239;
export def GL_RG16UI: uint = 0x823A;
export def GL_RG16_SNORM: uint = 0x8F99;
export def GL_RG32F: uint = 0x8230;
export def GL_RG32F_EXT: uint = 0x8230;
export def GL_RG32I: uint = 0x823B;
export def GL_RG32UI: uint = 0x823C;
export def GL_RG8: uint = 0x822B;
export def GL_RG8I: uint = 0x8237;
export def GL_RG8UI: uint = 0x8238;
export def GL_RG8_EXT: uint = 0x822B;
export def GL_RG8_SNORM: uint = 0x8F95;
export def GL_RGB: uint = 0x1907;
export def GL_RGB10: uint = 0x8052;
export def GL_RGB10_A2: uint = 0x8059;
export def GL_RGB10_A2UI: uint = 0x906F;
export def GL_RGB10_A2_EXT: uint = 0x8059;
export def GL_RGB10_EXT: uint = 0x8052;
export def GL_RGB12: uint = 0x8053;
export def GL_RGB12_EXT: uint = 0x8053;
export def GL_RGB16: uint = 0x8054;
export def GL_RGB16F: uint = 0x881B;
export def GL_RGB16F_ARB: uint = 0x881B;
export def GL_RGB16F_EXT: uint = 0x881B;
export def GL_RGB16I: uint = 0x8D89;
export def GL_RGB16I_EXT: uint = 0x8D89;
export def GL_RGB16UI: uint = 0x8D77;
export def GL_RGB16UI_EXT: uint = 0x8D77;
export def GL_RGB16_EXT: uint = 0x8054;
export def GL_RGB16_SNORM: uint = 0x8F9A;
export def GL_RGB2_EXT: uint = 0x804E;
export def GL_RGB32F: uint = 0x8815;
export def GL_RGB32F_ARB: uint = 0x8815;
export def GL_RGB32F_EXT: uint = 0x8815;
export def GL_RGB32I: uint = 0x8D83;
export def GL_RGB32I_EXT: uint = 0x8D83;
export def GL_RGB32UI: uint = 0x8D71;
export def GL_RGB32UI_EXT: uint = 0x8D71;
export def GL_RGB4: uint = 0x804F;
export def GL_RGB4_EXT: uint = 0x804F;
export def GL_RGB4_S3TC: uint = 0x83A1;
export def GL_RGB5: uint = 0x8050;
export def GL_RGB565: uint = 0x8D62;
export def GL_RGB5_A1: uint = 0x8057;
export def GL_RGB5_A1_EXT: uint = 0x8057;
export def GL_RGB5_EXT: uint = 0x8050;
export def GL_RGB8: uint = 0x8051;
export def GL_RGB8I: uint = 0x8D8F;
export def GL_RGB8I_EXT: uint = 0x8D8F;
export def GL_RGB8UI: uint = 0x8D7D;
export def GL_RGB8UI_EXT: uint = 0x8D7D;
export def GL_RGB8_EXT: uint = 0x8051;
export def GL_RGB8_SNORM: uint = 0x8F96;
export def GL_RGB9_E5: uint = 0x8C3D;
export def GL_RGB9_E5_EXT: uint = 0x8C3D;
export def GL_RGBA: uint = 0x1908;
export def GL_RGBA12: uint = 0x805A;
export def GL_RGBA12_EXT: uint = 0x805A;
export def GL_RGBA16: uint = 0x805B;
export def GL_RGBA16F: uint = 0x881A;
export def GL_RGBA16F_ARB: uint = 0x881A;
export def GL_RGBA16F_EXT: uint = 0x881A;
export def GL_RGBA16I: uint = 0x8D88;
export def GL_RGBA16I_EXT: uint = 0x8D88;
export def GL_RGBA16UI: uint = 0x8D76;
export def GL_RGBA16UI_EXT: uint = 0x8D76;
export def GL_RGBA16_EXT: uint = 0x805B;
export def GL_RGBA16_SNORM: uint = 0x8F9B;
export def GL_RGBA2: uint = 0x8055;
export def GL_RGBA2_EXT: uint = 0x8055;
export def GL_RGBA32F: uint = 0x8814;
export def GL_RGBA32F_ARB: uint = 0x8814;
export def GL_RGBA32F_EXT: uint = 0x8814;
export def GL_RGBA32I: uint = 0x8D82;
export def GL_RGBA32I_EXT: uint = 0x8D82;
export def GL_RGBA32UI: uint = 0x8D70;
export def GL_RGBA32UI_EXT: uint = 0x8D70;
export def GL_RGBA4: uint = 0x8056;
export def GL_RGBA4_DXT5_S3TC: uint = 0x83A5;
export def GL_RGBA4_EXT: uint = 0x8056;
export def GL_RGBA4_S3TC: uint = 0x83A3;
export def GL_RGBA8: uint = 0x8058;
export def GL_RGBA8I: uint = 0x8D8E;
export def GL_RGBA8I_EXT: uint = 0x8D8E;
export def GL_RGBA8UI: uint = 0x8D7C;
export def GL_RGBA8UI_EXT: uint = 0x8D7C;
export def GL_RGBA8_EXT: uint = 0x8058;
export def GL_RGBA8_SNORM: uint = 0x8F97;
export def GL_RGBA_DXT5_S3TC: uint = 0x83A4;
export def GL_RGBA_FLOAT16_APPLE: uint = 0x881A;
export def GL_RGBA_FLOAT16_ATI: uint = 0x881A;
export def GL_RGBA_FLOAT32_APPLE: uint = 0x8814;
export def GL_RGBA_FLOAT32_ATI: uint = 0x8814;
export def GL_RGBA_FLOAT_MODE_ARB: uint = 0x8820;
export def GL_RGBA_FLOAT_MODE_ATI: uint = 0x8820;
export def GL_RGBA_INTEGER: uint = 0x8D99;
export def GL_RGBA_INTEGER_EXT: uint = 0x8D99;
export def GL_RGBA_INTEGER_MODE_EXT: uint = 0x8D9E;
export def GL_RGBA_S3TC: uint = 0x83A2;
export def GL_RGBA_SIGNED_COMPONENTS_EXT: uint = 0x8C3C;
export def GL_RGBA_SNORM: uint = 0x8F93;
export def GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV: uint = 0x86D9;
export def GL_RGB_422_APPLE: uint = 0x8A1F;
export def GL_RGB_FLOAT16_APPLE: uint = 0x881B;
export def GL_RGB_FLOAT16_ATI: uint = 0x881B;
export def GL_RGB_FLOAT32_APPLE: uint = 0x8815;
export def GL_RGB_FLOAT32_ATI: uint = 0x8815;
export def GL_RGB_INTEGER: uint = 0x8D98;
export def GL_RGB_INTEGER_EXT: uint = 0x8D98;
export def GL_RGB_RAW_422_APPLE: uint = 0x8A51;
export def GL_RGB_S3TC: uint = 0x83A0;
export def GL_RGB_SCALE_ARB: uint = 0x8573;
export def GL_RGB_SCALE_EXT: uint = 0x8573;
export def GL_RGB_SNORM: uint = 0x8F92;
export def GL_RG_INTEGER: uint = 0x8228;
export def GL_RG_SNORM: uint = 0x8F91;
export def GL_RIGHT: uint = 0x0407;
export def GL_ROUNDED_RECT2_NV: uint = 0xEA;
export def GL_ROUNDED_RECT4_NV: uint = 0xEC;
export def GL_ROUNDED_RECT8_NV: uint = 0xEE;
export def GL_ROUNDED_RECT_NV: uint = 0xE8;
export def GL_ROUND_NV: uint = 0x90A4;
export def GL_SAMPLER: uint = 0x82E6;
export def GL_SAMPLER_1D: uint = 0x8B5D;
export def GL_SAMPLER_1D_ARB: uint = 0x8B5D;
export def GL_SAMPLER_1D_ARRAY: uint = 0x8DC0;
export def GL_SAMPLER_1D_ARRAY_EXT: uint = 0x8DC0;
export def GL_SAMPLER_1D_ARRAY_SHADOW: uint = 0x8DC3;
export def GL_SAMPLER_1D_ARRAY_SHADOW_EXT: uint = 0x8DC3;
export def GL_SAMPLER_1D_SHADOW: uint = 0x8B61;
export def GL_SAMPLER_1D_SHADOW_ARB: uint = 0x8B61;
export def GL_SAMPLER_2D: uint = 0x8B5E;
export def GL_SAMPLER_2D_ARB: uint = 0x8B5E;
export def GL_SAMPLER_2D_ARRAY: uint = 0x8DC1;
export def GL_SAMPLER_2D_ARRAY_EXT: uint = 0x8DC1;
export def GL_SAMPLER_2D_ARRAY_SHADOW: uint = 0x8DC4;
export def GL_SAMPLER_2D_ARRAY_SHADOW_EXT: uint = 0x8DC4;
export def GL_SAMPLER_2D_MULTISAMPLE: uint = 0x9108;
export def GL_SAMPLER_2D_MULTISAMPLE_ARRAY: uint = 0x910B;
export def GL_SAMPLER_2D_RECT: uint = 0x8B63;
export def GL_SAMPLER_2D_RECT_ARB: uint = 0x8B63;
export def GL_SAMPLER_2D_RECT_SHADOW: uint = 0x8B64;
export def GL_SAMPLER_2D_RECT_SHADOW_ARB: uint = 0x8B64;
export def GL_SAMPLER_2D_SHADOW: uint = 0x8B62;
export def GL_SAMPLER_2D_SHADOW_ARB: uint = 0x8B62;
export def GL_SAMPLER_3D: uint = 0x8B5F;
export def GL_SAMPLER_3D_ARB: uint = 0x8B5F;
export def GL_SAMPLER_BINDING: uint = 0x8919;
export def GL_SAMPLER_BUFFER: uint = 0x8DC2;
export def GL_SAMPLER_BUFFER_AMD: uint = 0x9001;
export def GL_SAMPLER_BUFFER_EXT: uint = 0x8DC2;
export def GL_SAMPLER_CUBE: uint = 0x8B60;
export def GL_SAMPLER_CUBE_ARB: uint = 0x8B60;
export def GL_SAMPLER_CUBE_MAP_ARRAY_ARB: uint = 0x900C;
export def GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB: uint = 0x900D;
export def GL_SAMPLER_CUBE_SHADOW: uint = 0x8DC5;
export def GL_SAMPLER_CUBE_SHADOW_EXT: uint = 0x8DC5;
export def GL_SAMPLER_OBJECT_AMD: uint = 0x9155;
export def GL_SAMPLER_RENDERBUFFER_NV: uint = 0x8E56;
export def GL_SAMPLES: uint = 0x80A9;
export def GL_SAMPLES_3DFX: uint = 0x86B4;
export def GL_SAMPLES_ARB: uint = 0x80A9;
export def GL_SAMPLES_EXT: uint = 0x80A9;
export def GL_SAMPLES_PASSED: uint = 0x8914;
export def GL_SAMPLES_PASSED_ARB: uint = 0x8914;
export def GL_SAMPLES_SGIS: uint = 0x80A9;
export def GL_SAMPLE_ALPHA_TO_COVERAGE: uint = 0x809E;
export def GL_SAMPLE_ALPHA_TO_COVERAGE_ARB: uint = 0x809E;
export def GL_SAMPLE_ALPHA_TO_MASK_EXT: uint = 0x809E;
export def GL_SAMPLE_ALPHA_TO_MASK_SGIS: uint = 0x809E;
export def GL_SAMPLE_ALPHA_TO_ONE: uint = 0x809F;
export def GL_SAMPLE_ALPHA_TO_ONE_ARB: uint = 0x809F;
export def GL_SAMPLE_ALPHA_TO_ONE_EXT: uint = 0x809F;
export def GL_SAMPLE_ALPHA_TO_ONE_SGIS: uint = 0x809F;
export def GL_SAMPLE_BUFFERS: uint = 0x80A8;
export def GL_SAMPLE_BUFFERS_3DFX: uint = 0x86B3;
export def GL_SAMPLE_BUFFERS_ARB: uint = 0x80A8;
export def GL_SAMPLE_BUFFERS_EXT: uint = 0x80A8;
export def GL_SAMPLE_BUFFERS_SGIS: uint = 0x80A8;
export def GL_SAMPLE_COVERAGE: uint = 0x80A0;
export def GL_SAMPLE_COVERAGE_ARB: uint = 0x80A0;
export def GL_SAMPLE_COVERAGE_INVERT: uint = 0x80AB;
export def GL_SAMPLE_COVERAGE_INVERT_ARB: uint = 0x80AB;
export def GL_SAMPLE_COVERAGE_VALUE: uint = 0x80AA;
export def GL_SAMPLE_COVERAGE_VALUE_ARB: uint = 0x80AA;
export def GL_SAMPLE_LOCATION_ARB: uint = 0x8E50;
export def GL_SAMPLE_LOCATION_NV: uint = 0x8E50;
export def GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB: uint = 0x933F;
export def GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV: uint = 0x933F;
export def GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB: uint = 0x933E;
export def GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV: uint = 0x933E;
export def GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB: uint = 0x933D;
export def GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV: uint = 0x933D;
export def GL_SAMPLE_MASK: uint = 0x8E51;
export def GL_SAMPLE_MASK_EXT: uint = 0x80A0;
export def GL_SAMPLE_MASK_INVERT_EXT: uint = 0x80AB;
export def GL_SAMPLE_MASK_INVERT_SGIS: uint = 0x80AB;
export def GL_SAMPLE_MASK_NV: uint = 0x8E51;
export def GL_SAMPLE_MASK_SGIS: uint = 0x80A0;
export def GL_SAMPLE_MASK_VALUE: uint = 0x8E52;
export def GL_SAMPLE_MASK_VALUE_EXT: uint = 0x80AA;
export def GL_SAMPLE_MASK_VALUE_NV: uint = 0x8E52;
export def GL_SAMPLE_MASK_VALUE_SGIS: uint = 0x80AA;
export def GL_SAMPLE_PATTERN_EXT: uint = 0x80AC;
export def GL_SAMPLE_PATTERN_SGIS: uint = 0x80AC;
export def GL_SAMPLE_POSITION: uint = 0x8E50;
export def GL_SAMPLE_POSITION_NV: uint = 0x8E50;
export def GL_SAMPLE_SHADING_ARB: uint = 0x8C36;
export def GL_SATURATE_BIT_ATI: uint = 0x00000040;
export def GL_SCALAR_EXT: uint = 0x87BE;
export def GL_SCALEBIAS_HINT_SGIX: uint = 0x8322;
export def GL_SCALED_RESOLVE_FASTEST_EXT: uint = 0x90BA;
export def GL_SCALED_RESOLVE_NICEST_EXT: uint = 0x90BB;
export def GL_SCALE_BY_FOUR_NV: uint = 0x853F;
export def GL_SCALE_BY_ONE_HALF_NV: uint = 0x8540;
export def GL_SCALE_BY_TWO_NV: uint = 0x853E;
export def GL_SCISSOR_BOX: uint = 0x0C10;
export def GL_SCISSOR_BOX_EXCLUSIVE_NV: uint = 0x9556;
export def GL_SCISSOR_COMMAND_NV: uint = 0x0011;
export def GL_SCISSOR_TEST: uint = 0x0C11;
export def GL_SCISSOR_TEST_EXCLUSIVE_NV: uint = 0x9555;
export def GL_SCREEN_COORDINATES_REND: uint = 0x8490;
export def GL_SCREEN_KHR: uint = 0x9295;
export def GL_SCREEN_NV: uint = 0x9295;
export def GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV: uint = 0x8F27;
export def GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB: uint = 0x889C;
export def GL_SECONDARY_COLOR_ARRAY_EXT: uint = 0x845E;
export def GL_SECONDARY_COLOR_ARRAY_LENGTH_NV: uint = 0x8F31;
export def GL_SECONDARY_COLOR_ARRAY_LIST_IBM: uint = 103077;
export def GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM: uint = 103087;
export def GL_SECONDARY_COLOR_ARRAY_POINTER_EXT: uint = 0x845D;
export def GL_SECONDARY_COLOR_ARRAY_SIZE_EXT: uint = 0x845A;
export def GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT: uint = 0x845C;
export def GL_SECONDARY_COLOR_ARRAY_TYPE_EXT: uint = 0x845B;
export def GL_SECONDARY_COLOR_NV: uint = 0x852D;
export def GL_SECONDARY_INTERPOLATOR_ATI: uint = 0x896D;
export def GL_SEMAPHORE_TYPE_BINARY_NV: uint = 0x95B4;
export def GL_SEMAPHORE_TYPE_NV: uint = 0x95B3;
export def GL_SEMAPHORE_TYPE_TIMELINE_NV: uint = 0x95B5;
export def GL_SEPARABLE_2D_EXT: uint = 0x8012;
export def GL_SEPARATE_ATTRIBS: uint = 0x8C8D;
export def GL_SEPARATE_ATTRIBS_EXT: uint = 0x8C8D;
export def GL_SEPARATE_ATTRIBS_NV: uint = 0x8C8D;
export def GL_SEPARATE_SPECULAR_COLOR_EXT: uint = 0x81FA;
export def GL_SET: uint = 0x150F;
export def GL_SET_AMD: uint = 0x874A;
export def GL_SHADER: uint = 0x82E1;
export def GL_SHADER_BINARY_FORMATS: uint = 0x8DF8;
export def GL_SHADER_BINARY_FORMAT_SPIR_V: uint = 0x9551;
export def GL_SHADER_BINARY_FORMAT_SPIR_V_ARB: uint = 0x9551;
export def GL_SHADER_COMPILER: uint = 0x8DFA;
export def GL_SHADER_CONSISTENT_NV: uint = 0x86DD;
export def GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV: uint = 0x00000010;
export def GL_SHADER_IMAGE_ACCESS_BARRIER_BIT: uint = 0x00000020;
export def GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT: uint = 0x00000020;
export def GL_SHADER_IMAGE_ATOMIC: uint = 0x82A6;
export def GL_SHADER_IMAGE_LOAD: uint = 0x82A4;
export def GL_SHADER_IMAGE_STORE: uint = 0x82A5;
export def GL_SHADER_INCLUDE_ARB: uint = 0x8DAE;
export def GL_SHADER_OBJECT_ARB: uint = 0x8B48;
export def GL_SHADER_OBJECT_EXT: uint = 0x8B48;
export def GL_SHADER_OPERATION_NV: uint = 0x86DF;
export def GL_SHADER_SOURCE_LENGTH: uint = 0x8B88;
export def GL_SHADER_STORAGE_BARRIER_BIT: uint = 0x00002000;
export def GL_SHADER_STORAGE_BLOCK: uint = 0x92E6;
export def GL_SHADER_STORAGE_BUFFER: uint = 0x90D2;
export def GL_SHADER_STORAGE_BUFFER_BINDING: uint = 0x90D3;
export def GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: uint = 0x90DF;
export def GL_SHADER_STORAGE_BUFFER_SIZE: uint = 0x90D5;
export def GL_SHADER_STORAGE_BUFFER_START: uint = 0x90D4;
export def GL_SHADER_TYPE: uint = 0x8B4F;
export def GL_SHADING_LANGUAGE_VERSION: uint = 0x8B8C;
export def GL_SHADING_LANGUAGE_VERSION_ARB: uint = 0x8B8C;
export def GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV: uint = 0x956F;
export def GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV: uint = 0x9566;
export def GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV: uint = 0x9567;
export def GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV: uint = 0x9568;
export def GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV: uint = 0x9569;
export def GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV: uint = 0x956A;
export def GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV: uint = 0x956B;
export def GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV: uint = 0x9565;
export def GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV: uint = 0x956C;
export def GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV: uint = 0x956D;
export def GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV: uint = 0x956E;
export def GL_SHADING_RATE_IMAGE_BINDING_NV: uint = 0x955B;
export def GL_SHADING_RATE_IMAGE_NV: uint = 0x9563;
export def GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV: uint = 0x95B2;
export def GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV: uint = 0x955E;
export def GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV: uint = 0x95B1;
export def GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV: uint = 0x955D;
export def GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV: uint = 0x955C;
export def GL_SHADING_RATE_NO_INVOCATIONS_NV: uint = 0x9564;
export def GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV: uint = 0x95AE;
export def GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV: uint = 0x95AF;
export def GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV: uint = 0x95B0;
export def GL_SHADOW_AMBIENT_SGIX: uint = 0x80BF;
export def GL_SHADOW_ATTENUATION_EXT: uint = 0x834E;
export def GL_SHARED_EDGE_NV: uint = 0xC0;
export def GL_SHARED_TEXTURE_PALETTE_EXT: uint = 0x81FB;
export def GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS: uint = 0x80B0;
export def GL_SHORT: uint = 0x1402;
export def GL_SIGNALED: uint = 0x9119;
export def GL_SIGNED_ALPHA8_NV: uint = 0x8706;
export def GL_SIGNED_ALPHA_NV: uint = 0x8705;
export def GL_SIGNED_HILO16_NV: uint = 0x86FA;
export def GL_SIGNED_HILO8_NV: uint = 0x885F;
export def GL_SIGNED_HILO_NV: uint = 0x86F9;
export def GL_SIGNED_IDENTITY_NV: uint = 0x853C;
export def GL_SIGNED_INTENSITY8_NV: uint = 0x8708;
export def GL_SIGNED_INTENSITY_NV: uint = 0x8707;
export def GL_SIGNED_LUMINANCE8_ALPHA8_NV: uint = 0x8704;
export def GL_SIGNED_LUMINANCE8_NV: uint = 0x8702;
export def GL_SIGNED_LUMINANCE_ALPHA_NV: uint = 0x8703;
export def GL_SIGNED_LUMINANCE_NV: uint = 0x8701;
export def GL_SIGNED_NEGATE_NV: uint = 0x853D;
export def GL_SIGNED_NORMALIZED: uint = 0x8F9C;
export def GL_SIGNED_RGB8_NV: uint = 0x86FF;
export def GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV: uint = 0x870D;
export def GL_SIGNED_RGBA8_NV: uint = 0x86FC;
export def GL_SIGNED_RGBA_NV: uint = 0x86FB;
export def GL_SIGNED_RGB_NV: uint = 0x86FE;
export def GL_SIGNED_RGB_UNSIGNED_ALPHA_NV: uint = 0x870C;
export def GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: uint = 0x82AC;
export def GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: uint = 0x82AE;
export def GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: uint = 0x82AD;
export def GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: uint = 0x82AF;
export def GL_SINGLE_COLOR_EXT: uint = 0x81F9;
export def GL_SKIP_COMPONENTS1_NV: int = -6;
export def GL_SKIP_COMPONENTS2_NV: int = -5;
export def GL_SKIP_COMPONENTS3_NV: int = -4;
export def GL_SKIP_COMPONENTS4_NV: int = -3;
export def GL_SKIP_DECODE_EXT: uint = 0x8A4A;
export def GL_SKIP_MISSING_GLYPH_NV: uint = 0x90A9;
export def GL_SLICE_ACCUM_SUN: uint = 0x85CC;
export def GL_SLUMINANCE8_ALPHA8_EXT: uint = 0x8C45;
export def GL_SLUMINANCE8_EXT: uint = 0x8C47;
export def GL_SLUMINANCE_ALPHA_EXT: uint = 0x8C44;
export def GL_SLUMINANCE_EXT: uint = 0x8C46;
export def GL_SMALL_CCW_ARC_TO_NV: uint = 0x12;
export def GL_SMALL_CW_ARC_TO_NV: uint = 0x14;
export def GL_SMOOTH_CUBIC_CURVE_TO_NV: uint = 0x10;
export def GL_SMOOTH_LINE_WIDTH_GRANULARITY: uint = 0x0B23;
export def GL_SMOOTH_LINE_WIDTH_RANGE: uint = 0x0B22;
export def GL_SMOOTH_POINT_SIZE_GRANULARITY: uint = 0x0B13;
export def GL_SMOOTH_POINT_SIZE_RANGE: uint = 0x0B12;
export def GL_SMOOTH_QUADRATIC_CURVE_TO_NV: uint = 0x0E;
export def GL_SM_COUNT_NV: uint = 0x933B;
export def GL_SOFTLIGHT_KHR: uint = 0x929C;
export def GL_SOFTLIGHT_NV: uint = 0x929C;
export def GL_SOURCE0_ALPHA_ARB: uint = 0x8588;
export def GL_SOURCE0_ALPHA_EXT: uint = 0x8588;
export def GL_SOURCE0_RGB_ARB: uint = 0x8580;
export def GL_SOURCE0_RGB_EXT: uint = 0x8580;
export def GL_SOURCE1_ALPHA: uint = 0x8589;
export def GL_SOURCE1_ALPHA_ARB: uint = 0x8589;
export def GL_SOURCE1_ALPHA_EXT: uint = 0x8589;
export def GL_SOURCE1_RGB_ARB: uint = 0x8581;
export def GL_SOURCE1_RGB_EXT: uint = 0x8581;
export def GL_SOURCE2_ALPHA_ARB: uint = 0x858A;
export def GL_SOURCE2_ALPHA_EXT: uint = 0x858A;
export def GL_SOURCE2_RGB_ARB: uint = 0x8582;
export def GL_SOURCE2_RGB_EXT: uint = 0x8582;
export def GL_SOURCE3_ALPHA_NV: uint = 0x858B;
export def GL_SOURCE3_RGB_NV: uint = 0x8583;
export def GL_SPARE0_NV: uint = 0x852E;
export def GL_SPARE0_PLUS_SECONDARY_COLOR_NV: uint = 0x8532;
export def GL_SPARE1_NV: uint = 0x852F;
export def GL_SPARSE_BUFFER_PAGE_SIZE_ARB: uint = 0x82F8;
export def GL_SPARSE_STORAGE_BIT_ARB: uint = 0x0400;
export def GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB: uint = 0x91A9;
export def GL_SPIR_V_BINARY: uint = 0x9552;
export def GL_SPIR_V_BINARY_ARB: uint = 0x9552;
export def GL_SPIR_V_EXTENSIONS: uint = 0x9553;
export def GL_SPRITE_AXIAL_SGIX: uint = 0x814C;
export def GL_SPRITE_AXIS_SGIX: uint = 0x814A;
export def GL_SPRITE_EYE_ALIGNED_SGIX: uint = 0x814E;
export def GL_SPRITE_MODE_SGIX: uint = 0x8149;
export def GL_SPRITE_OBJECT_ALIGNED_SGIX: uint = 0x814D;
export def GL_SPRITE_SGIX: uint = 0x8148;
export def GL_SPRITE_TRANSLATION_SGIX: uint = 0x814B;
export def GL_SQUARE_NV: uint = 0x90A3;
export def GL_SR8_EXT: uint = 0x8FBD;
export def GL_SRC1_ALPHA: uint = 0x8589;
export def GL_SRC1_COLOR: uint = 0x88F9;
export def GL_SRC_ALPHA: uint = 0x0302;
export def GL_SRC_ALPHA_SATURATE: uint = 0x0308;
export def GL_SRC_ATOP_NV: uint = 0x928E;
export def GL_SRC_COLOR: uint = 0x0300;
export def GL_SRC_IN_NV: uint = 0x928A;
export def GL_SRC_NV: uint = 0x9286;
export def GL_SRC_OUT_NV: uint = 0x928C;
export def GL_SRC_OVER_NV: uint = 0x9288;
export def GL_SRG8_EXT: uint = 0x8FBE;
export def GL_SRGB: uint = 0x8C40;
export def GL_SRGB8: uint = 0x8C41;
export def GL_SRGB8_ALPHA8: uint = 0x8C43;
export def GL_SRGB8_ALPHA8_EXT: uint = 0x8C43;
export def GL_SRGB8_EXT: uint = 0x8C41;
export def GL_SRGB_ALPHA: uint = 0x8C42;
export def GL_SRGB_ALPHA_EXT: uint = 0x8C42;
export def GL_SRGB_DECODE_ARB: uint = 0x8299;
export def GL_SRGB_EXT: uint = 0x8C40;
export def GL_SRGB_READ: uint = 0x8297;
export def GL_SRGB_WRITE: uint = 0x8298;
export def GL_STACK_OVERFLOW: uint = 0x0503;
export def GL_STACK_UNDERFLOW: uint = 0x0504;
export def GL_STANDARD_FONT_FORMAT_NV: uint = 0x936C;
export def GL_STANDARD_FONT_NAME_NV: uint = 0x9072;
export def GL_STATIC_ATI: uint = 0x8760;
export def GL_STATIC_COPY: uint = 0x88E6;
export def GL_STATIC_COPY_ARB: uint = 0x88E6;
export def GL_STATIC_DRAW: uint = 0x88E4;
export def GL_STATIC_DRAW_ARB: uint = 0x88E4;
export def GL_STATIC_READ: uint = 0x88E5;
export def GL_STATIC_READ_ARB: uint = 0x88E5;
export def GL_STATIC_VERTEX_ARRAY_IBM: uint = 103061;
export def GL_STENCIL: uint = 0x1802;
export def GL_STENCIL_ATTACHMENT: uint = 0x8D20;
export def GL_STENCIL_ATTACHMENT_EXT: uint = 0x8D20;
export def GL_STENCIL_BACK_FAIL: uint = 0x8801;
export def GL_STENCIL_BACK_FAIL_ATI: uint = 0x8801;
export def GL_STENCIL_BACK_FUNC: uint = 0x8800;
export def GL_STENCIL_BACK_FUNC_ATI: uint = 0x8800;
export def GL_STENCIL_BACK_OP_VALUE_AMD: uint = 0x874D;
export def GL_STENCIL_BACK_PASS_DEPTH_FAIL: uint = 0x8802;
export def GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI: uint = 0x8802;
export def GL_STENCIL_BACK_PASS_DEPTH_PASS: uint = 0x8803;
export def GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI: uint = 0x8803;
export def GL_STENCIL_BACK_REF: uint = 0x8CA3;
export def GL_STENCIL_BACK_VALUE_MASK: uint = 0x8CA4;
export def GL_STENCIL_BACK_WRITEMASK: uint = 0x8CA5;
export def GL_STENCIL_BUFFER_BIT: uint = 0x00000400;
export def GL_STENCIL_CLEAR_TAG_VALUE_EXT: uint = 0x88F3;
export def GL_STENCIL_CLEAR_VALUE: uint = 0x0B91;
export def GL_STENCIL_COMPONENTS: uint = 0x8285;
export def GL_STENCIL_FAIL: uint = 0x0B94;
export def GL_STENCIL_FUNC: uint = 0x0B92;
export def GL_STENCIL_INDEX: uint = 0x1901;
export def GL_STENCIL_INDEX1: uint = 0x8D46;
export def GL_STENCIL_INDEX16: uint = 0x8D49;
export def GL_STENCIL_INDEX16_EXT: uint = 0x8D49;
export def GL_STENCIL_INDEX1_EXT: uint = 0x8D46;
export def GL_STENCIL_INDEX4: uint = 0x8D47;
export def GL_STENCIL_INDEX4_EXT: uint = 0x8D47;
export def GL_STENCIL_INDEX8: uint = 0x8D48;
export def GL_STENCIL_INDEX8_EXT: uint = 0x8D48;
export def GL_STENCIL_OP_VALUE_AMD: uint = 0x874C;
export def GL_STENCIL_PASS_DEPTH_FAIL: uint = 0x0B95;
export def GL_STENCIL_PASS_DEPTH_PASS: uint = 0x0B96;
export def GL_STENCIL_REF: uint = 0x0B97;
export def GL_STENCIL_REF_COMMAND_NV: uint = 0x000C;
export def GL_STENCIL_RENDERABLE: uint = 0x8288;
export def GL_STENCIL_SAMPLES_NV: uint = 0x932E;
export def GL_STENCIL_TAG_BITS_EXT: uint = 0x88F2;
export def GL_STENCIL_TEST: uint = 0x0B90;
export def GL_STENCIL_TEST_TWO_SIDE_EXT: uint = 0x8910;
export def GL_STENCIL_VALUE_MASK: uint = 0x0B93;
export def GL_STENCIL_WRITEMASK: uint = 0x0B98;
export def GL_STEREO: uint = 0x0C33;
export def GL_STORAGE_CACHED_APPLE: uint = 0x85BE;
export def GL_STORAGE_CLIENT_APPLE: uint = 0x85B4;
export def GL_STORAGE_PRIVATE_APPLE: uint = 0x85BD;
export def GL_STORAGE_SHARED_APPLE: uint = 0x85BF;
export def GL_STREAM_COPY: uint = 0x88E2;
export def GL_STREAM_COPY_ARB: uint = 0x88E2;
export def GL_STREAM_DRAW: uint = 0x88E0;
export def GL_STREAM_DRAW_ARB: uint = 0x88E0;
export def GL_STREAM_RASTERIZATION_AMD: uint = 0x91A0;
export def GL_STREAM_READ: uint = 0x88E1;
export def GL_STREAM_READ_ARB: uint = 0x88E1;
export def GL_STRICT_DEPTHFUNC_HINT_PGI: uint = 0x1A216;
export def GL_STRICT_LIGHTING_HINT_PGI: uint = 0x1A217;
export def GL_STRICT_SCISSOR_HINT_PGI: uint = 0x1A218;
export def GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR: uint = 0x00000004;
export def GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR: uint = 0x00000008;
export def GL_SUBGROUP_FEATURE_BASIC_BIT_KHR: uint = 0x00000001;
export def GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR: uint = 0x00000040;
export def GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV: uint = 0x00000100;
export def GL_SUBGROUP_FEATURE_QUAD_BIT_KHR: uint = 0x00000080;
export def GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR: uint = 0x00000010;
export def GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR: uint = 0x00000020;
export def GL_SUBGROUP_FEATURE_VOTE_BIT_KHR: uint = 0x00000002;
export def GL_SUBGROUP_QUAD_ALL_STAGES_KHR: uint = 0x9535;
export def GL_SUBGROUP_SIZE_KHR: uint = 0x9532;
export def GL_SUBGROUP_SUPPORTED_FEATURES_KHR: uint = 0x9534;
export def GL_SUBGROUP_SUPPORTED_STAGES_KHR: uint = 0x9533;
export def GL_SUBPIXEL_BITS: uint = 0x0D50;
export def GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV: uint = 0x9347;
export def GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV: uint = 0x9348;
export def GL_SUBSAMPLE_DISTANCE_AMD: uint = 0x883F;
export def GL_SUBTRACT_ARB: uint = 0x84E7;
export def GL_SUB_ATI: uint = 0x8965;
export def GL_SUCCESS_NV: uint = 0x902F;
export def GL_SUPERSAMPLE_SCALE_X_NV: uint = 0x9372;
export def GL_SUPERSAMPLE_SCALE_Y_NV: uint = 0x9373;
export def GL_SUPPORTED_MULTISAMPLE_MODES_AMD: uint = 0x91B7;
export def GL_SURFACE_MAPPED_NV: uint = 0x8700;
export def GL_SURFACE_REGISTERED_NV: uint = 0x86FD;
export def GL_SURFACE_STATE_NV: uint = 0x86EB;
export def GL_SWIZZLE_STQ_ATI: uint = 0x8977;
export def GL_SWIZZLE_STQ_DQ_ATI: uint = 0x8979;
export def GL_SWIZZLE_STRQ_ATI: uint = 0x897A;
export def GL_SWIZZLE_STRQ_DQ_ATI: uint = 0x897B;
export def GL_SWIZZLE_STR_ATI: uint = 0x8976;
export def GL_SWIZZLE_STR_DR_ATI: uint = 0x8978;
export def GL_SYNC_CL_EVENT_ARB: uint = 0x8240;
export def GL_SYNC_CL_EVENT_COMPLETE_ARB: uint = 0x8241;
export def GL_SYNC_CONDITION: uint = 0x9113;
export def GL_SYNC_FENCE: uint = 0x9116;
export def GL_SYNC_FLAGS: uint = 0x9115;
export def GL_SYNC_FLUSH_COMMANDS_BIT: uint = 0x00000001;
export def GL_SYNC_GPU_COMMANDS_COMPLETE: uint = 0x9117;
export def GL_SYNC_STATUS: uint = 0x9114;
export def GL_SYNC_X11_FENCE_EXT: uint = 0x90E1;
export def GL_SYSTEM_FONT_NAME_NV: uint = 0x9073;
export def GL_T2F_IUI_N3F_V2F_EXT: uint = 0x81B3;
export def GL_T2F_IUI_N3F_V3F_EXT: uint = 0x81B4;
export def GL_T2F_IUI_V2F_EXT: uint = 0x81B1;
export def GL_T2F_IUI_V3F_EXT: uint = 0x81B2;
export def GL_TABLE_TOO_LARGE_EXT: uint = 0x8031;
export def GL_TANGENT_ARRAY_EXT: uint = 0x8439;
export def GL_TANGENT_ARRAY_POINTER_EXT: uint = 0x8442;
export def GL_TANGENT_ARRAY_STRIDE_EXT: uint = 0x843F;
export def GL_TANGENT_ARRAY_TYPE_EXT: uint = 0x843E;
export def GL_TASK_SHADER_BIT_NV: uint = 0x00000080;
export def GL_TASK_SHADER_NV: uint = 0x955A;
export def GL_TASK_SUBROUTINE_NV: uint = 0x957D;
export def GL_TASK_SUBROUTINE_UNIFORM_NV: uint = 0x957F;
export def GL_TASK_WORK_GROUP_SIZE_NV: uint = 0x953F;
export def GL_TERMINATE_SEQUENCE_COMMAND_NV: uint = 0x0000;
export def GL_TESSELLATION_FACTOR_AMD: uint = 0x9005;
export def GL_TESSELLATION_MODE_AMD: uint = 0x9004;
export def GL_TESS_CONTROL_OUTPUT_VERTICES: uint = 0x8E75;
export def GL_TESS_CONTROL_PROGRAM_NV: uint = 0x891E;
export def GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x8C74;
export def GL_TESS_CONTROL_SHADER: uint = 0x8E88;
export def GL_TESS_CONTROL_SHADER_BIT: uint = 0x00000008;
export def GL_TESS_CONTROL_SHADER_PATCHES: uint = 0x82F1;
export def GL_TESS_CONTROL_SHADER_PATCHES_ARB: uint = 0x82F1;
export def GL_TESS_CONTROL_SUBROUTINE: uint = 0x92E9;
export def GL_TESS_CONTROL_SUBROUTINE_UNIFORM: uint = 0x92EF;
export def GL_TESS_CONTROL_TEXTURE: uint = 0x829C;
export def GL_TESS_EVALUATION_PROGRAM_NV: uint = 0x891F;
export def GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x8C75;
export def GL_TESS_EVALUATION_SHADER: uint = 0x8E87;
export def GL_TESS_EVALUATION_SHADER_BIT: uint = 0x00000010;
export def GL_TESS_EVALUATION_SHADER_INVOCATIONS: uint = 0x82F2;
export def GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB: uint = 0x82F2;
export def GL_TESS_EVALUATION_SUBROUTINE: uint = 0x92EA;
export def GL_TESS_EVALUATION_SUBROUTINE_UNIFORM: uint = 0x92F0;
export def GL_TESS_EVALUATION_TEXTURE: uint = 0x829D;
export def GL_TESS_GEN_MODE: uint = 0x8E76;
export def GL_TESS_GEN_POINT_MODE: uint = 0x8E79;
export def GL_TESS_GEN_SPACING: uint = 0x8E77;
export def GL_TESS_GEN_VERTEX_ORDER: uint = 0x8E78;
export def GL_TEXCOORD1_BIT_PGI: uint = 0x10000000;
export def GL_TEXCOORD2_BIT_PGI: uint = 0x20000000;
export def GL_TEXCOORD3_BIT_PGI: uint = 0x40000000;
export def GL_TEXCOORD4_BIT_PGI: uint = 0x80000000;
export def GL_TEXTURE: uint = 0x1702;
export def GL_TEXTURE0: uint = 0x84C0;
export def GL_TEXTURE0_ARB: uint = 0x84C0;
export def GL_TEXTURE1: uint = 0x84C1;
export def GL_TEXTURE10: uint = 0x84CA;
export def GL_TEXTURE10_ARB: uint = 0x84CA;
export def GL_TEXTURE11: uint = 0x84CB;
export def GL_TEXTURE11_ARB: uint = 0x84CB;
export def GL_TEXTURE12: uint = 0x84CC;
export def GL_TEXTURE12_ARB: uint = 0x84CC;
export def GL_TEXTURE13: uint = 0x84CD;
export def GL_TEXTURE13_ARB: uint = 0x84CD;
export def GL_TEXTURE14: uint = 0x84CE;
export def GL_TEXTURE14_ARB: uint = 0x84CE;
export def GL_TEXTURE15: uint = 0x84CF;
export def GL_TEXTURE15_ARB: uint = 0x84CF;
export def GL_TEXTURE16: uint = 0x84D0;
export def GL_TEXTURE16_ARB: uint = 0x84D0;
export def GL_TEXTURE17: uint = 0x84D1;
export def GL_TEXTURE17_ARB: uint = 0x84D1;
export def GL_TEXTURE18: uint = 0x84D2;
export def GL_TEXTURE18_ARB: uint = 0x84D2;
export def GL_TEXTURE19: uint = 0x84D3;
export def GL_TEXTURE19_ARB: uint = 0x84D3;
export def GL_TEXTURE1_ARB: uint = 0x84C1;
export def GL_TEXTURE2: uint = 0x84C2;
export def GL_TEXTURE20: uint = 0x84D4;
export def GL_TEXTURE20_ARB: uint = 0x84D4;
export def GL_TEXTURE21: uint = 0x84D5;
export def GL_TEXTURE21_ARB: uint = 0x84D5;
export def GL_TEXTURE22: uint = 0x84D6;
export def GL_TEXTURE22_ARB: uint = 0x84D6;
export def GL_TEXTURE23: uint = 0x84D7;
export def GL_TEXTURE23_ARB: uint = 0x84D7;
export def GL_TEXTURE24: uint = 0x84D8;
export def GL_TEXTURE24_ARB: uint = 0x84D8;
export def GL_TEXTURE25: uint = 0x84D9;
export def GL_TEXTURE25_ARB: uint = 0x84D9;
export def GL_TEXTURE26: uint = 0x84DA;
export def GL_TEXTURE26_ARB: uint = 0x84DA;
export def GL_TEXTURE27: uint = 0x84DB;
export def GL_TEXTURE27_ARB: uint = 0x84DB;
export def GL_TEXTURE28: uint = 0x84DC;
export def GL_TEXTURE28_ARB: uint = 0x84DC;
export def GL_TEXTURE29: uint = 0x84DD;
export def GL_TEXTURE29_ARB: uint = 0x84DD;
export def GL_TEXTURE2_ARB: uint = 0x84C2;
export def GL_TEXTURE3: uint = 0x84C3;
export def GL_TEXTURE30: uint = 0x84DE;
export def GL_TEXTURE30_ARB: uint = 0x84DE;
export def GL_TEXTURE31: uint = 0x84DF;
export def GL_TEXTURE31_ARB: uint = 0x84DF;
export def GL_TEXTURE3_ARB: uint = 0x84C3;
export def GL_TEXTURE4: uint = 0x84C4;
export def GL_TEXTURE4_ARB: uint = 0x84C4;
export def GL_TEXTURE5: uint = 0x84C5;
export def GL_TEXTURE5_ARB: uint = 0x84C5;
export def GL_TEXTURE6: uint = 0x84C6;
export def GL_TEXTURE6_ARB: uint = 0x84C6;
export def GL_TEXTURE7: uint = 0x84C7;
export def GL_TEXTURE7_ARB: uint = 0x84C7;
export def GL_TEXTURE8: uint = 0x84C8;
export def GL_TEXTURE8_ARB: uint = 0x84C8;
export def GL_TEXTURE9: uint = 0x84C9;
export def GL_TEXTURE9_ARB: uint = 0x84C9;
export def GL_TEXTURE_1D: uint = 0x0DE0;
export def GL_TEXTURE_1D_ARRAY: uint = 0x8C18;
export def GL_TEXTURE_1D_ARRAY_EXT: uint = 0x8C18;
export def GL_TEXTURE_1D_BINDING_EXT: uint = 0x8068;
export def GL_TEXTURE_1D_STACK_BINDING_MESAX: uint = 0x875D;
export def GL_TEXTURE_1D_STACK_MESAX: uint = 0x8759;
export def GL_TEXTURE_2D: uint = 0x0DE1;
export def GL_TEXTURE_2D_ARRAY: uint = 0x8C1A;
export def GL_TEXTURE_2D_ARRAY_EXT: uint = 0x8C1A;
export def GL_TEXTURE_2D_BINDING_EXT: uint = 0x8069;
export def GL_TEXTURE_2D_MULTISAMPLE: uint = 0x9100;
export def GL_TEXTURE_2D_MULTISAMPLE_ARRAY: uint = 0x9102;
export def GL_TEXTURE_2D_STACK_BINDING_MESAX: uint = 0x875E;
export def GL_TEXTURE_2D_STACK_MESAX: uint = 0x875A;
export def GL_TEXTURE_3D: uint = 0x806F;
export def GL_TEXTURE_3D_BINDING_EXT: uint = 0x806A;
export def GL_TEXTURE_3D_EXT: uint = 0x806F;
export def GL_TEXTURE_4DSIZE_SGIS: uint = 0x8136;
export def GL_TEXTURE_4D_BINDING_SGIS: uint = 0x814F;
export def GL_TEXTURE_4D_SGIS: uint = 0x8134;
export def GL_TEXTURE_ALPHA_SIZE: uint = 0x805F;
export def GL_TEXTURE_ALPHA_SIZE_EXT: uint = 0x805F;
export def GL_TEXTURE_ALPHA_TYPE: uint = 0x8C13;
export def GL_TEXTURE_ALPHA_TYPE_ARB: uint = 0x8C13;
export def GL_TEXTURE_APPLICATION_MODE_EXT: uint = 0x834F;
export def GL_TEXTURE_BASE_LEVEL: uint = 0x813C;
export def GL_TEXTURE_BASE_LEVEL_SGIS: uint = 0x813C;
export def GL_TEXTURE_BINDING_1D: uint = 0x8068;
export def GL_TEXTURE_BINDING_1D_ARRAY: uint = 0x8C1C;
export def GL_TEXTURE_BINDING_1D_ARRAY_EXT: uint = 0x8C1C;
export def GL_TEXTURE_BINDING_2D: uint = 0x8069;
export def GL_TEXTURE_BINDING_2D_ARRAY: uint = 0x8C1D;
export def GL_TEXTURE_BINDING_2D_ARRAY_EXT: uint = 0x8C1D;
export def GL_TEXTURE_BINDING_2D_MULTISAMPLE: uint = 0x9104;
export def GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: uint = 0x9105;
export def GL_TEXTURE_BINDING_3D: uint = 0x806A;
export def GL_TEXTURE_BINDING_BUFFER: uint = 0x8C2C;
export def GL_TEXTURE_BINDING_BUFFER_ARB: uint = 0x8C2C;
export def GL_TEXTURE_BINDING_BUFFER_EXT: uint = 0x8C2C;
export def GL_TEXTURE_BINDING_CUBE_MAP: uint = 0x8514;
export def GL_TEXTURE_BINDING_CUBE_MAP_ARB: uint = 0x8514;
export def GL_TEXTURE_BINDING_CUBE_MAP_ARRAY: uint = 0x900A;
export def GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB: uint = 0x900A;
export def GL_TEXTURE_BINDING_CUBE_MAP_EXT: uint = 0x8514;
export def GL_TEXTURE_BINDING_RECTANGLE: uint = 0x84F6;
export def GL_TEXTURE_BINDING_RECTANGLE_ARB: uint = 0x84F6;
export def GL_TEXTURE_BINDING_RECTANGLE_NV: uint = 0x84F6;
export def GL_TEXTURE_BINDING_RENDERBUFFER_NV: uint = 0x8E53;
export def GL_TEXTURE_BLUE_SIZE: uint = 0x805E;
export def GL_TEXTURE_BLUE_SIZE_EXT: uint = 0x805E;
export def GL_TEXTURE_BLUE_TYPE: uint = 0x8C12;
export def GL_TEXTURE_BLUE_TYPE_ARB: uint = 0x8C12;
export def GL_TEXTURE_BORDER_COLOR: uint = 0x1004;
export def GL_TEXTURE_BORDER_VALUES_NV: uint = 0x871A;
export def GL_TEXTURE_BUFFER: uint = 0x8C2A;
export def GL_TEXTURE_BUFFER_ARB: uint = 0x8C2A;
export def GL_TEXTURE_BUFFER_DATA_STORE_BINDING: uint = 0x8C2D;
export def GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB: uint = 0x8C2D;
export def GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT: uint = 0x8C2D;
export def GL_TEXTURE_BUFFER_EXT: uint = 0x8C2A;
export def GL_TEXTURE_BUFFER_FORMAT_ARB: uint = 0x8C2E;
export def GL_TEXTURE_BUFFER_FORMAT_EXT: uint = 0x8C2E;
export def GL_TEXTURE_BUFFER_OFFSET: uint = 0x919D;
export def GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT: uint = 0x919F;
export def GL_TEXTURE_BUFFER_SIZE: uint = 0x919E;
export def GL_TEXTURE_CLIPMAP_CENTER_SGIX: uint = 0x8171;
export def GL_TEXTURE_CLIPMAP_DEPTH_SGIX: uint = 0x8176;
export def GL_TEXTURE_CLIPMAP_FRAME_SGIX: uint = 0x8172;
export def GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX: uint = 0x8175;
export def GL_TEXTURE_CLIPMAP_OFFSET_SGIX: uint = 0x8173;
export def GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX: uint = 0x8174;
export def GL_TEXTURE_COLOR_SAMPLES_NV: uint = 0x9046;
export def GL_TEXTURE_COLOR_TABLE_SGI: uint = 0x80BC;
export def GL_TEXTURE_COLOR_WRITEMASK_SGIS: uint = 0x81EF;
export def GL_TEXTURE_COMPARE_FAIL_VALUE_ARB: uint = 0x80BF;
export def GL_TEXTURE_COMPARE_FUNC: uint = 0x884D;
export def GL_TEXTURE_COMPARE_FUNC_ARB: uint = 0x884D;
export def GL_TEXTURE_COMPARE_MODE: uint = 0x884C;
export def GL_TEXTURE_COMPARE_MODE_ARB: uint = 0x884C;
export def GL_TEXTURE_COMPARE_OPERATOR_SGIX: uint = 0x819B;
export def GL_TEXTURE_COMPARE_SGIX: uint = 0x819A;
export def GL_TEXTURE_COMPRESSED: uint = 0x86A1;
export def GL_TEXTURE_COMPRESSED_ARB: uint = 0x86A1;
export def GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT: uint = 0x82B2;
export def GL_TEXTURE_COMPRESSED_BLOCK_SIZE: uint = 0x82B3;
export def GL_TEXTURE_COMPRESSED_BLOCK_WIDTH: uint = 0x82B1;
export def GL_TEXTURE_COMPRESSED_IMAGE_SIZE: uint = 0x86A0;
export def GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB: uint = 0x86A0;
export def GL_TEXTURE_COMPRESSION_HINT: uint = 0x84EF;
export def GL_TEXTURE_COMPRESSION_HINT_ARB: uint = 0x84EF;
export def GL_TEXTURE_CONSTANT_DATA_SUNX: uint = 0x81D6;
export def GL_TEXTURE_COORD_ARRAY_ADDRESS_NV: uint = 0x8F25;
export def GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB: uint = 0x889A;
export def GL_TEXTURE_COORD_ARRAY_COUNT_EXT: uint = 0x808B;
export def GL_TEXTURE_COORD_ARRAY_EXT: uint = 0x8078;
export def GL_TEXTURE_COORD_ARRAY_LENGTH_NV: uint = 0x8F2F;
export def GL_TEXTURE_COORD_ARRAY_LIST_IBM: uint = 103074;
export def GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM: uint = 103084;
export def GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL: uint = 0x83F8;
export def GL_TEXTURE_COORD_ARRAY_POINTER_EXT: uint = 0x8092;
export def GL_TEXTURE_COORD_ARRAY_SIZE_EXT: uint = 0x8088;
export def GL_TEXTURE_COORD_ARRAY_STRIDE_EXT: uint = 0x808A;
export def GL_TEXTURE_COORD_ARRAY_TYPE_EXT: uint = 0x8089;
export def GL_TEXTURE_COORD_NV: uint = 0x8C79;
export def GL_TEXTURE_COVERAGE_SAMPLES_NV: uint = 0x9045;
export def GL_TEXTURE_CUBE_MAP: uint = 0x8513;
export def GL_TEXTURE_CUBE_MAP_ARB: uint = 0x8513;
export def GL_TEXTURE_CUBE_MAP_ARRAY: uint = 0x9009;
export def GL_TEXTURE_CUBE_MAP_ARRAY_ARB: uint = 0x9009;
export def GL_TEXTURE_CUBE_MAP_EXT: uint = 0x8513;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_X: uint = 0x8516;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB: uint = 0x8516;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT: uint = 0x8516;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: uint = 0x8518;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB: uint = 0x8518;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT: uint = 0x8518;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: uint = 0x851A;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB: uint = 0x851A;
export def GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT: uint = 0x851A;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_X: uint = 0x8515;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB: uint = 0x8515;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT: uint = 0x8515;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Y: uint = 0x8517;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB: uint = 0x8517;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT: uint = 0x8517;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Z: uint = 0x8519;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB: uint = 0x8519;
export def GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT: uint = 0x8519;
export def GL_TEXTURE_CUBE_MAP_SEAMLESS: uint = 0x884F;
export def GL_TEXTURE_DEFORMATION_BIT_SGIX: uint = 0x00000001;
export def GL_TEXTURE_DEFORMATION_SGIX: uint = 0x8195;
export def GL_TEXTURE_DEPTH: uint = 0x8071;
export def GL_TEXTURE_DEPTH_EXT: uint = 0x8071;
export def GL_TEXTURE_DEPTH_SIZE: uint = 0x884A;
export def GL_TEXTURE_DEPTH_SIZE_ARB: uint = 0x884A;
export def GL_TEXTURE_DEPTH_TYPE: uint = 0x8C16;
export def GL_TEXTURE_DEPTH_TYPE_ARB: uint = 0x8C16;
export def GL_TEXTURE_DS_SIZE_NV: uint = 0x871D;
export def GL_TEXTURE_DT_SIZE_NV: uint = 0x871E;
export def GL_TEXTURE_ENV_BIAS_SGIX: uint = 0x80BE;
export def GL_TEXTURE_FETCH_BARRIER_BIT: uint = 0x00000008;
export def GL_TEXTURE_FETCH_BARRIER_BIT_EXT: uint = 0x00000008;
export def GL_TEXTURE_FILTER4_SIZE_SGIS: uint = 0x8147;
export def GL_TEXTURE_FILTER_CONTROL_EXT: uint = 0x8500;
export def GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: uint = 0x9107;
export def GL_TEXTURE_FLOAT_COMPONENTS_NV: uint = 0x888C;
export def GL_TEXTURE_FREE_MEMORY_ATI: uint = 0x87FC;
export def GL_TEXTURE_GATHER: uint = 0x82A2;
export def GL_TEXTURE_GATHER_SHADOW: uint = 0x82A3;
export def GL_TEXTURE_GEQUAL_R_SGIX: uint = 0x819D;
export def GL_TEXTURE_GREEN_SIZE: uint = 0x805D;
export def GL_TEXTURE_GREEN_SIZE_EXT: uint = 0x805D;
export def GL_TEXTURE_GREEN_TYPE: uint = 0x8C11;
export def GL_TEXTURE_GREEN_TYPE_ARB: uint = 0x8C11;
export def GL_TEXTURE_HEIGHT: uint = 0x1001;
export def GL_TEXTURE_HI_SIZE_NV: uint = 0x871B;
export def GL_TEXTURE_IMAGE_FORMAT: uint = 0x828F;
export def GL_TEXTURE_IMAGE_TYPE: uint = 0x8290;
export def GL_TEXTURE_IMMUTABLE_FORMAT: uint = 0x912F;
export def GL_TEXTURE_IMMUTABLE_FORMAT_EXT: uint = 0x912F;
export def GL_TEXTURE_IMMUTABLE_LEVELS: uint = 0x82DF;
export def GL_TEXTURE_INDEX_SIZE_EXT: uint = 0x80ED;
export def GL_TEXTURE_INTENSITY_SIZE_EXT: uint = 0x8061;
export def GL_TEXTURE_INTENSITY_TYPE_ARB: uint = 0x8C15;
export def GL_TEXTURE_INTERNAL_FORMAT: uint = 0x1003;
export def GL_TEXTURE_LEQUAL_R_SGIX: uint = 0x819C;
export def GL_TEXTURE_LIGHTING_MODE_HP: uint = 0x8167;
export def GL_TEXTURE_LIGHT_EXT: uint = 0x8350;
export def GL_TEXTURE_LOD_BIAS: uint = 0x8501;
export def GL_TEXTURE_LOD_BIAS_EXT: uint = 0x8501;
export def GL_TEXTURE_LOD_BIAS_R_SGIX: uint = 0x8190;
export def GL_TEXTURE_LOD_BIAS_S_SGIX: uint = 0x818E;
export def GL_TEXTURE_LOD_BIAS_T_SGIX: uint = 0x818F;
export def GL_TEXTURE_LO_SIZE_NV: uint = 0x871C;
export def GL_TEXTURE_LUMINANCE_SIZE_EXT: uint = 0x8060;
export def GL_TEXTURE_LUMINANCE_TYPE_ARB: uint = 0x8C14;
export def GL_TEXTURE_MAG_FILTER: uint = 0x2800;
export def GL_TEXTURE_MAG_SIZE_NV: uint = 0x871F;
export def GL_TEXTURE_MATERIAL_FACE_EXT: uint = 0x8351;
export def GL_TEXTURE_MATERIAL_PARAMETER_EXT: uint = 0x8352;
export def GL_TEXTURE_MAX_ANISOTROPY: uint = 0x84FE;
export def GL_TEXTURE_MAX_ANISOTROPY_EXT: uint = 0x84FE;
export def GL_TEXTURE_MAX_CLAMP_R_SGIX: uint = 0x836B;
export def GL_TEXTURE_MAX_CLAMP_S_SGIX: uint = 0x8369;
export def GL_TEXTURE_MAX_CLAMP_T_SGIX: uint = 0x836A;
export def GL_TEXTURE_MAX_LEVEL: uint = 0x813D;
export def GL_TEXTURE_MAX_LEVEL_SGIS: uint = 0x813D;
export def GL_TEXTURE_MAX_LOD: uint = 0x813B;
export def GL_TEXTURE_MAX_LOD_SGIS: uint = 0x813B;
export def GL_TEXTURE_MEMORY_LAYOUT_INTEL: uint = 0x83FF;
export def GL_TEXTURE_MIN_FILTER: uint = 0x2801;
export def GL_TEXTURE_MIN_LOD: uint = 0x813A;
export def GL_TEXTURE_MIN_LOD_SGIS: uint = 0x813A;
export def GL_TEXTURE_MULTI_BUFFER_HINT_SGIX: uint = 0x812E;
export def GL_TEXTURE_NORMAL_EXT: uint = 0x85AF;
export def GL_TEXTURE_POST_SPECULAR_HP: uint = 0x8168;
export def GL_TEXTURE_PRE_SPECULAR_HP: uint = 0x8169;
export def GL_TEXTURE_PRIORITY_EXT: uint = 0x8066;
export def GL_TEXTURE_RANGE_LENGTH_APPLE: uint = 0x85B7;
export def GL_TEXTURE_RANGE_POINTER_APPLE: uint = 0x85B8;
export def GL_TEXTURE_RECTANGLE: uint = 0x84F5;
export def GL_TEXTURE_RECTANGLE_ARB: uint = 0x84F5;
export def GL_TEXTURE_RECTANGLE_NV: uint = 0x84F5;
export def GL_TEXTURE_REDUCTION_MODE_ARB: uint = 0x9366;
export def GL_TEXTURE_REDUCTION_MODE_EXT: uint = 0x9366;
export def GL_TEXTURE_RED_SIZE: uint = 0x805C;
export def GL_TEXTURE_RED_SIZE_EXT: uint = 0x805C;
export def GL_TEXTURE_RED_TYPE: uint = 0x8C10;
export def GL_TEXTURE_RED_TYPE_ARB: uint = 0x8C10;
export def GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV: uint = 0x8E54;
export def GL_TEXTURE_RENDERBUFFER_NV: uint = 0x8E55;
export def GL_TEXTURE_RESIDENT_EXT: uint = 0x8067;
export def GL_TEXTURE_SAMPLES: uint = 0x9106;
export def GL_TEXTURE_SHADER_NV: uint = 0x86DE;
export def GL_TEXTURE_SHADOW: uint = 0x82A1;
export def GL_TEXTURE_SHARED_SIZE: uint = 0x8C3F;
export def GL_TEXTURE_SHARED_SIZE_EXT: uint = 0x8C3F;
export def GL_TEXTURE_SPARSE_ARB: uint = 0x91A6;
export def GL_TEXTURE_SRGB_DECODE_EXT: uint = 0x8A48;
export def GL_TEXTURE_STENCIL_SIZE: uint = 0x88F1;
export def GL_TEXTURE_STENCIL_SIZE_EXT: uint = 0x88F1;
export def GL_TEXTURE_STORAGE_HINT_APPLE: uint = 0x85BC;
export def GL_TEXTURE_STORAGE_SPARSE_BIT_AMD: uint = 0x00000001;
export def GL_TEXTURE_SWIZZLE_A: uint = 0x8E45;
export def GL_TEXTURE_SWIZZLE_A_EXT: uint = 0x8E45;
export def GL_TEXTURE_SWIZZLE_B: uint = 0x8E44;
export def GL_TEXTURE_SWIZZLE_B_EXT: uint = 0x8E44;
export def GL_TEXTURE_SWIZZLE_G: uint = 0x8E43;
export def GL_TEXTURE_SWIZZLE_G_EXT: uint = 0x8E43;
export def GL_TEXTURE_SWIZZLE_R: uint = 0x8E42;
export def GL_TEXTURE_SWIZZLE_RGBA: uint = 0x8E46;
export def GL_TEXTURE_SWIZZLE_RGBA_EXT: uint = 0x8E46;
export def GL_TEXTURE_SWIZZLE_R_EXT: uint = 0x8E42;
export def GL_TEXTURE_TARGET: uint = 0x1006;
export def GL_TEXTURE_TILING_EXT: uint = 0x9580;
export def GL_TEXTURE_TOO_LARGE_EXT: uint = 0x8065;
export def GL_TEXTURE_UNSIGNED_REMAP_MODE_NV: uint = 0x888F;
export def GL_TEXTURE_UPDATE_BARRIER_BIT: uint = 0x00000100;
export def GL_TEXTURE_UPDATE_BARRIER_BIT_EXT: uint = 0x00000100;
export def GL_TEXTURE_VIEW: uint = 0x82B5;
export def GL_TEXTURE_VIEW_MIN_LAYER: uint = 0x82DD;
export def GL_TEXTURE_VIEW_MIN_LEVEL: uint = 0x82DB;
export def GL_TEXTURE_VIEW_NUM_LAYERS: uint = 0x82DE;
export def GL_TEXTURE_VIEW_NUM_LEVELS: uint = 0x82DC;
export def GL_TEXTURE_WIDTH: uint = 0x1000;
export def GL_TEXTURE_WRAP_Q_SGIS: uint = 0x8137;
export def GL_TEXTURE_WRAP_R: uint = 0x8072;
export def GL_TEXTURE_WRAP_R_EXT: uint = 0x8072;
export def GL_TEXTURE_WRAP_S: uint = 0x2802;
export def GL_TEXTURE_WRAP_T: uint = 0x2803;
export def GL_TEXT_FRAGMENT_SHADER_ATI: uint = 0x8200;
export def GL_TILE_RASTER_ORDER_FIXED_MESA: uint = 0x8BB8;
export def GL_TILE_RASTER_ORDER_INCREASING_X_MESA: uint = 0x8BB9;
export def GL_TILE_RASTER_ORDER_INCREASING_Y_MESA: uint = 0x8BBA;
export def GL_TILING_TYPES_EXT: uint = 0x9583;
export def GL_TIMELINE_SEMAPHORE_VALUE_NV: uint = 0x9595;
export def GL_TIMEOUT_EXPIRED: uint = 0x911B;
export def GL_TIMEOUT_IGNORED: u64 = 0xFFFFFFFFFFFFFFFF;
export def GL_TIMESTAMP: uint = 0x8E28;
export def GL_TIME_ELAPSED: uint = 0x88BF;
export def GL_TIME_ELAPSED_EXT: uint = 0x88BF;
export def GL_TOP_LEVEL_ARRAY_SIZE: uint = 0x930C;
export def GL_TOP_LEVEL_ARRAY_STRIDE: uint = 0x930D;
export def GL_TRACK_MATRIX_NV: uint = 0x8648;
export def GL_TRACK_MATRIX_TRANSFORM_NV: uint = 0x8649;
export def GL_TRANSFORM_FEEDBACK: uint = 0x8E22;
export def GL_TRANSFORM_FEEDBACK_ATTRIBS_NV: uint = 0x8C7E;
export def GL_TRANSFORM_FEEDBACK_BARRIER_BIT: uint = 0x00000800;
export def GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT: uint = 0x00000800;
export def GL_TRANSFORM_FEEDBACK_BINDING: uint = 0x8E25;
export def GL_TRANSFORM_FEEDBACK_BINDING_NV: uint = 0x8E25;
export def GL_TRANSFORM_FEEDBACK_BUFFER: uint = 0x8C8E;
export def GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE: uint = 0x8E24;
export def GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV: uint = 0x8E24;
export def GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: uint = 0x8C8F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT: uint = 0x8C8F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV: uint = 0x8C8F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_EXT: uint = 0x8C8E;
export def GL_TRANSFORM_FEEDBACK_BUFFER_INDEX: uint = 0x934B;
export def GL_TRANSFORM_FEEDBACK_BUFFER_MODE: uint = 0x8C7F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT: uint = 0x8C7F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV: uint = 0x8C7F;
export def GL_TRANSFORM_FEEDBACK_BUFFER_NV: uint = 0x8C8E;
export def GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED: uint = 0x8E23;
export def GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV: uint = 0x8E23;
export def GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: uint = 0x8C85;
export def GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT: uint = 0x8C85;
export def GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV: uint = 0x8C85;
export def GL_TRANSFORM_FEEDBACK_BUFFER_START: uint = 0x8C84;
export def GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT: uint = 0x8C84;
export def GL_TRANSFORM_FEEDBACK_BUFFER_START_NV: uint = 0x8C84;
export def GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE: uint = 0x934C;
export def GL_TRANSFORM_FEEDBACK_NV: uint = 0x8E22;
export def GL_TRANSFORM_FEEDBACK_OVERFLOW: uint = 0x82EC;
export def GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB: uint = 0x82EC;
export def GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: uint = 0x8C88;
export def GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT: uint = 0x8C88;
export def GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV: uint = 0x8C88;
export def GL_TRANSFORM_FEEDBACK_RECORD_NV: uint = 0x8C86;
export def GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW: uint = 0x82ED;
export def GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB: uint = 0x82ED;
export def GL_TRANSFORM_FEEDBACK_VARYING: uint = 0x92F4;
export def GL_TRANSFORM_FEEDBACK_VARYINGS: uint = 0x8C83;
export def GL_TRANSFORM_FEEDBACK_VARYINGS_EXT: uint = 0x8C83;
export def GL_TRANSFORM_FEEDBACK_VARYINGS_NV: uint = 0x8C83;
export def GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: uint = 0x8C76;
export def GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT: uint = 0x8C76;
export def GL_TRANSFORM_HINT_APPLE: uint = 0x85B1;
export def GL_TRANSLATE_2D_NV: uint = 0x9090;
export def GL_TRANSLATE_3D_NV: uint = 0x9091;
export def GL_TRANSLATE_X_NV: uint = 0x908E;
export def GL_TRANSLATE_Y_NV: uint = 0x908F;
export def GL_TRANSPOSE_AFFINE_2D_NV: uint = 0x9096;
export def GL_TRANSPOSE_AFFINE_3D_NV: uint = 0x9098;
export def GL_TRANSPOSE_COLOR_MATRIX_ARB: uint = 0x84E6;
export def GL_TRANSPOSE_CURRENT_MATRIX_ARB: uint = 0x88B7;
export def GL_TRANSPOSE_MODELVIEW_MATRIX_ARB: uint = 0x84E3;
export def GL_TRANSPOSE_NV: uint = 0x862C;
export def GL_TRANSPOSE_PROGRAM_MATRIX_EXT: uint = 0x8E2E;
export def GL_TRANSPOSE_PROJECTION_MATRIX_ARB: uint = 0x84E4;
export def GL_TRANSPOSE_TEXTURE_MATRIX_ARB: uint = 0x84E5;
export def GL_TRIANGLES: uint = 0x0004;
export def GL_TRIANGLES_ADJACENCY: uint = 0x000C;
export def GL_TRIANGLES_ADJACENCY_ARB: uint = 0x000C;
export def GL_TRIANGLES_ADJACENCY_EXT: uint = 0x000C;
export def GL_TRIANGLE_FAN: uint = 0x0006;
export def GL_TRIANGLE_LIST_SUN: uint = 0x81D7;
export def GL_TRIANGLE_MESH_SUN: uint = 0x8615;
export def GL_TRIANGLE_STRIP: uint = 0x0005;
export def GL_TRIANGLE_STRIP_ADJACENCY: uint = 0x000D;
export def GL_TRIANGLE_STRIP_ADJACENCY_ARB: uint = 0x000D;
export def GL_TRIANGLE_STRIP_ADJACENCY_EXT: uint = 0x000D;
export def GL_TRIANGULAR_NV: uint = 0x90A5;
export def GL_TRUE: u8 = 1;
export def GL_TYPE: uint = 0x92FA;
export def GL_UNCORRELATED_NV: uint = 0x9282;
export def GL_UNDEFINED_APPLE: uint = 0x8A1C;
export def GL_UNDEFINED_VERTEX: uint = 0x8260;
export def GL_UNIFORM: uint = 0x92E1;
export def GL_UNIFORM_ADDRESS_COMMAND_NV: uint = 0x000A;
export def GL_UNIFORM_ARRAY_STRIDE: uint = 0x8A3C;
export def GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: uint = 0x92DA;
export def GL_UNIFORM_BARRIER_BIT: uint = 0x00000004;
export def GL_UNIFORM_BARRIER_BIT_EXT: uint = 0x00000004;
export def GL_UNIFORM_BLOCK: uint = 0x92E2;
export def GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: uint = 0x8A42;
export def GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: uint = 0x8A43;
export def GL_UNIFORM_BLOCK_BINDING: uint = 0x8A3F;
export def GL_UNIFORM_BLOCK_DATA_SIZE: uint = 0x8A40;
export def GL_UNIFORM_BLOCK_INDEX: uint = 0x8A3A;
export def GL_UNIFORM_BLOCK_NAME_LENGTH: uint = 0x8A41;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: uint = 0x90EC;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: uint = 0x8A46;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: uint = 0x8A45;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV: uint = 0x959C;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV: uint = 0x959D;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: uint = 0x84F0;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: uint = 0x84F1;
export def GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: uint = 0x8A44;
export def GL_UNIFORM_BUFFER: uint = 0x8A11;
export def GL_UNIFORM_BUFFER_ADDRESS_NV: uint = 0x936F;
export def GL_UNIFORM_BUFFER_BINDING: uint = 0x8A28;
export def GL_UNIFORM_BUFFER_BINDING_EXT: uint = 0x8DEF;
export def GL_UNIFORM_BUFFER_EXT: uint = 0x8DEE;
export def GL_UNIFORM_BUFFER_LENGTH_NV: uint = 0x9370;
export def GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: uint = 0x8A34;
export def GL_UNIFORM_BUFFER_SIZE: uint = 0x8A2A;
export def GL_UNIFORM_BUFFER_START: uint = 0x8A29;
export def GL_UNIFORM_BUFFER_UNIFIED_NV: uint = 0x936E;
export def GL_UNIFORM_IS_ROW_MAJOR: uint = 0x8A3E;
export def GL_UNIFORM_MATRIX_STRIDE: uint = 0x8A3D;
export def GL_UNIFORM_NAME_LENGTH: uint = 0x8A39;
export def GL_UNIFORM_OFFSET: uint = 0x8A3B;
export def GL_UNIFORM_SIZE: uint = 0x8A38;
export def GL_UNIFORM_TYPE: uint = 0x8A37;
export def GL_UNKNOWN_CONTEXT_RESET: uint = 0x8255;
export def GL_UNKNOWN_CONTEXT_RESET_ARB: uint = 0x8255;
export def GL_UNPACK_ALIGNMENT: uint = 0x0CF5;
export def GL_UNPACK_CLIENT_STORAGE_APPLE: uint = 0x85B2;
export def GL_UNPACK_CMYK_HINT_EXT: uint = 0x800F;
export def GL_UNPACK_COMPRESSED_BLOCK_DEPTH: uint = 0x9129;
export def GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: uint = 0x9128;
export def GL_UNPACK_COMPRESSED_BLOCK_SIZE: uint = 0x912A;
export def GL_UNPACK_COMPRESSED_BLOCK_WIDTH: uint = 0x9127;
export def GL_UNPACK_CONSTANT_DATA_SUNX: uint = 0x81D5;
export def GL_UNPACK_IMAGE_DEPTH_SGIS: uint = 0x8133;
export def GL_UNPACK_IMAGE_HEIGHT: uint = 0x806E;
export def GL_UNPACK_IMAGE_HEIGHT_EXT: uint = 0x806E;
export def GL_UNPACK_LSB_FIRST: uint = 0x0CF1;
export def GL_UNPACK_RESAMPLE_OML: uint = 0x8985;
export def GL_UNPACK_RESAMPLE_SGIX: uint = 0x842F;
export def GL_UNPACK_ROW_BYTES_APPLE: uint = 0x8A16;
export def GL_UNPACK_ROW_LENGTH: uint = 0x0CF2;
export def GL_UNPACK_SKIP_IMAGES: uint = 0x806D;
export def GL_UNPACK_SKIP_IMAGES_EXT: uint = 0x806D;
export def GL_UNPACK_SKIP_PIXELS: uint = 0x0CF4;
export def GL_UNPACK_SKIP_ROWS: uint = 0x0CF3;
export def GL_UNPACK_SKIP_VOLUMES_SGIS: uint = 0x8132;
export def GL_UNPACK_SUBSAMPLE_RATE_SGIX: uint = 0x85A1;
export def GL_UNPACK_SWAP_BYTES: uint = 0x0CF0;
export def GL_UNSIGNALED: uint = 0x9118;
export def GL_UNSIGNED_BYTE: uint = 0x1401;
export def GL_UNSIGNED_BYTE_2_3_3_REV: uint = 0x8362;
export def GL_UNSIGNED_BYTE_3_3_2: uint = 0x8032;
export def GL_UNSIGNED_BYTE_3_3_2_EXT: uint = 0x8032;
export def GL_UNSIGNED_IDENTITY_NV: uint = 0x8536;
export def GL_UNSIGNED_INT: uint = 0x1405;
export def GL_UNSIGNED_INT16_NV: uint = 0x8FF0;
export def GL_UNSIGNED_INT16_VEC2_NV: uint = 0x8FF1;
export def GL_UNSIGNED_INT16_VEC3_NV: uint = 0x8FF2;
export def GL_UNSIGNED_INT16_VEC4_NV: uint = 0x8FF3;
export def GL_UNSIGNED_INT64_AMD: uint = 0x8BC2;
export def GL_UNSIGNED_INT64_ARB: uint = 0x140F;
export def GL_UNSIGNED_INT64_NV: uint = 0x140F;
export def GL_UNSIGNED_INT64_VEC2_ARB: uint = 0x8FF5;
export def GL_UNSIGNED_INT64_VEC2_NV: uint = 0x8FF5;
export def GL_UNSIGNED_INT64_VEC3_ARB: uint = 0x8FF6;
export def GL_UNSIGNED_INT64_VEC3_NV: uint = 0x8FF6;
export def GL_UNSIGNED_INT64_VEC4_ARB: uint = 0x8FF7;
export def GL_UNSIGNED_INT64_VEC4_NV: uint = 0x8FF7;
export def GL_UNSIGNED_INT8_NV: uint = 0x8FEC;
export def GL_UNSIGNED_INT8_VEC2_NV: uint = 0x8FED;
export def GL_UNSIGNED_INT8_VEC3_NV: uint = 0x8FEE;
export def GL_UNSIGNED_INT8_VEC4_NV: uint = 0x8FEF;
export def GL_UNSIGNED_INT_10F_11F_11F_REV: uint = 0x8C3B;
export def GL_UNSIGNED_INT_10F_11F_11F_REV_EXT: uint = 0x8C3B;
export def GL_UNSIGNED_INT_10_10_10_2: uint = 0x8036;
export def GL_UNSIGNED_INT_10_10_10_2_EXT: uint = 0x8036;
export def GL_UNSIGNED_INT_24_8: uint = 0x84FA;
export def GL_UNSIGNED_INT_24_8_EXT: uint = 0x84FA;
export def GL_UNSIGNED_INT_24_8_NV: uint = 0x84FA;
export def GL_UNSIGNED_INT_2_10_10_10_REV: uint = 0x8368;
export def GL_UNSIGNED_INT_5_9_9_9_REV: uint = 0x8C3E;
export def GL_UNSIGNED_INT_5_9_9_9_REV_EXT: uint = 0x8C3E;
export def GL_UNSIGNED_INT_8_8_8_8: uint = 0x8035;
export def GL_UNSIGNED_INT_8_8_8_8_EXT: uint = 0x8035;
export def GL_UNSIGNED_INT_8_8_8_8_REV: uint = 0x8367;
export def GL_UNSIGNED_INT_8_8_S8_S8_REV_NV: uint = 0x86DB;
export def GL_UNSIGNED_INT_ATOMIC_COUNTER: uint = 0x92DB;
export def GL_UNSIGNED_INT_IMAGE_1D: uint = 0x9062;
export def GL_UNSIGNED_INT_IMAGE_1D_ARRAY: uint = 0x9068;
export def GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT: uint = 0x9068;
export def GL_UNSIGNED_INT_IMAGE_1D_EXT: uint = 0x9062;
export def GL_UNSIGNED_INT_IMAGE_2D: uint = 0x9063;
export def GL_UNSIGNED_INT_IMAGE_2D_ARRAY: uint = 0x9069;
export def GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT: uint = 0x9069;
export def GL_UNSIGNED_INT_IMAGE_2D_EXT: uint = 0x9063;
export def GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: uint = 0x906B;
export def GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: uint = 0x906C;
export def GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: uint = 0x906C;
export def GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT: uint = 0x906B;
export def GL_UNSIGNED_INT_IMAGE_2D_RECT: uint = 0x9065;
export def GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT: uint = 0x9065;
export def GL_UNSIGNED_INT_IMAGE_3D: uint = 0x9064;
export def GL_UNSIGNED_INT_IMAGE_3D_EXT: uint = 0x9064;
export def GL_UNSIGNED_INT_IMAGE_BUFFER: uint = 0x9067;
export def GL_UNSIGNED_INT_IMAGE_BUFFER_EXT: uint = 0x9067;
export def GL_UNSIGNED_INT_IMAGE_CUBE: uint = 0x9066;
export def GL_UNSIGNED_INT_IMAGE_CUBE_EXT: uint = 0x9066;
export def GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: uint = 0x906A;
export def GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT: uint = 0x906A;
export def GL_UNSIGNED_INT_S8_S8_8_8_NV: uint = 0x86DA;
export def GL_UNSIGNED_INT_SAMPLER_1D: uint = 0x8DD1;
export def GL_UNSIGNED_INT_SAMPLER_1D_ARRAY: uint = 0x8DD6;
export def GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT: uint = 0x8DD6;
export def GL_UNSIGNED_INT_SAMPLER_1D_EXT: uint = 0x8DD1;
export def GL_UNSIGNED_INT_SAMPLER_2D: uint = 0x8DD2;
export def GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: uint = 0x8DD7;
export def GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT: uint = 0x8DD7;
export def GL_UNSIGNED_INT_SAMPLER_2D_EXT: uint = 0x8DD2;
export def GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: uint = 0x910A;
export def GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: uint = 0x910D;
export def GL_UNSIGNED_INT_SAMPLER_2D_RECT: uint = 0x8DD5;
export def GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT: uint = 0x8DD5;
export def GL_UNSIGNED_INT_SAMPLER_3D: uint = 0x8DD3;
export def GL_UNSIGNED_INT_SAMPLER_3D_EXT: uint = 0x8DD3;
export def GL_UNSIGNED_INT_SAMPLER_BUFFER: uint = 0x8DD8;
export def GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD: uint = 0x9003;
export def GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT: uint = 0x8DD8;
export def GL_UNSIGNED_INT_SAMPLER_CUBE: uint = 0x8DD4;
export def GL_UNSIGNED_INT_SAMPLER_CUBE_EXT: uint = 0x8DD4;
export def GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB: uint = 0x900F;
export def GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV: uint = 0x8E58;
export def GL_UNSIGNED_INT_VEC2: uint = 0x8DC6;
export def GL_UNSIGNED_INT_VEC2_EXT: uint = 0x8DC6;
export def GL_UNSIGNED_INT_VEC3: uint = 0x8DC7;
export def GL_UNSIGNED_INT_VEC3_EXT: uint = 0x8DC7;
export def GL_UNSIGNED_INT_VEC4: uint = 0x8DC8;
export def GL_UNSIGNED_INT_VEC4_EXT: uint = 0x8DC8;
export def GL_UNSIGNED_INVERT_NV: uint = 0x8537;
export def GL_UNSIGNED_NORMALIZED: uint = 0x8C17;
export def GL_UNSIGNED_NORMALIZED_ARB: uint = 0x8C17;
export def GL_UNSIGNED_SHORT: uint = 0x1403;
export def GL_UNSIGNED_SHORT_1_5_5_5_REV: uint = 0x8366;
export def GL_UNSIGNED_SHORT_4_4_4_4: uint = 0x8033;
export def GL_UNSIGNED_SHORT_4_4_4_4_EXT: uint = 0x8033;
export def GL_UNSIGNED_SHORT_4_4_4_4_REV: uint = 0x8365;
export def GL_UNSIGNED_SHORT_5_5_5_1: uint = 0x8034;
export def GL_UNSIGNED_SHORT_5_5_5_1_EXT: uint = 0x8034;
export def GL_UNSIGNED_SHORT_5_6_5: uint = 0x8363;
export def GL_UNSIGNED_SHORT_5_6_5_REV: uint = 0x8364;
export def GL_UNSIGNED_SHORT_8_8_APPLE: uint = 0x85BA;
export def GL_UNSIGNED_SHORT_8_8_MESA: uint = 0x85BA;
export def GL_UNSIGNED_SHORT_8_8_REV_APPLE: uint = 0x85BB;
export def GL_UNSIGNED_SHORT_8_8_REV_MESA: uint = 0x85BB;
export def GL_UPLOAD_GPU_MASK_NVX: uint = 0x954A;
export def GL_UPPER_LEFT: uint = 0x8CA2;
export def GL_USE_MISSING_GLYPH_NV: uint = 0x90AA;
export def GL_UTF16_NV: uint = 0x909B;
export def GL_UTF8_NV: uint = 0x909A;
export def GL_UUID_SIZE_EXT: uint = 16;
export def GL_VALIDATE_STATUS: uint = 0x8B83;
export def GL_VARIABLE_A_NV: uint = 0x8523;
export def GL_VARIABLE_B_NV: uint = 0x8524;
export def GL_VARIABLE_C_NV: uint = 0x8525;
export def GL_VARIABLE_D_NV: uint = 0x8526;
export def GL_VARIABLE_E_NV: uint = 0x8527;
export def GL_VARIABLE_F_NV: uint = 0x8528;
export def GL_VARIABLE_G_NV: uint = 0x8529;
export def GL_VARIANT_ARRAY_EXT: uint = 0x87E8;
export def GL_VARIANT_ARRAY_POINTER_EXT: uint = 0x87E9;
export def GL_VARIANT_ARRAY_STRIDE_EXT: uint = 0x87E6;
export def GL_VARIANT_ARRAY_TYPE_EXT: uint = 0x87E7;
export def GL_VARIANT_DATATYPE_EXT: uint = 0x87E5;
export def GL_VARIANT_EXT: uint = 0x87C1;
export def GL_VARIANT_VALUE_EXT: uint = 0x87E4;
export def GL_VBO_FREE_MEMORY_ATI: uint = 0x87FB;
export def GL_VECTOR_EXT: uint = 0x87BF;
export def GL_VENDOR: uint = 0x1F00;
export def GL_VERSION: uint = 0x1F02;
export def GL_VERTEX23_BIT_PGI: uint = 0x00000004;
export def GL_VERTEX4_BIT_PGI: uint = 0x00000008;
export def GL_VERTEX_ARRAY: uint = 0x8074;
export def GL_VERTEX_ARRAY_ADDRESS_NV: uint = 0x8F21;
export def GL_VERTEX_ARRAY_BINDING: uint = 0x85B5;
export def GL_VERTEX_ARRAY_BINDING_APPLE: uint = 0x85B5;
export def GL_VERTEX_ARRAY_BUFFER_BINDING_ARB: uint = 0x8896;
export def GL_VERTEX_ARRAY_COUNT_EXT: uint = 0x807D;
export def GL_VERTEX_ARRAY_EXT: uint = 0x8074;
export def GL_VERTEX_ARRAY_LENGTH_NV: uint = 0x8F2B;
export def GL_VERTEX_ARRAY_LIST_IBM: uint = 103070;
export def GL_VERTEX_ARRAY_LIST_STRIDE_IBM: uint = 103080;
export def GL_VERTEX_ARRAY_OBJECT_AMD: uint = 0x9154;
export def GL_VERTEX_ARRAY_OBJECT_EXT: uint = 0x9154;
export def GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL: uint = 0x83F5;
export def GL_VERTEX_ARRAY_POINTER_EXT: uint = 0x808E;
export def GL_VERTEX_ARRAY_RANGE_APPLE: uint = 0x851D;
export def GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE: uint = 0x851E;
export def GL_VERTEX_ARRAY_RANGE_LENGTH_NV: uint = 0x851E;
export def GL_VERTEX_ARRAY_RANGE_NV: uint = 0x851D;
export def GL_VERTEX_ARRAY_RANGE_POINTER_APPLE: uint = 0x8521;
export def GL_VERTEX_ARRAY_RANGE_POINTER_NV: uint = 0x8521;
export def GL_VERTEX_ARRAY_RANGE_VALID_NV: uint = 0x851F;
export def GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV: uint = 0x8533;
export def GL_VERTEX_ARRAY_SIZE_EXT: uint = 0x807A;
export def GL_VERTEX_ARRAY_STORAGE_HINT_APPLE: uint = 0x851F;
export def GL_VERTEX_ARRAY_STRIDE_EXT: uint = 0x807C;
export def GL_VERTEX_ARRAY_TYPE_EXT: uint = 0x807B;
export def GL_VERTEX_ATTRIB_ARRAY0_NV: uint = 0x8650;
export def GL_VERTEX_ATTRIB_ARRAY10_NV: uint = 0x865A;
export def GL_VERTEX_ATTRIB_ARRAY11_NV: uint = 0x865B;
export def GL_VERTEX_ATTRIB_ARRAY12_NV: uint = 0x865C;
export def GL_VERTEX_ATTRIB_ARRAY13_NV: uint = 0x865D;
export def GL_VERTEX_ATTRIB_ARRAY14_NV: uint = 0x865E;
export def GL_VERTEX_ATTRIB_ARRAY15_NV: uint = 0x865F;
export def GL_VERTEX_ATTRIB_ARRAY1_NV: uint = 0x8651;
export def GL_VERTEX_ATTRIB_ARRAY2_NV: uint = 0x8652;
export def GL_VERTEX_ATTRIB_ARRAY3_NV: uint = 0x8653;
export def GL_VERTEX_ATTRIB_ARRAY4_NV: uint = 0x8654;
export def GL_VERTEX_ATTRIB_ARRAY5_NV: uint = 0x8655;
export def GL_VERTEX_ATTRIB_ARRAY6_NV: uint = 0x8656;
export def GL_VERTEX_ATTRIB_ARRAY7_NV: uint = 0x8657;
export def GL_VERTEX_ATTRIB_ARRAY8_NV: uint = 0x8658;
export def GL_VERTEX_ATTRIB_ARRAY9_NV: uint = 0x8659;
export def GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV: uint = 0x8F20;
export def GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT: uint = 0x00000001;
export def GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT: uint = 0x00000001;
export def GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: uint = 0x889F;
export def GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB: uint = 0x889F;
export def GL_VERTEX_ATTRIB_ARRAY_DIVISOR: uint = 0x88FE;
export def GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB: uint = 0x88FE;
export def GL_VERTEX_ATTRIB_ARRAY_ENABLED: uint = 0x8622;
export def GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB: uint = 0x8622;
export def GL_VERTEX_ATTRIB_ARRAY_INTEGER: uint = 0x88FD;
export def GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT: uint = 0x88FD;
export def GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV: uint = 0x88FD;
export def GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV: uint = 0x8F2A;
export def GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: uint = 0x886A;
export def GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB: uint = 0x886A;
export def GL_VERTEX_ATTRIB_ARRAY_POINTER: uint = 0x8645;
export def GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB: uint = 0x8645;
export def GL_VERTEX_ATTRIB_ARRAY_SIZE: uint = 0x8623;
export def GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB: uint = 0x8623;
export def GL_VERTEX_ATTRIB_ARRAY_STRIDE: uint = 0x8624;
export def GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB: uint = 0x8624;
export def GL_VERTEX_ATTRIB_ARRAY_TYPE: uint = 0x8625;
export def GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB: uint = 0x8625;
export def GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV: uint = 0x8F1E;
export def GL_VERTEX_ATTRIB_BINDING: uint = 0x82D4;
export def GL_VERTEX_ATTRIB_MAP1_APPLE: uint = 0x8A00;
export def GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE: uint = 0x8A03;
export def GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE: uint = 0x8A05;
export def GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE: uint = 0x8A04;
export def GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE: uint = 0x8A02;
export def GL_VERTEX_ATTRIB_MAP2_APPLE: uint = 0x8A01;
export def GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE: uint = 0x8A07;
export def GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE: uint = 0x8A09;
export def GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE: uint = 0x8A08;
export def GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE: uint = 0x8A06;
export def GL_VERTEX_ATTRIB_RELATIVE_OFFSET: uint = 0x82D5;
export def GL_VERTEX_BINDING_DIVISOR: uint = 0x82D6;
export def GL_VERTEX_BINDING_OFFSET: uint = 0x82D7;
export def GL_VERTEX_BINDING_STRIDE: uint = 0x82D8;
export def GL_VERTEX_BLEND_ARB: uint = 0x86A7;
export def GL_VERTEX_CONSISTENT_HINT_PGI: uint = 0x1A22B;
export def GL_VERTEX_DATA_HINT_PGI: uint = 0x1A22A;
export def GL_VERTEX_ELEMENT_SWIZZLE_AMD: uint = 0x91A4;
export def GL_VERTEX_ID_NV: uint = 0x8C7B;
export def GL_VERTEX_ID_SWIZZLE_AMD: uint = 0x91A5;
export def GL_VERTEX_PRECLIP_HINT_SGIX: uint = 0x83EF;
export def GL_VERTEX_PRECLIP_SGIX: uint = 0x83EE;
export def GL_VERTEX_PROGRAM_ARB: uint = 0x8620;
export def GL_VERTEX_PROGRAM_BINDING_NV: uint = 0x864A;
export def GL_VERTEX_PROGRAM_NV: uint = 0x8620;
export def GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV: uint = 0x8DA2;
export def GL_VERTEX_PROGRAM_POINT_SIZE: uint = 0x8642;
export def GL_VERTEX_PROGRAM_POINT_SIZE_ARB: uint = 0x8642;
export def GL_VERTEX_PROGRAM_POINT_SIZE_NV: uint = 0x8642;
export def GL_VERTEX_PROGRAM_TWO_SIDE_ARB: uint = 0x8643;
export def GL_VERTEX_PROGRAM_TWO_SIDE_NV: uint = 0x8643;
export def GL_VERTEX_SHADER: uint = 0x8B31;
export def GL_VERTEX_SHADER_ARB: uint = 0x8B31;
export def GL_VERTEX_SHADER_BINDING_EXT: uint = 0x8781;
export def GL_VERTEX_SHADER_BIT: uint = 0x00000001;
export def GL_VERTEX_SHADER_EXT: uint = 0x8780;
export def GL_VERTEX_SHADER_INSTRUCTIONS_EXT: uint = 0x87CF;
export def GL_VERTEX_SHADER_INVARIANTS_EXT: uint = 0x87D1;
export def GL_VERTEX_SHADER_INVOCATIONS: uint = 0x82F0;
export def GL_VERTEX_SHADER_INVOCATIONS_ARB: uint = 0x82F0;
export def GL_VERTEX_SHADER_LOCALS_EXT: uint = 0x87D3;
export def GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: uint = 0x87D2;
export def GL_VERTEX_SHADER_OPTIMIZED_EXT: uint = 0x87D4;
export def GL_VERTEX_SHADER_VARIANTS_EXT: uint = 0x87D0;
export def GL_VERTEX_SOURCE_ATI: uint = 0x8774;
export def GL_VERTEX_STATE_PROGRAM_NV: uint = 0x8621;
export def GL_VERTEX_STREAM0_ATI: uint = 0x876C;
export def GL_VERTEX_STREAM1_ATI: uint = 0x876D;
export def GL_VERTEX_STREAM2_ATI: uint = 0x876E;
export def GL_VERTEX_STREAM3_ATI: uint = 0x876F;
export def GL_VERTEX_STREAM4_ATI: uint = 0x8770;
export def GL_VERTEX_STREAM5_ATI: uint = 0x8771;
export def GL_VERTEX_STREAM6_ATI: uint = 0x8772;
export def GL_VERTEX_STREAM7_ATI: uint = 0x8773;
export def GL_VERTEX_SUBROUTINE: uint = 0x92E8;
export def GL_VERTEX_SUBROUTINE_UNIFORM: uint = 0x92EE;
export def GL_VERTEX_TEXTURE: uint = 0x829B;
export def GL_VERTEX_WEIGHTING_EXT: uint = 0x8509;
export def GL_VERTEX_WEIGHT_ARRAY_EXT: uint = 0x850C;
export def GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT: uint = 0x8510;
export def GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT: uint = 0x850D;
export def GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT: uint = 0x850F;
export def GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT: uint = 0x850E;
export def GL_VERTICAL_LINE_TO_NV: uint = 0x08;
export def GL_VERTICES_SUBMITTED: uint = 0x82EE;
export def GL_VERTICES_SUBMITTED_ARB: uint = 0x82EE;
export def GL_VIBRANCE_BIAS_NV: uint = 0x8719;
export def GL_VIBRANCE_SCALE_NV: uint = 0x8713;
export def GL_VIDEO_BUFFER_BINDING_NV: uint = 0x9021;
export def GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV: uint = 0x902D;
export def GL_VIDEO_BUFFER_NV: uint = 0x9020;
export def GL_VIDEO_BUFFER_PITCH_NV: uint = 0x9028;
export def GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV: uint = 0x903B;
export def GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV: uint = 0x903A;
export def GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV: uint = 0x9039;
export def GL_VIDEO_CAPTURE_FRAME_WIDTH_NV: uint = 0x9038;
export def GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV: uint = 0x903C;
export def GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV: uint = 0x9026;
export def GL_VIDEO_COLOR_CONVERSION_MATRIX_NV: uint = 0x9029;
export def GL_VIDEO_COLOR_CONVERSION_MAX_NV: uint = 0x902A;
export def GL_VIDEO_COLOR_CONVERSION_MIN_NV: uint = 0x902B;
export def GL_VIDEO_COLOR_CONVERSION_OFFSET_NV: uint = 0x902C;
export def GL_VIEWPORT: uint = 0x0BA2;
export def GL_VIEWPORT_BOUNDS_RANGE: uint = 0x825D;
export def GL_VIEWPORT_COMMAND_NV: uint = 0x0010;
export def GL_VIEWPORT_INDEX_PROVOKING_VERTEX: uint = 0x825F;
export def GL_VIEWPORT_POSITION_W_SCALE_NV: uint = 0x937C;
export def GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV: uint = 0x937D;
export def GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV: uint = 0x937E;
export def GL_VIEWPORT_SUBPIXEL_BITS: uint = 0x825C;
export def GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV: uint = 0x9357;
export def GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV: uint = 0x9351;
export def GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV: uint = 0x9353;
export def GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV: uint = 0x9355;
export def GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV: uint = 0x9356;
export def GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV: uint = 0x9350;
export def GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV: uint = 0x9352;
export def GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV: uint = 0x9354;
export def GL_VIEWPORT_SWIZZLE_W_NV: uint = 0x935B;
export def GL_VIEWPORT_SWIZZLE_X_NV: uint = 0x9358;
export def GL_VIEWPORT_SWIZZLE_Y_NV: uint = 0x9359;
export def GL_VIEWPORT_SWIZZLE_Z_NV: uint = 0x935A;
export def GL_VIEW_CLASS_128_BITS: uint = 0x82C4;
export def GL_VIEW_CLASS_16_BITS: uint = 0x82CA;
export def GL_VIEW_CLASS_24_BITS: uint = 0x82C9;
export def GL_VIEW_CLASS_32_BITS: uint = 0x82C8;
export def GL_VIEW_CLASS_48_BITS: uint = 0x82C7;
export def GL_VIEW_CLASS_64_BITS: uint = 0x82C6;
export def GL_VIEW_CLASS_8_BITS: uint = 0x82CB;
export def GL_VIEW_CLASS_96_BITS: uint = 0x82C5;
export def GL_VIEW_CLASS_ASTC_10x10_RGBA: uint = 0x9393;
export def GL_VIEW_CLASS_ASTC_10x5_RGBA: uint = 0x9390;
export def GL_VIEW_CLASS_ASTC_10x6_RGBA: uint = 0x9391;
export def GL_VIEW_CLASS_ASTC_10x8_RGBA: uint = 0x9392;
export def GL_VIEW_CLASS_ASTC_12x10_RGBA: uint = 0x9394;
export def GL_VIEW_CLASS_ASTC_12x12_RGBA: uint = 0x9395;
export def GL_VIEW_CLASS_ASTC_4x4_RGBA: uint = 0x9388;
export def GL_VIEW_CLASS_ASTC_5x4_RGBA: uint = 0x9389;
export def GL_VIEW_CLASS_ASTC_5x5_RGBA: uint = 0x938A;
export def GL_VIEW_CLASS_ASTC_6x5_RGBA: uint = 0x938B;
export def GL_VIEW_CLASS_ASTC_6x6_RGBA: uint = 0x938C;
export def GL_VIEW_CLASS_ASTC_8x5_RGBA: uint = 0x938D;
export def GL_VIEW_CLASS_ASTC_8x6_RGBA: uint = 0x938E;
export def GL_VIEW_CLASS_ASTC_8x8_RGBA: uint = 0x938F;
export def GL_VIEW_CLASS_BPTC_FLOAT: uint = 0x82D3;
export def GL_VIEW_CLASS_BPTC_UNORM: uint = 0x82D2;
export def GL_VIEW_CLASS_EAC_R11: uint = 0x9383;
export def GL_VIEW_CLASS_EAC_RG11: uint = 0x9384;
export def GL_VIEW_CLASS_ETC2_EAC_RGBA: uint = 0x9387;
export def GL_VIEW_CLASS_ETC2_RGB: uint = 0x9385;
export def GL_VIEW_CLASS_ETC2_RGBA: uint = 0x9386;
export def GL_VIEW_CLASS_RGTC1_RED: uint = 0x82D0;
export def GL_VIEW_CLASS_RGTC2_RG: uint = 0x82D1;
export def GL_VIEW_CLASS_S3TC_DXT1_RGB: uint = 0x82CC;
export def GL_VIEW_CLASS_S3TC_DXT1_RGBA: uint = 0x82CD;
export def GL_VIEW_CLASS_S3TC_DXT3_RGBA: uint = 0x82CE;
export def GL_VIEW_CLASS_S3TC_DXT5_RGBA: uint = 0x82CF;
export def GL_VIEW_COMPATIBILITY_CLASS: uint = 0x82B6;
export def GL_VIRTUAL_PAGE_SIZE_INDEX_ARB: uint = 0x91A7;
export def GL_VIRTUAL_PAGE_SIZE_X_AMD: uint = 0x9195;
export def GL_VIRTUAL_PAGE_SIZE_X_ARB: uint = 0x9195;
export def GL_VIRTUAL_PAGE_SIZE_Y_AMD: uint = 0x9196;
export def GL_VIRTUAL_PAGE_SIZE_Y_ARB: uint = 0x9196;
export def GL_VIRTUAL_PAGE_SIZE_Z_AMD: uint = 0x9197;
export def GL_VIRTUAL_PAGE_SIZE_Z_ARB: uint = 0x9197;
export def GL_VIVIDLIGHT_NV: uint = 0x92A6;
export def GL_VOLATILE_APPLE: uint = 0x8A1A;
export def GL_WAIT_FAILED: uint = 0x911D;
export def GL_WARPS_PER_SM_NV: uint = 0x933A;
export def GL_WARP_SIZE_NV: uint = 0x9339;
export def GL_WEIGHTED_AVERAGE_ARB: uint = 0x9367;
export def GL_WEIGHTED_AVERAGE_EXT: uint = 0x9367;
export def GL_WEIGHT_ARRAY_ARB: uint = 0x86AD;
export def GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB: uint = 0x889E;
export def GL_WEIGHT_ARRAY_POINTER_ARB: uint = 0x86AC;
export def GL_WEIGHT_ARRAY_SIZE_ARB: uint = 0x86AB;
export def GL_WEIGHT_ARRAY_STRIDE_ARB: uint = 0x86AA;
export def GL_WEIGHT_ARRAY_TYPE_ARB: uint = 0x86A9;
export def GL_WEIGHT_SUM_UNITY_ARB: uint = 0x86A6;
export def GL_WIDE_LINE_HINT_PGI: uint = 0x1A222;
export def GL_WINDOW_RECTANGLE_EXT: uint = 0x8F12;
export def GL_WINDOW_RECTANGLE_MODE_EXT: uint = 0x8F13;
export def GL_WRAP_BORDER_SUN: uint = 0x81D4;
export def GL_WRITE_DISCARD_NV: uint = 0x88BE;
export def GL_WRITE_ONLY: uint = 0x88B9;
export def GL_WRITE_ONLY_ARB: uint = 0x88B9;
export def GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV: uint = 0x887A;
export def GL_WRITE_PIXEL_DATA_RANGE_NV: uint = 0x8878;
export def GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV: uint = 0x887C;
export def GL_W_EXT: uint = 0x87D8;
export def GL_XOR: uint = 0x1506;
export def GL_XOR_NV: uint = 0x1506;
export def GL_X_EXT: uint = 0x87D5;
export def GL_YCBAYCR8A_4224_NV: uint = 0x9032;
export def GL_YCBCR_422_APPLE: uint = 0x85B9;
export def GL_YCBCR_MESA: uint = 0x8757;
export def GL_YCBYCR8_422_NV: uint = 0x9031;
export def GL_YCRCBA_SGIX: uint = 0x8319;
export def GL_YCRCB_422_SGIX: uint = 0x81BB;
export def GL_YCRCB_444_SGIX: uint = 0x81BC;
export def GL_YCRCB_SGIX: uint = 0x8318;
export def GL_Y_EXT: uint = 0x87D6;
export def GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV: uint = 0x9036;
export def GL_Z4Y12Z4CB12Z4CR12_444_NV: uint = 0x9037;
export def GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV: uint = 0x9035;
export def GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV: uint = 0x9034;
export def GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV: uint = 0x9033;
export def GL_ZERO: uint = 0;
export def GL_ZERO_EXT: uint = 0x87DD;
export def GL_ZERO_TO_ONE: uint = 0x935F;
export def GL_Z_EXT: uint = 0x87D7;

// Function pointers
export type fp_glAccumxOES = fn(op: gl_enum, value: i32) void;
export type fp_glAcquireKeyedMutexWin32EXT = fn(memory: uint, key: u64, timeout: uint) u8;
export type fp_glActiveProgramEXT = fn(program: uint) void;
export type fp_glActiveShaderProgram = fn(pipeline: uint, program: uint) void;
export type fp_glActiveStencilFaceEXT = fn(face: gl_enum) void;
export type fp_glActiveTexture = fn(texture: gl_enum) void;
export type fp_glActiveTextureARB = fn(texture: gl_enum) void;
export type fp_glActiveVaryingNV = fn(program: uint, name: nullable *const i8) void;
export type fp_glAlphaFragmentOp1ATI = fn(op: gl_enum, dst: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint) void;
export type fp_glAlphaFragmentOp2ATI = fn(op: gl_enum, dst: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint, arg2: uint, arg2Rep: uint, arg2Mod: uint) void;
export type fp_glAlphaFragmentOp3ATI = fn(op: gl_enum, dst: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint, arg2: uint, arg2Rep: uint, arg2Mod: uint, arg3: uint, arg3Rep: uint, arg3Mod: uint) void;
export type fp_glAlphaFuncxOES = fn(func: gl_enum, ref: i32) void;
export type fp_glAlphaToCoverageDitherControlNV = fn(mode: gl_enum) void;
export type fp_glApplyFramebufferAttachmentCMAAINTEL = fn() void;
export type fp_glApplyTextureEXT = fn(mode: gl_enum) void;
export type fp_glAreProgramsResidentNV = fn(n: i32, programs: nullable *const uint, residences: nullable *u8) u8;
export type fp_glAreTexturesResidentEXT = fn(n: i32, textures: nullable *const uint, residences: nullable *u8) u8;
export type fp_glArrayElementEXT = fn(i: i32) void;
export type fp_glArrayObjectATI = fn(array: gl_enum, size_: i32, type_: gl_enum, stride: i32, buffer: uint, offset_: uint) void;
export type fp_glAsyncCopyBufferSubDataNVX = fn(waitSemaphoreCount: i32, waitSemaphoreArray: nullable *const uint, fenceValueArray: nullable *const u64, readGpu: uint, writeGpuMask: gl_bitfield, readBuffer: uint, writeBuffer: uint, readOffset: size, writeOffset: size, size_: uintptr, signalSemaphoreCount: i32, signalSemaphoreArray: nullable *const uint, signalValueArray: nullable *const u64) uint;
export type fp_glAsyncCopyImageSubDataNVX = fn(waitSemaphoreCount: i32, waitSemaphoreArray: nullable *const uint, waitValueArray: nullable *const u64, srcGpu: uint, dstGpuMask: gl_bitfield, srcName: uint, srcTarget: gl_enum, srcLevel: i32, srcX: i32, srcY: i32, srcZ: i32, dstName: uint, dstTarget: gl_enum, dstLevel: i32, dstX: i32, dstY: i32, dstZ: i32, srcWidth: i32, srcHeight: i32, srcDepth: i32, signalSemaphoreCount: i32, signalSemaphoreArray: nullable *const uint, signalValueArray: nullable *const u64) uint;
export type fp_glAsyncMarkerSGIX = fn(marker: uint) void;
export type fp_glAttachObjectARB = fn(containerObj: uint, obj: uint) void;
export type fp_glAttachShader = fn(program: uint, shader: uint) void;
export type fp_glBeginConditionalRender = fn(id: uint, mode: gl_enum) void;
export type fp_glBeginConditionalRenderNV = fn(id: uint, mode: gl_enum) void;
export type fp_glBeginConditionalRenderNVX = fn(id: uint) void;
export type fp_glBeginFragmentShaderATI = fn() void;
export type fp_glBeginOcclusionQueryNV = fn(id: uint) void;
export type fp_glBeginPerfMonitorAMD = fn(monitor: uint) void;
export type fp_glBeginPerfQueryINTEL = fn(queryHandle: uint) void;
export type fp_glBeginQuery = fn(target: gl_enum, id: uint) void;
export type fp_glBeginQueryARB = fn(target: gl_enum, id: uint) void;
export type fp_glBeginQueryIndexed = fn(target: gl_enum, index: uint, id: uint) void;
export type fp_glBeginTransformFeedback = fn(primitiveMode: gl_enum) void;
export type fp_glBeginTransformFeedbackEXT = fn(primitiveMode: gl_enum) void;
export type fp_glBeginTransformFeedbackNV = fn(primitiveMode: gl_enum) void;
export type fp_glBeginVertexShaderEXT = fn() void;
export type fp_glBeginVideoCaptureNV = fn(video_capture_slot: uint) void;
export type fp_glBindAttribLocation = fn(program: uint, index: uint, name: nullable *const i8) void;
export type fp_glBindAttribLocationARB = fn(programObj: uint, index: uint, name: nullable *const i8) void;
export type fp_glBindBuffer = fn(target: gl_enum, buffer: uint) void;
export type fp_glBindBufferARB = fn(target: gl_enum, buffer: uint) void;
export type fp_glBindBufferBase = fn(target: gl_enum, index: uint, buffer: uint) void;
export type fp_glBindBufferBaseEXT = fn(target: gl_enum, index: uint, buffer: uint) void;
export type fp_glBindBufferBaseNV = fn(target: gl_enum, index: uint, buffer: uint) void;
export type fp_glBindBufferOffsetEXT = fn(target: gl_enum, index: uint, buffer: uint, offset_: size) void;
export type fp_glBindBufferOffsetNV = fn(target: gl_enum, index: uint, buffer: uint, offset_: size) void;
export type fp_glBindBufferRange = fn(target: gl_enum, index: uint, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glBindBufferRangeEXT = fn(target: gl_enum, index: uint, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glBindBufferRangeNV = fn(target: gl_enum, index: uint, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glBindBuffersBase = fn(target: gl_enum, first: uint, count: i32, buffers: nullable *const uint) void;
export type fp_glBindBuffersRange = fn(target: gl_enum, first: uint, count: i32, buffers: nullable *const uint, offsets: nullable *const size, sizes: nullable *const uintptr) void;
export type fp_glBindFragDataLocation = fn(program: uint, color: uint, name: nullable *const i8) void;
export type fp_glBindFragDataLocationEXT = fn(program: uint, color: uint, name: nullable *const i8) void;
export type fp_glBindFragDataLocationIndexed = fn(program: uint, colorNumber: uint, index: uint, name: nullable *const i8) void;
export type fp_glBindFragmentShaderATI = fn(id: uint) void;
export type fp_glBindFramebuffer = fn(target: gl_enum, framebuffer: uint) void;
export type fp_glBindFramebufferEXT = fn(target: gl_enum, framebuffer: uint) void;
export type fp_glBindImageTexture = fn(unit: uint, texture: uint, level: i32, layered: u8, layer: i32, access: gl_enum, format: gl_enum) void;
export type fp_glBindImageTextureEXT = fn(index: uint, texture: uint, level: i32, layered: u8, layer: i32, access: gl_enum, format: i32) void;
export type fp_glBindImageTextures = fn(first: uint, count: i32, textures: nullable *const uint) void;
export type fp_glBindLightParameterEXT = fn(light: gl_enum, value: gl_enum) uint;
export type fp_glBindMaterialParameterEXT = fn(face: gl_enum, value: gl_enum) uint;
export type fp_glBindMultiTextureEXT = fn(texunit: gl_enum, target: gl_enum, texture: uint) void;
export type fp_glBindParameterEXT = fn(value: gl_enum) uint;
export type fp_glBindProgramARB = fn(target: gl_enum, program: uint) void;
export type fp_glBindProgramNV = fn(target: gl_enum, id: uint) void;
export type fp_glBindProgramPipeline = fn(pipeline: uint) void;
export type fp_glBindRenderbuffer = fn(target: gl_enum, renderbuffer: uint) void;
export type fp_glBindRenderbufferEXT = fn(target: gl_enum, renderbuffer: uint) void;
export type fp_glBindSampler = fn(unit: uint, sampler: uint) void;
export type fp_glBindSamplers = fn(first: uint, count: i32, samplers: nullable *const uint) void;
export type fp_glBindShadingRateImageNV = fn(texture: uint) void;
export type fp_glBindTexGenParameterEXT = fn(unit: gl_enum, coord: gl_enum, value: gl_enum) uint;
export type fp_glBindTexture = fn(target: gl_enum, texture: uint) void;
export type fp_glBindTextureEXT = fn(target: gl_enum, texture: uint) void;
export type fp_glBindTextureUnit = fn(unit: uint, texture: uint) void;
export type fp_glBindTextureUnitParameterEXT = fn(unit: gl_enum, value: gl_enum) uint;
export type fp_glBindTextures = fn(first: uint, count: i32, textures: nullable *const uint) void;
export type fp_glBindTransformFeedback = fn(target: gl_enum, id: uint) void;
export type fp_glBindTransformFeedbackNV = fn(target: gl_enum, id: uint) void;
export type fp_glBindVertexArray = fn(array: uint) void;
export type fp_glBindVertexArrayAPPLE = fn(array: uint) void;
export type fp_glBindVertexBuffer = fn(bindingindex: uint, buffer: uint, offset_: size, stride: i32) void;
export type fp_glBindVertexBuffers = fn(first: uint, count: i32, buffers: nullable *const uint, offsets: nullable *const size, strides: nullable *const i32) void;
export type fp_glBindVertexShaderEXT = fn(id: uint) void;
export type fp_glBindVideoCaptureStreamBufferNV = fn(video_capture_slot: uint, stream: uint, frame_region: gl_enum, offset_: size) void;
export type fp_glBindVideoCaptureStreamTextureNV = fn(video_capture_slot: uint, stream: uint, frame_region: gl_enum, target: gl_enum, texture: uint) void;
export type fp_glBinormal3bEXT = fn(bx: i8, by: i8, bz: i8) void;
export type fp_glBinormal3bvEXT = fn(v: nullable *const i8) void;
export type fp_glBinormal3dEXT = fn(bx: f64, by: f64, bz: f64) void;
export type fp_glBinormal3dvEXT = fn(v: nullable *const f64) void;
export type fp_glBinormal3fEXT = fn(bx: f32, by: f32, bz: f32) void;
export type fp_glBinormal3fvEXT = fn(v: nullable *const f32) void;
export type fp_glBinormal3iEXT = fn(bx: i32, by: i32, bz: i32) void;
export type fp_glBinormal3ivEXT = fn(v: nullable *const i32) void;
export type fp_glBinormal3sEXT = fn(bx: i16, by: i16, bz: i16) void;
export type fp_glBinormal3svEXT = fn(v: nullable *const i16) void;
export type fp_glBinormalPointerEXT = fn(type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glBitmapxOES = fn(width: i32, height: i32, xorig: i32, yorig: i32, xmove: i32, ymove: i32, bitmap: nullable *const u8) void;
export type fp_glBlendBarrierKHR = fn() void;
export type fp_glBlendBarrierNV = fn() void;
export type fp_glBlendColor = fn(red: f32, green: f32, blue: f32, alpha: f32) void;
export type fp_glBlendColorEXT = fn(red: f32, green: f32, blue: f32, alpha: f32) void;
export type fp_glBlendColorxOES = fn(red: i32, green: i32, blue: i32, alpha: i32) void;
export type fp_glBlendEquation = fn(mode: gl_enum) void;
export type fp_glBlendEquationEXT = fn(mode: gl_enum) void;
export type fp_glBlendEquationIndexedAMD = fn(buf: uint, mode: gl_enum) void;
export type fp_glBlendEquationSeparate = fn(modeRGB: gl_enum, modeAlpha: gl_enum) void;
export type fp_glBlendEquationSeparateEXT = fn(modeRGB: gl_enum, modeAlpha: gl_enum) void;
export type fp_glBlendEquationSeparateIndexedAMD = fn(buf: uint, modeRGB: gl_enum, modeAlpha: gl_enum) void;
export type fp_glBlendEquationSeparateiARB = fn(buf: uint, modeRGB: gl_enum, modeAlpha: gl_enum) void;
export type fp_glBlendEquationiARB = fn(buf: uint, mode: gl_enum) void;
export type fp_glBlendFunc = fn(sfactor: gl_enum, dfactor: gl_enum) void;
export type fp_glBlendFuncIndexedAMD = fn(buf: uint, src: gl_enum, dst: gl_enum) void;
export type fp_glBlendFuncSeparate = fn(sfactorRGB: gl_enum, dfactorRGB: gl_enum, sfactorAlpha: gl_enum, dfactorAlpha: gl_enum) void;
export type fp_glBlendFuncSeparateEXT = fn(sfactorRGB: gl_enum, dfactorRGB: gl_enum, sfactorAlpha: gl_enum, dfactorAlpha: gl_enum) void;
export type fp_glBlendFuncSeparateINGR = fn(sfactorRGB: gl_enum, dfactorRGB: gl_enum, sfactorAlpha: gl_enum, dfactorAlpha: gl_enum) void;
export type fp_glBlendFuncSeparateIndexedAMD = fn(buf: uint, srcRGB: gl_enum, dstRGB: gl_enum, srcAlpha: gl_enum, dstAlpha: gl_enum) void;
export type fp_glBlendFuncSeparateiARB = fn(buf: uint, srcRGB: gl_enum, dstRGB: gl_enum, srcAlpha: gl_enum, dstAlpha: gl_enum) void;
export type fp_glBlendFunciARB = fn(buf: uint, src: gl_enum, dst: gl_enum) void;
export type fp_glBlendParameteriNV = fn(pname: gl_enum, value: i32) void;
export type fp_glBlitFramebuffer = fn(srcX0: i32, srcY0: i32, srcX1: i32, srcY1: i32, dstX0: i32, dstY0: i32, dstX1: i32, dstY1: i32, mask: gl_bitfield, filter: gl_enum) void;
export type fp_glBlitFramebufferEXT = fn(srcX0: i32, srcY0: i32, srcX1: i32, srcY1: i32, dstX0: i32, dstY0: i32, dstX1: i32, dstY1: i32, mask: gl_bitfield, filter: gl_enum) void;
export type fp_glBlitNamedFramebuffer = fn(readFramebuffer: uint, drawFramebuffer: uint, srcX0: i32, srcY0: i32, srcX1: i32, srcY1: i32, dstX0: i32, dstY0: i32, dstX1: i32, dstY1: i32, mask: gl_bitfield, filter: gl_enum) void;
export type fp_glBufferAddressRangeNV = fn(pname: gl_enum, index: uint, address: u64, length: uintptr) void;
export type fp_glBufferAttachMemoryNV = fn(target: gl_enum, memory: uint, offset_: u64) void;
export type fp_glBufferData = fn(target: gl_enum, size_: uintptr, data: nullable *opaque, usage: gl_enum) void;
export type fp_glBufferDataARB = fn(target: gl_enum, size_: uintptr, data: nullable *opaque, usage: gl_enum) void;
export type fp_glBufferPageCommitmentARB = fn(target: gl_enum, offset_: size, size_: uintptr, commit: u8) void;
export type fp_glBufferPageCommitmentMemNV = fn(target: gl_enum, offset_: size, size_: uintptr, memory: uint, memOffset: u64, commit: u8) void;
export type fp_glBufferParameteriAPPLE = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glBufferStorage = fn(target: gl_enum, size_: uintptr, data: nullable *opaque, flags: gl_bitfield) void;
export type fp_glBufferStorageExternalEXT = fn(target: gl_enum, offset_: size, size_: uintptr, clientBuffer: *opaque, flags: gl_bitfield) void;
export type fp_glBufferStorageMemEXT = fn(target: gl_enum, size_: uintptr, memory: uint, offset_: u64) void;
export type fp_glBufferSubData = fn(target: gl_enum, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glBufferSubDataARB = fn(target: gl_enum, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glCallCommandListNV = fn(list: uint) void;
export type fp_glCheckFramebufferStatus = fn(target: gl_enum) gl_enum;
export type fp_glCheckFramebufferStatusEXT = fn(target: gl_enum) gl_enum;
export type fp_glCheckNamedFramebufferStatus = fn(framebuffer: uint, target: gl_enum) gl_enum;
export type fp_glCheckNamedFramebufferStatusEXT = fn(framebuffer: uint, target: gl_enum) gl_enum;
export type fp_glClampColor = fn(target: gl_enum, clamp: gl_enum) void;
export type fp_glClampColorARB = fn(target: gl_enum, clamp: gl_enum) void;
export type fp_glClear = fn(mask: gl_bitfield) void;
export type fp_glClearAccumxOES = fn(red: i32, green: i32, blue: i32, alpha: i32) void;
export type fp_glClearBufferData = fn(target: gl_enum, internalformat: gl_enum, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearBufferSubData = fn(target: gl_enum, internalformat: gl_enum, offset_: size, size_: uintptr, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearBufferfi = fn(buffer: gl_enum, drawbuffer: i32, depth: f32, stencil: i32) void;
export type fp_glClearBufferfv = fn(buffer: gl_enum, drawbuffer: i32, value: nullable *const f32) void;
export type fp_glClearBufferiv = fn(buffer: gl_enum, drawbuffer: i32, value: nullable *const i32) void;
export type fp_glClearBufferuiv = fn(buffer: gl_enum, drawbuffer: i32, value: nullable *const uint) void;
export type fp_glClearColor = fn(red: f32, green: f32, blue: f32, alpha: f32) void;
export type fp_glClearColorIiEXT = fn(red: i32, green: i32, blue: i32, alpha: i32) void;
export type fp_glClearColorIuiEXT = fn(red: uint, green: uint, blue: uint, alpha: uint) void;
export type fp_glClearColorxOES = fn(red: i32, green: i32, blue: i32, alpha: i32) void;
export type fp_glClearDepth = fn(depth: f64) void;
export type fp_glClearDepthdNV = fn(depth: f64) void;
export type fp_glClearDepthf = fn(d: f32) void;
export type fp_glClearDepthfOES = fn(depth: f64) void;
export type fp_glClearDepthxOES = fn(depth: i32) void;
export type fp_glClearNamedBufferData = fn(buffer: uint, internalformat: gl_enum, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearNamedBufferDataEXT = fn(buffer: uint, internalformat: gl_enum, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearNamedBufferSubData = fn(buffer: uint, internalformat: gl_enum, offset_: size, size_: uintptr, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearNamedBufferSubDataEXT = fn(buffer: uint, internalformat: gl_enum, offset_: uintptr, size_: uintptr, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearNamedFramebufferfi = fn(framebuffer: uint, buffer: gl_enum, drawbuffer: i32, depth: f32, stencil: i32) void;
export type fp_glClearNamedFramebufferfv = fn(framebuffer: uint, buffer: gl_enum, drawbuffer: i32, value: nullable *const f32) void;
export type fp_glClearNamedFramebufferiv = fn(framebuffer: uint, buffer: gl_enum, drawbuffer: i32, value: nullable *const i32) void;
export type fp_glClearNamedFramebufferuiv = fn(framebuffer: uint, buffer: gl_enum, drawbuffer: i32, value: nullable *const uint) void;
export type fp_glClearStencil = fn(s: i32) void;
export type fp_glClearTexImage = fn(texture: uint, level: i32, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClearTexSubImage = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glClientActiveTextureARB = fn(texture: gl_enum) void;
export type fp_glClientActiveVertexStreamATI = fn(stream: gl_enum) void;
export type fp_glClientAttribDefaultEXT = fn(mask: gl_bitfield) void;
export type fp_glClientWaitSemaphoreui64NVX = fn(fenceObjectCount: i32, semaphoreArray: nullable *const uint, fenceValueArray: nullable *const u64) void;
export type fp_glClientWaitSync = fn(sync: size, flags: gl_bitfield, timeout: u64) gl_enum;
export type fp_glClipControl = fn(origin: gl_enum, depth: gl_enum) void;
export type fp_glClipPlanefOES = fn(plane: gl_enum, equation: nullable *const f32) void;
export type fp_glClipPlanexOES = fn(plane: gl_enum, equation: nullable *const i32) void;
export type fp_glColor3fVertex3fSUN = fn(r: f32, g: f32, b: f32, x: f32, y: f32, z: f32) void;
export type fp_glColor3fVertex3fvSUN = fn(c: nullable *const f32, v: nullable *const f32) void;
export type fp_glColor3hNV = fn(red: u16, green: u16, blue: u16) void;
export type fp_glColor3hvNV = fn(v: nullable *const u16) void;
export type fp_glColor3xOES = fn(red: i32, green: i32, blue: i32) void;
export type fp_glColor3xvOES = fn(components: nullable *const i32) void;
export type fp_glColor4fNormal3fVertex3fSUN = fn(r: f32, g: f32, b: f32, a: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glColor4fNormal3fVertex3fvSUN = fn(c: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glColor4hNV = fn(red: u16, green: u16, blue: u16, alpha: u16) void;
export type fp_glColor4hvNV = fn(v: nullable *const u16) void;
export type fp_glColor4ubVertex2fSUN = fn(r: u8, g: u8, b: u8, a: u8, x: f32, y: f32) void;
export type fp_glColor4ubVertex2fvSUN = fn(c: nullable *const u8, v: nullable *const f32) void;
export type fp_glColor4ubVertex3fSUN = fn(r: u8, g: u8, b: u8, a: u8, x: f32, y: f32, z: f32) void;
export type fp_glColor4ubVertex3fvSUN = fn(c: nullable *const u8, v: nullable *const f32) void;
export type fp_glColor4xOES = fn(red: i32, green: i32, blue: i32, alpha: i32) void;
export type fp_glColor4xvOES = fn(components: nullable *const i32) void;
export type fp_glColorFormatNV = fn(size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glColorFragmentOp1ATI = fn(op: gl_enum, dst: uint, dstMask: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint) void;
export type fp_glColorFragmentOp2ATI = fn(op: gl_enum, dst: uint, dstMask: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint, arg2: uint, arg2Rep: uint, arg2Mod: uint) void;
export type fp_glColorFragmentOp3ATI = fn(op: gl_enum, dst: uint, dstMask: uint, dstMod: uint, arg1: uint, arg1Rep: uint, arg1Mod: uint, arg2: uint, arg2Rep: uint, arg2Mod: uint, arg3: uint, arg3Rep: uint, arg3Mod: uint) void;
export type fp_glColorMask = fn(red: u8, green: u8, blue: u8, alpha: u8) void;
export type fp_glColorMaskIndexedEXT = fn(index: uint, r: u8, g: u8, b: u8, a: u8) void;
export type fp_glColorMaski = fn(index: uint, r: u8, g: u8, b: u8, a: u8) void;
export type fp_glColorPointerEXT = fn(size_: i32, type_: gl_enum, stride: i32, count: i32, pointer: nullable *opaque) void;
export type fp_glColorPointerListIBM = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glColorPointervINTEL = fn(size_: i32, type_: gl_enum, pointer: nullable *const nullable *opaque) void;
export type fp_glColorSubTableEXT = fn(target: gl_enum, start: i32, count: i32, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glColorTableEXT = fn(target: gl_enum, internalFormat: gl_enum, width: i32, format: gl_enum, type_: gl_enum, table: nullable *opaque) void;
export type fp_glColorTableParameterfvSGI = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glColorTableParameterivSGI = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glColorTableSGI = fn(target: gl_enum, internalformat: gl_enum, width: i32, format: gl_enum, type_: gl_enum, table: nullable *opaque) void;
export type fp_glCombinerInputNV = fn(stage: gl_enum, portion: gl_enum, variable: gl_enum, input: gl_enum, mapping: gl_enum, componentUsage: gl_enum) void;
export type fp_glCombinerOutputNV = fn(stage: gl_enum, portion: gl_enum, abOutput: gl_enum, cdOutput: gl_enum, sumOutput: gl_enum, scale: gl_enum, bias: gl_enum, abDotProduct: u8, cdDotProduct: u8, muxSum: u8) void;
export type fp_glCombinerParameterfNV = fn(pname: gl_enum, param: f32) void;
export type fp_glCombinerParameterfvNV = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glCombinerParameteriNV = fn(pname: gl_enum, param: i32) void;
export type fp_glCombinerParameterivNV = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glCombinerStageParameterfvNV = fn(stage: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glCommandListSegmentsNV = fn(list: uint, segments: uint) void;
export type fp_glCompileCommandListNV = fn(list: uint) void;
export type fp_glCompileShader = fn(shader: uint) void;
export type fp_glCompileShaderARB = fn(shaderObj: uint) void;
export type fp_glCompileShaderIncludeARB = fn(shader: uint, count: i32, path: nullable *const nullable *const i8, length: nullable *const i32) void;
export type fp_glCompressedMultiTexImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedMultiTexImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedMultiTexImage3DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedMultiTexSubImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedMultiTexSubImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedMultiTexSubImage3DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTexImage1D = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexImage1DARB = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexImage2D = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexImage2DARB = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexImage3D = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexImage3DARB = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, border: i32, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage1D = fn(target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage1DARB = fn(target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage2D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage2DARB = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage3D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTexSubImage3DARB = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTextureImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTextureImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTextureImage3DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, border: i32, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTextureSubImage1D = fn(texture: uint, level: i32, xoffset: i32, width: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTextureSubImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTextureSubImage2D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTextureSubImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glCompressedTextureSubImage3D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, imageSize: i32, data: nullable *opaque) void;
export type fp_glCompressedTextureSubImage3DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, imageSize: i32, bits: nullable *opaque) void;
export type fp_glConservativeRasterParameterfNV = fn(pname: gl_enum, value: f32) void;
export type fp_glConservativeRasterParameteriNV = fn(pname: gl_enum, param: i32) void;
export type fp_glConvolutionFilter1DEXT = fn(target: gl_enum, internalformat: gl_enum, width: i32, format: gl_enum, type_: gl_enum, image: nullable *opaque) void;
export type fp_glConvolutionFilter2DEXT = fn(target: gl_enum, internalformat: gl_enum, width: i32, height: i32, format: gl_enum, type_: gl_enum, image: nullable *opaque) void;
export type fp_glConvolutionParameterfEXT = fn(target: gl_enum, pname: gl_enum, params: f32) void;
export type fp_glConvolutionParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glConvolutionParameteriEXT = fn(target: gl_enum, pname: gl_enum, params: i32) void;
export type fp_glConvolutionParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glConvolutionParameterxOES = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glConvolutionParameterxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glCopyBufferSubData = fn(readTarget: gl_enum, writeTarget: gl_enum, readOffset: size, writeOffset: size, size_: uintptr) void;
export type fp_glCopyColorSubTableEXT = fn(target: gl_enum, start: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyColorTableSGI = fn(target: gl_enum, internalformat: gl_enum, x: i32, y: i32, width: i32) void;
export type fp_glCopyConvolutionFilter1DEXT = fn(target: gl_enum, internalformat: gl_enum, x: i32, y: i32, width: i32) void;
export type fp_glCopyConvolutionFilter2DEXT = fn(target: gl_enum, internalformat: gl_enum, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyImageSubData = fn(srcName: uint, srcTarget: gl_enum, srcLevel: i32, srcX: i32, srcY: i32, srcZ: i32, dstName: uint, dstTarget: gl_enum, dstLevel: i32, dstX: i32, dstY: i32, dstZ: i32, srcWidth: i32, srcHeight: i32, srcDepth: i32) void;
export type fp_glCopyImageSubDataNV = fn(srcName: uint, srcTarget: gl_enum, srcLevel: i32, srcX: i32, srcY: i32, srcZ: i32, dstName: uint, dstTarget: gl_enum, dstLevel: i32, dstX: i32, dstY: i32, dstZ: i32, width: i32, height: i32, depth: i32) void;
export type fp_glCopyMultiTexImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, border: i32) void;
export type fp_glCopyMultiTexImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, height: i32, border: i32) void;
export type fp_glCopyMultiTexSubImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyMultiTexSubImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyMultiTexSubImage3DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyNamedBufferSubData = fn(readBuffer: uint, writeBuffer: uint, readOffset: size, writeOffset: size, size_: uintptr) void;
export type fp_glCopyPathNV = fn(resultPath: uint, srcPath: uint) void;
export type fp_glCopyTexImage1D = fn(target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, border: i32) void;
export type fp_glCopyTexImage1DEXT = fn(target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, border: i32) void;
export type fp_glCopyTexImage2D = fn(target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, height: i32, border: i32) void;
export type fp_glCopyTexImage2DEXT = fn(target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, height: i32, border: i32) void;
export type fp_glCopyTexSubImage1D = fn(target: gl_enum, level: i32, xoffset: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyTexSubImage1DEXT = fn(target: gl_enum, level: i32, xoffset: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyTexSubImage2D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTexSubImage2DEXT = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTexSubImage3D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTexSubImage3DEXT = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTextureImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, border: i32) void;
export type fp_glCopyTextureImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: gl_enum, x: i32, y: i32, width: i32, height: i32, border: i32) void;
export type fp_glCopyTextureSubImage1D = fn(texture: uint, level: i32, xoffset: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyTextureSubImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, x: i32, y: i32, width: i32) void;
export type fp_glCopyTextureSubImage2D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTextureSubImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTextureSubImage3D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCopyTextureSubImage3DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glCoverFillPathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, coverMode: gl_enum, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glCoverFillPathNV = fn(path: uint, coverMode: gl_enum) void;
export type fp_glCoverStrokePathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, coverMode: gl_enum, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glCoverStrokePathNV = fn(path: uint, coverMode: gl_enum) void;
export type fp_glCoverageModulationNV = fn(components: gl_enum) void;
export type fp_glCoverageModulationTableNV = fn(n: i32, v: nullable *const f32) void;
export type fp_glCreateBuffers = fn(n: i32, buffers: nullable *uint) void;
export type fp_glCreateCommandListsNV = fn(n: i32, lists: nullable *uint) void;
export type fp_glCreateFramebuffers = fn(n: i32, framebuffers: nullable *uint) void;
export type fp_glCreateMemoryObjectsEXT = fn(n: i32, memoryObjects: nullable *uint) void;
export type fp_glCreatePerfQueryINTEL = fn(queryId: uint, queryHandle: nullable *uint) void;
export type fp_glCreateProgram = fn() uint;
export type fp_glCreateProgramObjectARB = fn() uint;
export type fp_glCreateProgramPipelines = fn(n: i32, pipelines: nullable *uint) void;
export type fp_glCreateProgressFenceNVX = fn() uint;
export type fp_glCreateQueries = fn(target: gl_enum, n: i32, ids: nullable *uint) void;
export type fp_glCreateRenderbuffers = fn(n: i32, renderbuffers: nullable *uint) void;
export type fp_glCreateSamplers = fn(n: i32, samplers: nullable *uint) void;
export type fp_glCreateSemaphoresNV = fn(n: i32, semaphores: nullable *uint) void;
export type fp_glCreateShader = fn(type_: gl_enum) uint;
export type fp_glCreateShaderObjectARB = fn(shaderType: gl_enum) uint;
export type fp_glCreateShaderProgramEXT = fn(type_: gl_enum, string: nullable *const i8) uint;
export type fp_glCreateShaderProgramv = fn(type_: gl_enum, count: i32, strings: nullable *const nullable *const i8) uint;
export type fp_glCreateStatesNV = fn(n: i32, states: nullable *uint) void;
export type fp_glCreateSyncFromCLeventARB = fn(context: nullable *opaque, event: nullable *opaque, flags: gl_bitfield) size;
export type fp_glCreateTextures = fn(target: gl_enum, n: i32, textures: nullable *uint) void;
export type fp_glCreateTransformFeedbacks = fn(n: i32, ids: nullable *uint) void;
export type fp_glCreateVertexArrays = fn(n: i32, arrays: nullable *uint) void;
export type fp_glCullFace = fn(mode: gl_enum) void;
export type fp_glCullParameterdvEXT = fn(pname: gl_enum, params: nullable *f64) void;
export type fp_glCullParameterfvEXT = fn(pname: gl_enum, params: nullable *f32) void;
export type fp_glCurrentPaletteMatrixARB = fn(index: i32) void;
export type fp_glDebugMessageCallback = fn(callback: GLDEBUGPROC, userParam: nullable *opaque) void;
export type fp_glDebugMessageCallbackAMD = fn(callback: GLDEBUGPROCAMD, userParam: nullable *opaque) void;
export type fp_glDebugMessageCallbackARB = fn(callback: GLDEBUGPROCARB, userParam: nullable *opaque) void;
export type fp_glDebugMessageControl = fn(source: gl_enum, type_: gl_enum, severity: gl_enum, count: i32, ids: nullable *const uint, enabled: u8) void;
export type fp_glDebugMessageControlARB = fn(source: gl_enum, type_: gl_enum, severity: gl_enum, count: i32, ids: nullable *const uint, enabled: u8) void;
export type fp_glDebugMessageEnableAMD = fn(category: gl_enum, severity: gl_enum, count: i32, ids: nullable *const uint, enabled: u8) void;
export type fp_glDebugMessageInsert = fn(source: gl_enum, type_: gl_enum, id: uint, severity: gl_enum, length: i32, buf: nullable *const i8) void;
export type fp_glDebugMessageInsertAMD = fn(category: gl_enum, severity: gl_enum, id: uint, length: i32, buf: nullable *const i8) void;
export type fp_glDebugMessageInsertARB = fn(source: gl_enum, type_: gl_enum, id: uint, severity: gl_enum, length: i32, buf: nullable *const i8) void;
export type fp_glDeformSGIX = fn(mask: gl_bitfield) void;
export type fp_glDeformationMap3dSGIX = fn(target: gl_enum, u1: f64, u2: f64, ustride: i32, uorder: i32, v1: f64, v2: f64, vstride: i32, vorder: i32, w1: f64, w2: f64, wstride: i32, worder: i32, points: nullable *const f64) void;
export type fp_glDeformationMap3fSGIX = fn(target: gl_enum, u1: f32, u2: f32, ustride: i32, uorder: i32, v1: f32, v2: f32, vstride: i32, vorder: i32, w1: f32, w2: f32, wstride: i32, worder: i32, points: nullable *const f32) void;
export type fp_glDeleteAsyncMarkersSGIX = fn(marker: uint, range: i32) void;
export type fp_glDeleteBuffers = fn(n: i32, buffers: nullable *const uint) void;
export type fp_glDeleteBuffersARB = fn(n: i32, buffers: nullable *const uint) void;
export type fp_glDeleteCommandListsNV = fn(n: i32, lists: nullable *const uint) void;
export type fp_glDeleteFencesAPPLE = fn(n: i32, fences: nullable *const uint) void;
export type fp_glDeleteFencesNV = fn(n: i32, fences: nullable *const uint) void;
export type fp_glDeleteFragmentShaderATI = fn(id: uint) void;
export type fp_glDeleteFramebuffers = fn(n: i32, framebuffers: nullable *const uint) void;
export type fp_glDeleteFramebuffersEXT = fn(n: i32, framebuffers: nullable *const uint) void;
export type fp_glDeleteMemoryObjectsEXT = fn(n: i32, memoryObjects: nullable *const uint) void;
export type fp_glDeleteNamedStringARB = fn(namelen: i32, name: nullable *const i8) void;
export type fp_glDeleteNamesAMD = fn(identifier: gl_enum, num: uint, names: nullable *const uint) void;
export type fp_glDeleteObjectARB = fn(obj: uint) void;
export type fp_glDeleteOcclusionQueriesNV = fn(n: i32, ids: nullable *const uint) void;
export type fp_glDeletePathsNV = fn(path: uint, range: i32) void;
export type fp_glDeletePerfMonitorsAMD = fn(n: i32, monitors: nullable *uint) void;
export type fp_glDeletePerfQueryINTEL = fn(queryHandle: uint) void;
export type fp_glDeleteProgram = fn(program: uint) void;
export type fp_glDeleteProgramPipelines = fn(n: i32, pipelines: nullable *const uint) void;
export type fp_glDeleteProgramsARB = fn(n: i32, programs: nullable *const uint) void;
export type fp_glDeleteProgramsNV = fn(n: i32, programs: nullable *const uint) void;
export type fp_glDeleteQueries = fn(n: i32, ids: nullable *const uint) void;
export type fp_glDeleteQueriesARB = fn(n: i32, ids: nullable *const uint) void;
export type fp_glDeleteQueryResourceTagNV = fn(n: i32, tagIds: nullable *const i32) void;
export type fp_glDeleteRenderbuffers = fn(n: i32, renderbuffers: nullable *const uint) void;
export type fp_glDeleteRenderbuffersEXT = fn(n: i32, renderbuffers: nullable *const uint) void;
export type fp_glDeleteSamplers = fn(count: i32, samplers: nullable *const uint) void;
export type fp_glDeleteSemaphoresEXT = fn(n: i32, semaphores: nullable *const uint) void;
export type fp_glDeleteShader = fn(shader: uint) void;
export type fp_glDeleteStatesNV = fn(n: i32, states: nullable *const uint) void;
export type fp_glDeleteSync = fn(sync: size) void;
export type fp_glDeleteTextures = fn(n: i32, textures: nullable *const uint) void;
export type fp_glDeleteTexturesEXT = fn(n: i32, textures: nullable *const uint) void;
export type fp_glDeleteTransformFeedbacks = fn(n: i32, ids: nullable *const uint) void;
export type fp_glDeleteTransformFeedbacksNV = fn(n: i32, ids: nullable *const uint) void;
export type fp_glDeleteVertexArrays = fn(n: i32, arrays: nullable *const uint) void;
export type fp_glDeleteVertexArraysAPPLE = fn(n: i32, arrays: nullable *const uint) void;
export type fp_glDeleteVertexShaderEXT = fn(id: uint) void;
export type fp_glDepthBoundsEXT = fn(zmin: f64, zmax: f64) void;
export type fp_glDepthBoundsdNV = fn(zmin: f64, zmax: f64) void;
export type fp_glDepthFunc = fn(func: gl_enum) void;
export type fp_glDepthMask = fn(flag: u8) void;
export type fp_glDepthRange = fn(n: f64, f: f64) void;
export type fp_glDepthRangeArraydvNV = fn(first: uint, count: i32, v: nullable *const f64) void;
export type fp_glDepthRangeArrayv = fn(first: uint, count: i32, v: nullable *const f64) void;
export type fp_glDepthRangeIndexed = fn(index: uint, n: f64, f: f64) void;
export type fp_glDepthRangeIndexeddNV = fn(index: uint, n: f64, f: f64) void;
export type fp_glDepthRangedNV = fn(zNear: f64, zFar: f64) void;
export type fp_glDepthRangef = fn(n: f32, f: f32) void;
export type fp_glDepthRangefOES = fn(n: f64, f: f64) void;
export type fp_glDepthRangexOES = fn(n: i32, f: i32) void;
export type fp_glDetachObjectARB = fn(containerObj: uint, attachedObj: uint) void;
export type fp_glDetachShader = fn(program: uint, shader: uint) void;
export type fp_glDetailTexFuncSGIS = fn(target: gl_enum, n: i32, points: nullable *const f32) void;
export type fp_glDisable = fn(cap: gl_enum) void;
export type fp_glDisableClientStateIndexedEXT = fn(array: gl_enum, index: uint) void;
export type fp_glDisableClientStateiEXT = fn(array: gl_enum, index: uint) void;
export type fp_glDisableIndexedEXT = fn(target: gl_enum, index: uint) void;
export type fp_glDisableVariantClientStateEXT = fn(id: uint) void;
export type fp_glDisableVertexArrayAttrib = fn(vaobj: uint, index: uint) void;
export type fp_glDisableVertexArrayAttribEXT = fn(vaobj: uint, index: uint) void;
export type fp_glDisableVertexArrayEXT = fn(vaobj: uint, array: gl_enum) void;
export type fp_glDisableVertexAttribAPPLE = fn(index: uint, pname: gl_enum) void;
export type fp_glDisableVertexAttribArray = fn(index: uint) void;
export type fp_glDisableVertexAttribArrayARB = fn(index: uint) void;
export type fp_glDisablei = fn(target: gl_enum, index: uint) void;
export type fp_glDispatchCompute = fn(num_groups_x: uint, num_groups_y: uint, num_groups_z: uint) void;
export type fp_glDispatchComputeGroupSizeARB = fn(num_groups_x: uint, num_groups_y: uint, num_groups_z: uint, group_size_x: uint, group_size_y: uint, group_size_z: uint) void;
export type fp_glDispatchComputeIndirect = fn(indirect: size) void;
export type fp_glDrawArrays = fn(mode: gl_enum, first: i32, count: i32) void;
export type fp_glDrawArraysEXT = fn(mode: gl_enum, first: i32, count: i32) void;
export type fp_glDrawArraysIndirect = fn(mode: gl_enum, indirect: nullable *opaque) void;
export type fp_glDrawArraysInstanced = fn(mode: gl_enum, first: i32, count: i32, instancecount: i32) void;
export type fp_glDrawArraysInstancedARB = fn(mode: gl_enum, first: i32, count: i32, primcount: i32) void;
export type fp_glDrawArraysInstancedBaseInstance = fn(mode: gl_enum, first: i32, count: i32, instancecount: i32, baseinstance: uint) void;
export type fp_glDrawArraysInstancedEXT = fn(mode: gl_enum, start: i32, count: i32, primcount: i32) void;
export type fp_glDrawBuffer = fn(buf: gl_enum) void;
export type fp_glDrawBuffers = fn(n: i32, bufs: nullable *const gl_enum) void;
export type fp_glDrawBuffersARB = fn(n: i32, bufs: nullable *const gl_enum) void;
export type fp_glDrawBuffersATI = fn(n: i32, bufs: nullable *const gl_enum) void;
export type fp_glDrawCommandsAddressNV = fn(primitiveMode: gl_enum, indirects: nullable *const u64, sizes: nullable *const i32, count: uint) void;
export type fp_glDrawCommandsNV = fn(primitiveMode: gl_enum, buffer: uint, indirects: nullable *const size, sizes: nullable *const i32, count: uint) void;
export type fp_glDrawCommandsStatesAddressNV = fn(indirects: nullable *const u64, sizes: nullable *const i32, states: nullable *const uint, fbos: nullable *const uint, count: uint) void;
export type fp_glDrawCommandsStatesNV = fn(buffer: uint, indirects: nullable *const size, sizes: nullable *const i32, states: nullable *const uint, fbos: nullable *const uint, count: uint) void;
export type fp_glDrawElementArrayAPPLE = fn(mode: gl_enum, first: i32, count: i32) void;
export type fp_glDrawElementArrayATI = fn(mode: gl_enum, count: i32) void;
export type fp_glDrawElements = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque) void;
export type fp_glDrawElementsBaseVertex = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, basevertex: i32) void;
export type fp_glDrawElementsIndirect = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque) void;
export type fp_glDrawElementsInstanced = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, instancecount: i32) void;
export type fp_glDrawElementsInstancedARB = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, primcount: i32) void;
export type fp_glDrawElementsInstancedBaseInstance = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, instancecount: i32, baseinstance: uint) void;
export type fp_glDrawElementsInstancedBaseVertex = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, instancecount: i32, basevertex: i32) void;
export type fp_glDrawElementsInstancedBaseVertexBaseInstance = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, instancecount: i32, basevertex: i32, baseinstance: uint) void;
export type fp_glDrawElementsInstancedEXT = fn(mode: gl_enum, count: i32, type_: gl_enum, indices: nullable *opaque, primcount: i32) void;
export type fp_glDrawMeshArraysSUN = fn(mode: gl_enum, first: i32, count: i32, width: i32) void;
export type fp_glDrawMeshTasksIndirectNV = fn(indirect: size) void;
export type fp_glDrawMeshTasksNV = fn(first: uint, count: uint) void;
export type fp_glDrawRangeElementArrayAPPLE = fn(mode: gl_enum, start: uint, end: uint, first: i32, count: i32) void;
export type fp_glDrawRangeElementArrayATI = fn(mode: gl_enum, start: uint, end: uint, count: i32) void;
export type fp_glDrawRangeElements = fn(mode: gl_enum, start: uint, end: uint, count: i32, type_: gl_enum, indices: nullable *opaque) void;
export type fp_glDrawRangeElementsBaseVertex = fn(mode: gl_enum, start: uint, end: uint, count: i32, type_: gl_enum, indices: nullable *opaque, basevertex: i32) void;
export type fp_glDrawRangeElementsEXT = fn(mode: gl_enum, start: uint, end: uint, count: i32, type_: gl_enum, indices: nullable *opaque) void;
export type fp_glDrawTextureNV = fn(texture: uint, sampler: uint, x0: f32, y0: f32, x1: f32, y1: f32, z: f32, s0: f32, t0: f32, s1: f32, t1: f32) void;
export type fp_glDrawTransformFeedback = fn(mode: gl_enum, id: uint) void;
export type fp_glDrawTransformFeedbackInstanced = fn(mode: gl_enum, id: uint, instancecount: i32) void;
export type fp_glDrawTransformFeedbackNV = fn(mode: gl_enum, id: uint) void;
export type fp_glDrawTransformFeedbackStream = fn(mode: gl_enum, id: uint, stream: uint) void;
export type fp_glDrawTransformFeedbackStreamInstanced = fn(mode: gl_enum, id: uint, stream: uint, instancecount: i32) void;
export type fp_glDrawVkImageNV = fn(vkImage: u64, sampler: uint, x0: f32, y0: f32, x1: f32, y1: f32, z: f32, s0: f32, t0: f32, s1: f32, t1: f32) void;
export type fp_glEGLImageTargetTexStorageEXT = fn(target: gl_enum, image: *opaque, attrib_list: nullable *const i32) void;
export type fp_glEGLImageTargetTextureStorageEXT = fn(texture: uint, image: *opaque, attrib_list: nullable *const i32) void;
export type fp_glEdgeFlagFormatNV = fn(stride: i32) void;
export type fp_glEdgeFlagPointerEXT = fn(stride: i32, count: i32, pointer: nullable *const u8) void;
export type fp_glEdgeFlagPointerListIBM = fn(stride: i32, pointer: nullable *const nullable *const u8, ptrstride: i32) void;
export type fp_glElementPointerAPPLE = fn(type_: gl_enum, pointer: nullable *opaque) void;
export type fp_glElementPointerATI = fn(type_: gl_enum, pointer: nullable *opaque) void;
export type fp_glEnable = fn(cap: gl_enum) void;
export type fp_glEnableClientStateIndexedEXT = fn(array: gl_enum, index: uint) void;
export type fp_glEnableClientStateiEXT = fn(array: gl_enum, index: uint) void;
export type fp_glEnableIndexedEXT = fn(target: gl_enum, index: uint) void;
export type fp_glEnableVariantClientStateEXT = fn(id: uint) void;
export type fp_glEnableVertexArrayAttrib = fn(vaobj: uint, index: uint) void;
export type fp_glEnableVertexArrayAttribEXT = fn(vaobj: uint, index: uint) void;
export type fp_glEnableVertexArrayEXT = fn(vaobj: uint, array: gl_enum) void;
export type fp_glEnableVertexAttribAPPLE = fn(index: uint, pname: gl_enum) void;
export type fp_glEnableVertexAttribArray = fn(index: uint) void;
export type fp_glEnableVertexAttribArrayARB = fn(index: uint) void;
export type fp_glEnablei = fn(target: gl_enum, index: uint) void;
export type fp_glEndConditionalRender = fn() void;
export type fp_glEndConditionalRenderNV = fn() void;
export type fp_glEndConditionalRenderNVX = fn() void;
export type fp_glEndFragmentShaderATI = fn() void;
export type fp_glEndOcclusionQueryNV = fn() void;
export type fp_glEndPerfMonitorAMD = fn(monitor: uint) void;
export type fp_glEndPerfQueryINTEL = fn(queryHandle: uint) void;
export type fp_glEndQuery = fn(target: gl_enum) void;
export type fp_glEndQueryARB = fn(target: gl_enum) void;
export type fp_glEndQueryIndexed = fn(target: gl_enum, index: uint) void;
export type fp_glEndTransformFeedback = fn() void;
export type fp_glEndTransformFeedbackEXT = fn() void;
export type fp_glEndTransformFeedbackNV = fn() void;
export type fp_glEndVertexShaderEXT = fn() void;
export type fp_glEndVideoCaptureNV = fn(video_capture_slot: uint) void;
export type fp_glEvalCoord1xOES = fn(u: i32) void;
export type fp_glEvalCoord1xvOES = fn(coords: nullable *const i32) void;
export type fp_glEvalCoord2xOES = fn(u: i32, v: i32) void;
export type fp_glEvalCoord2xvOES = fn(coords: nullable *const i32) void;
export type fp_glEvalMapsNV = fn(target: gl_enum, mode: gl_enum) void;
export type fp_glEvaluateDepthValuesARB = fn() void;
export type fp_glExecuteProgramNV = fn(target: gl_enum, id: uint, params: nullable *const f32) void;
export type fp_glExtractComponentEXT = fn(res: uint, src: uint, num: uint) void;
export type fp_glFeedbackBufferxOES = fn(n: i32, type_: gl_enum, buffer: nullable *const i32) void;
export type fp_glFenceSync = fn(condition: gl_enum, flags: gl_bitfield) size;
export type fp_glFinalCombinerInputNV = fn(variable: gl_enum, input: gl_enum, mapping: gl_enum, componentUsage: gl_enum) void;
export type fp_glFinish = fn() void;
export type fp_glFinishAsyncSGIX = fn(markerp: nullable *uint) i32;
export type fp_glFinishFenceAPPLE = fn(fence: uint) void;
export type fp_glFinishFenceNV = fn(fence: uint) void;
export type fp_glFinishObjectAPPLE = fn(object: gl_enum, name: i32) void;
export type fp_glFinishTextureSUNX = fn() void;
export type fp_glFlush = fn() void;
export type fp_glFlushMappedBufferRange = fn(target: gl_enum, offset_: size, length: uintptr) void;
export type fp_glFlushMappedBufferRangeAPPLE = fn(target: gl_enum, offset_: size, size_: uintptr) void;
export type fp_glFlushMappedNamedBufferRange = fn(buffer: uint, offset_: size, length: uintptr) void;
export type fp_glFlushMappedNamedBufferRangeEXT = fn(buffer: uint, offset_: size, length: uintptr) void;
export type fp_glFlushPixelDataRangeNV = fn(target: gl_enum) void;
export type fp_glFlushRasterSGIX = fn() void;
export type fp_glFlushStaticDataIBM = fn(target: gl_enum) void;
export type fp_glFlushVertexArrayRangeAPPLE = fn(length: i32, pointer: nullable *opaque) void;
export type fp_glFlushVertexArrayRangeNV = fn() void;
export type fp_glFogCoordFormatNV = fn(type_: gl_enum, stride: i32) void;
export type fp_glFogCoordPointerEXT = fn(type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glFogCoordPointerListIBM = fn(type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glFogCoorddEXT = fn(coord: f64) void;
export type fp_glFogCoorddvEXT = fn(coord: nullable *const f64) void;
export type fp_glFogCoordfEXT = fn(coord: f32) void;
export type fp_glFogCoordfvEXT = fn(coord: nullable *const f32) void;
export type fp_glFogCoordhNV = fn(fog: u16) void;
export type fp_glFogCoordhvNV = fn(fog: nullable *const u16) void;
export type fp_glFogFuncSGIS = fn(n: i32, points: nullable *const f32) void;
export type fp_glFogxOES = fn(pname: gl_enum, param: i32) void;
export type fp_glFogxvOES = fn(pname: gl_enum, param: nullable *const i32) void;
export type fp_glFragmentColorMaterialSGIX = fn(face: gl_enum, mode: gl_enum) void;
export type fp_glFragmentCoverageColorNV = fn(color: uint) void;
export type fp_glFragmentLightModelfSGIX = fn(pname: gl_enum, param: f32) void;
export type fp_glFragmentLightModelfvSGIX = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glFragmentLightModeliSGIX = fn(pname: gl_enum, param: i32) void;
export type fp_glFragmentLightModelivSGIX = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glFragmentLightfSGIX = fn(light: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glFragmentLightfvSGIX = fn(light: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glFragmentLightiSGIX = fn(light: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glFragmentLightivSGIX = fn(light: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glFragmentMaterialfSGIX = fn(face: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glFragmentMaterialfvSGIX = fn(face: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glFragmentMaterialiSGIX = fn(face: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glFragmentMaterialivSGIX = fn(face: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glFrameTerminatorGREMEDY = fn() void;
export type fp_glFrameZoomSGIX = fn(factor: i32) void;
export type fp_glFramebufferDrawBufferEXT = fn(framebuffer: uint, mode: gl_enum) void;
export type fp_glFramebufferDrawBuffersEXT = fn(framebuffer: uint, n: i32, bufs: nullable *const gl_enum) void;
export type fp_glFramebufferFetchBarrierEXT = fn() void;
export type fp_glFramebufferParameteri = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glFramebufferParameteriMESA = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glFramebufferReadBufferEXT = fn(framebuffer: uint, mode: gl_enum) void;
export type fp_glFramebufferRenderbuffer = fn(target: gl_enum, attachment: gl_enum, renderbuffertarget: gl_enum, renderbuffer: uint) void;
export type fp_glFramebufferRenderbufferEXT = fn(target: gl_enum, attachment: gl_enum, renderbuffertarget: gl_enum, renderbuffer: uint) void;
export type fp_glFramebufferSampleLocationsfvARB = fn(target: gl_enum, start: uint, count: i32, v: nullable *const f32) void;
export type fp_glFramebufferSampleLocationsfvNV = fn(target: gl_enum, start: uint, count: i32, v: nullable *const f32) void;
export type fp_glFramebufferSamplePositionsfvAMD = fn(target: gl_enum, numsamples: uint, pixelindex: uint, values: nullable *const f32) void;
export type fp_glFramebufferTexture = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTexture1D = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTexture1DEXT = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTexture2D = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTexture2DEXT = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTexture3D = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32, zoffset: i32) void;
export type fp_glFramebufferTexture3DEXT = fn(target: gl_enum, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32, zoffset: i32) void;
export type fp_glFramebufferTextureARB = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTextureEXT = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32) void;
export type fp_glFramebufferTextureFaceARB = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, face: gl_enum) void;
export type fp_glFramebufferTextureFaceEXT = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, face: gl_enum) void;
export type fp_glFramebufferTextureLayer = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, layer: i32) void;
export type fp_glFramebufferTextureLayerARB = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, layer: i32) void;
export type fp_glFramebufferTextureLayerEXT = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, layer: i32) void;
export type fp_glFramebufferTextureMultiviewOVR = fn(target: gl_enum, attachment: gl_enum, texture: uint, level: i32, baseViewIndex: i32, numViews: i32) void;
export type fp_glFreeObjectBufferATI = fn(buffer: uint) void;
export type fp_glFrontFace = fn(mode: gl_enum) void;
export type fp_glFrustumfOES = fn(l: f32, r: f32, b: f32, t: f32, n: f32, f: f32) void;
export type fp_glFrustumxOES = fn(l: i32, r: i32, b: i32, t: i32, n: i32, f: i32) void;
export type fp_glGenAsyncMarkersSGIX = fn(range: i32) uint;
export type fp_glGenBuffers = fn(n: i32, buffers: nullable *uint) void;
export type fp_glGenBuffersARB = fn(n: i32, buffers: nullable *uint) void;
export type fp_glGenFencesAPPLE = fn(n: i32, fences: nullable *uint) void;
export type fp_glGenFencesNV = fn(n: i32, fences: nullable *uint) void;
export type fp_glGenFragmentShadersATI = fn(range: uint) uint;
export type fp_glGenFramebuffers = fn(n: i32, framebuffers: nullable *uint) void;
export type fp_glGenFramebuffersEXT = fn(n: i32, framebuffers: nullable *uint) void;
export type fp_glGenNamesAMD = fn(identifier: gl_enum, num: uint, names: nullable *uint) void;
export type fp_glGenOcclusionQueriesNV = fn(n: i32, ids: nullable *uint) void;
export type fp_glGenPathsNV = fn(range: i32) uint;
export type fp_glGenPerfMonitorsAMD = fn(n: i32, monitors: nullable *uint) void;
export type fp_glGenProgramPipelines = fn(n: i32, pipelines: nullable *uint) void;
export type fp_glGenProgramsARB = fn(n: i32, programs: nullable *uint) void;
export type fp_glGenProgramsNV = fn(n: i32, programs: nullable *uint) void;
export type fp_glGenQueries = fn(n: i32, ids: nullable *uint) void;
export type fp_glGenQueriesARB = fn(n: i32, ids: nullable *uint) void;
export type fp_glGenQueryResourceTagNV = fn(n: i32, tagIds: nullable *i32) void;
export type fp_glGenRenderbuffers = fn(n: i32, renderbuffers: nullable *uint) void;
export type fp_glGenRenderbuffersEXT = fn(n: i32, renderbuffers: nullable *uint) void;
export type fp_glGenSamplers = fn(count: i32, samplers: nullable *uint) void;
export type fp_glGenSemaphoresEXT = fn(n: i32, semaphores: nullable *uint) void;
export type fp_glGenSymbolsEXT = fn(datatype: gl_enum, storagetype: gl_enum, range: gl_enum, components: uint) uint;
export type fp_glGenTextures = fn(n: i32, textures: nullable *uint) void;
export type fp_glGenTexturesEXT = fn(n: i32, textures: nullable *uint) void;
export type fp_glGenTransformFeedbacks = fn(n: i32, ids: nullable *uint) void;
export type fp_glGenTransformFeedbacksNV = fn(n: i32, ids: nullable *uint) void;
export type fp_glGenVertexArrays = fn(n: i32, arrays: nullable *uint) void;
export type fp_glGenVertexArraysAPPLE = fn(n: i32, arrays: nullable *uint) void;
export type fp_glGenVertexShadersEXT = fn(range: uint) uint;
export type fp_glGenerateMipmap = fn(target: gl_enum) void;
export type fp_glGenerateMipmapEXT = fn(target: gl_enum) void;
export type fp_glGenerateMultiTexMipmapEXT = fn(texunit: gl_enum, target: gl_enum) void;
export type fp_glGenerateTextureMipmap = fn(texture: uint) void;
export type fp_glGenerateTextureMipmapEXT = fn(texture: uint, target: gl_enum) void;
export type fp_glGetActiveAtomicCounterBufferiv = fn(program: uint, bufferIndex: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetActiveAttrib = fn(program: uint, index: uint, bufSize: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetActiveAttribARB = fn(programObj: uint, index: uint, maxLength: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetActiveSubroutineName = fn(program: uint, shadertype: gl_enum, index: uint, bufSize: i32, length: nullable *i32, name: nullable *i8) void;
export type fp_glGetActiveSubroutineUniformName = fn(program: uint, shadertype: gl_enum, index: uint, bufSize: i32, length: nullable *i32, name: nullable *i8) void;
export type fp_glGetActiveSubroutineUniformiv = fn(program: uint, shadertype: gl_enum, index: uint, pname: gl_enum, values: nullable *i32) void;
export type fp_glGetActiveUniform = fn(program: uint, index: uint, bufSize: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetActiveUniformARB = fn(programObj: uint, index: uint, maxLength: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetActiveUniformBlockName = fn(program: uint, uniformBlockIndex: uint, bufSize: i32, length: nullable *i32, uniformBlockName: nullable *i8) void;
export type fp_glGetActiveUniformBlockiv = fn(program: uint, uniformBlockIndex: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetActiveUniformName = fn(program: uint, uniformIndex: uint, bufSize: i32, length: nullable *i32, uniformName: nullable *i8) void;
export type fp_glGetActiveUniformsiv = fn(program: uint, uniformCount: i32, uniformIndices: nullable *const uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetActiveVaryingNV = fn(program: uint, index: uint, bufSize: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetArrayObjectfvATI = fn(array: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetArrayObjectivATI = fn(array: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetAttachedObjectsARB = fn(containerObj: uint, maxCount: i32, count: nullable *i32, obj: nullable *uint) void;
export type fp_glGetAttachedShaders = fn(program: uint, maxCount: i32, count: nullable *i32, shaders: nullable *uint) void;
export type fp_glGetAttribLocation = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetAttribLocationARB = fn(programObj: uint, name: nullable *const i8) i32;
export type fp_glGetBooleanIndexedvEXT = fn(target: gl_enum, index: uint, data: nullable *u8) void;
export type fp_glGetBooleani_v = fn(target: gl_enum, index: uint, data: nullable *u8) void;
export type fp_glGetBooleanv = fn(pname: gl_enum, data: nullable *u8) void;
export type fp_glGetBufferParameteri64v = fn(target: gl_enum, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetBufferParameteriv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetBufferParameterivARB = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetBufferParameterui64vNV = fn(target: gl_enum, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetBufferPointerv = fn(target: gl_enum, pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetBufferPointervARB = fn(target: gl_enum, pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetBufferSubData = fn(target: gl_enum, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glGetBufferSubDataARB = fn(target: gl_enum, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glGetClipPlanefOES = fn(plane: gl_enum, equation: nullable *f32) void;
export type fp_glGetClipPlanexOES = fn(plane: gl_enum, equation: nullable *i32) void;
export type fp_glGetColorTableEXT = fn(target: gl_enum, format: gl_enum, type_: gl_enum, data: nullable *opaque) void;
export type fp_glGetColorTableParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetColorTableParameterfvSGI = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetColorTableParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetColorTableParameterivSGI = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetColorTableSGI = fn(target: gl_enum, format: gl_enum, type_: gl_enum, table: nullable *opaque) void;
export type fp_glGetCombinerInputParameterfvNV = fn(stage: gl_enum, portion: gl_enum, variable: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetCombinerInputParameterivNV = fn(stage: gl_enum, portion: gl_enum, variable: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetCombinerOutputParameterfvNV = fn(stage: gl_enum, portion: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetCombinerOutputParameterivNV = fn(stage: gl_enum, portion: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetCombinerStageParameterfvNV = fn(stage: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetCommandHeaderNV = fn(tokenID: gl_enum, size_: uint) uint;
export type fp_glGetCompressedMultiTexImageEXT = fn(texunit: gl_enum, target: gl_enum, lod: i32, img: nullable *opaque) void;
export type fp_glGetCompressedTexImage = fn(target: gl_enum, level: i32, img: nullable *opaque) void;
export type fp_glGetCompressedTexImageARB = fn(target: gl_enum, level: i32, img: nullable *opaque) void;
export type fp_glGetCompressedTextureImage = fn(texture: uint, level: i32, bufSize: i32, pixels: nullable *opaque) void;
export type fp_glGetCompressedTextureImageEXT = fn(texture: uint, target: gl_enum, lod: i32, img: nullable *opaque) void;
export type fp_glGetCompressedTextureSubImage = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, bufSize: i32, pixels: nullable *opaque) void;
export type fp_glGetConvolutionFilterEXT = fn(target: gl_enum, format: gl_enum, type_: gl_enum, image: nullable *opaque) void;
export type fp_glGetConvolutionParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetConvolutionParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetConvolutionParameterxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetCoverageModulationTableNV = fn(bufSize: i32, v: nullable *f32) void;
export type fp_glGetDebugMessageLog = fn(count: uint, bufSize: i32, sources: nullable *gl_enum, types: nullable *gl_enum, ids: nullable *uint, severities: nullable *gl_enum, lengths: nullable *i32, messageLog: nullable *i8) uint;
export type fp_glGetDebugMessageLogAMD = fn(count: uint, bufSize: i32, categories: nullable *gl_enum, severities: nullable *gl_enum, ids: nullable *uint, lengths: nullable *i32, message: nullable *i8) uint;
export type fp_glGetDebugMessageLogARB = fn(count: uint, bufSize: i32, sources: nullable *gl_enum, types: nullable *gl_enum, ids: nullable *uint, severities: nullable *gl_enum, lengths: nullable *i32, messageLog: nullable *i8) uint;
export type fp_glGetDetailTexFuncSGIS = fn(target: gl_enum, points: nullable *f32) void;
export type fp_glGetDoubleIndexedvEXT = fn(target: gl_enum, index: uint, data: nullable *f64) void;
export type fp_glGetDoublei_v = fn(target: gl_enum, index: uint, data: nullable *f64) void;
export type fp_glGetDoublei_vEXT = fn(pname: gl_enum, index: uint, params: nullable *f64) void;
export type fp_glGetDoublev = fn(pname: gl_enum, data: nullable *f64) void;
export type fp_glGetError = fn() gl_enum;
export type fp_glGetFenceivNV = fn(fence: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFinalCombinerInputParameterfvNV = fn(variable: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetFinalCombinerInputParameterivNV = fn(variable: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFirstPerfQueryIdINTEL = fn(queryId: nullable *uint) void;
export type fp_glGetFixedvOES = fn(pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFloatIndexedvEXT = fn(target: gl_enum, index: uint, data: nullable *f32) void;
export type fp_glGetFloati_v = fn(target: gl_enum, index: uint, data: nullable *f32) void;
export type fp_glGetFloati_vEXT = fn(pname: gl_enum, index: uint, params: nullable *f32) void;
export type fp_glGetFloatv = fn(pname: gl_enum, data: nullable *f32) void;
export type fp_glGetFogFuncSGIS = fn(points: nullable *f32) void;
export type fp_glGetFragDataIndex = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetFragDataLocation = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetFragDataLocationEXT = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetFragmentLightfvSGIX = fn(light: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetFragmentLightivSGIX = fn(light: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFragmentMaterialfvSGIX = fn(face: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetFragmentMaterialivSGIX = fn(face: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFramebufferAttachmentParameteriv = fn(target: gl_enum, attachment: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFramebufferAttachmentParameterivEXT = fn(target: gl_enum, attachment: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFramebufferParameterfvAMD = fn(target: gl_enum, pname: gl_enum, numsamples: uint, pixelindex: uint, size_: i32, values: nullable *f32) void;
export type fp_glGetFramebufferParameteriv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFramebufferParameterivEXT = fn(framebuffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetFramebufferParameterivMESA = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetGraphicsResetStatus = fn() gl_enum;
export type fp_glGetGraphicsResetStatusARB = fn() gl_enum;
export type fp_glGetHandleARB = fn(pname: gl_enum) uint;
export type fp_glGetHistogramEXT = fn(target: gl_enum, reset: u8, format: gl_enum, type_: gl_enum, values: nullable *opaque) void;
export type fp_glGetHistogramParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetHistogramParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetHistogramParameterxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetImageHandleARB = fn(texture: uint, level: i32, layered: u8, layer: i32, format: gl_enum) u64;
export type fp_glGetImageHandleNV = fn(texture: uint, level: i32, layered: u8, layer: i32, format: gl_enum) u64;
export type fp_glGetImageTransformParameterfvHP = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetImageTransformParameterivHP = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetInfoLogARB = fn(obj: uint, maxLength: i32, length: nullable *i32, infoLog: nullable *i8) void;
export type fp_glGetInstrumentsSGIX = fn() i32;
export type fp_glGetInteger64i_v = fn(target: gl_enum, index: uint, data: nullable *i64) void;
export type fp_glGetInteger64v = fn(pname: gl_enum, data: nullable *i64) void;
export type fp_glGetIntegerIndexedvEXT = fn(target: gl_enum, index: uint, data: nullable *i32) void;
export type fp_glGetIntegeri_v = fn(target: gl_enum, index: uint, data: nullable *i32) void;
export type fp_glGetIntegerui64i_vNV = fn(value: gl_enum, index: uint, result: nullable *u64) void;
export type fp_glGetIntegerui64vNV = fn(value: gl_enum, result: nullable *u64) void;
export type fp_glGetIntegerv = fn(pname: gl_enum, data: nullable *i32) void;
export type fp_glGetInternalformatSampleivNV = fn(target: gl_enum, internalformat: gl_enum, samples: i32, pname: gl_enum, count: i32, params: nullable *i32) void;
export type fp_glGetInternalformati64v = fn(target: gl_enum, internalformat: gl_enum, pname: gl_enum, count: i32, params: nullable *i64) void;
export type fp_glGetInternalformativ = fn(target: gl_enum, internalformat: gl_enum, pname: gl_enum, count: i32, params: nullable *i32) void;
export type fp_glGetInvariantBooleanvEXT = fn(id: uint, value: gl_enum, data: nullable *u8) void;
export type fp_glGetInvariantFloatvEXT = fn(id: uint, value: gl_enum, data: nullable *f32) void;
export type fp_glGetInvariantIntegervEXT = fn(id: uint, value: gl_enum, data: nullable *i32) void;
export type fp_glGetLightxOES = fn(light: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetListParameterfvSGIX = fn(list: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetListParameterivSGIX = fn(list: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetLocalConstantBooleanvEXT = fn(id: uint, value: gl_enum, data: nullable *u8) void;
export type fp_glGetLocalConstantFloatvEXT = fn(id: uint, value: gl_enum, data: nullable *f32) void;
export type fp_glGetLocalConstantIntegervEXT = fn(id: uint, value: gl_enum, data: nullable *i32) void;
export type fp_glGetMapAttribParameterfvNV = fn(target: gl_enum, index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMapAttribParameterivNV = fn(target: gl_enum, index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMapControlPointsNV = fn(target: gl_enum, index: uint, type_: gl_enum, ustride: i32, vstride: i32, packed: u8, points: nullable *opaque) void;
export type fp_glGetMapParameterfvNV = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMapParameterivNV = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMapxvOES = fn(target: gl_enum, query: gl_enum, v: nullable *i32) void;
export type fp_glGetMaterialxOES = fn(face: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glGetMemoryObjectDetachedResourcesuivNV = fn(memory: uint, pname: gl_enum, first: i32, count: i32, params: nullable *uint) void;
export type fp_glGetMemoryObjectParameterivEXT = fn(memoryObject: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMinmaxEXT = fn(target: gl_enum, reset: u8, format: gl_enum, type_: gl_enum, values: nullable *opaque) void;
export type fp_glGetMinmaxParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMinmaxParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultiTexEnvfvEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMultiTexEnvivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultiTexGendvEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetMultiTexGenfvEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMultiTexGenivEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultiTexImageEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glGetMultiTexLevelParameterfvEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMultiTexLevelParameterivEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultiTexParameterIivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultiTexParameterIuivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetMultiTexParameterfvEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetMultiTexParameterivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetMultisamplefv = fn(pname: gl_enum, index: uint, val: nullable *f32) void;
export type fp_glGetMultisamplefvNV = fn(pname: gl_enum, index: uint, val: nullable *f32) void;
export type fp_glGetNamedBufferParameteri64v = fn(buffer: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetNamedBufferParameteriv = fn(buffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedBufferParameterivEXT = fn(buffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedBufferParameterui64vNV = fn(buffer: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetNamedBufferPointerv = fn(buffer: uint, pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetNamedBufferPointervEXT = fn(buffer: uint, pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetNamedBufferSubData = fn(buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glGetNamedBufferSubDataEXT = fn(buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glGetNamedFramebufferAttachmentParameteriv = fn(framebuffer: uint, attachment: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedFramebufferAttachmentParameterivEXT = fn(framebuffer: uint, attachment: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedFramebufferParameterfvAMD = fn(framebuffer: uint, pname: gl_enum, numsamples: uint, pixelindex: uint, size_: i32, values: nullable *f32) void;
export type fp_glGetNamedFramebufferParameteriv = fn(framebuffer: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetNamedFramebufferParameterivEXT = fn(framebuffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedProgramLocalParameterIivEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *i32) void;
export type fp_glGetNamedProgramLocalParameterIuivEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *uint) void;
export type fp_glGetNamedProgramLocalParameterdvEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *f64) void;
export type fp_glGetNamedProgramLocalParameterfvEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *f32) void;
export type fp_glGetNamedProgramStringEXT = fn(program: uint, target: gl_enum, pname: gl_enum, string: nullable *opaque) void;
export type fp_glGetNamedProgramivEXT = fn(program: uint, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedRenderbufferParameteriv = fn(renderbuffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedRenderbufferParameterivEXT = fn(renderbuffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNamedStringARB = fn(namelen: i32, name: nullable *const i8, bufSize: i32, stringlen: nullable *i32, string: nullable *i8) void;
export type fp_glGetNamedStringivARB = fn(namelen: i32, name: nullable *const i8, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetNextPerfQueryIdINTEL = fn(queryId: uint, nextQueryId: nullable *uint) void;
export type fp_glGetObjectBufferfvATI = fn(buffer: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetObjectBufferivATI = fn(buffer: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetObjectLabel = fn(identifier: gl_enum, name: uint, bufSize: i32, length: nullable *i32, label: nullable *i8) void;
export type fp_glGetObjectLabelEXT = fn(type_: gl_enum, object: uint, bufSize: i32, length: nullable *i32, label: nullable *i8) void;
export type fp_glGetObjectParameterfvARB = fn(obj: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetObjectParameterivAPPLE = fn(objectType: gl_enum, name: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetObjectParameterivARB = fn(obj: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetObjectPtrLabel = fn(ptr: nullable *opaque, bufSize: i32, length: nullable *i32, label: nullable *i8) void;
export type fp_glGetOcclusionQueryivNV = fn(id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetOcclusionQueryuivNV = fn(id: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetPathCommandsNV = fn(path: uint, commands: nullable *u8) void;
export type fp_glGetPathCoordsNV = fn(path: uint, coords: nullable *f32) void;
export type fp_glGetPathDashArrayNV = fn(path: uint, dashArray: nullable *f32) void;
export type fp_glGetPathLengthNV = fn(path: uint, startSegment: i32, numSegments: i32) f32;
export type fp_glGetPathMetricRangeNV = fn(metricQueryMask: gl_bitfield, firstPathName: uint, numPaths: i32, stride: i32, metrics: nullable *f32) void;
export type fp_glGetPathMetricsNV = fn(metricQueryMask: gl_bitfield, numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, stride: i32, metrics: nullable *f32) void;
export type fp_glGetPathParameterfvNV = fn(path: uint, pname: gl_enum, value: nullable *f32) void;
export type fp_glGetPathParameterivNV = fn(path: uint, pname: gl_enum, value: nullable *i32) void;
export type fp_glGetPathSpacingNV = fn(pathListMode: gl_enum, numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, advanceScale: f32, kerningScale: f32, transformType: gl_enum, returnedSpacing: nullable *f32) void;
export type fp_glGetPerfCounterInfoINTEL = fn(queryId: uint, counterId: uint, counterNameLength: uint, counterName: nullable *i8, counterDescLength: uint, counterDesc: nullable *i8, counterOffset: nullable *uint, counterDataSize: nullable *uint, counterTypeEnum: nullable *uint, counterDataTypeEnum: nullable *uint, rawCounterMaxValue: nullable *u64) void;
export type fp_glGetPerfMonitorCounterDataAMD = fn(monitor: uint, pname: gl_enum, dataSize: i32, data: nullable *uint, bytesWritten: nullable *i32) void;
export type fp_glGetPerfMonitorCounterInfoAMD = fn(group: uint, counter: uint, pname: gl_enum, data: nullable *opaque) void;
export type fp_glGetPerfMonitorCounterStringAMD = fn(group: uint, counter: uint, bufSize: i32, length: nullable *i32, counterString: nullable *i8) void;
export type fp_glGetPerfMonitorCountersAMD = fn(group: uint, numCounters: nullable *i32, maxActiveCounters: nullable *i32, counterSize: i32, counters: nullable *uint) void;
export type fp_glGetPerfMonitorGroupStringAMD = fn(group: uint, bufSize: i32, length: nullable *i32, groupString: nullable *i8) void;
export type fp_glGetPerfMonitorGroupsAMD = fn(numGroups: nullable *i32, groupsSize: i32, groups: nullable *uint) void;
export type fp_glGetPerfQueryDataINTEL = fn(queryHandle: uint, flags: uint, dataSize: i32, data: nullable *opaque, bytesWritten: nullable *uint) void;
export type fp_glGetPerfQueryIdByNameINTEL = fn(queryName: nullable *i8, queryId: nullable *uint) void;
export type fp_glGetPerfQueryInfoINTEL = fn(queryId: uint, queryNameLength: uint, queryName: nullable *i8, dataSize: nullable *uint, noCounters: nullable *uint, noInstances: nullable *uint, capsMask: nullable *uint) void;
export type fp_glGetPixelMapxv = fn(map: gl_enum, size_: i32, values: nullable *i32) void;
export type fp_glGetPixelTexGenParameterfvSGIS = fn(pname: gl_enum, params: nullable *f32) void;
export type fp_glGetPixelTexGenParameterivSGIS = fn(pname: gl_enum, params: nullable *i32) void;
export type fp_glGetPixelTransformParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetPixelTransformParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetPointerIndexedvEXT = fn(target: gl_enum, index: uint, data: nullable *nullable *opaque) void;
export type fp_glGetPointeri_vEXT = fn(pname: gl_enum, index: uint, params: nullable *nullable *opaque) void;
export type fp_glGetPointerv = fn(pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetPointervEXT = fn(pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetProgramBinary = fn(program: uint, bufSize: i32, length: nullable *i32, binaryFormat: nullable *gl_enum, binary: nullable *opaque) void;
export type fp_glGetProgramEnvParameterIivNV = fn(target: gl_enum, index: uint, params: nullable *i32) void;
export type fp_glGetProgramEnvParameterIuivNV = fn(target: gl_enum, index: uint, params: nullable *uint) void;
export type fp_glGetProgramEnvParameterdvARB = fn(target: gl_enum, index: uint, params: nullable *f64) void;
export type fp_glGetProgramEnvParameterfvARB = fn(target: gl_enum, index: uint, params: nullable *f32) void;
export type fp_glGetProgramInfoLog = fn(program: uint, bufSize: i32, length: nullable *i32, infoLog: nullable *i8) void;
export type fp_glGetProgramInterfaceiv = fn(program: uint, programInterface: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetProgramLocalParameterIivNV = fn(target: gl_enum, index: uint, params: nullable *i32) void;
export type fp_glGetProgramLocalParameterIuivNV = fn(target: gl_enum, index: uint, params: nullable *uint) void;
export type fp_glGetProgramLocalParameterdvARB = fn(target: gl_enum, index: uint, params: nullable *f64) void;
export type fp_glGetProgramLocalParameterfvARB = fn(target: gl_enum, index: uint, params: nullable *f32) void;
export type fp_glGetProgramNamedParameterdvNV = fn(id: uint, len_: i32, name: nullable *const u8, params: nullable *f64) void;
export type fp_glGetProgramNamedParameterfvNV = fn(id: uint, len_: i32, name: nullable *const u8, params: nullable *f32) void;
export type fp_glGetProgramParameterdvNV = fn(target: gl_enum, index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetProgramParameterfvNV = fn(target: gl_enum, index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetProgramPipelineInfoLog = fn(pipeline: uint, bufSize: i32, length: nullable *i32, infoLog: nullable *i8) void;
export type fp_glGetProgramPipelineiv = fn(pipeline: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetProgramResourceIndex = fn(program: uint, programInterface: gl_enum, name: nullable *const i8) uint;
export type fp_glGetProgramResourceLocation = fn(program: uint, programInterface: gl_enum, name: nullable *const i8) i32;
export type fp_glGetProgramResourceLocationIndex = fn(program: uint, programInterface: gl_enum, name: nullable *const i8) i32;
export type fp_glGetProgramResourceName = fn(program: uint, programInterface: gl_enum, index: uint, bufSize: i32, length: nullable *i32, name: nullable *i8) void;
export type fp_glGetProgramResourcefvNV = fn(program: uint, programInterface: gl_enum, index: uint, propCount: i32, props: nullable *const gl_enum, count: i32, length: nullable *i32, params: nullable *f32) void;
export type fp_glGetProgramResourceiv = fn(program: uint, programInterface: gl_enum, index: uint, propCount: i32, props: nullable *const gl_enum, count: i32, length: nullable *i32, params: nullable *i32) void;
export type fp_glGetProgramStageiv = fn(program: uint, shadertype: gl_enum, pname: gl_enum, values: nullable *i32) void;
export type fp_glGetProgramStringARB = fn(target: gl_enum, pname: gl_enum, string: nullable *opaque) void;
export type fp_glGetProgramStringNV = fn(id: uint, pname: gl_enum, program: nullable *u8) void;
export type fp_glGetProgramSubroutineParameteruivNV = fn(target: gl_enum, index: uint, param: nullable *uint) void;
export type fp_glGetProgramiv = fn(program: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetProgramivARB = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetProgramivNV = fn(id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetQueryBufferObjecti64v = fn(id: uint, buffer: uint, pname: gl_enum, offset_: size) void;
export type fp_glGetQueryBufferObjectiv = fn(id: uint, buffer: uint, pname: gl_enum, offset_: size) void;
export type fp_glGetQueryBufferObjectui64v = fn(id: uint, buffer: uint, pname: gl_enum, offset_: size) void;
export type fp_glGetQueryBufferObjectuiv = fn(id: uint, buffer: uint, pname: gl_enum, offset_: size) void;
export type fp_glGetQueryIndexediv = fn(target: gl_enum, index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetQueryObjecti64v = fn(id: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetQueryObjecti64vEXT = fn(id: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetQueryObjectiv = fn(id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetQueryObjectivARB = fn(id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetQueryObjectui64v = fn(id: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetQueryObjectui64vEXT = fn(id: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetQueryObjectuiv = fn(id: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetQueryObjectuivARB = fn(id: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetQueryiv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetQueryivARB = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetRenderbufferParameteriv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetRenderbufferParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetSamplerParameterIiv = fn(sampler: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetSamplerParameterIuiv = fn(sampler: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetSamplerParameterfv = fn(sampler: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetSamplerParameteriv = fn(sampler: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetSemaphoreParameterivNV = fn(semaphore: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetSemaphoreParameterui64vEXT = fn(semaphore: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetSeparableFilterEXT = fn(target: gl_enum, format: gl_enum, type_: gl_enum, row: nullable *opaque, column: nullable *opaque, span: nullable *opaque) void;
export type fp_glGetShaderInfoLog = fn(shader: uint, bufSize: i32, length: nullable *i32, infoLog: nullable *i8) void;
export type fp_glGetShaderPrecisionFormat = fn(shadertype: gl_enum, precisiontype: gl_enum, range: nullable *i32, precision: nullable *i32) void;
export type fp_glGetShaderSource = fn(shader: uint, bufSize: i32, length: nullable *i32, source: nullable *i8) void;
export type fp_glGetShaderSourceARB = fn(obj: uint, maxLength: i32, length: nullable *i32, source: nullable *i8) void;
export type fp_glGetShaderiv = fn(shader: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetShadingRateImagePaletteNV = fn(viewport: uint, entry: uint, rate: nullable *gl_enum) void;
export type fp_glGetShadingRateSampleLocationivNV = fn(rate: gl_enum, samples: uint, index: uint, location: nullable *i32) void;
export type fp_glGetSharpenTexFuncSGIS = fn(target: gl_enum, points: nullable *f32) void;
export type fp_glGetStageIndexNV = fn(shadertype: gl_enum) u16;
export type fp_glGetString = fn(name: gl_enum) nullable *const u8;
export type fp_glGetStringi = fn(name: gl_enum, index: uint) nullable *const u8;
export type fp_glGetSubroutineIndex = fn(program: uint, shadertype: gl_enum, name: nullable *const i8) uint;
export type fp_glGetSubroutineUniformLocation = fn(program: uint, shadertype: gl_enum, name: nullable *const i8) i32;
export type fp_glGetSynciv = fn(sync: size, pname: gl_enum, count: i32, length: nullable *i32, values: nullable *i32) void;
export type fp_glGetTexBumpParameterfvATI = fn(pname: gl_enum, param: nullable *f32) void;
export type fp_glGetTexBumpParameterivATI = fn(pname: gl_enum, param: nullable *i32) void;
export type fp_glGetTexEnvxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexFilterFuncSGIS = fn(target: gl_enum, filter: gl_enum, weights: nullable *f32) void;
export type fp_glGetTexGenxvOES = fn(coord: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexImage = fn(target: gl_enum, level: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glGetTexLevelParameterfv = fn(target: gl_enum, level: i32, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTexLevelParameteriv = fn(target: gl_enum, level: i32, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexLevelParameterxvOES = fn(target: gl_enum, level: i32, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexParameterIiv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexParameterIivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexParameterIuiv = fn(target: gl_enum, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetTexParameterIuivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetTexParameterPointervAPPLE = fn(target: gl_enum, pname: gl_enum, params: nullable *nullable *opaque) void;
export type fp_glGetTexParameterfv = fn(target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTexParameteriv = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTexParameterxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureHandleARB = fn(texture: uint) u64;
export type fp_glGetTextureHandleNV = fn(texture: uint) u64;
export type fp_glGetTextureImage = fn(texture: uint, level: i32, format: gl_enum, type_: gl_enum, bufSize: i32, pixels: nullable *opaque) void;
export type fp_glGetTextureImageEXT = fn(texture: uint, target: gl_enum, level: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glGetTextureLevelParameterfv = fn(texture: uint, level: i32, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTextureLevelParameterfvEXT = fn(texture: uint, target: gl_enum, level: i32, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTextureLevelParameteriv = fn(texture: uint, level: i32, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureLevelParameterivEXT = fn(texture: uint, target: gl_enum, level: i32, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureParameterIiv = fn(texture: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureParameterIivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureParameterIuiv = fn(texture: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetTextureParameterIuivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetTextureParameterfv = fn(texture: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTextureParameterfvEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetTextureParameteriv = fn(texture: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureParameterivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTextureSamplerHandleARB = fn(texture: uint, sampler: uint) u64;
export type fp_glGetTextureSamplerHandleNV = fn(texture: uint, sampler: uint) u64;
export type fp_glGetTextureSubImage = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, bufSize: i32, pixels: nullable *opaque) void;
export type fp_glGetTrackMatrixivNV = fn(target: gl_enum, address: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetTransformFeedbackVarying = fn(program: uint, index: uint, bufSize: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetTransformFeedbackVaryingEXT = fn(program: uint, index: uint, bufSize: i32, length: nullable *i32, size_: nullable *i32, type_: nullable *gl_enum, name: nullable *i8) void;
export type fp_glGetTransformFeedbackVaryingNV = fn(program: uint, index: uint, location: nullable *i32) void;
export type fp_glGetTransformFeedbacki64_v = fn(xfb: uint, pname: gl_enum, index: uint, param: nullable *i64) void;
export type fp_glGetTransformFeedbacki_v = fn(xfb: uint, pname: gl_enum, index: uint, param: nullable *i32) void;
export type fp_glGetTransformFeedbackiv = fn(xfb: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetUniformBlockIndex = fn(program: uint, uniformBlockName: nullable *const i8) uint;
export type fp_glGetUniformBufferSizeEXT = fn(program: uint, location: i32) i32;
export type fp_glGetUniformIndices = fn(program: uint, uniformCount: i32, uniformNames: nullable *const nullable *const i8, uniformIndices: nullable *uint) void;
export type fp_glGetUniformLocation = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetUniformLocationARB = fn(programObj: uint, name: nullable *const i8) i32;
export type fp_glGetUniformOffsetEXT = fn(program: uint, location: i32) size;
export type fp_glGetUniformSubroutineuiv = fn(shadertype: gl_enum, location: i32, params: nullable *uint) void;
export type fp_glGetUniformdv = fn(program: uint, location: i32, params: nullable *f64) void;
export type fp_glGetUniformfv = fn(program: uint, location: i32, params: nullable *f32) void;
export type fp_glGetUniformfvARB = fn(programObj: uint, location: i32, params: nullable *f32) void;
export type fp_glGetUniformi64vARB = fn(program: uint, location: i32, params: nullable *i64) void;
export type fp_glGetUniformi64vNV = fn(program: uint, location: i32, params: nullable *i64) void;
export type fp_glGetUniformiv = fn(program: uint, location: i32, params: nullable *i32) void;
export type fp_glGetUniformivARB = fn(programObj: uint, location: i32, params: nullable *i32) void;
export type fp_glGetUniformui64vARB = fn(program: uint, location: i32, params: nullable *u64) void;
export type fp_glGetUniformui64vNV = fn(program: uint, location: i32, params: nullable *u64) void;
export type fp_glGetUniformuiv = fn(program: uint, location: i32, params: nullable *uint) void;
export type fp_glGetUniformuivEXT = fn(program: uint, location: i32, params: nullable *uint) void;
export type fp_glGetUnsignedBytei_vEXT = fn(target: gl_enum, index: uint, data: nullable *u8) void;
export type fp_glGetUnsignedBytevEXT = fn(pname: gl_enum, data: nullable *u8) void;
export type fp_glGetVariantArrayObjectfvATI = fn(id: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVariantArrayObjectivATI = fn(id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVariantBooleanvEXT = fn(id: uint, value: gl_enum, data: nullable *u8) void;
export type fp_glGetVariantFloatvEXT = fn(id: uint, value: gl_enum, data: nullable *f32) void;
export type fp_glGetVariantIntegervEXT = fn(id: uint, value: gl_enum, data: nullable *i32) void;
export type fp_glGetVariantPointervEXT = fn(id: uint, value: gl_enum, data: nullable *nullable *opaque) void;
export type fp_glGetVaryingLocationNV = fn(program: uint, name: nullable *const i8) i32;
export type fp_glGetVertexArrayIndexed64iv = fn(vaobj: uint, index: uint, pname: gl_enum, param: nullable *i64) void;
export type fp_glGetVertexArrayIndexediv = fn(vaobj: uint, index: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetVertexArrayIntegeri_vEXT = fn(vaobj: uint, index: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetVertexArrayIntegervEXT = fn(vaobj: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetVertexArrayPointeri_vEXT = fn(vaobj: uint, index: uint, pname: gl_enum, param: nullable *nullable *opaque) void;
export type fp_glGetVertexArrayPointervEXT = fn(vaobj: uint, pname: gl_enum, param: nullable *nullable *opaque) void;
export type fp_glGetVertexArrayiv = fn(vaobj: uint, pname: gl_enum, param: nullable *i32) void;
export type fp_glGetVertexAttribArrayObjectfvATI = fn(index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVertexAttribArrayObjectivATI = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVertexAttribIiv = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVertexAttribIivEXT = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVertexAttribIuiv = fn(index: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetVertexAttribIuivEXT = fn(index: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetVertexAttribLdv = fn(index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVertexAttribLdvEXT = fn(index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVertexAttribLi64vNV = fn(index: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetVertexAttribLui64vARB = fn(index: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetVertexAttribLui64vNV = fn(index: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetVertexAttribPointerv = fn(index: uint, pname: gl_enum, pointer: nullable *nullable *opaque) void;
export type fp_glGetVertexAttribPointervARB = fn(index: uint, pname: gl_enum, pointer: nullable *nullable *opaque) void;
export type fp_glGetVertexAttribPointervNV = fn(index: uint, pname: gl_enum, pointer: nullable *nullable *opaque) void;
export type fp_glGetVertexAttribdv = fn(index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVertexAttribdvARB = fn(index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVertexAttribdvNV = fn(index: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVertexAttribfv = fn(index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVertexAttribfvARB = fn(index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVertexAttribfvNV = fn(index: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVertexAttribiv = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVertexAttribivARB = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVertexAttribivNV = fn(index: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVideoCaptureStreamdvNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *f64) void;
export type fp_glGetVideoCaptureStreamfvNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *f32) void;
export type fp_glGetVideoCaptureStreamivNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVideoCaptureivNV = fn(video_capture_slot: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVideoi64vNV = fn(video_slot: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glGetVideoivNV = fn(video_slot: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glGetVideoui64vNV = fn(video_slot: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glGetVideouivNV = fn(video_slot: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glGetVkProcAddrNV = fn(name: nullable *const i8) GLVULKANPROCNV;
export type fp_glGetnCompressedTexImageARB = fn(target: gl_enum, lod: i32, bufSize: i32, img: nullable *opaque) void;
export type fp_glGetnTexImageARB = fn(target: gl_enum, level: i32, format: gl_enum, type_: gl_enum, bufSize: i32, img: nullable *opaque) void;
export type fp_glGetnUniformdvARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *f64) void;
export type fp_glGetnUniformfv = fn(program: uint, location: i32, bufSize: i32, params: nullable *f32) void;
export type fp_glGetnUniformfvARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *f32) void;
export type fp_glGetnUniformi64vARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *i64) void;
export type fp_glGetnUniformiv = fn(program: uint, location: i32, bufSize: i32, params: nullable *i32) void;
export type fp_glGetnUniformivARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *i32) void;
export type fp_glGetnUniformui64vARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *u64) void;
export type fp_glGetnUniformuiv = fn(program: uint, location: i32, bufSize: i32, params: nullable *uint) void;
export type fp_glGetnUniformuivARB = fn(program: uint, location: i32, bufSize: i32, params: nullable *uint) void;
export type fp_glGlobalAlphaFactorbSUN = fn(factor: i8) void;
export type fp_glGlobalAlphaFactordSUN = fn(factor: f64) void;
export type fp_glGlobalAlphaFactorfSUN = fn(factor: f32) void;
export type fp_glGlobalAlphaFactoriSUN = fn(factor: i32) void;
export type fp_glGlobalAlphaFactorsSUN = fn(factor: i16) void;
export type fp_glGlobalAlphaFactorubSUN = fn(factor: u8) void;
export type fp_glGlobalAlphaFactoruiSUN = fn(factor: uint) void;
export type fp_glGlobalAlphaFactorusSUN = fn(factor: u16) void;
export type fp_glHint = fn(target: gl_enum, mode: gl_enum) void;
export type fp_glHintPGI = fn(target: gl_enum, mode: i32) void;
export type fp_glHistogramEXT = fn(target: gl_enum, width: i32, internalformat: gl_enum, sink: u8) void;
export type fp_glIglooInterfaceSGIX = fn(pname: gl_enum, params: nullable *opaque) void;
export type fp_glImageTransformParameterfHP = fn(target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glImageTransformParameterfvHP = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glImageTransformParameteriHP = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glImageTransformParameterivHP = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glImportMemoryFdEXT = fn(memory: uint, size_: u64, handleType: gl_enum, fd: i32) void;
export type fp_glImportMemoryWin32HandleEXT = fn(memory: uint, size_: u64, handleType: gl_enum, handle: nullable *opaque) void;
export type fp_glImportMemoryWin32NameEXT = fn(memory: uint, size_: u64, handleType: gl_enum, name: nullable *opaque) void;
export type fp_glImportSemaphoreFdEXT = fn(semaphore: uint, handleType: gl_enum, fd: i32) void;
export type fp_glImportSemaphoreWin32HandleEXT = fn(semaphore: uint, handleType: gl_enum, handle: nullable *opaque) void;
export type fp_glImportSemaphoreWin32NameEXT = fn(semaphore: uint, handleType: gl_enum, name: nullable *opaque) void;
export type fp_glImportSyncEXT = fn(external_sync_type: gl_enum, external_sync: size, flags: gl_bitfield) size;
export type fp_glIndexFormatNV = fn(type_: gl_enum, stride: i32) void;
export type fp_glIndexFuncEXT = fn(func: gl_enum, ref: f64) void;
export type fp_glIndexMaterialEXT = fn(face: gl_enum, mode: gl_enum) void;
export type fp_glIndexPointerEXT = fn(type_: gl_enum, stride: i32, count: i32, pointer: nullable *opaque) void;
export type fp_glIndexPointerListIBM = fn(type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glIndexxOES = fn(component: i32) void;
export type fp_glIndexxvOES = fn(component: nullable *const i32) void;
export type fp_glInsertComponentEXT = fn(res: uint, src: uint, num: uint) void;
export type fp_glInsertEventMarkerEXT = fn(length: i32, marker: nullable *const i8) void;
export type fp_glInstrumentsBufferSGIX = fn(size_: i32, buffer: nullable *i32) void;
export type fp_glInterpolatePathsNV = fn(resultPath: uint, pathA: uint, pathB: uint, weight: f32) void;
export type fp_glInvalidateBufferData = fn(buffer: uint) void;
export type fp_glInvalidateBufferSubData = fn(buffer: uint, offset_: size, length: uintptr) void;
export type fp_glInvalidateFramebuffer = fn(target: gl_enum, numAttachments: i32, attachments: nullable *const gl_enum) void;
export type fp_glInvalidateNamedFramebufferData = fn(framebuffer: uint, numAttachments: i32, attachments: nullable *const gl_enum) void;
export type fp_glInvalidateNamedFramebufferSubData = fn(framebuffer: uint, numAttachments: i32, attachments: nullable *const gl_enum, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glInvalidateSubFramebuffer = fn(target: gl_enum, numAttachments: i32, attachments: nullable *const gl_enum, x: i32, y: i32, width: i32, height: i32) void;
export type fp_glInvalidateTexImage = fn(texture: uint, level: i32) void;
export type fp_glInvalidateTexSubImage = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32) void;
export type fp_glIsAsyncMarkerSGIX = fn(marker: uint) u8;
export type fp_glIsBuffer = fn(buffer: uint) u8;
export type fp_glIsBufferARB = fn(buffer: uint) u8;
export type fp_glIsBufferResidentNV = fn(target: gl_enum) u8;
export type fp_glIsCommandListNV = fn(list: uint) u8;
export type fp_glIsEnabled = fn(cap: gl_enum) u8;
export type fp_glIsEnabledIndexedEXT = fn(target: gl_enum, index: uint) u8;
export type fp_glIsEnabledi = fn(target: gl_enum, index: uint) u8;
export type fp_glIsFenceAPPLE = fn(fence: uint) u8;
export type fp_glIsFenceNV = fn(fence: uint) u8;
export type fp_glIsFramebuffer = fn(framebuffer: uint) u8;
export type fp_glIsFramebufferEXT = fn(framebuffer: uint) u8;
export type fp_glIsImageHandleResidentARB = fn(handle: u64) u8;
export type fp_glIsImageHandleResidentNV = fn(handle: u64) u8;
export type fp_glIsMemoryObjectEXT = fn(memoryObject: uint) u8;
export type fp_glIsNameAMD = fn(identifier: gl_enum, name: uint) u8;
export type fp_glIsNamedBufferResidentNV = fn(buffer: uint) u8;
export type fp_glIsNamedStringARB = fn(namelen: i32, name: nullable *const i8) u8;
export type fp_glIsObjectBufferATI = fn(buffer: uint) u8;
export type fp_glIsOcclusionQueryNV = fn(id: uint) u8;
export type fp_glIsPathNV = fn(path: uint) u8;
export type fp_glIsPointInFillPathNV = fn(path: uint, mask: uint, x: f32, y: f32) u8;
export type fp_glIsPointInStrokePathNV = fn(path: uint, x: f32, y: f32) u8;
export type fp_glIsProgram = fn(program: uint) u8;
export type fp_glIsProgramARB = fn(program: uint) u8;
export type fp_glIsProgramNV = fn(id: uint) u8;
export type fp_glIsProgramPipeline = fn(pipeline: uint) u8;
export type fp_glIsQuery = fn(id: uint) u8;
export type fp_glIsQueryARB = fn(id: uint) u8;
export type fp_glIsRenderbuffer = fn(renderbuffer: uint) u8;
export type fp_glIsRenderbufferEXT = fn(renderbuffer: uint) u8;
export type fp_glIsSampler = fn(sampler: uint) u8;
export type fp_glIsSemaphoreEXT = fn(semaphore: uint) u8;
export type fp_glIsShader = fn(shader: uint) u8;
export type fp_glIsStateNV = fn(state: uint) u8;
export type fp_glIsSync = fn(sync: size) u8;
export type fp_glIsTexture = fn(texture: uint) u8;
export type fp_glIsTextureEXT = fn(texture: uint) u8;
export type fp_glIsTextureHandleResidentARB = fn(handle: u64) u8;
export type fp_glIsTextureHandleResidentNV = fn(handle: u64) u8;
export type fp_glIsTransformFeedback = fn(id: uint) u8;
export type fp_glIsTransformFeedbackNV = fn(id: uint) u8;
export type fp_glIsVariantEnabledEXT = fn(id: uint, cap: gl_enum) u8;
export type fp_glIsVertexArray = fn(array: uint) u8;
export type fp_glIsVertexArrayAPPLE = fn(array: uint) u8;
export type fp_glIsVertexAttribEnabledAPPLE = fn(index: uint, pname: gl_enum) u8;
export type fp_glLGPUCopyImageSubDataNVX = fn(sourceGpu: uint, destinationGpuMask: gl_bitfield, srcName: uint, srcTarget: gl_enum, srcLevel: i32, srcX: i32, srxY: i32, srcZ: i32, dstName: uint, dstTarget: gl_enum, dstLevel: i32, dstX: i32, dstY: i32, dstZ: i32, width: i32, height: i32, depth: i32) void;
export type fp_glLGPUInterlockNVX = fn() void;
export type fp_glLGPUNamedBufferSubDataNVX = fn(gpuMask: gl_bitfield, buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glLabelObjectEXT = fn(type_: gl_enum, object: uint, length: i32, label: nullable *const i8) void;
export type fp_glLightEnviSGIX = fn(pname: gl_enum, param: i32) void;
export type fp_glLightModelxOES = fn(pname: gl_enum, param: i32) void;
export type fp_glLightModelxvOES = fn(pname: gl_enum, param: nullable *const i32) void;
export type fp_glLightxOES = fn(light: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glLightxvOES = fn(light: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glLineWidth = fn(width: f32) void;
export type fp_glLineWidthxOES = fn(width: i32) void;
export type fp_glLinkProgram = fn(program: uint) void;
export type fp_glLinkProgramARB = fn(programObj: uint) void;
export type fp_glListDrawCommandsStatesClientNV = fn(list: uint, segment: uint, indirects: nullable *const nullable *opaque, sizes: nullable *const i32, states: nullable *const uint, fbos: nullable *const uint, count: uint) void;
export type fp_glListParameterfSGIX = fn(list: uint, pname: gl_enum, param: f32) void;
export type fp_glListParameterfvSGIX = fn(list: uint, pname: gl_enum, params: nullable *const f32) void;
export type fp_glListParameteriSGIX = fn(list: uint, pname: gl_enum, param: i32) void;
export type fp_glListParameterivSGIX = fn(list: uint, pname: gl_enum, params: nullable *const i32) void;
export type fp_glLoadIdentityDeformationMapSGIX = fn(mask: gl_bitfield) void;
export type fp_glLoadMatrixxOES = fn(m: nullable *const i32) void;
export type fp_glLoadProgramNV = fn(target: gl_enum, id: uint, len_: i32, program: nullable *const u8) void;
export type fp_glLoadTransposeMatrixdARB = fn(m: nullable *const f64) void;
export type fp_glLoadTransposeMatrixfARB = fn(m: nullable *const f32) void;
export type fp_glLoadTransposeMatrixxOES = fn(m: nullable *const i32) void;
export type fp_glLockArraysEXT = fn(first: i32, count: i32) void;
export type fp_glLogicOp = fn(opcode: gl_enum) void;
export type fp_glMakeBufferNonResidentNV = fn(target: gl_enum) void;
export type fp_glMakeBufferResidentNV = fn(target: gl_enum, access: gl_enum) void;
export type fp_glMakeImageHandleNonResidentARB = fn(handle: u64) void;
export type fp_glMakeImageHandleNonResidentNV = fn(handle: u64) void;
export type fp_glMakeImageHandleResidentARB = fn(handle: u64, access: gl_enum) void;
export type fp_glMakeImageHandleResidentNV = fn(handle: u64, access: gl_enum) void;
export type fp_glMakeNamedBufferNonResidentNV = fn(buffer: uint) void;
export type fp_glMakeNamedBufferResidentNV = fn(buffer: uint, access: gl_enum) void;
export type fp_glMakeTextureHandleNonResidentARB = fn(handle: u64) void;
export type fp_glMakeTextureHandleNonResidentNV = fn(handle: u64) void;
export type fp_glMakeTextureHandleResidentARB = fn(handle: u64) void;
export type fp_glMakeTextureHandleResidentNV = fn(handle: u64) void;
export type fp_glMap1xOES = fn(target: gl_enum, u1: i32, u2: i32, stride: i32, order: i32, points: i32) void;
export type fp_glMap2xOES = fn(target: gl_enum, u1: i32, u2: i32, ustride: i32, uorder: i32, v1: i32, v2: i32, vstride: i32, vorder: i32, points: i32) void;
export type fp_glMapBuffer = fn(target: gl_enum, access: gl_enum) nullable *opaque;
export type fp_glMapBufferARB = fn(target: gl_enum, access: gl_enum) nullable *opaque;
export type fp_glMapBufferRange = fn(target: gl_enum, offset_: size, length: uintptr, access: gl_bitfield) nullable *opaque;
export type fp_glMapControlPointsNV = fn(target: gl_enum, index: uint, type_: gl_enum, ustride: i32, vstride: i32, uorder: i32, vorder: i32, packed: u8, points: nullable *opaque) void;
export type fp_glMapGrid1xOES = fn(n: i32, u1: i32, u2: i32) void;
export type fp_glMapGrid2xOES = fn(n: i32, u1: i32, u2: i32, v1: i32, v2: i32) void;
export type fp_glMapNamedBuffer = fn(buffer: uint, access: gl_enum) nullable *opaque;
export type fp_glMapNamedBufferEXT = fn(buffer: uint, access: gl_enum) nullable *opaque;
export type fp_glMapNamedBufferRange = fn(buffer: uint, offset_: size, length: uintptr, access: gl_bitfield) nullable *opaque;
export type fp_glMapNamedBufferRangeEXT = fn(buffer: uint, offset_: size, length: uintptr, access: gl_bitfield) nullable *opaque;
export type fp_glMapObjectBufferATI = fn(buffer: uint) nullable *opaque;
export type fp_glMapParameterfvNV = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glMapParameterivNV = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMapTexture2DINTEL = fn(texture: uint, level: i32, access: gl_bitfield, stride: nullable *i32, layout: nullable *gl_enum) nullable *opaque;
export type fp_glMapVertexAttrib1dAPPLE = fn(index: uint, size_: uint, u1: f64, u2: f64, stride: i32, order: i32, points: nullable *const f64) void;
export type fp_glMapVertexAttrib1fAPPLE = fn(index: uint, size_: uint, u1: f32, u2: f32, stride: i32, order: i32, points: nullable *const f32) void;
export type fp_glMapVertexAttrib2dAPPLE = fn(index: uint, size_: uint, u1: f64, u2: f64, ustride: i32, uorder: i32, v1: f64, v2: f64, vstride: i32, vorder: i32, points: nullable *const f64) void;
export type fp_glMapVertexAttrib2fAPPLE = fn(index: uint, size_: uint, u1: f32, u2: f32, ustride: i32, uorder: i32, v1: f32, v2: f32, vstride: i32, vorder: i32, points: nullable *const f32) void;
export type fp_glMaterialxOES = fn(face: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glMaterialxvOES = fn(face: gl_enum, pname: gl_enum, param: nullable *const i32) void;
export type fp_glMatrixFrustumEXT = fn(mode: gl_enum, left: f64, right: f64, bottom: f64, top: f64, zNear: f64, zFar: f64) void;
export type fp_glMatrixIndexPointerARB = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glMatrixIndexubvARB = fn(size_: i32, indices: nullable *const u8) void;
export type fp_glMatrixIndexuivARB = fn(size_: i32, indices: nullable *const uint) void;
export type fp_glMatrixIndexusvARB = fn(size_: i32, indices: nullable *const u16) void;
export type fp_glMatrixLoad3x2fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixLoad3x3fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixLoadIdentityEXT = fn(mode: gl_enum) void;
export type fp_glMatrixLoadTranspose3x3fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixLoadTransposedEXT = fn(mode: gl_enum, m: nullable *const f64) void;
export type fp_glMatrixLoadTransposefEXT = fn(mode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixLoaddEXT = fn(mode: gl_enum, m: nullable *const f64) void;
export type fp_glMatrixLoadfEXT = fn(mode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixMult3x2fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixMult3x3fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixMultTranspose3x3fNV = fn(matrixMode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixMultTransposedEXT = fn(mode: gl_enum, m: nullable *const f64) void;
export type fp_glMatrixMultTransposefEXT = fn(mode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixMultdEXT = fn(mode: gl_enum, m: nullable *const f64) void;
export type fp_glMatrixMultfEXT = fn(mode: gl_enum, m: nullable *const f32) void;
export type fp_glMatrixOrthoEXT = fn(mode: gl_enum, left: f64, right: f64, bottom: f64, top: f64, zNear: f64, zFar: f64) void;
export type fp_glMatrixPopEXT = fn(mode: gl_enum) void;
export type fp_glMatrixPushEXT = fn(mode: gl_enum) void;
export type fp_glMatrixRotatedEXT = fn(mode: gl_enum, angle: f64, x: f64, y: f64, z: f64) void;
export type fp_glMatrixRotatefEXT = fn(mode: gl_enum, angle: f32, x: f32, y: f32, z: f32) void;
export type fp_glMatrixScaledEXT = fn(mode: gl_enum, x: f64, y: f64, z: f64) void;
export type fp_glMatrixScalefEXT = fn(mode: gl_enum, x: f32, y: f32, z: f32) void;
export type fp_glMatrixTranslatedEXT = fn(mode: gl_enum, x: f64, y: f64, z: f64) void;
export type fp_glMatrixTranslatefEXT = fn(mode: gl_enum, x: f32, y: f32, z: f32) void;
export type fp_glMaxShaderCompilerThreadsARB = fn(count: uint) void;
export type fp_glMaxShaderCompilerThreadsKHR = fn(count: uint) void;
export type fp_glMemoryBarrier = fn(barriers: gl_bitfield) void;
export type fp_glMemoryBarrierByRegion = fn(barriers: gl_bitfield) void;
export type fp_glMemoryBarrierEXT = fn(barriers: gl_bitfield) void;
export type fp_glMemoryObjectParameterivEXT = fn(memoryObject: uint, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMinSampleShadingARB = fn(value: f32) void;
export type fp_glMinmaxEXT = fn(target: gl_enum, internalformat: gl_enum, sink: u8) void;
export type fp_glMultMatrixxOES = fn(m: nullable *const i32) void;
export type fp_glMultTransposeMatrixdARB = fn(m: nullable *const f64) void;
export type fp_glMultTransposeMatrixfARB = fn(m: nullable *const f32) void;
export type fp_glMultTransposeMatrixxOES = fn(m: nullable *const i32) void;
export type fp_glMultiDrawArrays = fn(mode: gl_enum, first: nullable *const i32, count: nullable *const i32, drawcount: i32) void;
export type fp_glMultiDrawArraysEXT = fn(mode: gl_enum, first: nullable *const i32, count: nullable *const i32, primcount: i32) void;
export type fp_glMultiDrawArraysIndirect = fn(mode: gl_enum, indirect: nullable *opaque, drawcount: i32, stride: i32) void;
export type fp_glMultiDrawArraysIndirectAMD = fn(mode: gl_enum, indirect: nullable *opaque, primcount: i32, stride: i32) void;
export type fp_glMultiDrawArraysIndirectBindlessCountNV = fn(mode: gl_enum, indirect: nullable *opaque, drawCount: i32, maxDrawCount: i32, stride: i32, vertexBufferCount: i32) void;
export type fp_glMultiDrawArraysIndirectBindlessNV = fn(mode: gl_enum, indirect: nullable *opaque, drawCount: i32, stride: i32, vertexBufferCount: i32) void;
export type fp_glMultiDrawArraysIndirectCountARB = fn(mode: gl_enum, indirect: nullable *opaque, drawcount: size, maxdrawcount: i32, stride: i32) void;
export type fp_glMultiDrawElementArrayAPPLE = fn(mode: gl_enum, first: nullable *const i32, count: nullable *const i32, primcount: i32) void;
export type fp_glMultiDrawElements = fn(mode: gl_enum, count: nullable *const i32, type_: gl_enum, indices: nullable *const nullable *opaque, drawcount: i32) void;
export type fp_glMultiDrawElementsBaseVertex = fn(mode: gl_enum, count: nullable *const i32, type_: gl_enum, indices: nullable *const nullable *opaque, drawcount: i32, basevertex: nullable *const i32) void;
export type fp_glMultiDrawElementsEXT = fn(mode: gl_enum, count: nullable *const i32, type_: gl_enum, indices: nullable *const nullable *opaque, primcount: i32) void;
export type fp_glMultiDrawElementsIndirect = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque, drawcount: i32, stride: i32) void;
export type fp_glMultiDrawElementsIndirectAMD = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque, primcount: i32, stride: i32) void;
export type fp_glMultiDrawElementsIndirectBindlessCountNV = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque, drawCount: i32, maxDrawCount: i32, stride: i32, vertexBufferCount: i32) void;
export type fp_glMultiDrawElementsIndirectBindlessNV = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque, drawCount: i32, stride: i32, vertexBufferCount: i32) void;
export type fp_glMultiDrawElementsIndirectCountARB = fn(mode: gl_enum, type_: gl_enum, indirect: nullable *opaque, drawcount: size, maxdrawcount: i32, stride: i32) void;
export type fp_glMultiDrawMeshTasksIndirectCountNV = fn(indirect: size, drawcount: size, maxdrawcount: i32, stride: i32) void;
export type fp_glMultiDrawMeshTasksIndirectNV = fn(indirect: size, drawcount: i32, stride: i32) void;
export type fp_glMultiDrawRangeElementArrayAPPLE = fn(mode: gl_enum, start: uint, end: uint, first: nullable *const i32, count: nullable *const i32, primcount: i32) void;
export type fp_glMultiModeDrawArraysIBM = fn(mode: nullable *const gl_enum, first: nullable *const i32, count: nullable *const i32, primcount: i32, modestride: i32) void;
export type fp_glMultiModeDrawElementsIBM = fn(mode: nullable *const gl_enum, count: nullable *const i32, type_: gl_enum, indices: nullable *const nullable *opaque, primcount: i32, modestride: i32) void;
export type fp_glMultiTexBufferEXT = fn(texunit: gl_enum, target: gl_enum, internalformat: gl_enum, buffer: uint) void;
export type fp_glMultiTexCoord1bOES = fn(texture: gl_enum, s: i8) void;
export type fp_glMultiTexCoord1bvOES = fn(texture: gl_enum, coords: nullable *const i8) void;
export type fp_glMultiTexCoord1dARB = fn(target: gl_enum, s: f64) void;
export type fp_glMultiTexCoord1dvARB = fn(target: gl_enum, v: nullable *const f64) void;
export type fp_glMultiTexCoord1fARB = fn(target: gl_enum, s: f32) void;
export type fp_glMultiTexCoord1fvARB = fn(target: gl_enum, v: nullable *const f32) void;
export type fp_glMultiTexCoord1hNV = fn(target: gl_enum, s: u16) void;
export type fp_glMultiTexCoord1hvNV = fn(target: gl_enum, v: nullable *const u16) void;
export type fp_glMultiTexCoord1iARB = fn(target: gl_enum, s: i32) void;
export type fp_glMultiTexCoord1ivARB = fn(target: gl_enum, v: nullable *const i32) void;
export type fp_glMultiTexCoord1sARB = fn(target: gl_enum, s: i16) void;
export type fp_glMultiTexCoord1svARB = fn(target: gl_enum, v: nullable *const i16) void;
export type fp_glMultiTexCoord1xOES = fn(texture: gl_enum, s: i32) void;
export type fp_glMultiTexCoord1xvOES = fn(texture: gl_enum, coords: nullable *const i32) void;
export type fp_glMultiTexCoord2bOES = fn(texture: gl_enum, s: i8, t: i8) void;
export type fp_glMultiTexCoord2bvOES = fn(texture: gl_enum, coords: nullable *const i8) void;
export type fp_glMultiTexCoord2dARB = fn(target: gl_enum, s: f64, t: f64) void;
export type fp_glMultiTexCoord2dvARB = fn(target: gl_enum, v: nullable *const f64) void;
export type fp_glMultiTexCoord2fARB = fn(target: gl_enum, s: f32, t: f32) void;
export type fp_glMultiTexCoord2fvARB = fn(target: gl_enum, v: nullable *const f32) void;
export type fp_glMultiTexCoord2hNV = fn(target: gl_enum, s: u16, t: u16) void;
export type fp_glMultiTexCoord2hvNV = fn(target: gl_enum, v: nullable *const u16) void;
export type fp_glMultiTexCoord2iARB = fn(target: gl_enum, s: i32, t: i32) void;
export type fp_glMultiTexCoord2ivARB = fn(target: gl_enum, v: nullable *const i32) void;
export type fp_glMultiTexCoord2sARB = fn(target: gl_enum, s: i16, t: i16) void;
export type fp_glMultiTexCoord2svARB = fn(target: gl_enum, v: nullable *const i16) void;
export type fp_glMultiTexCoord2xOES = fn(texture: gl_enum, s: i32, t: i32) void;
export type fp_glMultiTexCoord2xvOES = fn(texture: gl_enum, coords: nullable *const i32) void;
export type fp_glMultiTexCoord3bOES = fn(texture: gl_enum, s: i8, t: i8, r: i8) void;
export type fp_glMultiTexCoord3bvOES = fn(texture: gl_enum, coords: nullable *const i8) void;
export type fp_glMultiTexCoord3dARB = fn(target: gl_enum, s: f64, t: f64, r: f64) void;
export type fp_glMultiTexCoord3dvARB = fn(target: gl_enum, v: nullable *const f64) void;
export type fp_glMultiTexCoord3fARB = fn(target: gl_enum, s: f32, t: f32, r: f32) void;
export type fp_glMultiTexCoord3fvARB = fn(target: gl_enum, v: nullable *const f32) void;
export type fp_glMultiTexCoord3hNV = fn(target: gl_enum, s: u16, t: u16, r: u16) void;
export type fp_glMultiTexCoord3hvNV = fn(target: gl_enum, v: nullable *const u16) void;
export type fp_glMultiTexCoord3iARB = fn(target: gl_enum, s: i32, t: i32, r: i32) void;
export type fp_glMultiTexCoord3ivARB = fn(target: gl_enum, v: nullable *const i32) void;
export type fp_glMultiTexCoord3sARB = fn(target: gl_enum, s: i16, t: i16, r: i16) void;
export type fp_glMultiTexCoord3svARB = fn(target: gl_enum, v: nullable *const i16) void;
export type fp_glMultiTexCoord3xOES = fn(texture: gl_enum, s: i32, t: i32, r: i32) void;
export type fp_glMultiTexCoord3xvOES = fn(texture: gl_enum, coords: nullable *const i32) void;
export type fp_glMultiTexCoord4bOES = fn(texture: gl_enum, s: i8, t: i8, r: i8, q: i8) void;
export type fp_glMultiTexCoord4bvOES = fn(texture: gl_enum, coords: nullable *const i8) void;
export type fp_glMultiTexCoord4dARB = fn(target: gl_enum, s: f64, t: f64, r: f64, q: f64) void;
export type fp_glMultiTexCoord4dvARB = fn(target: gl_enum, v: nullable *const f64) void;
export type fp_glMultiTexCoord4fARB = fn(target: gl_enum, s: f32, t: f32, r: f32, q: f32) void;
export type fp_glMultiTexCoord4fvARB = fn(target: gl_enum, v: nullable *const f32) void;
export type fp_glMultiTexCoord4hNV = fn(target: gl_enum, s: u16, t: u16, r: u16, q: u16) void;
export type fp_glMultiTexCoord4hvNV = fn(target: gl_enum, v: nullable *const u16) void;
export type fp_glMultiTexCoord4iARB = fn(target: gl_enum, s: i32, t: i32, r: i32, q: i32) void;
export type fp_glMultiTexCoord4ivARB = fn(target: gl_enum, v: nullable *const i32) void;
export type fp_glMultiTexCoord4sARB = fn(target: gl_enum, s: i16, t: i16, r: i16, q: i16) void;
export type fp_glMultiTexCoord4svARB = fn(target: gl_enum, v: nullable *const i16) void;
export type fp_glMultiTexCoord4xOES = fn(texture: gl_enum, s: i32, t: i32, r: i32, q: i32) void;
export type fp_glMultiTexCoord4xvOES = fn(texture: gl_enum, coords: nullable *const i32) void;
export type fp_glMultiTexCoordPointerEXT = fn(texunit: gl_enum, size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glMultiTexEnvfEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glMultiTexEnvfvEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glMultiTexEnviEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glMultiTexEnvivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMultiTexGendEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, param: f64) void;
export type fp_glMultiTexGendvEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *const f64) void;
export type fp_glMultiTexGenfEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glMultiTexGenfvEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glMultiTexGeniEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glMultiTexGenivEXT = fn(texunit: gl_enum, coord: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMultiTexImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: i32, width: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMultiTexImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMultiTexImage3DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, depth: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMultiTexParameterIivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMultiTexParameterIuivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const uint) void;
export type fp_glMultiTexParameterfEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glMultiTexParameterfvEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glMultiTexParameteriEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glMultiTexParameterivEXT = fn(texunit: gl_enum, target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glMultiTexRenderbufferEXT = fn(texunit: gl_enum, target: gl_enum, renderbuffer: uint) void;
export type fp_glMultiTexSubImage1DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMultiTexSubImage2DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMultiTexSubImage3DEXT = fn(texunit: gl_enum, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glMulticastBarrierNV = fn() void;
export type fp_glMulticastBlitFramebufferNV = fn(srcGpu: uint, dstGpu: uint, srcX0: i32, srcY0: i32, srcX1: i32, srcY1: i32, dstX0: i32, dstY0: i32, dstX1: i32, dstY1: i32, mask: gl_bitfield, filter: gl_enum) void;
export type fp_glMulticastBufferSubDataNV = fn(gpuMask: gl_bitfield, buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glMulticastCopyBufferSubDataNV = fn(readGpu: uint, writeGpuMask: gl_bitfield, readBuffer: uint, writeBuffer: uint, readOffset: size, writeOffset: size, size_: uintptr) void;
export type fp_glMulticastCopyImageSubDataNV = fn(srcGpu: uint, dstGpuMask: gl_bitfield, srcName: uint, srcTarget: gl_enum, srcLevel: i32, srcX: i32, srcY: i32, srcZ: i32, dstName: uint, dstTarget: gl_enum, dstLevel: i32, dstX: i32, dstY: i32, dstZ: i32, srcWidth: i32, srcHeight: i32, srcDepth: i32) void;
export type fp_glMulticastFramebufferSampleLocationsfvNV = fn(gpu: uint, framebuffer: uint, start: uint, count: i32, v: nullable *const f32) void;
export type fp_glMulticastGetQueryObjecti64vNV = fn(gpu: uint, id: uint, pname: gl_enum, params: nullable *i64) void;
export type fp_glMulticastGetQueryObjectivNV = fn(gpu: uint, id: uint, pname: gl_enum, params: nullable *i32) void;
export type fp_glMulticastGetQueryObjectui64vNV = fn(gpu: uint, id: uint, pname: gl_enum, params: nullable *u64) void;
export type fp_glMulticastGetQueryObjectuivNV = fn(gpu: uint, id: uint, pname: gl_enum, params: nullable *uint) void;
export type fp_glMulticastScissorArrayvNVX = fn(gpu: uint, first: uint, count: i32, v: nullable *const i32) void;
export type fp_glMulticastViewportArrayvNVX = fn(gpu: uint, first: uint, count: i32, v: nullable *const f32) void;
export type fp_glMulticastViewportPositionWScaleNVX = fn(gpu: uint, index: uint, xcoeff: f32, ycoeff: f32) void;
export type fp_glMulticastWaitSyncNV = fn(signalGpu: uint, waitGpuMask: gl_bitfield) void;
export type fp_glNamedBufferAttachMemoryNV = fn(buffer: uint, memory: uint, offset_: u64) void;
export type fp_glNamedBufferData = fn(buffer: uint, size_: uintptr, data: nullable *opaque, usage: gl_enum) void;
export type fp_glNamedBufferDataEXT = fn(buffer: uint, size_: uintptr, data: nullable *opaque, usage: gl_enum) void;
export type fp_glNamedBufferPageCommitmentARB = fn(buffer: uint, offset_: size, size_: uintptr, commit: u8) void;
export type fp_glNamedBufferPageCommitmentEXT = fn(buffer: uint, offset_: size, size_: uintptr, commit: u8) void;
export type fp_glNamedBufferPageCommitmentMemNV = fn(buffer: uint, offset_: size, size_: uintptr, memory: uint, memOffset: u64, commit: u8) void;
export type fp_glNamedBufferStorage = fn(buffer: uint, size_: uintptr, data: nullable *opaque, flags: gl_bitfield) void;
export type fp_glNamedBufferStorageEXT = fn(buffer: uint, size_: uintptr, data: nullable *opaque, flags: gl_bitfield) void;
export type fp_glNamedBufferStorageExternalEXT = fn(buffer: uint, offset_: size, size_: uintptr, clientBuffer: *opaque, flags: gl_bitfield) void;
export type fp_glNamedBufferStorageMemEXT = fn(buffer: uint, size_: uintptr, memory: uint, offset_: u64) void;
export type fp_glNamedBufferSubData = fn(buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glNamedBufferSubDataEXT = fn(buffer: uint, offset_: size, size_: uintptr, data: nullable *opaque) void;
export type fp_glNamedCopyBufferSubDataEXT = fn(readBuffer: uint, writeBuffer: uint, readOffset: size, writeOffset: size, size_: uintptr) void;
export type fp_glNamedFramebufferDrawBuffer = fn(framebuffer: uint, buf: gl_enum) void;
export type fp_glNamedFramebufferDrawBuffers = fn(framebuffer: uint, n: i32, bufs: nullable *const gl_enum) void;
export type fp_glNamedFramebufferParameteri = fn(framebuffer: uint, pname: gl_enum, param: i32) void;
export type fp_glNamedFramebufferParameteriEXT = fn(framebuffer: uint, pname: gl_enum, param: i32) void;
export type fp_glNamedFramebufferReadBuffer = fn(framebuffer: uint, src: gl_enum) void;
export type fp_glNamedFramebufferRenderbuffer = fn(framebuffer: uint, attachment: gl_enum, renderbuffertarget: gl_enum, renderbuffer: uint) void;
export type fp_glNamedFramebufferRenderbufferEXT = fn(framebuffer: uint, attachment: gl_enum, renderbuffertarget: gl_enum, renderbuffer: uint) void;
export type fp_glNamedFramebufferSampleLocationsfvARB = fn(framebuffer: uint, start: uint, count: i32, v: nullable *const f32) void;
export type fp_glNamedFramebufferSampleLocationsfvNV = fn(framebuffer: uint, start: uint, count: i32, v: nullable *const f32) void;
export type fp_glNamedFramebufferSamplePositionsfvAMD = fn(framebuffer: uint, numsamples: uint, pixelindex: uint, values: nullable *const f32) void;
export type fp_glNamedFramebufferTexture = fn(framebuffer: uint, attachment: gl_enum, texture: uint, level: i32) void;
export type fp_glNamedFramebufferTexture1DEXT = fn(framebuffer: uint, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glNamedFramebufferTexture2DEXT = fn(framebuffer: uint, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32) void;
export type fp_glNamedFramebufferTexture3DEXT = fn(framebuffer: uint, attachment: gl_enum, textarget: gl_enum, texture: uint, level: i32, zoffset: i32) void;
export type fp_glNamedFramebufferTextureEXT = fn(framebuffer: uint, attachment: gl_enum, texture: uint, level: i32) void;
export type fp_glNamedFramebufferTextureFaceEXT = fn(framebuffer: uint, attachment: gl_enum, texture: uint, level: i32, face: gl_enum) void;
export type fp_glNamedFramebufferTextureLayer = fn(framebuffer: uint, attachment: gl_enum, texture: uint, level: i32, layer: i32) void;
export type fp_glNamedFramebufferTextureLayerEXT = fn(framebuffer: uint, attachment: gl_enum, texture: uint, level: i32, layer: i32) void;
export type fp_glNamedProgramLocalParameter4dEXT = fn(program: uint, target: gl_enum, index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glNamedProgramLocalParameter4dvEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *const f64) void;
export type fp_glNamedProgramLocalParameter4fEXT = fn(program: uint, target: gl_enum, index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glNamedProgramLocalParameter4fvEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *const f32) void;
export type fp_glNamedProgramLocalParameterI4iEXT = fn(program: uint, target: gl_enum, index: uint, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glNamedProgramLocalParameterI4ivEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *const i32) void;
export type fp_glNamedProgramLocalParameterI4uiEXT = fn(program: uint, target: gl_enum, index: uint, x: uint, y: uint, z: uint, w: uint) void;
export type fp_glNamedProgramLocalParameterI4uivEXT = fn(program: uint, target: gl_enum, index: uint, params: nullable *const uint) void;
export type fp_glNamedProgramLocalParameters4fvEXT = fn(program: uint, target: gl_enum, index: uint, count: i32, params: nullable *const f32) void;
export type fp_glNamedProgramLocalParametersI4ivEXT = fn(program: uint, target: gl_enum, index: uint, count: i32, params: nullable *const i32) void;
export type fp_glNamedProgramLocalParametersI4uivEXT = fn(program: uint, target: gl_enum, index: uint, count: i32, params: nullable *const uint) void;
export type fp_glNamedProgramStringEXT = fn(program: uint, target: gl_enum, format: gl_enum, len_: i32, string: nullable *opaque) void;
export type fp_glNamedRenderbufferStorage = fn(renderbuffer: uint, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedRenderbufferStorageEXT = fn(renderbuffer: uint, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedRenderbufferStorageMultisample = fn(renderbuffer: uint, samples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedRenderbufferStorageMultisampleAdvancedAMD = fn(renderbuffer: uint, samples: i32, storageSamples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedRenderbufferStorageMultisampleCoverageEXT = fn(renderbuffer: uint, coverageSamples: i32, colorSamples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedRenderbufferStorageMultisampleEXT = fn(renderbuffer: uint, samples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glNamedStringARB = fn(type_: gl_enum, namelen: i32, name: nullable *const i8, stringlen: i32, string: nullable *const i8) void;
export type fp_glNewObjectBufferATI = fn(size_: i32, pointer: nullable *opaque, usage: gl_enum) uint;
export type fp_glNormal3fVertex3fSUN = fn(nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glNormal3fVertex3fvSUN = fn(n: nullable *const f32, v: nullable *const f32) void;
export type fp_glNormal3hNV = fn(nx: u16, ny: u16, nz: u16) void;
export type fp_glNormal3hvNV = fn(v: nullable *const u16) void;
export type fp_glNormal3xOES = fn(nx: i32, ny: i32, nz: i32) void;
export type fp_glNormal3xvOES = fn(coords: nullable *const i32) void;
export type fp_glNormalFormatNV = fn(type_: gl_enum, stride: i32) void;
export type fp_glNormalPointerEXT = fn(type_: gl_enum, stride: i32, count: i32, pointer: nullable *opaque) void;
export type fp_glNormalPointerListIBM = fn(type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glNormalPointervINTEL = fn(type_: gl_enum, pointer: nullable *const nullable *opaque) void;
export type fp_glNormalStream3bATI = fn(stream: gl_enum, nx: i8, ny: i8, nz: i8) void;
export type fp_glNormalStream3bvATI = fn(stream: gl_enum, coords: nullable *const i8) void;
export type fp_glNormalStream3dATI = fn(stream: gl_enum, nx: f64, ny: f64, nz: f64) void;
export type fp_glNormalStream3dvATI = fn(stream: gl_enum, coords: nullable *const f64) void;
export type fp_glNormalStream3fATI = fn(stream: gl_enum, nx: f32, ny: f32, nz: f32) void;
export type fp_glNormalStream3fvATI = fn(stream: gl_enum, coords: nullable *const f32) void;
export type fp_glNormalStream3iATI = fn(stream: gl_enum, nx: i32, ny: i32, nz: i32) void;
export type fp_glNormalStream3ivATI = fn(stream: gl_enum, coords: nullable *const i32) void;
export type fp_glNormalStream3sATI = fn(stream: gl_enum, nx: i16, ny: i16, nz: i16) void;
export type fp_glNormalStream3svATI = fn(stream: gl_enum, coords: nullable *const i16) void;
export type fp_glObjectLabel = fn(identifier: gl_enum, name: uint, length: i32, label: nullable *const i8) void;
export type fp_glObjectPtrLabel = fn(ptr: nullable *opaque, length: i32, label: nullable *const i8) void;
export type fp_glObjectPurgeableAPPLE = fn(objectType: gl_enum, name: uint, option: gl_enum) gl_enum;
export type fp_glObjectUnpurgeableAPPLE = fn(objectType: gl_enum, name: uint, option: gl_enum) gl_enum;
export type fp_glOrthofOES = fn(l: f32, r: f32, b: f32, t: f32, n: f32, f: f32) void;
export type fp_glOrthoxOES = fn(l: i32, r: i32, b: i32, t: i32, n: i32, f: i32) void;
export type fp_glPNTrianglesfATI = fn(pname: gl_enum, param: f32) void;
export type fp_glPNTrianglesiATI = fn(pname: gl_enum, param: i32) void;
export type fp_glPassTexCoordATI = fn(dst: uint, coord: uint, swizzle: gl_enum) void;
export type fp_glPassThroughxOES = fn(token: i32) void;
export type fp_glPatchParameterfv = fn(pname: gl_enum, values: nullable *const f32) void;
export type fp_glPatchParameteri = fn(pname: gl_enum, value: i32) void;
export type fp_glPathCommandsNV = fn(path: uint, numCommands: i32, commands: nullable *const u8, numCoords: i32, coordType: gl_enum, coords: nullable *opaque) void;
export type fp_glPathCoordsNV = fn(path: uint, numCoords: i32, coordType: gl_enum, coords: nullable *opaque) void;
export type fp_glPathCoverDepthFuncNV = fn(func: gl_enum) void;
export type fp_glPathDashArrayNV = fn(path: uint, dashCount: i32, dashArray: nullable *const f32) void;
export type fp_glPathGlyphIndexArrayNV = fn(firstPathName: uint, fontTarget: gl_enum, fontName: nullable *opaque, fontStyle: gl_bitfield, firstGlyphIndex: uint, numGlyphs: i32, pathParameterTemplate: uint, emScale: f32) gl_enum;
export type fp_glPathGlyphIndexRangeNV = fn(fontTarget: gl_enum, fontName: nullable *opaque, fontStyle: gl_bitfield, pathParameterTemplate: uint, emScale: f32, baseAndCount: nullable *uint) gl_enum;
export type fp_glPathGlyphRangeNV = fn(firstPathName: uint, fontTarget: gl_enum, fontName: nullable *opaque, fontStyle: gl_bitfield, firstGlyph: uint, numGlyphs: i32, handleMissingGlyphs: gl_enum, pathParameterTemplate: uint, emScale: f32) void;
export type fp_glPathGlyphsNV = fn(firstPathName: uint, fontTarget: gl_enum, fontName: nullable *opaque, fontStyle: gl_bitfield, numGlyphs: i32, type_: gl_enum, charcodes: nullable *opaque, handleMissingGlyphs: gl_enum, pathParameterTemplate: uint, emScale: f32) void;
export type fp_glPathMemoryGlyphIndexArrayNV = fn(firstPathName: uint, fontTarget: gl_enum, fontSize: uintptr, fontData: nullable *opaque, faceIndex: i32, firstGlyphIndex: uint, numGlyphs: i32, pathParameterTemplate: uint, emScale: f32) gl_enum;
export type fp_glPathParameterfNV = fn(path: uint, pname: gl_enum, value: f32) void;
export type fp_glPathParameterfvNV = fn(path: uint, pname: gl_enum, value: nullable *const f32) void;
export type fp_glPathParameteriNV = fn(path: uint, pname: gl_enum, value: i32) void;
export type fp_glPathParameterivNV = fn(path: uint, pname: gl_enum, value: nullable *const i32) void;
export type fp_glPathStencilDepthOffsetNV = fn(factor: f32, units: f32) void;
export type fp_glPathStencilFuncNV = fn(func: gl_enum, ref: i32, mask: uint) void;
export type fp_glPathStringNV = fn(path: uint, format: gl_enum, length: i32, pathString: nullable *opaque) void;
export type fp_glPathSubCommandsNV = fn(path: uint, commandStart: i32, commandsToDelete: i32, numCommands: i32, commands: nullable *const u8, numCoords: i32, coordType: gl_enum, coords: nullable *opaque) void;
export type fp_glPathSubCoordsNV = fn(path: uint, coordStart: i32, numCoords: i32, coordType: gl_enum, coords: nullable *opaque) void;
export type fp_glPauseTransformFeedback = fn() void;
export type fp_glPauseTransformFeedbackNV = fn() void;
export type fp_glPixelDataRangeNV = fn(target: gl_enum, length: i32, pointer: nullable *opaque) void;
export type fp_glPixelMapx = fn(map: gl_enum, size_: i32, values: nullable *const i32) void;
export type fp_glPixelStoref = fn(pname: gl_enum, param: f32) void;
export type fp_glPixelStorei = fn(pname: gl_enum, param: i32) void;
export type fp_glPixelStorex = fn(pname: gl_enum, param: i32) void;
export type fp_glPixelTexGenParameterfSGIS = fn(pname: gl_enum, param: f32) void;
export type fp_glPixelTexGenParameterfvSGIS = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glPixelTexGenParameteriSGIS = fn(pname: gl_enum, param: i32) void;
export type fp_glPixelTexGenParameterivSGIS = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glPixelTexGenSGIX = fn(mode: gl_enum) void;
export type fp_glPixelTransferxOES = fn(pname: gl_enum, param: i32) void;
export type fp_glPixelTransformParameterfEXT = fn(target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glPixelTransformParameterfvEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glPixelTransformParameteriEXT = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glPixelTransformParameterivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glPixelZoomxOES = fn(xfactor: i32, yfactor: i32) void;
export type fp_glPointAlongPathNV = fn(path: uint, startSegment: i32, numSegments: i32, distance: f32, x: nullable *f32, y: nullable *f32, tangentX: nullable *f32, tangentY: nullable *f32) u8;
export type fp_glPointParameterf = fn(pname: gl_enum, param: f32) void;
export type fp_glPointParameterfARB = fn(pname: gl_enum, param: f32) void;
export type fp_glPointParameterfEXT = fn(pname: gl_enum, param: f32) void;
export type fp_glPointParameterfSGIS = fn(pname: gl_enum, param: f32) void;
export type fp_glPointParameterfv = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glPointParameterfvARB = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glPointParameterfvEXT = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glPointParameterfvSGIS = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glPointParameteri = fn(pname: gl_enum, param: i32) void;
export type fp_glPointParameteriNV = fn(pname: gl_enum, param: i32) void;
export type fp_glPointParameteriv = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glPointParameterivNV = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glPointParameterxvOES = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glPointSize = fn(size_: f32) void;
export type fp_glPointSizexOES = fn(size_: i32) void;
export type fp_glPollAsyncSGIX = fn(markerp: nullable *uint) i32;
export type fp_glPollInstrumentsSGIX = fn(marker_p: nullable *i32) i32;
export type fp_glPolygonMode = fn(face: gl_enum, mode: gl_enum) void;
export type fp_glPolygonOffset = fn(factor: f32, units: f32) void;
export type fp_glPolygonOffsetClamp = fn(factor: f32, units: f32, clamp: f32) void;
export type fp_glPolygonOffsetClampEXT = fn(factor: f32, units: f32, clamp: f32) void;
export type fp_glPolygonOffsetEXT = fn(factor: f32, bias: f32) void;
export type fp_glPolygonOffsetxOES = fn(factor: i32, units: i32) void;
export type fp_glPopDebugGroup = fn() void;
export type fp_glPopGroupMarkerEXT = fn() void;
export type fp_glPresentFrameDualFillNV = fn(video_slot: uint, minPresentTime: u64, beginPresentTimeId: uint, presentDurationId: uint, type_: gl_enum, target0: gl_enum, fill0: uint, target1: gl_enum, fill1: uint, target2: gl_enum, fill2: uint, target3: gl_enum, fill3: uint) void;
export type fp_glPresentFrameKeyedNV = fn(video_slot: uint, minPresentTime: u64, beginPresentTimeId: uint, presentDurationId: uint, type_: gl_enum, target0: gl_enum, fill0: uint, key0: uint, target1: gl_enum, fill1: uint, key1: uint) void;
export type fp_glPrimitiveBoundingBoxARB = fn(minX: f32, minY: f32, minZ: f32, minW: f32, maxX: f32, maxY: f32, maxZ: f32, maxW: f32) void;
export type fp_glPrimitiveRestartIndex = fn(index: uint) void;
export type fp_glPrimitiveRestartIndexNV = fn(index: uint) void;
export type fp_glPrimitiveRestartNV = fn() void;
export type fp_glPrioritizeTexturesEXT = fn(n: i32, textures: nullable *const uint, priorities: nullable *const f64) void;
export type fp_glPrioritizeTexturesxOES = fn(n: i32, textures: nullable *const uint, priorities: nullable *const i32) void;
export type fp_glProgramBinary = fn(program: uint, binaryFormat: gl_enum, binary: nullable *opaque, length: i32) void;
export type fp_glProgramBufferParametersIivNV = fn(target: gl_enum, bindingIndex: uint, wordIndex: uint, count: i32, params: nullable *const i32) void;
export type fp_glProgramBufferParametersIuivNV = fn(target: gl_enum, bindingIndex: uint, wordIndex: uint, count: i32, params: nullable *const uint) void;
export type fp_glProgramBufferParametersfvNV = fn(target: gl_enum, bindingIndex: uint, wordIndex: uint, count: i32, params: nullable *const f32) void;
export type fp_glProgramEnvParameter4dARB = fn(target: gl_enum, index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glProgramEnvParameter4dvARB = fn(target: gl_enum, index: uint, params: nullable *const f64) void;
export type fp_glProgramEnvParameter4fARB = fn(target: gl_enum, index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glProgramEnvParameter4fvARB = fn(target: gl_enum, index: uint, params: nullable *const f32) void;
export type fp_glProgramEnvParameterI4iNV = fn(target: gl_enum, index: uint, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glProgramEnvParameterI4ivNV = fn(target: gl_enum, index: uint, params: nullable *const i32) void;
export type fp_glProgramEnvParameterI4uiNV = fn(target: gl_enum, index: uint, x: uint, y: uint, z: uint, w: uint) void;
export type fp_glProgramEnvParameterI4uivNV = fn(target: gl_enum, index: uint, params: nullable *const uint) void;
export type fp_glProgramEnvParameters4fvEXT = fn(target: gl_enum, index: uint, count: i32, params: nullable *const f32) void;
export type fp_glProgramEnvParametersI4ivNV = fn(target: gl_enum, index: uint, count: i32, params: nullable *const i32) void;
export type fp_glProgramEnvParametersI4uivNV = fn(target: gl_enum, index: uint, count: i32, params: nullable *const uint) void;
export type fp_glProgramLocalParameter4dARB = fn(target: gl_enum, index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glProgramLocalParameter4dvARB = fn(target: gl_enum, index: uint, params: nullable *const f64) void;
export type fp_glProgramLocalParameter4fARB = fn(target: gl_enum, index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glProgramLocalParameter4fvARB = fn(target: gl_enum, index: uint, params: nullable *const f32) void;
export type fp_glProgramLocalParameterI4iNV = fn(target: gl_enum, index: uint, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glProgramLocalParameterI4ivNV = fn(target: gl_enum, index: uint, params: nullable *const i32) void;
export type fp_glProgramLocalParameterI4uiNV = fn(target: gl_enum, index: uint, x: uint, y: uint, z: uint, w: uint) void;
export type fp_glProgramLocalParameterI4uivNV = fn(target: gl_enum, index: uint, params: nullable *const uint) void;
export type fp_glProgramLocalParameters4fvEXT = fn(target: gl_enum, index: uint, count: i32, params: nullable *const f32) void;
export type fp_glProgramLocalParametersI4ivNV = fn(target: gl_enum, index: uint, count: i32, params: nullable *const i32) void;
export type fp_glProgramLocalParametersI4uivNV = fn(target: gl_enum, index: uint, count: i32, params: nullable *const uint) void;
export type fp_glProgramNamedParameter4dNV = fn(id: uint, len_: i32, name: nullable *const u8, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glProgramNamedParameter4dvNV = fn(id: uint, len_: i32, name: nullable *const u8, v: nullable *const f64) void;
export type fp_glProgramNamedParameter4fNV = fn(id: uint, len_: i32, name: nullable *const u8, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glProgramNamedParameter4fvNV = fn(id: uint, len_: i32, name: nullable *const u8, v: nullable *const f32) void;
export type fp_glProgramParameter4dNV = fn(target: gl_enum, index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glProgramParameter4dvNV = fn(target: gl_enum, index: uint, v: nullable *const f64) void;
export type fp_glProgramParameter4fNV = fn(target: gl_enum, index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glProgramParameter4fvNV = fn(target: gl_enum, index: uint, v: nullable *const f32) void;
export type fp_glProgramParameteri = fn(program: uint, pname: gl_enum, value: i32) void;
export type fp_glProgramParameteriARB = fn(program: uint, pname: gl_enum, value: i32) void;
export type fp_glProgramParameteriEXT = fn(program: uint, pname: gl_enum, value: i32) void;
export type fp_glProgramParameters4dvNV = fn(target: gl_enum, index: uint, count: i32, v: nullable *const f64) void;
export type fp_glProgramParameters4fvNV = fn(target: gl_enum, index: uint, count: i32, v: nullable *const f32) void;
export type fp_glProgramPathFragmentInputGenNV = fn(program: uint, location: i32, genMode: gl_enum, components: i32, coeffs: nullable *const f32) void;
export type fp_glProgramStringARB = fn(target: gl_enum, format: gl_enum, len_: i32, string: nullable *opaque) void;
export type fp_glProgramSubroutineParametersuivNV = fn(target: gl_enum, count: i32, params: nullable *const uint) void;
export type fp_glProgramUniform1d = fn(program: uint, location: i32, v0: f64) void;
export type fp_glProgramUniform1dEXT = fn(program: uint, location: i32, x: f64) void;
export type fp_glProgramUniform1dv = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform1dvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform1f = fn(program: uint, location: i32, v0: f32) void;
export type fp_glProgramUniform1fEXT = fn(program: uint, location: i32, v0: f32) void;
export type fp_glProgramUniform1fv = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform1fvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform1i = fn(program: uint, location: i32, v0: i32) void;
export type fp_glProgramUniform1i64ARB = fn(program: uint, location: i32, x: i64) void;
export type fp_glProgramUniform1i64NV = fn(program: uint, location: i32, x: i64) void;
export type fp_glProgramUniform1i64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform1i64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform1iEXT = fn(program: uint, location: i32, v0: i32) void;
export type fp_glProgramUniform1iv = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform1ivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform1ui = fn(program: uint, location: i32, v0: uint) void;
export type fp_glProgramUniform1ui64ARB = fn(program: uint, location: i32, x: u64) void;
export type fp_glProgramUniform1ui64NV = fn(program: uint, location: i32, x: u64) void;
export type fp_glProgramUniform1ui64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform1ui64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform1uiEXT = fn(program: uint, location: i32, v0: uint) void;
export type fp_glProgramUniform1uiv = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform1uivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform2d = fn(program: uint, location: i32, v0: f64, v1: f64) void;
export type fp_glProgramUniform2dEXT = fn(program: uint, location: i32, x: f64, y: f64) void;
export type fp_glProgramUniform2dv = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform2dvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform2f = fn(program: uint, location: i32, v0: f32, v1: f32) void;
export type fp_glProgramUniform2fEXT = fn(program: uint, location: i32, v0: f32, v1: f32) void;
export type fp_glProgramUniform2fv = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform2fvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform2i = fn(program: uint, location: i32, v0: i32, v1: i32) void;
export type fp_glProgramUniform2i64ARB = fn(program: uint, location: i32, x: i64, y: i64) void;
export type fp_glProgramUniform2i64NV = fn(program: uint, location: i32, x: i64, y: i64) void;
export type fp_glProgramUniform2i64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform2i64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform2iEXT = fn(program: uint, location: i32, v0: i32, v1: i32) void;
export type fp_glProgramUniform2iv = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform2ivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform2ui = fn(program: uint, location: i32, v0: uint, v1: uint) void;
export type fp_glProgramUniform2ui64ARB = fn(program: uint, location: i32, x: u64, y: u64) void;
export type fp_glProgramUniform2ui64NV = fn(program: uint, location: i32, x: u64, y: u64) void;
export type fp_glProgramUniform2ui64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform2ui64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform2uiEXT = fn(program: uint, location: i32, v0: uint, v1: uint) void;
export type fp_glProgramUniform2uiv = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform2uivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform3d = fn(program: uint, location: i32, v0: f64, v1: f64, v2: f64) void;
export type fp_glProgramUniform3dEXT = fn(program: uint, location: i32, x: f64, y: f64, z: f64) void;
export type fp_glProgramUniform3dv = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform3dvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform3f = fn(program: uint, location: i32, v0: f32, v1: f32, v2: f32) void;
export type fp_glProgramUniform3fEXT = fn(program: uint, location: i32, v0: f32, v1: f32, v2: f32) void;
export type fp_glProgramUniform3fv = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform3fvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform3i = fn(program: uint, location: i32, v0: i32, v1: i32, v2: i32) void;
export type fp_glProgramUniform3i64ARB = fn(program: uint, location: i32, x: i64, y: i64, z: i64) void;
export type fp_glProgramUniform3i64NV = fn(program: uint, location: i32, x: i64, y: i64, z: i64) void;
export type fp_glProgramUniform3i64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform3i64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform3iEXT = fn(program: uint, location: i32, v0: i32, v1: i32, v2: i32) void;
export type fp_glProgramUniform3iv = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform3ivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform3ui = fn(program: uint, location: i32, v0: uint, v1: uint, v2: uint) void;
export type fp_glProgramUniform3ui64ARB = fn(program: uint, location: i32, x: u64, y: u64, z: u64) void;
export type fp_glProgramUniform3ui64NV = fn(program: uint, location: i32, x: u64, y: u64, z: u64) void;
export type fp_glProgramUniform3ui64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform3ui64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform3uiEXT = fn(program: uint, location: i32, v0: uint, v1: uint, v2: uint) void;
export type fp_glProgramUniform3uiv = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform3uivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform4d = fn(program: uint, location: i32, v0: f64, v1: f64, v2: f64, v3: f64) void;
export type fp_glProgramUniform4dEXT = fn(program: uint, location: i32, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glProgramUniform4dv = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform4dvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f64) void;
export type fp_glProgramUniform4f = fn(program: uint, location: i32, v0: f32, v1: f32, v2: f32, v3: f32) void;
export type fp_glProgramUniform4fEXT = fn(program: uint, location: i32, v0: f32, v1: f32, v2: f32, v3: f32) void;
export type fp_glProgramUniform4fv = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform4fvEXT = fn(program: uint, location: i32, count: i32, value: nullable *const f32) void;
export type fp_glProgramUniform4i = fn(program: uint, location: i32, v0: i32, v1: i32, v2: i32, v3: i32) void;
export type fp_glProgramUniform4i64ARB = fn(program: uint, location: i32, x: i64, y: i64, z: i64, w: i64) void;
export type fp_glProgramUniform4i64NV = fn(program: uint, location: i32, x: i64, y: i64, z: i64, w: i64) void;
export type fp_glProgramUniform4i64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform4i64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const i64) void;
export type fp_glProgramUniform4iEXT = fn(program: uint, location: i32, v0: i32, v1: i32, v2: i32, v3: i32) void;
export type fp_glProgramUniform4iv = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform4ivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const i32) void;
export type fp_glProgramUniform4ui = fn(program: uint, location: i32, v0: uint, v1: uint, v2: uint, v3: uint) void;
export type fp_glProgramUniform4ui64ARB = fn(program: uint, location: i32, x: u64, y: u64, z: u64, w: u64) void;
export type fp_glProgramUniform4ui64NV = fn(program: uint, location: i32, x: u64, y: u64, z: u64, w: u64) void;
export type fp_glProgramUniform4ui64vARB = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform4ui64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramUniform4uiEXT = fn(program: uint, location: i32, v0: uint, v1: uint, v2: uint, v3: uint) void;
export type fp_glProgramUniform4uiv = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniform4uivEXT = fn(program: uint, location: i32, count: i32, value: nullable *const uint) void;
export type fp_glProgramUniformHandleui64ARB = fn(program: uint, location: i32, value: u64) void;
export type fp_glProgramUniformHandleui64NV = fn(program: uint, location: i32, value: u64) void;
export type fp_glProgramUniformHandleui64vARB = fn(program: uint, location: i32, count: i32, values: nullable *const u64) void;
export type fp_glProgramUniformHandleui64vNV = fn(program: uint, location: i32, count: i32, values: nullable *const u64) void;
export type fp_glProgramUniformMatrix2dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix2fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix2x3dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2x3dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2x3fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix2x3fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix2x4dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2x4dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix2x4fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix2x4fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3x2dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3x2dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3x2fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3x2fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3x4dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3x4dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix3x4fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix3x4fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4x2dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4x2dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4x2fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4x2fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4x3dv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4x3dvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glProgramUniformMatrix4x3fv = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformMatrix4x3fvEXT = fn(program: uint, location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glProgramUniformui64NV = fn(program: uint, location: i32, value: u64) void;
export type fp_glProgramUniformui64vNV = fn(program: uint, location: i32, count: i32, value: nullable *const u64) void;
export type fp_glProgramVertexLimitNV = fn(target: gl_enum, limit: i32) void;
export type fp_glProvokingVertex = fn(mode: gl_enum) void;
export type fp_glProvokingVertexEXT = fn(mode: gl_enum) void;
export type fp_glPushClientAttribDefaultEXT = fn(mask: gl_bitfield) void;
export type fp_glPushDebugGroup = fn(source: gl_enum, id: uint, length: i32, message: nullable *const i8) void;
export type fp_glPushGroupMarkerEXT = fn(length: i32, marker: nullable *const i8) void;
export type fp_glQueryCounter = fn(id: uint, target: gl_enum) void;
export type fp_glQueryMatrixxOES = fn(mantissa: nullable *i32, exponent: nullable *i32) gl_bitfield;
export type fp_glQueryObjectParameteruiAMD = fn(target: gl_enum, id: uint, pname: gl_enum, param: uint) void;
export type fp_glQueryResourceNV = fn(queryType: gl_enum, tagId: i32, count: uint, buffer: nullable *i32) i32;
export type fp_glQueryResourceTagNV = fn(tagId: i32, tagString: nullable *const i8) void;
export type fp_glRasterPos2xOES = fn(x: i32, y: i32) void;
export type fp_glRasterPos2xvOES = fn(coords: nullable *const i32) void;
export type fp_glRasterPos3xOES = fn(x: i32, y: i32, z: i32) void;
export type fp_glRasterPos3xvOES = fn(coords: nullable *const i32) void;
export type fp_glRasterPos4xOES = fn(x: i32, y: i32, z: i32, w: i32) void;
export type fp_glRasterPos4xvOES = fn(coords: nullable *const i32) void;
export type fp_glRasterSamplesEXT = fn(samples: uint, fixedsamplelocations: u8) void;
export type fp_glReadBuffer = fn(src: gl_enum) void;
export type fp_glReadInstrumentsSGIX = fn(marker: i32) void;
export type fp_glReadPixels = fn(x: i32, y: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glReadnPixels = fn(x: i32, y: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, bufSize: i32, data: nullable *opaque) void;
export type fp_glReadnPixelsARB = fn(x: i32, y: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, bufSize: i32, data: nullable *opaque) void;
export type fp_glRectxOES = fn(x1: i32, y1: i32, x2: i32, y2: i32) void;
export type fp_glRectxvOES = fn(v1: nullable *const i32, v2: nullable *const i32) void;
export type fp_glReferencePlaneSGIX = fn(equation: nullable *const f64) void;
export type fp_glReleaseKeyedMutexWin32EXT = fn(memory: uint, key: u64) u8;
export type fp_glReleaseShaderCompiler = fn() void;
export type fp_glRenderGpuMaskNV = fn(mask: gl_bitfield) void;
export type fp_glRenderbufferStorage = fn(target: gl_enum, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glRenderbufferStorageEXT = fn(target: gl_enum, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glRenderbufferStorageMultisample = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glRenderbufferStorageMultisampleAdvancedAMD = fn(target: gl_enum, samples: i32, storageSamples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glRenderbufferStorageMultisampleCoverageNV = fn(target: gl_enum, coverageSamples: i32, colorSamples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glRenderbufferStorageMultisampleEXT = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glReplacementCodePointerSUN = fn(type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque) void;
export type fp_glReplacementCodeubSUN = fn(code: u8) void;
export type fp_glReplacementCodeubvSUN = fn(code: nullable *const u8) void;
export type fp_glReplacementCodeuiColor3fVertex3fSUN = fn(rc: uint, r: f32, g: f32, b: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiColor3fVertex3fvSUN = fn(rc: nullable *const uint, c: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN = fn(rc: uint, r: f32, g: f32, b: f32, a: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = fn(rc: nullable *const uint, c: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiColor4ubVertex3fSUN = fn(rc: uint, r: u8, g: u8, b: u8, a: u8, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiColor4ubVertex3fvSUN = fn(rc: nullable *const uint, c: nullable *const u8, v: nullable *const f32) void;
export type fp_glReplacementCodeuiNormal3fVertex3fSUN = fn(rc: uint, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiNormal3fVertex3fvSUN = fn(rc: nullable *const uint, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiSUN = fn(code: uint) void;
export type fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = fn(rc: uint, s: f32, t: f32, r: f32, g: f32, b: f32, a: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = fn(rc: nullable *const uint, tc: nullable *const f32, c: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = fn(rc: uint, s: f32, t: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = fn(rc: nullable *const uint, tc: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiTexCoord2fVertex3fSUN = fn(rc: uint, s: f32, t: f32, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiTexCoord2fVertex3fvSUN = fn(rc: nullable *const uint, tc: nullable *const f32, v: nullable *const f32) void;
export type fp_glReplacementCodeuiVertex3fSUN = fn(rc: uint, x: f32, y: f32, z: f32) void;
export type fp_glReplacementCodeuiVertex3fvSUN = fn(rc: nullable *const uint, v: nullable *const f32) void;
export type fp_glReplacementCodeuivSUN = fn(code: nullable *const uint) void;
export type fp_glReplacementCodeusSUN = fn(code: u16) void;
export type fp_glReplacementCodeusvSUN = fn(code: nullable *const u16) void;
export type fp_glRequestResidentProgramsNV = fn(n: i32, programs: nullable *const uint) void;
export type fp_glResetHistogramEXT = fn(target: gl_enum) void;
export type fp_glResetMemoryObjectParameterNV = fn(memory: uint, pname: gl_enum) void;
export type fp_glResetMinmaxEXT = fn(target: gl_enum) void;
export type fp_glResizeBuffersMESA = fn() void;
export type fp_glResolveDepthValuesNV = fn() void;
export type fp_glResumeTransformFeedback = fn() void;
export type fp_glResumeTransformFeedbackNV = fn() void;
export type fp_glRotatexOES = fn(angle: i32, x: i32, y: i32, z: i32) void;
export type fp_glSampleCoverage = fn(value: f32, invert: u8) void;
export type fp_glSampleCoverageARB = fn(value: f32, invert: u8) void;
export type fp_glSampleMapATI = fn(dst: uint, interp: uint, swizzle: gl_enum) void;
export type fp_glSampleMaskEXT = fn(value: f64, invert: u8) void;
export type fp_glSampleMaskIndexedNV = fn(index: uint, mask: gl_bitfield) void;
export type fp_glSampleMaskSGIS = fn(value: f64, invert: u8) void;
export type fp_glSampleMaski = fn(maskNumber: uint, mask: gl_bitfield) void;
export type fp_glSamplePatternEXT = fn(pattern: gl_enum) void;
export type fp_glSamplePatternSGIS = fn(pattern: gl_enum) void;
export type fp_glSamplerParameterIiv = fn(sampler: uint, pname: gl_enum, param: nullable *const i32) void;
export type fp_glSamplerParameterIuiv = fn(sampler: uint, pname: gl_enum, param: nullable *const uint) void;
export type fp_glSamplerParameterf = fn(sampler: uint, pname: gl_enum, param: f32) void;
export type fp_glSamplerParameterfv = fn(sampler: uint, pname: gl_enum, param: nullable *const f32) void;
export type fp_glSamplerParameteri = fn(sampler: uint, pname: gl_enum, param: i32) void;
export type fp_glSamplerParameteriv = fn(sampler: uint, pname: gl_enum, param: nullable *const i32) void;
export type fp_glScalexOES = fn(x: i32, y: i32, z: i32) void;
export type fp_glScissor = fn(x: i32, y: i32, width: i32, height: i32) void;
export type fp_glScissorArrayv = fn(first: uint, count: i32, v: nullable *const i32) void;
export type fp_glScissorExclusiveArrayvNV = fn(first: uint, count: i32, v: nullable *const i32) void;
export type fp_glScissorExclusiveNV = fn(x: i32, y: i32, width: i32, height: i32) void;
export type fp_glScissorIndexed = fn(index: uint, left: i32, bottom: i32, width: i32, height: i32) void;
export type fp_glScissorIndexedv = fn(index: uint, v: nullable *const i32) void;
export type fp_glSecondaryColor3bEXT = fn(red: i8, green: i8, blue: i8) void;
export type fp_glSecondaryColor3bvEXT = fn(v: nullable *const i8) void;
export type fp_glSecondaryColor3dEXT = fn(red: f64, green: f64, blue: f64) void;
export type fp_glSecondaryColor3dvEXT = fn(v: nullable *const f64) void;
export type fp_glSecondaryColor3fEXT = fn(red: f32, green: f32, blue: f32) void;
export type fp_glSecondaryColor3fvEXT = fn(v: nullable *const f32) void;
export type fp_glSecondaryColor3hNV = fn(red: u16, green: u16, blue: u16) void;
export type fp_glSecondaryColor3hvNV = fn(v: nullable *const u16) void;
export type fp_glSecondaryColor3iEXT = fn(red: i32, green: i32, blue: i32) void;
export type fp_glSecondaryColor3ivEXT = fn(v: nullable *const i32) void;
export type fp_glSecondaryColor3sEXT = fn(red: i16, green: i16, blue: i16) void;
export type fp_glSecondaryColor3svEXT = fn(v: nullable *const i16) void;
export type fp_glSecondaryColor3ubEXT = fn(red: u8, green: u8, blue: u8) void;
export type fp_glSecondaryColor3ubvEXT = fn(v: nullable *const u8) void;
export type fp_glSecondaryColor3uiEXT = fn(red: uint, green: uint, blue: uint) void;
export type fp_glSecondaryColor3uivEXT = fn(v: nullable *const uint) void;
export type fp_glSecondaryColor3usEXT = fn(red: u16, green: u16, blue: u16) void;
export type fp_glSecondaryColor3usvEXT = fn(v: nullable *const u16) void;
export type fp_glSecondaryColorFormatNV = fn(size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glSecondaryColorPointerEXT = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glSecondaryColorPointerListIBM = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glSelectPerfMonitorCountersAMD = fn(monitor: uint, enable: u8, group: uint, numCounters: i32, counterList: nullable *uint) void;
export type fp_glSemaphoreParameterivNV = fn(semaphore: uint, pname: gl_enum, params: nullable *const i32) void;
export type fp_glSemaphoreParameterui64vEXT = fn(semaphore: uint, pname: gl_enum, params: nullable *const u64) void;
export type fp_glSeparableFilter2DEXT = fn(target: gl_enum, internalformat: gl_enum, width: i32, height: i32, format: gl_enum, type_: gl_enum, row: nullable *opaque, column: nullable *opaque) void;
export type fp_glSetFenceAPPLE = fn(fence: uint) void;
export type fp_glSetFenceNV = fn(fence: uint, condition: gl_enum) void;
export type fp_glSetFragmentShaderConstantATI = fn(dst: uint, value: nullable *const f32) void;
export type fp_glSetInvariantEXT = fn(id: uint, type_: gl_enum, addr: nullable *opaque) void;
export type fp_glSetLocalConstantEXT = fn(id: uint, type_: gl_enum, addr: nullable *opaque) void;
export type fp_glSetMultisamplefvAMD = fn(pname: gl_enum, index: uint, val: nullable *const f32) void;
export type fp_glShaderBinary = fn(count: i32, shaders: nullable *const uint, binaryFormat: gl_enum, binary: nullable *opaque, length: i32) void;
export type fp_glShaderOp1EXT = fn(op: gl_enum, res: uint, arg1: uint) void;
export type fp_glShaderOp2EXT = fn(op: gl_enum, res: uint, arg1: uint, arg2: uint) void;
export type fp_glShaderOp3EXT = fn(op: gl_enum, res: uint, arg1: uint, arg2: uint, arg3: uint) void;
export type fp_glShaderSource = fn(shader: uint, count: i32, string: nullable *const nullable *const i8, length: nullable *const i32) void;
export type fp_glShaderSourceARB = fn(shaderObj: uint, count: i32, string: nullable *const nullable *const i8, length: nullable *const i32) void;
export type fp_glShaderStorageBlockBinding = fn(program: uint, storageBlockIndex: uint, storageBlockBinding: uint) void;
export type fp_glShadingRateImageBarrierNV = fn(synchronize: u8) void;
export type fp_glShadingRateImagePaletteNV = fn(viewport: uint, first: uint, count: i32, rates: nullable *const gl_enum) void;
export type fp_glShadingRateSampleOrderCustomNV = fn(rate: gl_enum, samples: uint, locations: nullable *const i32) void;
export type fp_glShadingRateSampleOrderNV = fn(order: gl_enum) void;
export type fp_glSharpenTexFuncSGIS = fn(target: gl_enum, n: i32, points: nullable *const f32) void;
export type fp_glSignalSemaphoreEXT = fn(semaphore: uint, numBufferBarriers: uint, buffers: nullable *const uint, numTextureBarriers: uint, textures: nullable *const uint, dstLayouts: nullable *const gl_enum) void;
export type fp_glSignalSemaphoreui64NVX = fn(signalGpu: uint, fenceObjectCount: i32, semaphoreArray: nullable *const uint, fenceValueArray: nullable *const u64) void;
export type fp_glSignalVkFenceNV = fn(vkFence: u64) void;
export type fp_glSignalVkSemaphoreNV = fn(vkSemaphore: u64) void;
export type fp_glSpecializeShaderARB = fn(shader: uint, pEntryPoint: nullable *const i8, numSpecializationConstants: uint, pConstantIndex: nullable *const uint, pConstantValue: nullable *const uint) void;
export type fp_glSpriteParameterfSGIX = fn(pname: gl_enum, param: f32) void;
export type fp_glSpriteParameterfvSGIX = fn(pname: gl_enum, params: nullable *const f32) void;
export type fp_glSpriteParameteriSGIX = fn(pname: gl_enum, param: i32) void;
export type fp_glSpriteParameterivSGIX = fn(pname: gl_enum, params: nullable *const i32) void;
export type fp_glStartInstrumentsSGIX = fn() void;
export type fp_glStateCaptureNV = fn(state: uint, mode: gl_enum) void;
export type fp_glStencilClearTagEXT = fn(stencilTagBits: i32, stencilClearTag: uint) void;
export type fp_glStencilFillPathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, fillMode: gl_enum, mask: uint, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glStencilFillPathNV = fn(path: uint, fillMode: gl_enum, mask: uint) void;
export type fp_glStencilFunc = fn(func: gl_enum, ref: i32, mask: uint) void;
export type fp_glStencilFuncSeparate = fn(face: gl_enum, func: gl_enum, ref: i32, mask: uint) void;
export type fp_glStencilFuncSeparateATI = fn(frontfunc: gl_enum, backfunc: gl_enum, ref: i32, mask: uint) void;
export type fp_glStencilMask = fn(mask: uint) void;
export type fp_glStencilMaskSeparate = fn(face: gl_enum, mask: uint) void;
export type fp_glStencilOp = fn(fail: gl_enum, zfail: gl_enum, zpass: gl_enum) void;
export type fp_glStencilOpSeparate = fn(face: gl_enum, sfail: gl_enum, dpfail: gl_enum, dppass: gl_enum) void;
export type fp_glStencilOpSeparateATI = fn(face: gl_enum, sfail: gl_enum, dpfail: gl_enum, dppass: gl_enum) void;
export type fp_glStencilOpValueAMD = fn(face: gl_enum, value: uint) void;
export type fp_glStencilStrokePathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, reference: i32, mask: uint, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glStencilStrokePathNV = fn(path: uint, reference: i32, mask: uint) void;
export type fp_glStencilThenCoverFillPathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, fillMode: gl_enum, mask: uint, coverMode: gl_enum, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glStencilThenCoverFillPathNV = fn(path: uint, fillMode: gl_enum, mask: uint, coverMode: gl_enum) void;
export type fp_glStencilThenCoverStrokePathInstancedNV = fn(numPaths: i32, pathNameType: gl_enum, paths: nullable *opaque, pathBase: uint, reference: i32, mask: uint, coverMode: gl_enum, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glStencilThenCoverStrokePathNV = fn(path: uint, reference: i32, mask: uint, coverMode: gl_enum) void;
export type fp_glStopInstrumentsSGIX = fn(marker: i32) void;
export type fp_glStringMarkerGREMEDY = fn(len_: i32, string: nullable *opaque) void;
export type fp_glSubpixelPrecisionBiasNV = fn(xbits: uint, ybits: uint) void;
export type fp_glSwizzleEXT = fn(res: uint, in: uint, outX: gl_enum, outY: gl_enum, outZ: gl_enum, outW: gl_enum) void;
export type fp_glSyncTextureINTEL = fn(texture: uint) void;
export type fp_glTagSampleBufferSGIX = fn() void;
export type fp_glTangent3bEXT = fn(tx: i8, ty: i8, tz: i8) void;
export type fp_glTangent3bvEXT = fn(v: nullable *const i8) void;
export type fp_glTangent3dEXT = fn(tx: f64, ty: f64, tz: f64) void;
export type fp_glTangent3dvEXT = fn(v: nullable *const f64) void;
export type fp_glTangent3fEXT = fn(tx: f32, ty: f32, tz: f32) void;
export type fp_glTangent3fvEXT = fn(v: nullable *const f32) void;
export type fp_glTangent3iEXT = fn(tx: i32, ty: i32, tz: i32) void;
export type fp_glTangent3ivEXT = fn(v: nullable *const i32) void;
export type fp_glTangent3sEXT = fn(tx: i16, ty: i16, tz: i16) void;
export type fp_glTangent3svEXT = fn(v: nullable *const i16) void;
export type fp_glTangentPointerEXT = fn(type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glTbufferMask3DFX = fn(mask: uint) void;
export type fp_glTessellationFactorAMD = fn(factor: f32) void;
export type fp_glTessellationModeAMD = fn(mode: gl_enum) void;
export type fp_glTestFenceAPPLE = fn(fence: uint) u8;
export type fp_glTestFenceNV = fn(fence: uint) u8;
export type fp_glTestObjectAPPLE = fn(object: gl_enum, name: uint) u8;
export type fp_glTexAttachMemoryNV = fn(target: gl_enum, memory: uint, offset_: u64) void;
export type fp_glTexBuffer = fn(target: gl_enum, internalformat: gl_enum, buffer: uint) void;
export type fp_glTexBufferARB = fn(target: gl_enum, internalformat: gl_enum, buffer: uint) void;
export type fp_glTexBufferEXT = fn(target: gl_enum, internalformat: gl_enum, buffer: uint) void;
export type fp_glTexBufferRange = fn(target: gl_enum, internalformat: gl_enum, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glTexBumpParameterfvATI = fn(pname: gl_enum, param: nullable *const f32) void;
export type fp_glTexBumpParameterivATI = fn(pname: gl_enum, param: nullable *const i32) void;
export type fp_glTexCoord1bOES = fn(s: i8) void;
export type fp_glTexCoord1bvOES = fn(coords: nullable *const i8) void;
export type fp_glTexCoord1hNV = fn(s: u16) void;
export type fp_glTexCoord1hvNV = fn(v: nullable *const u16) void;
export type fp_glTexCoord1xOES = fn(s: i32) void;
export type fp_glTexCoord1xvOES = fn(coords: nullable *const i32) void;
export type fp_glTexCoord2bOES = fn(s: i8, t: i8) void;
export type fp_glTexCoord2bvOES = fn(coords: nullable *const i8) void;
export type fp_glTexCoord2fColor3fVertex3fSUN = fn(s: f32, t: f32, r: f32, g: f32, b: f32, x: f32, y: f32, z: f32) void;
export type fp_glTexCoord2fColor3fVertex3fvSUN = fn(tc: nullable *const f32, c: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord2fColor4fNormal3fVertex3fSUN = fn(s: f32, t: f32, r: f32, g: f32, b: f32, a: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glTexCoord2fColor4fNormal3fVertex3fvSUN = fn(tc: nullable *const f32, c: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord2fColor4ubVertex3fSUN = fn(s: f32, t: f32, r: u8, g: u8, b: u8, a: u8, x: f32, y: f32, z: f32) void;
export type fp_glTexCoord2fColor4ubVertex3fvSUN = fn(tc: nullable *const f32, c: nullable *const u8, v: nullable *const f32) void;
export type fp_glTexCoord2fNormal3fVertex3fSUN = fn(s: f32, t: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32) void;
export type fp_glTexCoord2fNormal3fVertex3fvSUN = fn(tc: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord2fVertex3fSUN = fn(s: f32, t: f32, x: f32, y: f32, z: f32) void;
export type fp_glTexCoord2fVertex3fvSUN = fn(tc: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord2hNV = fn(s: u16, t: u16) void;
export type fp_glTexCoord2hvNV = fn(v: nullable *const u16) void;
export type fp_glTexCoord2xOES = fn(s: i32, t: i32) void;
export type fp_glTexCoord2xvOES = fn(coords: nullable *const i32) void;
export type fp_glTexCoord3bOES = fn(s: i8, t: i8, r: i8) void;
export type fp_glTexCoord3bvOES = fn(coords: nullable *const i8) void;
export type fp_glTexCoord3hNV = fn(s: u16, t: u16, r: u16) void;
export type fp_glTexCoord3hvNV = fn(v: nullable *const u16) void;
export type fp_glTexCoord3xOES = fn(s: i32, t: i32, r: i32) void;
export type fp_glTexCoord3xvOES = fn(coords: nullable *const i32) void;
export type fp_glTexCoord4bOES = fn(s: i8, t: i8, r: i8, q: i8) void;
export type fp_glTexCoord4bvOES = fn(coords: nullable *const i8) void;
export type fp_glTexCoord4fColor4fNormal3fVertex4fSUN = fn(s: f32, t: f32, p: f32, q: f32, r: f32, g: f32, b: f32, a: f32, nx: f32, ny: f32, nz: f32, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glTexCoord4fColor4fNormal3fVertex4fvSUN = fn(tc: nullable *const f32, c: nullable *const f32, n: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord4fVertex4fSUN = fn(s: f32, t: f32, p: f32, q: f32, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glTexCoord4fVertex4fvSUN = fn(tc: nullable *const f32, v: nullable *const f32) void;
export type fp_glTexCoord4hNV = fn(s: u16, t: u16, r: u16, q: u16) void;
export type fp_glTexCoord4hvNV = fn(v: nullable *const u16) void;
export type fp_glTexCoord4xOES = fn(s: i32, t: i32, r: i32, q: i32) void;
export type fp_glTexCoord4xvOES = fn(coords: nullable *const i32) void;
export type fp_glTexCoordFormatNV = fn(size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glTexCoordPointerEXT = fn(size_: i32, type_: gl_enum, stride: i32, count: i32, pointer: nullable *opaque) void;
export type fp_glTexCoordPointerListIBM = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glTexCoordPointervINTEL = fn(size_: i32, type_: gl_enum, pointer: nullable *const nullable *opaque) void;
export type fp_glTexEnvxOES = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glTexEnvxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexFilterFuncSGIS = fn(target: gl_enum, filter: gl_enum, n: i32, weights: nullable *const f32) void;
export type fp_glTexGenxOES = fn(coord: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glTexGenxvOES = fn(coord: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexImage1D = fn(target: gl_enum, level: i32, internalformat: i32, width: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexImage2D = fn(target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexImage2DMultisample = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, fixedsamplelocations: u8) void;
export type fp_glTexImage2DMultisampleCoverageNV = fn(target: gl_enum, coverageSamples: i32, colorSamples: i32, internalFormat: i32, width: i32, height: i32, fixedSampleLocations: u8) void;
export type fp_glTexImage3D = fn(target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, depth: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexImage3DEXT = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexImage3DMultisample = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, fixedsamplelocations: u8) void;
export type fp_glTexImage3DMultisampleCoverageNV = fn(target: gl_enum, coverageSamples: i32, colorSamples: i32, internalFormat: i32, width: i32, height: i32, depth: i32, fixedSampleLocations: u8) void;
export type fp_glTexImage4DSGIS = fn(target: gl_enum, level: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, size4d: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexPageCommitmentARB = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, commit: u8) void;
export type fp_glTexPageCommitmentMemNV = fn(target: gl_enum, layer: i32, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, memory: uint, offset_: u64, commit: u8) void;
export type fp_glTexParameterIiv = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexParameterIivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexParameterIuiv = fn(target: gl_enum, pname: gl_enum, params: nullable *const uint) void;
export type fp_glTexParameterIuivEXT = fn(target: gl_enum, pname: gl_enum, params: nullable *const uint) void;
export type fp_glTexParameterf = fn(target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glTexParameterfv = fn(target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glTexParameteri = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glTexParameteriv = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexParameterxOES = fn(target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glTexParameterxvOES = fn(target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTexRenderbufferNV = fn(target: gl_enum, renderbuffer: uint) void;
export type fp_glTexStorage1D = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32) void;
export type fp_glTexStorage1DEXT = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32) void;
export type fp_glTexStorage2D = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glTexStorage2DEXT = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glTexStorage2DMultisample = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, fixedsamplelocations: u8) void;
export type fp_glTexStorage3D = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32) void;
export type fp_glTexStorage3DEXT = fn(target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32) void;
export type fp_glTexStorage3DMultisample = fn(target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, fixedsamplelocations: u8) void;
export type fp_glTexStorageMem1DEXT = fn(target: gl_enum, levels: i32, internalFormat: gl_enum, width: i32, memory: uint, offset_: u64) void;
export type fp_glTexStorageMem2DEXT = fn(target: gl_enum, levels: i32, internalFormat: gl_enum, width: i32, height: i32, memory: uint, offset_: u64) void;
export type fp_glTexStorageMem2DMultisampleEXT = fn(target: gl_enum, samples: i32, internalFormat: gl_enum, width: i32, height: i32, fixedSampleLocations: u8, memory: uint, offset_: u64) void;
export type fp_glTexStorageMem3DEXT = fn(target: gl_enum, levels: i32, internalFormat: gl_enum, width: i32, height: i32, depth: i32, memory: uint, offset_: u64) void;
export type fp_glTexStorageMem3DMultisampleEXT = fn(target: gl_enum, samples: i32, internalFormat: gl_enum, width: i32, height: i32, depth: i32, fixedSampleLocations: u8, memory: uint, offset_: u64) void;
export type fp_glTexStorageSparseAMD = fn(target: gl_enum, internalFormat: gl_enum, width: i32, height: i32, depth: i32, layers: i32, flags: gl_bitfield) void;
export type fp_glTexSubImage1D = fn(target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage1DEXT = fn(target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage2D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage2DEXT = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage3D = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage3DEXT = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTexSubImage4DSGIS = fn(target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, woffset: i32, width: i32, height: i32, depth: i32, size4d: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureAttachMemoryNV = fn(texture: uint, memory: uint, offset_: u64) void;
export type fp_glTextureBarrier = fn() void;
export type fp_glTextureBarrierNV = fn() void;
export type fp_glTextureBuffer = fn(texture: uint, internalformat: gl_enum, buffer: uint) void;
export type fp_glTextureBufferEXT = fn(texture: uint, target: gl_enum, internalformat: gl_enum, buffer: uint) void;
export type fp_glTextureBufferRange = fn(texture: uint, internalformat: gl_enum, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glTextureBufferRangeEXT = fn(texture: uint, target: gl_enum, internalformat: gl_enum, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glTextureColorMaskSGIS = fn(red: u8, green: u8, blue: u8, alpha: u8) void;
export type fp_glTextureImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: i32, width: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureImage2DMultisampleCoverageNV = fn(texture: uint, target: gl_enum, coverageSamples: i32, colorSamples: i32, internalFormat: i32, width: i32, height: i32, fixedSampleLocations: u8) void;
export type fp_glTextureImage2DMultisampleNV = fn(texture: uint, target: gl_enum, samples: i32, internalFormat: i32, width: i32, height: i32, fixedSampleLocations: u8) void;
export type fp_glTextureImage3DEXT = fn(texture: uint, target: gl_enum, level: i32, internalformat: i32, width: i32, height: i32, depth: i32, border: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureImage3DMultisampleCoverageNV = fn(texture: uint, target: gl_enum, coverageSamples: i32, colorSamples: i32, internalFormat: i32, width: i32, height: i32, depth: i32, fixedSampleLocations: u8) void;
export type fp_glTextureImage3DMultisampleNV = fn(texture: uint, target: gl_enum, samples: i32, internalFormat: i32, width: i32, height: i32, depth: i32, fixedSampleLocations: u8) void;
export type fp_glTextureLightEXT = fn(pname: gl_enum) void;
export type fp_glTextureMaterialEXT = fn(face: gl_enum, mode: gl_enum) void;
export type fp_glTextureNormalEXT = fn(mode: gl_enum) void;
export type fp_glTexturePageCommitmentEXT = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, commit: u8) void;
export type fp_glTexturePageCommitmentMemNV = fn(texture: uint, layer: i32, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, memory: uint, offset_: u64, commit: u8) void;
export type fp_glTextureParameterIiv = fn(texture: uint, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTextureParameterIivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTextureParameterIuiv = fn(texture: uint, pname: gl_enum, params: nullable *const uint) void;
export type fp_glTextureParameterIuivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *const uint) void;
export type fp_glTextureParameterf = fn(texture: uint, pname: gl_enum, param: f32) void;
export type fp_glTextureParameterfEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, param: f32) void;
export type fp_glTextureParameterfv = fn(texture: uint, pname: gl_enum, param: nullable *const f32) void;
export type fp_glTextureParameterfvEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *const f32) void;
export type fp_glTextureParameteri = fn(texture: uint, pname: gl_enum, param: i32) void;
export type fp_glTextureParameteriEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, param: i32) void;
export type fp_glTextureParameteriv = fn(texture: uint, pname: gl_enum, param: nullable *const i32) void;
export type fp_glTextureParameterivEXT = fn(texture: uint, target: gl_enum, pname: gl_enum, params: nullable *const i32) void;
export type fp_glTextureRangeAPPLE = fn(target: gl_enum, length: i32, pointer: nullable *opaque) void;
export type fp_glTextureRenderbufferEXT = fn(texture: uint, target: gl_enum, renderbuffer: uint) void;
export type fp_glTextureStorage1D = fn(texture: uint, levels: i32, internalformat: gl_enum, width: i32) void;
export type fp_glTextureStorage1DEXT = fn(texture: uint, target: gl_enum, levels: i32, internalformat: gl_enum, width: i32) void;
export type fp_glTextureStorage2D = fn(texture: uint, levels: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glTextureStorage2DEXT = fn(texture: uint, target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32) void;
export type fp_glTextureStorage2DMultisample = fn(texture: uint, samples: i32, internalformat: gl_enum, width: i32, height: i32, fixedsamplelocations: u8) void;
export type fp_glTextureStorage2DMultisampleEXT = fn(texture: uint, target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, fixedsamplelocations: u8) void;
export type fp_glTextureStorage3D = fn(texture: uint, levels: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32) void;
export type fp_glTextureStorage3DEXT = fn(texture: uint, target: gl_enum, levels: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32) void;
export type fp_glTextureStorage3DMultisample = fn(texture: uint, samples: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, fixedsamplelocations: u8) void;
export type fp_glTextureStorage3DMultisampleEXT = fn(texture: uint, target: gl_enum, samples: i32, internalformat: gl_enum, width: i32, height: i32, depth: i32, fixedsamplelocations: u8) void;
export type fp_glTextureStorageMem1DEXT = fn(texture: uint, levels: i32, internalFormat: gl_enum, width: i32, memory: uint, offset_: u64) void;
export type fp_glTextureStorageMem2DEXT = fn(texture: uint, levels: i32, internalFormat: gl_enum, width: i32, height: i32, memory: uint, offset_: u64) void;
export type fp_glTextureStorageMem2DMultisampleEXT = fn(texture: uint, samples: i32, internalFormat: gl_enum, width: i32, height: i32, fixedSampleLocations: u8, memory: uint, offset_: u64) void;
export type fp_glTextureStorageMem3DEXT = fn(texture: uint, levels: i32, internalFormat: gl_enum, width: i32, height: i32, depth: i32, memory: uint, offset_: u64) void;
export type fp_glTextureStorageMem3DMultisampleEXT = fn(texture: uint, samples: i32, internalFormat: gl_enum, width: i32, height: i32, depth: i32, fixedSampleLocations: u8, memory: uint, offset_: u64) void;
export type fp_glTextureStorageSparseAMD = fn(texture: uint, target: gl_enum, internalFormat: gl_enum, width: i32, height: i32, depth: i32, layers: i32, flags: gl_bitfield) void;
export type fp_glTextureSubImage1D = fn(texture: uint, level: i32, xoffset: i32, width: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureSubImage1DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, width: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureSubImage2D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureSubImage2DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, width: i32, height: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureSubImage3D = fn(texture: uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureSubImage3DEXT = fn(texture: uint, target: gl_enum, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: i32, height: i32, depth: i32, format: gl_enum, type_: gl_enum, pixels: nullable *opaque) void;
export type fp_glTextureView = fn(texture: uint, target: gl_enum, origtexture: uint, internalformat: gl_enum, minlevel: uint, numlevels: uint, minlayer: uint, numlayers: uint) void;
export type fp_glTrackMatrixNV = fn(target: gl_enum, address: uint, matrix: gl_enum, transform: gl_enum) void;
export type fp_glTransformFeedbackAttribsNV = fn(count: i32, attribs: nullable *const i32, bufferMode: gl_enum) void;
export type fp_glTransformFeedbackBufferBase = fn(xfb: uint, index: uint, buffer: uint) void;
export type fp_glTransformFeedbackBufferRange = fn(xfb: uint, index: uint, buffer: uint, offset_: size, size_: uintptr) void;
export type fp_glTransformFeedbackStreamAttribsNV = fn(count: i32, attribs: nullable *const i32, nbuffers: i32, bufstreams: nullable *const i32, bufferMode: gl_enum) void;
export type fp_glTransformFeedbackVaryings = fn(program: uint, count: i32, varyings: nullable *const nullable *const i8, bufferMode: gl_enum) void;
export type fp_glTransformFeedbackVaryingsEXT = fn(program: uint, count: i32, varyings: nullable *const nullable *const i8, bufferMode: gl_enum) void;
export type fp_glTransformFeedbackVaryingsNV = fn(program: uint, count: i32, locations: nullable *const i32, bufferMode: gl_enum) void;
export type fp_glTransformPathNV = fn(resultPath: uint, srcPath: uint, transformType: gl_enum, transformValues: nullable *const f32) void;
export type fp_glTranslatexOES = fn(x: i32, y: i32, z: i32) void;
export type fp_glUniform1d = fn(location: i32, x: f64) void;
export type fp_glUniform1dv = fn(location: i32, count: i32, value: nullable *const f64) void;
export type fp_glUniform1f = fn(location: i32, v0: f32) void;
export type fp_glUniform1fARB = fn(location: i32, v0: f32) void;
export type fp_glUniform1fv = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform1fvARB = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform1i = fn(location: i32, v0: i32) void;
export type fp_glUniform1i64ARB = fn(location: i32, x: i64) void;
export type fp_glUniform1i64NV = fn(location: i32, x: i64) void;
export type fp_glUniform1i64vARB = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform1i64vNV = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform1iARB = fn(location: i32, v0: i32) void;
export type fp_glUniform1iv = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform1ivARB = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform1ui = fn(location: i32, v0: uint) void;
export type fp_glUniform1ui64ARB = fn(location: i32, x: u64) void;
export type fp_glUniform1ui64NV = fn(location: i32, x: u64) void;
export type fp_glUniform1ui64vARB = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform1ui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform1uiEXT = fn(location: i32, v0: uint) void;
export type fp_glUniform1uiv = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform1uivEXT = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform2d = fn(location: i32, x: f64, y: f64) void;
export type fp_glUniform2dv = fn(location: i32, count: i32, value: nullable *const f64) void;
export type fp_glUniform2f = fn(location: i32, v0: f32, v1: f32) void;
export type fp_glUniform2fARB = fn(location: i32, v0: f32, v1: f32) void;
export type fp_glUniform2fv = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform2fvARB = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform2i = fn(location: i32, v0: i32, v1: i32) void;
export type fp_glUniform2i64ARB = fn(location: i32, x: i64, y: i64) void;
export type fp_glUniform2i64NV = fn(location: i32, x: i64, y: i64) void;
export type fp_glUniform2i64vARB = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform2i64vNV = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform2iARB = fn(location: i32, v0: i32, v1: i32) void;
export type fp_glUniform2iv = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform2ivARB = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform2ui = fn(location: i32, v0: uint, v1: uint) void;
export type fp_glUniform2ui64ARB = fn(location: i32, x: u64, y: u64) void;
export type fp_glUniform2ui64NV = fn(location: i32, x: u64, y: u64) void;
export type fp_glUniform2ui64vARB = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform2ui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform2uiEXT = fn(location: i32, v0: uint, v1: uint) void;
export type fp_glUniform2uiv = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform2uivEXT = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform3d = fn(location: i32, x: f64, y: f64, z: f64) void;
export type fp_glUniform3dv = fn(location: i32, count: i32, value: nullable *const f64) void;
export type fp_glUniform3f = fn(location: i32, v0: f32, v1: f32, v2: f32) void;
export type fp_glUniform3fARB = fn(location: i32, v0: f32, v1: f32, v2: f32) void;
export type fp_glUniform3fv = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform3fvARB = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform3i = fn(location: i32, v0: i32, v1: i32, v2: i32) void;
export type fp_glUniform3i64ARB = fn(location: i32, x: i64, y: i64, z: i64) void;
export type fp_glUniform3i64NV = fn(location: i32, x: i64, y: i64, z: i64) void;
export type fp_glUniform3i64vARB = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform3i64vNV = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform3iARB = fn(location: i32, v0: i32, v1: i32, v2: i32) void;
export type fp_glUniform3iv = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform3ivARB = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform3ui = fn(location: i32, v0: uint, v1: uint, v2: uint) void;
export type fp_glUniform3ui64ARB = fn(location: i32, x: u64, y: u64, z: u64) void;
export type fp_glUniform3ui64NV = fn(location: i32, x: u64, y: u64, z: u64) void;
export type fp_glUniform3ui64vARB = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform3ui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform3uiEXT = fn(location: i32, v0: uint, v1: uint, v2: uint) void;
export type fp_glUniform3uiv = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform3uivEXT = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform4d = fn(location: i32, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glUniform4dv = fn(location: i32, count: i32, value: nullable *const f64) void;
export type fp_glUniform4f = fn(location: i32, v0: f32, v1: f32, v2: f32, v3: f32) void;
export type fp_glUniform4fARB = fn(location: i32, v0: f32, v1: f32, v2: f32, v3: f32) void;
export type fp_glUniform4fv = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform4fvARB = fn(location: i32, count: i32, value: nullable *const f32) void;
export type fp_glUniform4i = fn(location: i32, v0: i32, v1: i32, v2: i32, v3: i32) void;
export type fp_glUniform4i64ARB = fn(location: i32, x: i64, y: i64, z: i64, w: i64) void;
export type fp_glUniform4i64NV = fn(location: i32, x: i64, y: i64, z: i64, w: i64) void;
export type fp_glUniform4i64vARB = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform4i64vNV = fn(location: i32, count: i32, value: nullable *const i64) void;
export type fp_glUniform4iARB = fn(location: i32, v0: i32, v1: i32, v2: i32, v3: i32) void;
export type fp_glUniform4iv = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform4ivARB = fn(location: i32, count: i32, value: nullable *const i32) void;
export type fp_glUniform4ui = fn(location: i32, v0: uint, v1: uint, v2: uint, v3: uint) void;
export type fp_glUniform4ui64ARB = fn(location: i32, x: u64, y: u64, z: u64, w: u64) void;
export type fp_glUniform4ui64NV = fn(location: i32, x: u64, y: u64, z: u64, w: u64) void;
export type fp_glUniform4ui64vARB = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform4ui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniform4uiEXT = fn(location: i32, v0: uint, v1: uint, v2: uint, v3: uint) void;
export type fp_glUniform4uiv = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniform4uivEXT = fn(location: i32, count: i32, value: nullable *const uint) void;
export type fp_glUniformBlockBinding = fn(program: uint, uniformBlockIndex: uint, uniformBlockBinding: uint) void;
export type fp_glUniformBufferEXT = fn(program: uint, location: i32, buffer: uint) void;
export type fp_glUniformHandleui64ARB = fn(location: i32, value: u64) void;
export type fp_glUniformHandleui64NV = fn(location: i32, value: u64) void;
export type fp_glUniformHandleui64vARB = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniformHandleui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUniformMatrix2dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix2fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix2fvARB = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix2x3dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix2x3fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix2x4dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix2x4fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix3dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix3fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix3fvARB = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix3x2dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix3x2fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix3x4dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix3x4fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix4dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix4fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix4fvARB = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix4x2dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix4x2fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformMatrix4x3dv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f64) void;
export type fp_glUniformMatrix4x3fv = fn(location: i32, count: i32, transpose: u8, value: nullable *const f32) void;
export type fp_glUniformSubroutinesuiv = fn(shadertype: gl_enum, count: i32, indices: nullable *const uint) void;
export type fp_glUniformui64NV = fn(location: i32, value: u64) void;
export type fp_glUniformui64vNV = fn(location: i32, count: i32, value: nullable *const u64) void;
export type fp_glUnlockArraysEXT = fn() void;
export type fp_glUnmapBuffer = fn(target: gl_enum) u8;
export type fp_glUnmapBufferARB = fn(target: gl_enum) u8;
export type fp_glUnmapNamedBuffer = fn(buffer: uint) u8;
export type fp_glUnmapNamedBufferEXT = fn(buffer: uint) u8;
export type fp_glUnmapObjectBufferATI = fn(buffer: uint) void;
export type fp_glUnmapTexture2DINTEL = fn(texture: uint, level: i32) void;
export type fp_glUpdateObjectBufferATI = fn(buffer: uint, offset_: uint, size_: i32, pointer: nullable *opaque, preserve: gl_enum) void;
export type fp_glUploadGpuMaskNVX = fn(mask: gl_bitfield) void;
export type fp_glUseProgram = fn(program: uint) void;
export type fp_glUseProgramObjectARB = fn(programObj: uint) void;
export type fp_glUseProgramStages = fn(pipeline: uint, stages: gl_bitfield, program: uint) void;
export type fp_glUseShaderProgramEXT = fn(type_: gl_enum, program: uint) void;
export type fp_glVDPAUFiniNV = fn() void;
export type fp_glVDPAUGetSurfaceivNV = fn(surface: size, pname: gl_enum, count: i32, length: nullable *i32, values: nullable *i32) void;
export type fp_glVDPAUInitNV = fn(vdpDevice: nullable *opaque, getProcAddress: nullable *opaque) void;
export type fp_glVDPAUIsSurfaceNV = fn(surface: size) u8;
export type fp_glVDPAUMapSurfacesNV = fn(numSurfaces: i32, surfaces: nullable *const size) void;
export type fp_glVDPAURegisterOutputSurfaceNV = fn(vdpSurface: nullable *opaque, target: gl_enum, numTextureNames: i32, textureNames: nullable *const uint) size;
export type fp_glVDPAURegisterVideoSurfaceNV = fn(vdpSurface: nullable *opaque, target: gl_enum, numTextureNames: i32, textureNames: nullable *const uint) size;
export type fp_glVDPAURegisterVideoSurfaceWithPictureStructureNV = fn(vdpSurface: nullable *opaque, target: gl_enum, numTextureNames: i32, textureNames: nullable *const uint, isFrameStructure: u8) size;
export type fp_glVDPAUSurfaceAccessNV = fn(surface: size, access: gl_enum) void;
export type fp_glVDPAUUnmapSurfacesNV = fn(numSurface: i32, surfaces: nullable *const size) void;
export type fp_glVDPAUUnregisterSurfaceNV = fn(surface: size) void;
export type fp_glValidateProgram = fn(program: uint) void;
export type fp_glValidateProgramARB = fn(programObj: uint) void;
export type fp_glValidateProgramPipeline = fn(pipeline: uint) void;
export type fp_glVariantArrayObjectATI = fn(id: uint, type_: gl_enum, stride: i32, buffer: uint, offset_: uint) void;
export type fp_glVariantPointerEXT = fn(id: uint, type_: gl_enum, stride: uint, addr: nullable *opaque) void;
export type fp_glVariantbvEXT = fn(id: uint, addr: nullable *const i8) void;
export type fp_glVariantdvEXT = fn(id: uint, addr: nullable *const f64) void;
export type fp_glVariantfvEXT = fn(id: uint, addr: nullable *const f32) void;
export type fp_glVariantivEXT = fn(id: uint, addr: nullable *const i32) void;
export type fp_glVariantsvEXT = fn(id: uint, addr: nullable *const i16) void;
export type fp_glVariantubvEXT = fn(id: uint, addr: nullable *const u8) void;
export type fp_glVariantuivEXT = fn(id: uint, addr: nullable *const uint) void;
export type fp_glVariantusvEXT = fn(id: uint, addr: nullable *const u16) void;
export type fp_glVertex2bOES = fn(x: i8, y: i8) void;
export type fp_glVertex2bvOES = fn(coords: nullable *const i8) void;
export type fp_glVertex2hNV = fn(x: u16, y: u16) void;
export type fp_glVertex2hvNV = fn(v: nullable *const u16) void;
export type fp_glVertex2xOES = fn(x: i32) void;
export type fp_glVertex2xvOES = fn(coords: nullable *const i32) void;
export type fp_glVertex3bOES = fn(x: i8, y: i8, z: i8) void;
export type fp_glVertex3bvOES = fn(coords: nullable *const i8) void;
export type fp_glVertex3hNV = fn(x: u16, y: u16, z: u16) void;
export type fp_glVertex3hvNV = fn(v: nullable *const u16) void;
export type fp_glVertex3xOES = fn(x: i32, y: i32) void;
export type fp_glVertex3xvOES = fn(coords: nullable *const i32) void;
export type fp_glVertex4bOES = fn(x: i8, y: i8, z: i8, w: i8) void;
export type fp_glVertex4bvOES = fn(coords: nullable *const i8) void;
export type fp_glVertex4hNV = fn(x: u16, y: u16, z: u16, w: u16) void;
export type fp_glVertex4hvNV = fn(v: nullable *const u16) void;
export type fp_glVertex4xOES = fn(x: i32, y: i32, z: i32) void;
export type fp_glVertex4xvOES = fn(coords: nullable *const i32) void;
export type fp_glVertexArrayAttribBinding = fn(vaobj: uint, attribindex: uint, bindingindex: uint) void;
export type fp_glVertexArrayAttribFormat = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, normalized: u8, relativeoffset: uint) void;
export type fp_glVertexArrayAttribIFormat = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexArrayAttribLFormat = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexArrayBindVertexBufferEXT = fn(vaobj: uint, bindingindex: uint, buffer: uint, offset_: size, stride: i32) void;
export type fp_glVertexArrayBindingDivisor = fn(vaobj: uint, bindingindex: uint, divisor: uint) void;
export type fp_glVertexArrayColorOffsetEXT = fn(vaobj: uint, buffer: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayEdgeFlagOffsetEXT = fn(vaobj: uint, buffer: uint, stride: i32, offset_: size) void;
export type fp_glVertexArrayElementBuffer = fn(vaobj: uint, buffer: uint) void;
export type fp_glVertexArrayFogCoordOffsetEXT = fn(vaobj: uint, buffer: uint, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayIndexOffsetEXT = fn(vaobj: uint, buffer: uint, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayMultiTexCoordOffsetEXT = fn(vaobj: uint, buffer: uint, texunit: gl_enum, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayNormalOffsetEXT = fn(vaobj: uint, buffer: uint, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayParameteriAPPLE = fn(pname: gl_enum, param: i32) void;
export type fp_glVertexArrayRangeAPPLE = fn(length: i32, pointer: nullable *opaque) void;
export type fp_glVertexArrayRangeNV = fn(length: i32, pointer: nullable *opaque) void;
export type fp_glVertexArraySecondaryColorOffsetEXT = fn(vaobj: uint, buffer: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayTexCoordOffsetEXT = fn(vaobj: uint, buffer: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayVertexAttribBindingEXT = fn(vaobj: uint, attribindex: uint, bindingindex: uint) void;
export type fp_glVertexArrayVertexAttribDivisorEXT = fn(vaobj: uint, index: uint, divisor: uint) void;
export type fp_glVertexArrayVertexAttribFormatEXT = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, normalized: u8, relativeoffset: uint) void;
export type fp_glVertexArrayVertexAttribIFormatEXT = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexArrayVertexAttribIOffsetEXT = fn(vaobj: uint, buffer: uint, index: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayVertexAttribLFormatEXT = fn(vaobj: uint, attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexArrayVertexAttribLOffsetEXT = fn(vaobj: uint, buffer: uint, index: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexArrayVertexAttribOffsetEXT = fn(vaobj: uint, buffer: uint, index: uint, size_: i32, type_: gl_enum, normalized: u8, stride: i32, offset_: size) void;
export type fp_glVertexArrayVertexBindingDivisorEXT = fn(vaobj: uint, bindingindex: uint, divisor: uint) void;
export type fp_glVertexArrayVertexBuffer = fn(vaobj: uint, bindingindex: uint, buffer: uint, offset_: size, stride: i32) void;
export type fp_glVertexArrayVertexBuffers = fn(vaobj: uint, first: uint, count: i32, buffers: nullable *const uint, offsets: nullable *const size, strides: nullable *const i32) void;
export type fp_glVertexArrayVertexOffsetEXT = fn(vaobj: uint, buffer: uint, size_: i32, type_: gl_enum, stride: i32, offset_: size) void;
export type fp_glVertexAttrib1d = fn(index: uint, x: f64) void;
export type fp_glVertexAttrib1dARB = fn(index: uint, x: f64) void;
export type fp_glVertexAttrib1dNV = fn(index: uint, x: f64) void;
export type fp_glVertexAttrib1dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib1dvARB = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib1dvNV = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib1f = fn(index: uint, x: f32) void;
export type fp_glVertexAttrib1fARB = fn(index: uint, x: f32) void;
export type fp_glVertexAttrib1fNV = fn(index: uint, x: f32) void;
export type fp_glVertexAttrib1fv = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib1fvARB = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib1fvNV = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib1hNV = fn(index: uint, x: u16) void;
export type fp_glVertexAttrib1hvNV = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib1s = fn(index: uint, x: i16) void;
export type fp_glVertexAttrib1sARB = fn(index: uint, x: i16) void;
export type fp_glVertexAttrib1sNV = fn(index: uint, x: i16) void;
export type fp_glVertexAttrib1sv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib1svARB = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib1svNV = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib2d = fn(index: uint, x: f64, y: f64) void;
export type fp_glVertexAttrib2dARB = fn(index: uint, x: f64, y: f64) void;
export type fp_glVertexAttrib2dNV = fn(index: uint, x: f64, y: f64) void;
export type fp_glVertexAttrib2dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib2dvARB = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib2dvNV = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib2f = fn(index: uint, x: f32, y: f32) void;
export type fp_glVertexAttrib2fARB = fn(index: uint, x: f32, y: f32) void;
export type fp_glVertexAttrib2fNV = fn(index: uint, x: f32, y: f32) void;
export type fp_glVertexAttrib2fv = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib2fvARB = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib2fvNV = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib2hNV = fn(index: uint, x: u16, y: u16) void;
export type fp_glVertexAttrib2hvNV = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib2s = fn(index: uint, x: i16, y: i16) void;
export type fp_glVertexAttrib2sARB = fn(index: uint, x: i16, y: i16) void;
export type fp_glVertexAttrib2sNV = fn(index: uint, x: i16, y: i16) void;
export type fp_glVertexAttrib2sv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib2svARB = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib2svNV = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib3d = fn(index: uint, x: f64, y: f64, z: f64) void;
export type fp_glVertexAttrib3dARB = fn(index: uint, x: f64, y: f64, z: f64) void;
export type fp_glVertexAttrib3dNV = fn(index: uint, x: f64, y: f64, z: f64) void;
export type fp_glVertexAttrib3dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib3dvARB = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib3dvNV = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib3f = fn(index: uint, x: f32, y: f32, z: f32) void;
export type fp_glVertexAttrib3fARB = fn(index: uint, x: f32, y: f32, z: f32) void;
export type fp_glVertexAttrib3fNV = fn(index: uint, x: f32, y: f32, z: f32) void;
export type fp_glVertexAttrib3fv = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib3fvARB = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib3fvNV = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib3hNV = fn(index: uint, x: u16, y: u16, z: u16) void;
export type fp_glVertexAttrib3hvNV = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib3s = fn(index: uint, x: i16, y: i16, z: i16) void;
export type fp_glVertexAttrib3sARB = fn(index: uint, x: i16, y: i16, z: i16) void;
export type fp_glVertexAttrib3sNV = fn(index: uint, x: i16, y: i16, z: i16) void;
export type fp_glVertexAttrib3sv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib3svARB = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib3svNV = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4Nbv = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttrib4NbvARB = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttrib4Niv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttrib4NivARB = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttrib4Nsv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4NsvARB = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4Nub = fn(index: uint, x: u8, y: u8, z: u8, w: u8) void;
export type fp_glVertexAttrib4NubARB = fn(index: uint, x: u8, y: u8, z: u8, w: u8) void;
export type fp_glVertexAttrib4Nubv = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttrib4NubvARB = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttrib4Nuiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttrib4NuivARB = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttrib4Nusv = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib4NusvARB = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib4bv = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttrib4bvARB = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttrib4d = fn(index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexAttrib4dARB = fn(index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexAttrib4dNV = fn(index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexAttrib4dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib4dvARB = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib4dvNV = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttrib4f = fn(index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glVertexAttrib4fARB = fn(index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glVertexAttrib4fNV = fn(index: uint, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glVertexAttrib4fv = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib4fvARB = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib4fvNV = fn(index: uint, v: nullable *const f32) void;
export type fp_glVertexAttrib4hNV = fn(index: uint, x: u16, y: u16, z: u16, w: u16) void;
export type fp_glVertexAttrib4hvNV = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib4iv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttrib4ivARB = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttrib4s = fn(index: uint, x: i16, y: i16, z: i16, w: i16) void;
export type fp_glVertexAttrib4sARB = fn(index: uint, x: i16, y: i16, z: i16, w: i16) void;
export type fp_glVertexAttrib4sNV = fn(index: uint, x: i16, y: i16, z: i16, w: i16) void;
export type fp_glVertexAttrib4sv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4svARB = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4svNV = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttrib4ubNV = fn(index: uint, x: u8, y: u8, z: u8, w: u8) void;
export type fp_glVertexAttrib4ubv = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttrib4ubvARB = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttrib4ubvNV = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttrib4uiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttrib4uivARB = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttrib4usv = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttrib4usvARB = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttribArrayObjectATI = fn(index: uint, size_: i32, type_: gl_enum, normalized: u8, stride: i32, buffer: uint, offset_: uint) void;
export type fp_glVertexAttribBinding = fn(attribindex: uint, bindingindex: uint) void;
export type fp_glVertexAttribDivisor = fn(index: uint, divisor: uint) void;
export type fp_glVertexAttribDivisorARB = fn(index: uint, divisor: uint) void;
export type fp_glVertexAttribFormat = fn(attribindex: uint, size_: i32, type_: gl_enum, normalized: u8, relativeoffset: uint) void;
export type fp_glVertexAttribFormatNV = fn(index: uint, size_: i32, type_: gl_enum, normalized: u8, stride: i32) void;
export type fp_glVertexAttribI1i = fn(index: uint, x: i32) void;
export type fp_glVertexAttribI1iEXT = fn(index: uint, x: i32) void;
export type fp_glVertexAttribI1iv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI1ivEXT = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI1ui = fn(index: uint, x: uint) void;
export type fp_glVertexAttribI1uiEXT = fn(index: uint, x: uint) void;
export type fp_glVertexAttribI1uiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI1uivEXT = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI2i = fn(index: uint, x: i32, y: i32) void;
export type fp_glVertexAttribI2iEXT = fn(index: uint, x: i32, y: i32) void;
export type fp_glVertexAttribI2iv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI2ivEXT = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI2ui = fn(index: uint, x: uint, y: uint) void;
export type fp_glVertexAttribI2uiEXT = fn(index: uint, x: uint, y: uint) void;
export type fp_glVertexAttribI2uiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI2uivEXT = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI3i = fn(index: uint, x: i32, y: i32, z: i32) void;
export type fp_glVertexAttribI3iEXT = fn(index: uint, x: i32, y: i32, z: i32) void;
export type fp_glVertexAttribI3iv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI3ivEXT = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI3ui = fn(index: uint, x: uint, y: uint, z: uint) void;
export type fp_glVertexAttribI3uiEXT = fn(index: uint, x: uint, y: uint, z: uint) void;
export type fp_glVertexAttribI3uiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI3uivEXT = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI4bv = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttribI4bvEXT = fn(index: uint, v: nullable *const i8) void;
export type fp_glVertexAttribI4i = fn(index: uint, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glVertexAttribI4iEXT = fn(index: uint, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glVertexAttribI4iv = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI4ivEXT = fn(index: uint, v: nullable *const i32) void;
export type fp_glVertexAttribI4sv = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttribI4svEXT = fn(index: uint, v: nullable *const i16) void;
export type fp_glVertexAttribI4ubv = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttribI4ubvEXT = fn(index: uint, v: nullable *const u8) void;
export type fp_glVertexAttribI4ui = fn(index: uint, x: uint, y: uint, z: uint, w: uint) void;
export type fp_glVertexAttribI4uiEXT = fn(index: uint, x: uint, y: uint, z: uint, w: uint) void;
export type fp_glVertexAttribI4uiv = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI4uivEXT = fn(index: uint, v: nullable *const uint) void;
export type fp_glVertexAttribI4usv = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttribI4usvEXT = fn(index: uint, v: nullable *const u16) void;
export type fp_glVertexAttribIFormat = fn(attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexAttribIFormatNV = fn(index: uint, size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glVertexAttribIPointer = fn(index: uint, size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribIPointerEXT = fn(index: uint, size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribL1d = fn(index: uint, x: f64) void;
export type fp_glVertexAttribL1dEXT = fn(index: uint, x: f64) void;
export type fp_glVertexAttribL1dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL1dvEXT = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL1i64NV = fn(index: uint, x: i64) void;
export type fp_glVertexAttribL1i64vNV = fn(index: uint, v: nullable *const i64) void;
export type fp_glVertexAttribL1ui64ARB = fn(index: uint, x: u64) void;
export type fp_glVertexAttribL1ui64NV = fn(index: uint, x: u64) void;
export type fp_glVertexAttribL1ui64vARB = fn(index: uint, v: nullable *const u64) void;
export type fp_glVertexAttribL1ui64vNV = fn(index: uint, v: nullable *const u64) void;
export type fp_glVertexAttribL2d = fn(index: uint, x: f64, y: f64) void;
export type fp_glVertexAttribL2dEXT = fn(index: uint, x: f64, y: f64) void;
export type fp_glVertexAttribL2dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL2dvEXT = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL2i64NV = fn(index: uint, x: i64, y: i64) void;
export type fp_glVertexAttribL2i64vNV = fn(index: uint, v: nullable *const i64) void;
export type fp_glVertexAttribL2ui64NV = fn(index: uint, x: u64, y: u64) void;
export type fp_glVertexAttribL2ui64vNV = fn(index: uint, v: nullable *const u64) void;
export type fp_glVertexAttribL3d = fn(index: uint, x: f64, y: f64, z: f64) void;
export type fp_glVertexAttribL3dEXT = fn(index: uint, x: f64, y: f64, z: f64) void;
export type fp_glVertexAttribL3dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL3dvEXT = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL3i64NV = fn(index: uint, x: i64, y: i64, z: i64) void;
export type fp_glVertexAttribL3i64vNV = fn(index: uint, v: nullable *const i64) void;
export type fp_glVertexAttribL3ui64NV = fn(index: uint, x: u64, y: u64, z: u64) void;
export type fp_glVertexAttribL3ui64vNV = fn(index: uint, v: nullable *const u64) void;
export type fp_glVertexAttribL4d = fn(index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexAttribL4dEXT = fn(index: uint, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexAttribL4dv = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL4dvEXT = fn(index: uint, v: nullable *const f64) void;
export type fp_glVertexAttribL4i64NV = fn(index: uint, x: i64, y: i64, z: i64, w: i64) void;
export type fp_glVertexAttribL4i64vNV = fn(index: uint, v: nullable *const i64) void;
export type fp_glVertexAttribL4ui64NV = fn(index: uint, x: u64, y: u64, z: u64, w: u64) void;
export type fp_glVertexAttribL4ui64vNV = fn(index: uint, v: nullable *const u64) void;
export type fp_glVertexAttribLFormat = fn(attribindex: uint, size_: i32, type_: gl_enum, relativeoffset: uint) void;
export type fp_glVertexAttribLFormatNV = fn(index: uint, size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glVertexAttribLPointer = fn(index: uint, size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribLPointerEXT = fn(index: uint, size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribP1ui = fn(index: uint, type_: gl_enum, normalized: u8, value: uint) void;
export type fp_glVertexAttribP1uiv = fn(index: uint, type_: gl_enum, normalized: u8, value: nullable *const uint) void;
export type fp_glVertexAttribP2ui = fn(index: uint, type_: gl_enum, normalized: u8, value: uint) void;
export type fp_glVertexAttribP2uiv = fn(index: uint, type_: gl_enum, normalized: u8, value: nullable *const uint) void;
export type fp_glVertexAttribP3ui = fn(index: uint, type_: gl_enum, normalized: u8, value: uint) void;
export type fp_glVertexAttribP3uiv = fn(index: uint, type_: gl_enum, normalized: u8, value: nullable *const uint) void;
export type fp_glVertexAttribP4ui = fn(index: uint, type_: gl_enum, normalized: u8, value: uint) void;
export type fp_glVertexAttribP4uiv = fn(index: uint, type_: gl_enum, normalized: u8, value: nullable *const uint) void;
export type fp_glVertexAttribParameteriAMD = fn(index: uint, pname: gl_enum, param: i32) void;
export type fp_glVertexAttribPointer = fn(index: uint, size_: i32, type_: gl_enum, normalized: u8, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribPointerARB = fn(index: uint, size_: i32, type_: gl_enum, normalized: u8, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribPointerNV = fn(index: uint, fsize: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexAttribs1dvNV = fn(index: uint, count: i32, v: nullable *const f64) void;
export type fp_glVertexAttribs1fvNV = fn(index: uint, count: i32, v: nullable *const f32) void;
export type fp_glVertexAttribs1hvNV = fn(index: uint, n: i32, v: nullable *const u16) void;
export type fp_glVertexAttribs1svNV = fn(index: uint, count: i32, v: nullable *const i16) void;
export type fp_glVertexAttribs2dvNV = fn(index: uint, count: i32, v: nullable *const f64) void;
export type fp_glVertexAttribs2fvNV = fn(index: uint, count: i32, v: nullable *const f32) void;
export type fp_glVertexAttribs2hvNV = fn(index: uint, n: i32, v: nullable *const u16) void;
export type fp_glVertexAttribs2svNV = fn(index: uint, count: i32, v: nullable *const i16) void;
export type fp_glVertexAttribs3dvNV = fn(index: uint, count: i32, v: nullable *const f64) void;
export type fp_glVertexAttribs3fvNV = fn(index: uint, count: i32, v: nullable *const f32) void;
export type fp_glVertexAttribs3hvNV = fn(index: uint, n: i32, v: nullable *const u16) void;
export type fp_glVertexAttribs3svNV = fn(index: uint, count: i32, v: nullable *const i16) void;
export type fp_glVertexAttribs4dvNV = fn(index: uint, count: i32, v: nullable *const f64) void;
export type fp_glVertexAttribs4fvNV = fn(index: uint, count: i32, v: nullable *const f32) void;
export type fp_glVertexAttribs4hvNV = fn(index: uint, n: i32, v: nullable *const u16) void;
export type fp_glVertexAttribs4svNV = fn(index: uint, count: i32, v: nullable *const i16) void;
export type fp_glVertexAttribs4ubvNV = fn(index: uint, count: i32, v: nullable *const u8) void;
export type fp_glVertexBindingDivisor = fn(bindingindex: uint, divisor: uint) void;
export type fp_glVertexBlendARB = fn(count: i32) void;
export type fp_glVertexBlendEnvfATI = fn(pname: gl_enum, param: f32) void;
export type fp_glVertexBlendEnviATI = fn(pname: gl_enum, param: i32) void;
export type fp_glVertexFormatNV = fn(size_: i32, type_: gl_enum, stride: i32) void;
export type fp_glVertexPointerEXT = fn(size_: i32, type_: gl_enum, stride: i32, count: i32, pointer: nullable *opaque) void;
export type fp_glVertexPointerListIBM = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *const nullable *opaque, ptrstride: i32) void;
export type fp_glVertexPointervINTEL = fn(size_: i32, type_: gl_enum, pointer: nullable *const nullable *opaque) void;
export type fp_glVertexStream1dATI = fn(stream: gl_enum, x: f64) void;
export type fp_glVertexStream1dvATI = fn(stream: gl_enum, coords: nullable *const f64) void;
export type fp_glVertexStream1fATI = fn(stream: gl_enum, x: f32) void;
export type fp_glVertexStream1fvATI = fn(stream: gl_enum, coords: nullable *const f32) void;
export type fp_glVertexStream1iATI = fn(stream: gl_enum, x: i32) void;
export type fp_glVertexStream1ivATI = fn(stream: gl_enum, coords: nullable *const i32) void;
export type fp_glVertexStream1sATI = fn(stream: gl_enum, x: i16) void;
export type fp_glVertexStream1svATI = fn(stream: gl_enum, coords: nullable *const i16) void;
export type fp_glVertexStream2dATI = fn(stream: gl_enum, x: f64, y: f64) void;
export type fp_glVertexStream2dvATI = fn(stream: gl_enum, coords: nullable *const f64) void;
export type fp_glVertexStream2fATI = fn(stream: gl_enum, x: f32, y: f32) void;
export type fp_glVertexStream2fvATI = fn(stream: gl_enum, coords: nullable *const f32) void;
export type fp_glVertexStream2iATI = fn(stream: gl_enum, x: i32, y: i32) void;
export type fp_glVertexStream2ivATI = fn(stream: gl_enum, coords: nullable *const i32) void;
export type fp_glVertexStream2sATI = fn(stream: gl_enum, x: i16, y: i16) void;
export type fp_glVertexStream2svATI = fn(stream: gl_enum, coords: nullable *const i16) void;
export type fp_glVertexStream3dATI = fn(stream: gl_enum, x: f64, y: f64, z: f64) void;
export type fp_glVertexStream3dvATI = fn(stream: gl_enum, coords: nullable *const f64) void;
export type fp_glVertexStream3fATI = fn(stream: gl_enum, x: f32, y: f32, z: f32) void;
export type fp_glVertexStream3fvATI = fn(stream: gl_enum, coords: nullable *const f32) void;
export type fp_glVertexStream3iATI = fn(stream: gl_enum, x: i32, y: i32, z: i32) void;
export type fp_glVertexStream3ivATI = fn(stream: gl_enum, coords: nullable *const i32) void;
export type fp_glVertexStream3sATI = fn(stream: gl_enum, x: i16, y: i16, z: i16) void;
export type fp_glVertexStream3svATI = fn(stream: gl_enum, coords: nullable *const i16) void;
export type fp_glVertexStream4dATI = fn(stream: gl_enum, x: f64, y: f64, z: f64, w: f64) void;
export type fp_glVertexStream4dvATI = fn(stream: gl_enum, coords: nullable *const f64) void;
export type fp_glVertexStream4fATI = fn(stream: gl_enum, x: f32, y: f32, z: f32, w: f32) void;
export type fp_glVertexStream4fvATI = fn(stream: gl_enum, coords: nullable *const f32) void;
export type fp_glVertexStream4iATI = fn(stream: gl_enum, x: i32, y: i32, z: i32, w: i32) void;
export type fp_glVertexStream4ivATI = fn(stream: gl_enum, coords: nullable *const i32) void;
export type fp_glVertexStream4sATI = fn(stream: gl_enum, x: i16, y: i16, z: i16, w: i16) void;
export type fp_glVertexStream4svATI = fn(stream: gl_enum, coords: nullable *const i16) void;
export type fp_glVertexWeightPointerEXT = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glVertexWeightfEXT = fn(weight: f32) void;
export type fp_glVertexWeightfvEXT = fn(weight: nullable *const f32) void;
export type fp_glVertexWeighthNV = fn(weight: u16) void;
export type fp_glVertexWeighthvNV = fn(weight: nullable *const u16) void;
export type fp_glVideoCaptureNV = fn(video_capture_slot: uint, sequence_num: nullable *uint, capture_time: nullable *u64) gl_enum;
export type fp_glVideoCaptureStreamParameterdvNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *const f64) void;
export type fp_glVideoCaptureStreamParameterfvNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *const f32) void;
export type fp_glVideoCaptureStreamParameterivNV = fn(video_capture_slot: uint, stream: uint, pname: gl_enum, params: nullable *const i32) void;
export type fp_glViewport = fn(x: i32, y: i32, width: i32, height: i32) void;
export type fp_glViewportArrayv = fn(first: uint, count: i32, v: nullable *const f32) void;
export type fp_glViewportIndexedf = fn(index: uint, x: f32, y: f32, w: f32, h: f32) void;
export type fp_glViewportIndexedfv = fn(index: uint, v: nullable *const f32) void;
export type fp_glViewportPositionWScaleNV = fn(index: uint, xcoeff: f32, ycoeff: f32) void;
export type fp_glViewportSwizzleNV = fn(index: uint, swizzlex: gl_enum, swizzley: gl_enum, swizzlez: gl_enum, swizzlew: gl_enum) void;
export type fp_glWaitSemaphoreEXT = fn(semaphore: uint, numBufferBarriers: uint, buffers: nullable *const uint, numTextureBarriers: uint, textures: nullable *const uint, srcLayouts: nullable *const gl_enum) void;
export type fp_glWaitSemaphoreui64NVX = fn(waitGpu: uint, fenceObjectCount: i32, semaphoreArray: nullable *const uint, fenceValueArray: nullable *const u64) void;
export type fp_glWaitSync = fn(sync: size, flags: gl_bitfield, timeout: u64) void;
export type fp_glWaitVkSemaphoreNV = fn(vkSemaphore: u64) void;
export type fp_glWeightPathsNV = fn(resultPath: uint, numPaths: i32, paths: nullable *const uint, weights: nullable *const f32) void;
export type fp_glWeightPointerARB = fn(size_: i32, type_: gl_enum, stride: i32, pointer: nullable *opaque) void;
export type fp_glWeightbvARB = fn(size_: i32, weights: nullable *const i8) void;
export type fp_glWeightdvARB = fn(size_: i32, weights: nullable *const f64) void;
export type fp_glWeightfvARB = fn(size_: i32, weights: nullable *const f32) void;
export type fp_glWeightivARB = fn(size_: i32, weights: nullable *const i32) void;
export type fp_glWeightsvARB = fn(size_: i32, weights: nullable *const i16) void;
export type fp_glWeightubvARB = fn(size_: i32, weights: nullable *const u8) void;
export type fp_glWeightuivARB = fn(size_: i32, weights: nullable *const uint) void;
export type fp_glWeightusvARB = fn(size_: i32, weights: nullable *const u16) void;
export type fp_glWindowPos2dARB = fn(x: f64, y: f64) void;
export type fp_glWindowPos2dMESA = fn(x: f64, y: f64) void;
export type fp_glWindowPos2dvARB = fn(v: nullable *const f64) void;
export type fp_glWindowPos2dvMESA = fn(v: nullable *const f64) void;
export type fp_glWindowPos2fARB = fn(x: f32, y: f32) void;
export type fp_glWindowPos2fMESA = fn(x: f32, y: f32) void;
export type fp_glWindowPos2fvARB = fn(v: nullable *const f32) void;
export type fp_glWindowPos2fvMESA = fn(v: nullable *const f32) void;
export type fp_glWindowPos2iARB = fn(x: i32, y: i32) void;
export type fp_glWindowPos2iMESA = fn(x: i32, y: i32) void;
export type fp_glWindowPos2ivARB = fn(v: nullable *const i32) void;
export type fp_glWindowPos2ivMESA = fn(v: nullable *const i32) void;
export type fp_glWindowPos2sARB = fn(x: i16, y: i16) void;
export type fp_glWindowPos2sMESA = fn(x: i16, y: i16) void;
export type fp_glWindowPos2svARB = fn(v: nullable *const i16) void;
export type fp_glWindowPos2svMESA = fn(v: nullable *const i16) void;
export type fp_glWindowPos3dARB = fn(x: f64, y: f64, z: f64) void;
export type fp_glWindowPos3dMESA = fn(x: f64, y: f64, z: f64) void;
export type fp_glWindowPos3dvARB = fn(v: nullable *const f64) void;
export type fp_glWindowPos3dvMESA = fn(v: nullable *const f64) void;
export type fp_glWindowPos3fARB = fn(x: f32, y: f32, z: f32) void;
export type fp_glWindowPos3fMESA = fn(x: f32, y: f32, z: f32) void;
export type fp_glWindowPos3fvARB = fn(v: nullable *const f32) void;
export type fp_glWindowPos3fvMESA = fn(v: nullable *const f32) void;
export type fp_glWindowPos3iARB = fn(x: i32, y: i32, z: i32) void;
export type fp_glWindowPos3iMESA = fn(x: i32, y: i32, z: i32) void;
export type fp_glWindowPos3ivARB = fn(v: nullable *const i32) void;
export type fp_glWindowPos3ivMESA = fn(v: nullable *const i32) void;
export type fp_glWindowPos3sARB = fn(x: i16, y: i16, z: i16) void;
export type fp_glWindowPos3sMESA = fn(x: i16, y: i16, z: i16) void;
export type fp_glWindowPos3svARB = fn(v: nullable *const i16) void;
export type fp_glWindowPos3svMESA = fn(v: nullable *const i16) void;
export type fp_glWindowPos4dMESA = fn(x: f64, y: f64, z: f64, w: f64) void;
export type fp_glWindowPos4dvMESA = fn(v: nullable *const f64) void;
export type fp_glWindowPos4fMESA = fn(x: f32, y: f32, z: f32, w: f32) void;
export type fp_glWindowPos4fvMESA = fn(v: nullable *const f32) void;
export type fp_glWindowPos4iMESA = fn(x: i32, y: i32, z: i32, w: i32) void;
export type fp_glWindowPos4ivMESA = fn(v: nullable *const i32) void;
export type fp_glWindowPos4sMESA = fn(x: i16, y: i16, z: i16, w: i16) void;
export type fp_glWindowPos4svMESA = fn(v: nullable *const i16) void;
export type fp_glWindowRectanglesEXT = fn(mode: gl_enum, count: i32, box: nullable *const i32) void;
export type fp_glWriteMaskEXT = fn(res: uint, in: uint, outX: gl_enum, outY: gl_enum, outZ: gl_enum, outW: gl_enum) void;

// Functions
export let glAccumxOES: *fp_glAccumxOES =
	null: *fp_glAccumxOES;
export let glAcquireKeyedMutexWin32EXT: *fp_glAcquireKeyedMutexWin32EXT =
	null: *fp_glAcquireKeyedMutexWin32EXT;
export let glActiveProgramEXT: *fp_glActiveProgramEXT =
	null: *fp_glActiveProgramEXT;
export let glActiveShaderProgram: *fp_glActiveShaderProgram =
	null: *fp_glActiveShaderProgram;
export let glActiveStencilFaceEXT: *fp_glActiveStencilFaceEXT =
	null: *fp_glActiveStencilFaceEXT;
export let glActiveTexture: *fp_glActiveTexture =
	null: *fp_glActiveTexture;
export let glActiveTextureARB: *fp_glActiveTextureARB =
	null: *fp_glActiveTextureARB;
export let glActiveVaryingNV: *fp_glActiveVaryingNV =
	null: *fp_glActiveVaryingNV;
export let glAlphaFragmentOp1ATI: *fp_glAlphaFragmentOp1ATI =
	null: *fp_glAlphaFragmentOp1ATI;
export let glAlphaFragmentOp2ATI: *fp_glAlphaFragmentOp2ATI =
	null: *fp_glAlphaFragmentOp2ATI;
export let glAlphaFragmentOp3ATI: *fp_glAlphaFragmentOp3ATI =
	null: *fp_glAlphaFragmentOp3ATI;
export let glAlphaFuncxOES: *fp_glAlphaFuncxOES =
	null: *fp_glAlphaFuncxOES;
export let glAlphaToCoverageDitherControlNV: *fp_glAlphaToCoverageDitherControlNV =
	null: *fp_glAlphaToCoverageDitherControlNV;
export let glApplyFramebufferAttachmentCMAAINTEL: *fp_glApplyFramebufferAttachmentCMAAINTEL =
	null: *fp_glApplyFramebufferAttachmentCMAAINTEL;
export let glApplyTextureEXT: *fp_glApplyTextureEXT =
	null: *fp_glApplyTextureEXT;
export let glAreProgramsResidentNV: *fp_glAreProgramsResidentNV =
	null: *fp_glAreProgramsResidentNV;
export let glAreTexturesResidentEXT: *fp_glAreTexturesResidentEXT =
	null: *fp_glAreTexturesResidentEXT;
export let glArrayElementEXT: *fp_glArrayElementEXT =
	null: *fp_glArrayElementEXT;
export let glArrayObjectATI: *fp_glArrayObjectATI =
	null: *fp_glArrayObjectATI;
export let glAsyncCopyBufferSubDataNVX: *fp_glAsyncCopyBufferSubDataNVX =
	null: *fp_glAsyncCopyBufferSubDataNVX;
export let glAsyncCopyImageSubDataNVX: *fp_glAsyncCopyImageSubDataNVX =
	null: *fp_glAsyncCopyImageSubDataNVX;
export let glAsyncMarkerSGIX: *fp_glAsyncMarkerSGIX =
	null: *fp_glAsyncMarkerSGIX;
export let glAttachObjectARB: *fp_glAttachObjectARB =
	null: *fp_glAttachObjectARB;
export let glAttachShader: *fp_glAttachShader =
	null: *fp_glAttachShader;
export let glBeginConditionalRender: *fp_glBeginConditionalRender =
	null: *fp_glBeginConditionalRender;
export let glBeginConditionalRenderNV: *fp_glBeginConditionalRenderNV =
	null: *fp_glBeginConditionalRenderNV;
export let glBeginConditionalRenderNVX: *fp_glBeginConditionalRenderNVX =
	null: *fp_glBeginConditionalRenderNVX;
export let glBeginFragmentShaderATI: *fp_glBeginFragmentShaderATI =
	null: *fp_glBeginFragmentShaderATI;
export let glBeginOcclusionQueryNV: *fp_glBeginOcclusionQueryNV =
	null: *fp_glBeginOcclusionQueryNV;
export let glBeginPerfMonitorAMD: *fp_glBeginPerfMonitorAMD =
	null: *fp_glBeginPerfMonitorAMD;
export let glBeginPerfQueryINTEL: *fp_glBeginPerfQueryINTEL =
	null: *fp_glBeginPerfQueryINTEL;
export let glBeginQuery: *fp_glBeginQuery =
	null: *fp_glBeginQuery;
export let glBeginQueryARB: *fp_glBeginQueryARB =
	null: *fp_glBeginQueryARB;
export let glBeginQueryIndexed: *fp_glBeginQueryIndexed =
	null: *fp_glBeginQueryIndexed;
export let glBeginTransformFeedback: *fp_glBeginTransformFeedback =
	null: *fp_glBeginTransformFeedback;
export let glBeginTransformFeedbackEXT: *fp_glBeginTransformFeedbackEXT =
	null: *fp_glBeginTransformFeedbackEXT;
export let glBeginTransformFeedbackNV: *fp_glBeginTransformFeedbackNV =
	null: *fp_glBeginTransformFeedbackNV;
export let glBeginVertexShaderEXT: *fp_glBeginVertexShaderEXT =
	null: *fp_glBeginVertexShaderEXT;
export let glBeginVideoCaptureNV: *fp_glBeginVideoCaptureNV =
	null: *fp_glBeginVideoCaptureNV;
export let glBindAttribLocation: *fp_glBindAttribLocation =
	null: *fp_glBindAttribLocation;
export let glBindAttribLocationARB: *fp_glBindAttribLocationARB =
	null: *fp_glBindAttribLocationARB;
export let glBindBuffer: *fp_glBindBuffer =
	null: *fp_glBindBuffer;
export let glBindBufferARB: *fp_glBindBufferARB =
	null: *fp_glBindBufferARB;
export let glBindBufferBase: *fp_glBindBufferBase =
	null: *fp_glBindBufferBase;
export let glBindBufferBaseEXT: *fp_glBindBufferBaseEXT =
	null: *fp_glBindBufferBaseEXT;
export let glBindBufferBaseNV: *fp_glBindBufferBaseNV =
	null: *fp_glBindBufferBaseNV;
export let glBindBufferOffsetEXT: *fp_glBindBufferOffsetEXT =
	null: *fp_glBindBufferOffsetEXT;
export let glBindBufferOffsetNV: *fp_glBindBufferOffsetNV =
	null: *fp_glBindBufferOffsetNV;
export let glBindBufferRange: *fp_glBindBufferRange =
	null: *fp_glBindBufferRange;
export let glBindBufferRangeEXT: *fp_glBindBufferRangeEXT =
	null: *fp_glBindBufferRangeEXT;
export let glBindBufferRangeNV: *fp_glBindBufferRangeNV =
	null: *fp_glBindBufferRangeNV;
export let glBindBuffersBase: *fp_glBindBuffersBase =
	null: *fp_glBindBuffersBase;
export let glBindBuffersRange: *fp_glBindBuffersRange =
	null: *fp_glBindBuffersRange;
export let glBindFragDataLocation: *fp_glBindFragDataLocation =
	null: *fp_glBindFragDataLocation;
export let glBindFragDataLocationEXT: *fp_glBindFragDataLocationEXT =
	null: *fp_glBindFragDataLocationEXT;
export let glBindFragDataLocationIndexed: *fp_glBindFragDataLocationIndexed =
	null: *fp_glBindFragDataLocationIndexed;
export let glBindFragmentShaderATI: *fp_glBindFragmentShaderATI =
	null: *fp_glBindFragmentShaderATI;
export let glBindFramebuffer: *fp_glBindFramebuffer =
	null: *fp_glBindFramebuffer;
export let glBindFramebufferEXT: *fp_glBindFramebufferEXT =
	null: *fp_glBindFramebufferEXT;
export let glBindImageTexture: *fp_glBindImageTexture =
	null: *fp_glBindImageTexture;
export let glBindImageTextureEXT: *fp_glBindImageTextureEXT =
	null: *fp_glBindImageTextureEXT;
export let glBindImageTextures: *fp_glBindImageTextures =
	null: *fp_glBindImageTextures;
export let glBindLightParameterEXT: *fp_glBindLightParameterEXT =
	null: *fp_glBindLightParameterEXT;
export let glBindMaterialParameterEXT: *fp_glBindMaterialParameterEXT =
	null: *fp_glBindMaterialParameterEXT;
export let glBindMultiTextureEXT: *fp_glBindMultiTextureEXT =
	null: *fp_glBindMultiTextureEXT;
export let glBindParameterEXT: *fp_glBindParameterEXT =
	null: *fp_glBindParameterEXT;
export let glBindProgramARB: *fp_glBindProgramARB =
	null: *fp_glBindProgramARB;
export let glBindProgramNV: *fp_glBindProgramNV =
	null: *fp_glBindProgramNV;
export let glBindProgramPipeline: *fp_glBindProgramPipeline =
	null: *fp_glBindProgramPipeline;
export let glBindRenderbuffer: *fp_glBindRenderbuffer =
	null: *fp_glBindRenderbuffer;
export let glBindRenderbufferEXT: *fp_glBindRenderbufferEXT =
	null: *fp_glBindRenderbufferEXT;
export let glBindSampler: *fp_glBindSampler =
	null: *fp_glBindSampler;
export let glBindSamplers: *fp_glBindSamplers =
	null: *fp_glBindSamplers;
export let glBindShadingRateImageNV: *fp_glBindShadingRateImageNV =
	null: *fp_glBindShadingRateImageNV;
export let glBindTexGenParameterEXT: *fp_glBindTexGenParameterEXT =
	null: *fp_glBindTexGenParameterEXT;
export let glBindTexture: *fp_glBindTexture =
	null: *fp_glBindTexture;
export let glBindTextureEXT: *fp_glBindTextureEXT =
	null: *fp_glBindTextureEXT;
export let glBindTextureUnit: *fp_glBindTextureUnit =
	null: *fp_glBindTextureUnit;
export let glBindTextureUnitParameterEXT: *fp_glBindTextureUnitParameterEXT =
	null: *fp_glBindTextureUnitParameterEXT;
export let glBindTextures: *fp_glBindTextures =
	null: *fp_glBindTextures;
export let glBindTransformFeedback: *fp_glBindTransformFeedback =
	null: *fp_glBindTransformFeedback;
export let glBindTransformFeedbackNV: *fp_glBindTransformFeedbackNV =
	null: *fp_glBindTransformFeedbackNV;
export let glBindVertexArray: *fp_glBindVertexArray =
	null: *fp_glBindVertexArray;
export let glBindVertexArrayAPPLE: *fp_glBindVertexArrayAPPLE =
	null: *fp_glBindVertexArrayAPPLE;
export let glBindVertexBuffer: *fp_glBindVertexBuffer =
	null: *fp_glBindVertexBuffer;
export let glBindVertexBuffers: *fp_glBindVertexBuffers =
	null: *fp_glBindVertexBuffers;
export let glBindVertexShaderEXT: *fp_glBindVertexShaderEXT =
	null: *fp_glBindVertexShaderEXT;
export let glBindVideoCaptureStreamBufferNV: *fp_glBindVideoCaptureStreamBufferNV =
	null: *fp_glBindVideoCaptureStreamBufferNV;
export let glBindVideoCaptureStreamTextureNV: *fp_glBindVideoCaptureStreamTextureNV =
	null: *fp_glBindVideoCaptureStreamTextureNV;
export let glBinormal3bEXT: *fp_glBinormal3bEXT =
	null: *fp_glBinormal3bEXT;
export let glBinormal3bvEXT: *fp_glBinormal3bvEXT =
	null: *fp_glBinormal3bvEXT;
export let glBinormal3dEXT: *fp_glBinormal3dEXT =
	null: *fp_glBinormal3dEXT;
export let glBinormal3dvEXT: *fp_glBinormal3dvEXT =
	null: *fp_glBinormal3dvEXT;
export let glBinormal3fEXT: *fp_glBinormal3fEXT =
	null: *fp_glBinormal3fEXT;
export let glBinormal3fvEXT: *fp_glBinormal3fvEXT =
	null: *fp_glBinormal3fvEXT;
export let glBinormal3iEXT: *fp_glBinormal3iEXT =
	null: *fp_glBinormal3iEXT;
export let glBinormal3ivEXT: *fp_glBinormal3ivEXT =
	null: *fp_glBinormal3ivEXT;
export let glBinormal3sEXT: *fp_glBinormal3sEXT =
	null: *fp_glBinormal3sEXT;
export let glBinormal3svEXT: *fp_glBinormal3svEXT =
	null: *fp_glBinormal3svEXT;
export let glBinormalPointerEXT: *fp_glBinormalPointerEXT =
	null: *fp_glBinormalPointerEXT;
export let glBitmapxOES: *fp_glBitmapxOES =
	null: *fp_glBitmapxOES;
export let glBlendBarrierKHR: *fp_glBlendBarrierKHR =
	null: *fp_glBlendBarrierKHR;
export let glBlendBarrierNV: *fp_glBlendBarrierNV =
	null: *fp_glBlendBarrierNV;
export let glBlendColor: *fp_glBlendColor =
	null: *fp_glBlendColor;
export let glBlendColorEXT: *fp_glBlendColorEXT =
	null: *fp_glBlendColorEXT;
export let glBlendColorxOES: *fp_glBlendColorxOES =
	null: *fp_glBlendColorxOES;
export let glBlendEquation: *fp_glBlendEquation =
	null: *fp_glBlendEquation;
export let glBlendEquationEXT: *fp_glBlendEquationEXT =
	null: *fp_glBlendEquationEXT;
export let glBlendEquationIndexedAMD: *fp_glBlendEquationIndexedAMD =
	null: *fp_glBlendEquationIndexedAMD;
export let glBlendEquationSeparate: *fp_glBlendEquationSeparate =
	null: *fp_glBlendEquationSeparate;
export let glBlendEquationSeparateEXT: *fp_glBlendEquationSeparateEXT =
	null: *fp_glBlendEquationSeparateEXT;
export let glBlendEquationSeparateIndexedAMD: *fp_glBlendEquationSeparateIndexedAMD =
	null: *fp_glBlendEquationSeparateIndexedAMD;
export let glBlendEquationSeparateiARB: *fp_glBlendEquationSeparateiARB =
	null: *fp_glBlendEquationSeparateiARB;
export let glBlendEquationiARB: *fp_glBlendEquationiARB =
	null: *fp_glBlendEquationiARB;
export let glBlendFunc: *fp_glBlendFunc =
	null: *fp_glBlendFunc;
export let glBlendFuncIndexedAMD: *fp_glBlendFuncIndexedAMD =
	null: *fp_glBlendFuncIndexedAMD;
export let glBlendFuncSeparate: *fp_glBlendFuncSeparate =
	null: *fp_glBlendFuncSeparate;
export let glBlendFuncSeparateEXT: *fp_glBlendFuncSeparateEXT =
	null: *fp_glBlendFuncSeparateEXT;
export let glBlendFuncSeparateINGR: *fp_glBlendFuncSeparateINGR =
	null: *fp_glBlendFuncSeparateINGR;
export let glBlendFuncSeparateIndexedAMD: *fp_glBlendFuncSeparateIndexedAMD =
	null: *fp_glBlendFuncSeparateIndexedAMD;
export let glBlendFuncSeparateiARB: *fp_glBlendFuncSeparateiARB =
	null: *fp_glBlendFuncSeparateiARB;
export let glBlendFunciARB: *fp_glBlendFunciARB =
	null: *fp_glBlendFunciARB;
export let glBlendParameteriNV: *fp_glBlendParameteriNV =
	null: *fp_glBlendParameteriNV;
export let glBlitFramebuffer: *fp_glBlitFramebuffer =
	null: *fp_glBlitFramebuffer;
export let glBlitFramebufferEXT: *fp_glBlitFramebufferEXT =
	null: *fp_glBlitFramebufferEXT;
export let glBlitNamedFramebuffer: *fp_glBlitNamedFramebuffer =
	null: *fp_glBlitNamedFramebuffer;
export let glBufferAddressRangeNV: *fp_glBufferAddressRangeNV =
	null: *fp_glBufferAddressRangeNV;
export let glBufferAttachMemoryNV: *fp_glBufferAttachMemoryNV =
	null: *fp_glBufferAttachMemoryNV;
export let glBufferData: *fp_glBufferData =
	null: *fp_glBufferData;
export let glBufferDataARB: *fp_glBufferDataARB =
	null: *fp_glBufferDataARB;
export let glBufferPageCommitmentARB: *fp_glBufferPageCommitmentARB =
	null: *fp_glBufferPageCommitmentARB;
export let glBufferPageCommitmentMemNV: *fp_glBufferPageCommitmentMemNV =
	null: *fp_glBufferPageCommitmentMemNV;
export let glBufferParameteriAPPLE: *fp_glBufferParameteriAPPLE =
	null: *fp_glBufferParameteriAPPLE;
export let glBufferStorage: *fp_glBufferStorage =
	null: *fp_glBufferStorage;
export let glBufferStorageExternalEXT: *fp_glBufferStorageExternalEXT =
	null: *fp_glBufferStorageExternalEXT;
export let glBufferStorageMemEXT: *fp_glBufferStorageMemEXT =
	null: *fp_glBufferStorageMemEXT;
export let glBufferSubData: *fp_glBufferSubData =
	null: *fp_glBufferSubData;
export let glBufferSubDataARB: *fp_glBufferSubDataARB =
	null: *fp_glBufferSubDataARB;
export let glCallCommandListNV: *fp_glCallCommandListNV =
	null: *fp_glCallCommandListNV;
export let glCheckFramebufferStatus: *fp_glCheckFramebufferStatus =
	null: *fp_glCheckFramebufferStatus;
export let glCheckFramebufferStatusEXT: *fp_glCheckFramebufferStatusEXT =
	null: *fp_glCheckFramebufferStatusEXT;
export let glCheckNamedFramebufferStatus: *fp_glCheckNamedFramebufferStatus =
	null: *fp_glCheckNamedFramebufferStatus;
export let glCheckNamedFramebufferStatusEXT: *fp_glCheckNamedFramebufferStatusEXT =
	null: *fp_glCheckNamedFramebufferStatusEXT;
export let glClampColor: *fp_glClampColor =
	null: *fp_glClampColor;
export let glClampColorARB: *fp_glClampColorARB =
	null: *fp_glClampColorARB;
export let glClear: *fp_glClear =
	null: *fp_glClear;
export let glClearAccumxOES: *fp_glClearAccumxOES =
	null: *fp_glClearAccumxOES;
export let glClearBufferData: *fp_glClearBufferData =
	null: *fp_glClearBufferData;
export let glClearBufferSubData: *fp_glClearBufferSubData =
	null: *fp_glClearBufferSubData;
export let glClearBufferfi: *fp_glClearBufferfi =
	null: *fp_glClearBufferfi;
export let glClearBufferfv: *fp_glClearBufferfv =
	null: *fp_glClearBufferfv;
export let glClearBufferiv: *fp_glClearBufferiv =
	null: *fp_glClearBufferiv;
export let glClearBufferuiv: *fp_glClearBufferuiv =
	null: *fp_glClearBufferuiv;
export let glClearColor: *fp_glClearColor =
	null: *fp_glClearColor;
export let glClearColorIiEXT: *fp_glClearColorIiEXT =
	null: *fp_glClearColorIiEXT;
export let glClearColorIuiEXT: *fp_glClearColorIuiEXT =
	null: *fp_glClearColorIuiEXT;
export let glClearColorxOES: *fp_glClearColorxOES =
	null: *fp_glClearColorxOES;
export let glClearDepth: *fp_glClearDepth =
	null: *fp_glClearDepth;
export let glClearDepthdNV: *fp_glClearDepthdNV =
	null: *fp_glClearDepthdNV;
export let glClearDepthf: *fp_glClearDepthf =
	null: *fp_glClearDepthf;
export let glClearDepthfOES: *fp_glClearDepthfOES =
	null: *fp_glClearDepthfOES;
export let glClearDepthxOES: *fp_glClearDepthxOES =
	null: *fp_glClearDepthxOES;
export let glClearNamedBufferData: *fp_glClearNamedBufferData =
	null: *fp_glClearNamedBufferData;
export let glClearNamedBufferDataEXT: *fp_glClearNamedBufferDataEXT =
	null: *fp_glClearNamedBufferDataEXT;
export let glClearNamedBufferSubData: *fp_glClearNamedBufferSubData =
	null: *fp_glClearNamedBufferSubData;
export let glClearNamedBufferSubDataEXT: *fp_glClearNamedBufferSubDataEXT =
	null: *fp_glClearNamedBufferSubDataEXT;
export let glClearNamedFramebufferfi: *fp_glClearNamedFramebufferfi =
	null: *fp_glClearNamedFramebufferfi;
export let glClearNamedFramebufferfv: *fp_glClearNamedFramebufferfv =
	null: *fp_glClearNamedFramebufferfv;
export let glClearNamedFramebufferiv: *fp_glClearNamedFramebufferiv =
	null: *fp_glClearNamedFramebufferiv;
export let glClearNamedFramebufferuiv: *fp_glClearNamedFramebufferuiv =
	null: *fp_glClearNamedFramebufferuiv;
export let glClearStencil: *fp_glClearStencil =
	null: *fp_glClearStencil;
export let glClearTexImage: *fp_glClearTexImage =
	null: *fp_glClearTexImage;
export let glClearTexSubImage: *fp_glClearTexSubImage =
	null: *fp_glClearTexSubImage;
export let glClientActiveTextureARB: *fp_glClientActiveTextureARB =
	null: *fp_glClientActiveTextureARB;
export let glClientActiveVertexStreamATI: *fp_glClientActiveVertexStreamATI =
	null: *fp_glClientActiveVertexStreamATI;
export let glClientAttribDefaultEXT: *fp_glClientAttribDefaultEXT =
	null: *fp_glClientAttribDefaultEXT;
export let glClientWaitSemaphoreui64NVX: *fp_glClientWaitSemaphoreui64NVX =
	null: *fp_glClientWaitSemaphoreui64NVX;
export let glClientWaitSync: *fp_glClientWaitSync =
	null: *fp_glClientWaitSync;
export let glClipControl: *fp_glClipControl =
	null: *fp_glClipControl;
export let glClipPlanefOES: *fp_glClipPlanefOES =
	null: *fp_glClipPlanefOES;
export let glClipPlanexOES: *fp_glClipPlanexOES =
	null: *fp_glClipPlanexOES;
export let glColor3fVertex3fSUN: *fp_glColor3fVertex3fSUN =
	null: *fp_glColor3fVertex3fSUN;
export let glColor3fVertex3fvSUN: *fp_glColor3fVertex3fvSUN =
	null: *fp_glColor3fVertex3fvSUN;
export let glColor3hNV: *fp_glColor3hNV =
	null: *fp_glColor3hNV;
export let glColor3hvNV: *fp_glColor3hvNV =
	null: *fp_glColor3hvNV;
export let glColor3xOES: *fp_glColor3xOES =
	null: *fp_glColor3xOES;
export let glColor3xvOES: *fp_glColor3xvOES =
	null: *fp_glColor3xvOES;
export let glColor4fNormal3fVertex3fSUN: *fp_glColor4fNormal3fVertex3fSUN =
	null: *fp_glColor4fNormal3fVertex3fSUN;
export let glColor4fNormal3fVertex3fvSUN: *fp_glColor4fNormal3fVertex3fvSUN =
	null: *fp_glColor4fNormal3fVertex3fvSUN;
export let glColor4hNV: *fp_glColor4hNV =
	null: *fp_glColor4hNV;
export let glColor4hvNV: *fp_glColor4hvNV =
	null: *fp_glColor4hvNV;
export let glColor4ubVertex2fSUN: *fp_glColor4ubVertex2fSUN =
	null: *fp_glColor4ubVertex2fSUN;
export let glColor4ubVertex2fvSUN: *fp_glColor4ubVertex2fvSUN =
	null: *fp_glColor4ubVertex2fvSUN;
export let glColor4ubVertex3fSUN: *fp_glColor4ubVertex3fSUN =
	null: *fp_glColor4ubVertex3fSUN;
export let glColor4ubVertex3fvSUN: *fp_glColor4ubVertex3fvSUN =
	null: *fp_glColor4ubVertex3fvSUN;
export let glColor4xOES: *fp_glColor4xOES =
	null: *fp_glColor4xOES;
export let glColor4xvOES: *fp_glColor4xvOES =
	null: *fp_glColor4xvOES;
export let glColorFormatNV: *fp_glColorFormatNV =
	null: *fp_glColorFormatNV;
export let glColorFragmentOp1ATI: *fp_glColorFragmentOp1ATI =
	null: *fp_glColorFragmentOp1ATI;
export let glColorFragmentOp2ATI: *fp_glColorFragmentOp2ATI =
	null: *fp_glColorFragmentOp2ATI;
export let glColorFragmentOp3ATI: *fp_glColorFragmentOp3ATI =
	null: *fp_glColorFragmentOp3ATI;
export let glColorMask: *fp_glColorMask =
	null: *fp_glColorMask;
export let glColorMaskIndexedEXT: *fp_glColorMaskIndexedEXT =
	null: *fp_glColorMaskIndexedEXT;
export let glColorMaski: *fp_glColorMaski =
	null: *fp_glColorMaski;
export let glColorPointerEXT: *fp_glColorPointerEXT =
	null: *fp_glColorPointerEXT;
export let glColorPointerListIBM: *fp_glColorPointerListIBM =
	null: *fp_glColorPointerListIBM;
export let glColorPointervINTEL: *fp_glColorPointervINTEL =
	null: *fp_glColorPointervINTEL;
export let glColorSubTableEXT: *fp_glColorSubTableEXT =
	null: *fp_glColorSubTableEXT;
export let glColorTableEXT: *fp_glColorTableEXT =
	null: *fp_glColorTableEXT;
export let glColorTableParameterfvSGI: *fp_glColorTableParameterfvSGI =
	null: *fp_glColorTableParameterfvSGI;
export let glColorTableParameterivSGI: *fp_glColorTableParameterivSGI =
	null: *fp_glColorTableParameterivSGI;
export let glColorTableSGI: *fp_glColorTableSGI =
	null: *fp_glColorTableSGI;
export let glCombinerInputNV: *fp_glCombinerInputNV =
	null: *fp_glCombinerInputNV;
export let glCombinerOutputNV: *fp_glCombinerOutputNV =
	null: *fp_glCombinerOutputNV;
export let glCombinerParameterfNV: *fp_glCombinerParameterfNV =
	null: *fp_glCombinerParameterfNV;
export let glCombinerParameterfvNV: *fp_glCombinerParameterfvNV =
	null: *fp_glCombinerParameterfvNV;
export let glCombinerParameteriNV: *fp_glCombinerParameteriNV =
	null: *fp_glCombinerParameteriNV;
export let glCombinerParameterivNV: *fp_glCombinerParameterivNV =
	null: *fp_glCombinerParameterivNV;
export let glCombinerStageParameterfvNV: *fp_glCombinerStageParameterfvNV =
	null: *fp_glCombinerStageParameterfvNV;
export let glCommandListSegmentsNV: *fp_glCommandListSegmentsNV =
	null: *fp_glCommandListSegmentsNV;
export let glCompileCommandListNV: *fp_glCompileCommandListNV =
	null: *fp_glCompileCommandListNV;
export let glCompileShader: *fp_glCompileShader =
	null: *fp_glCompileShader;
export let glCompileShaderARB: *fp_glCompileShaderARB =
	null: *fp_glCompileShaderARB;
export let glCompileShaderIncludeARB: *fp_glCompileShaderIncludeARB =
	null: *fp_glCompileShaderIncludeARB;
export let glCompressedMultiTexImage1DEXT: *fp_glCompressedMultiTexImage1DEXT =
	null: *fp_glCompressedMultiTexImage1DEXT;
export let glCompressedMultiTexImage2DEXT: *fp_glCompressedMultiTexImage2DEXT =
	null: *fp_glCompressedMultiTexImage2DEXT;
export let glCompressedMultiTexImage3DEXT: *fp_glCompressedMultiTexImage3DEXT =
	null: *fp_glCompressedMultiTexImage3DEXT;
export let glCompressedMultiTexSubImage1DEXT: *fp_glCompressedMultiTexSubImage1DEXT =
	null: *fp_glCompressedMultiTexSubImage1DEXT;
export let glCompressedMultiTexSubImage2DEXT: *fp_glCompressedMultiTexSubImage2DEXT =
	null: *fp_glCompressedMultiTexSubImage2DEXT;
export let glCompressedMultiTexSubImage3DEXT: *fp_glCompressedMultiTexSubImage3DEXT =
	null: *fp_glCompressedMultiTexSubImage3DEXT;
export let glCompressedTexImage1D: *fp_glCompressedTexImage1D =
	null: *fp_glCompressedTexImage1D;
export let glCompressedTexImage1DARB: *fp_glCompressedTexImage1DARB =
	null: *fp_glCompressedTexImage1DARB;
export let glCompressedTexImage2D: *fp_glCompressedTexImage2D =
	null: *fp_glCompressedTexImage2D;
export let glCompressedTexImage2DARB: *fp_glCompressedTexImage2DARB =
	null: *fp_glCompressedTexImage2DARB;
export let glCompressedTexImage3D: *fp_glCompressedTexImage3D =
	null: *fp_glCompressedTexImage3D;
export let glCompressedTexImage3DARB: *fp_glCompressedTexImage3DARB =
	null: *fp_glCompressedTexImage3DARB;
export let glCompressedTexSubImage1D: *fp_glCompressedTexSubImage1D =
	null: *fp_glCompressedTexSubImage1D;
export let glCompressedTexSubImage1DARB: *fp_glCompressedTexSubImage1DARB =
	null: *fp_glCompressedTexSubImage1DARB;
export let glCompressedTexSubImage2D: *fp_glCompressedTexSubImage2D =
	null: *fp_glCompressedTexSubImage2D;
export let glCompressedTexSubImage2DARB: *fp_glCompressedTexSubImage2DARB =
	null: *fp_glCompressedTexSubImage2DARB;
export let glCompressedTexSubImage3D: *fp_glCompressedTexSubImage3D =
	null: *fp_glCompressedTexSubImage3D;
export let glCompressedTexSubImage3DARB: *fp_glCompressedTexSubImage3DARB =
	null: *fp_glCompressedTexSubImage3DARB;
export let glCompressedTextureImage1DEXT: *fp_glCompressedTextureImage1DEXT =
	null: *fp_glCompressedTextureImage1DEXT;
export let glCompressedTextureImage2DEXT: *fp_glCompressedTextureImage2DEXT =
	null: *fp_glCompressedTextureImage2DEXT;
export let glCompressedTextureImage3DEXT: *fp_glCompressedTextureImage3DEXT =
	null: *fp_glCompressedTextureImage3DEXT;
export let glCompressedTextureSubImage1D: *fp_glCompressedTextureSubImage1D =
	null: *fp_glCompressedTextureSubImage1D;
export let glCompressedTextureSubImage1DEXT: *fp_glCompressedTextureSubImage1DEXT =
	null: *fp_glCompressedTextureSubImage1DEXT;
export let glCompressedTextureSubImage2D: *fp_glCompressedTextureSubImage2D =
	null: *fp_glCompressedTextureSubImage2D;
export let glCompressedTextureSubImage2DEXT: *fp_glCompressedTextureSubImage2DEXT =
	null: *fp_glCompressedTextureSubImage2DEXT;
export let glCompressedTextureSubImage3D: *fp_glCompressedTextureSubImage3D =
	null: *fp_glCompressedTextureSubImage3D;
export let glCompressedTextureSubImage3DEXT: *fp_glCompressedTextureSubImage3DEXT =
	null: *fp_glCompressedTextureSubImage3DEXT;
export let glConservativeRasterParameterfNV: *fp_glConservativeRasterParameterfNV =
	null: *fp_glConservativeRasterParameterfNV;
export let glConservativeRasterParameteriNV: *fp_glConservativeRasterParameteriNV =
	null: *fp_glConservativeRasterParameteriNV;
export let glConvolutionFilter1DEXT: *fp_glConvolutionFilter1DEXT =
	null: *fp_glConvolutionFilter1DEXT;
export let glConvolutionFilter2DEXT: *fp_glConvolutionFilter2DEXT =
	null: *fp_glConvolutionFilter2DEXT;
export let glConvolutionParameterfEXT: *fp_glConvolutionParameterfEXT =
	null: *fp_glConvolutionParameterfEXT;
export let glConvolutionParameterfvEXT: *fp_glConvolutionParameterfvEXT =
	null: *fp_glConvolutionParameterfvEXT;
export let glConvolutionParameteriEXT: *fp_glConvolutionParameteriEXT =
	null: *fp_glConvolutionParameteriEXT;
export let glConvolutionParameterivEXT: *fp_glConvolutionParameterivEXT =
	null: *fp_glConvolutionParameterivEXT;
export let glConvolutionParameterxOES: *fp_glConvolutionParameterxOES =
	null: *fp_glConvolutionParameterxOES;
export let glConvolutionParameterxvOES: *fp_glConvolutionParameterxvOES =
	null: *fp_glConvolutionParameterxvOES;
export let glCopyBufferSubData: *fp_glCopyBufferSubData =
	null: *fp_glCopyBufferSubData;
export let glCopyColorSubTableEXT: *fp_glCopyColorSubTableEXT =
	null: *fp_glCopyColorSubTableEXT;
export let glCopyColorTableSGI: *fp_glCopyColorTableSGI =
	null: *fp_glCopyColorTableSGI;
export let glCopyConvolutionFilter1DEXT: *fp_glCopyConvolutionFilter1DEXT =
	null: *fp_glCopyConvolutionFilter1DEXT;
export let glCopyConvolutionFilter2DEXT: *fp_glCopyConvolutionFilter2DEXT =
	null: *fp_glCopyConvolutionFilter2DEXT;
export let glCopyImageSubData: *fp_glCopyImageSubData =
	null: *fp_glCopyImageSubData;
export let glCopyImageSubDataNV: *fp_glCopyImageSubDataNV =
	null: *fp_glCopyImageSubDataNV;
export let glCopyMultiTexImage1DEXT: *fp_glCopyMultiTexImage1DEXT =
	null: *fp_glCopyMultiTexImage1DEXT;
export let glCopyMultiTexImage2DEXT: *fp_glCopyMultiTexImage2DEXT =
	null: *fp_glCopyMultiTexImage2DEXT;
export let glCopyMultiTexSubImage1DEXT: *fp_glCopyMultiTexSubImage1DEXT =
	null: *fp_glCopyMultiTexSubImage1DEXT;
export let glCopyMultiTexSubImage2DEXT: *fp_glCopyMultiTexSubImage2DEXT =
	null: *fp_glCopyMultiTexSubImage2DEXT;
export let glCopyMultiTexSubImage3DEXT: *fp_glCopyMultiTexSubImage3DEXT =
	null: *fp_glCopyMultiTexSubImage3DEXT;
export let glCopyNamedBufferSubData: *fp_glCopyNamedBufferSubData =
	null: *fp_glCopyNamedBufferSubData;
export let glCopyPathNV: *fp_glCopyPathNV =
	null: *fp_glCopyPathNV;
export let glCopyTexImage1D: *fp_glCopyTexImage1D =
	null: *fp_glCopyTexImage1D;
export let glCopyTexImage1DEXT: *fp_glCopyTexImage1DEXT =
	null: *fp_glCopyTexImage1DEXT;
export let glCopyTexImage2D: *fp_glCopyTexImage2D =
	null: *fp_glCopyTexImage2D;
export let glCopyTexImage2DEXT: *fp_glCopyTexImage2DEXT =
	null: *fp_glCopyTexImage2DEXT;
export let glCopyTexSubImage1D: *fp_glCopyTexSubImage1D =
	null: *fp_glCopyTexSubImage1D;
export let glCopyTexSubImage1DEXT: *fp_glCopyTexSubImage1DEXT =
	null: *fp_glCopyTexSubImage1DEXT;
export let glCopyTexSubImage2D: *fp_glCopyTexSubImage2D =
	null: *fp_glCopyTexSubImage2D;
export let glCopyTexSubImage2DEXT: *fp_glCopyTexSubImage2DEXT =
	null: *fp_glCopyTexSubImage2DEXT;
export let glCopyTexSubImage3D: *fp_glCopyTexSubImage3D =
	null: *fp_glCopyTexSubImage3D;
export let glCopyTexSubImage3DEXT: *fp_glCopyTexSubImage3DEXT =
	null: *fp_glCopyTexSubImage3DEXT;
export let glCopyTextureImage1DEXT: *fp_glCopyTextureImage1DEXT =
	null: *fp_glCopyTextureImage1DEXT;
export let glCopyTextureImage2DEXT: *fp_glCopyTextureImage2DEXT =
	null: *fp_glCopyTextureImage2DEXT;
export let glCopyTextureSubImage1D: *fp_glCopyTextureSubImage1D =
	null: *fp_glCopyTextureSubImage1D;
export let glCopyTextureSubImage1DEXT: *fp_glCopyTextureSubImage1DEXT =
	null: *fp_glCopyTextureSubImage1DEXT;
export let glCopyTextureSubImage2D: *fp_glCopyTextureSubImage2D =
	null: *fp_glCopyTextureSubImage2D;
export let glCopyTextureSubImage2DEXT: *fp_glCopyTextureSubImage2DEXT =
	null: *fp_glCopyTextureSubImage2DEXT;
export let glCopyTextureSubImage3D: *fp_glCopyTextureSubImage3D =
	null: *fp_glCopyTextureSubImage3D;
export let glCopyTextureSubImage3DEXT: *fp_glCopyTextureSubImage3DEXT =
	null: *fp_glCopyTextureSubImage3DEXT;
export let glCoverFillPathInstancedNV: *fp_glCoverFillPathInstancedNV =
	null: *fp_glCoverFillPathInstancedNV;
export let glCoverFillPathNV: *fp_glCoverFillPathNV =
	null: *fp_glCoverFillPathNV;
export let glCoverStrokePathInstancedNV: *fp_glCoverStrokePathInstancedNV =
	null: *fp_glCoverStrokePathInstancedNV;
export let glCoverStrokePathNV: *fp_glCoverStrokePathNV =
	null: *fp_glCoverStrokePathNV;
export let glCoverageModulationNV: *fp_glCoverageModulationNV =
	null: *fp_glCoverageModulationNV;
export let glCoverageModulationTableNV: *fp_glCoverageModulationTableNV =
	null: *fp_glCoverageModulationTableNV;
export let glCreateBuffers: *fp_glCreateBuffers =
	null: *fp_glCreateBuffers;
export let glCreateCommandListsNV: *fp_glCreateCommandListsNV =
	null: *fp_glCreateCommandListsNV;
export let glCreateFramebuffers: *fp_glCreateFramebuffers =
	null: *fp_glCreateFramebuffers;
export let glCreateMemoryObjectsEXT: *fp_glCreateMemoryObjectsEXT =
	null: *fp_glCreateMemoryObjectsEXT;
export let glCreatePerfQueryINTEL: *fp_glCreatePerfQueryINTEL =
	null: *fp_glCreatePerfQueryINTEL;
export let glCreateProgram: *fp_glCreateProgram =
	null: *fp_glCreateProgram;
export let glCreateProgramObjectARB: *fp_glCreateProgramObjectARB =
	null: *fp_glCreateProgramObjectARB;
export let glCreateProgramPipelines: *fp_glCreateProgramPipelines =
	null: *fp_glCreateProgramPipelines;
export let glCreateProgressFenceNVX: *fp_glCreateProgressFenceNVX =
	null: *fp_glCreateProgressFenceNVX;
export let glCreateQueries: *fp_glCreateQueries =
	null: *fp_glCreateQueries;
export let glCreateRenderbuffers: *fp_glCreateRenderbuffers =
	null: *fp_glCreateRenderbuffers;
export let glCreateSamplers: *fp_glCreateSamplers =
	null: *fp_glCreateSamplers;
export let glCreateSemaphoresNV: *fp_glCreateSemaphoresNV =
	null: *fp_glCreateSemaphoresNV;
export let glCreateShader: *fp_glCreateShader =
	null: *fp_glCreateShader;
export let glCreateShaderObjectARB: *fp_glCreateShaderObjectARB =
	null: *fp_glCreateShaderObjectARB;
export let glCreateShaderProgramEXT: *fp_glCreateShaderProgramEXT =
	null: *fp_glCreateShaderProgramEXT;
export let glCreateShaderProgramv: *fp_glCreateShaderProgramv =
	null: *fp_glCreateShaderProgramv;
export let glCreateStatesNV: *fp_glCreateStatesNV =
	null: *fp_glCreateStatesNV;
export let glCreateSyncFromCLeventARB: *fp_glCreateSyncFromCLeventARB =
	null: *fp_glCreateSyncFromCLeventARB;
export let glCreateTextures: *fp_glCreateTextures =
	null: *fp_glCreateTextures;
export let glCreateTransformFeedbacks: *fp_glCreateTransformFeedbacks =
	null: *fp_glCreateTransformFeedbacks;
export let glCreateVertexArrays: *fp_glCreateVertexArrays =
	null: *fp_glCreateVertexArrays;
export let glCullFace: *fp_glCullFace =
	null: *fp_glCullFace;
export let glCullParameterdvEXT: *fp_glCullParameterdvEXT =
	null: *fp_glCullParameterdvEXT;
export let glCullParameterfvEXT: *fp_glCullParameterfvEXT =
	null: *fp_glCullParameterfvEXT;
export let glCurrentPaletteMatrixARB: *fp_glCurrentPaletteMatrixARB =
	null: *fp_glCurrentPaletteMatrixARB;
export let glDebugMessageCallback: *fp_glDebugMessageCallback =
	null: *fp_glDebugMessageCallback;
export let glDebugMessageCallbackAMD: *fp_glDebugMessageCallbackAMD =
	null: *fp_glDebugMessageCallbackAMD;
export let glDebugMessageCallbackARB: *fp_glDebugMessageCallbackARB =
	null: *fp_glDebugMessageCallbackARB;
export let glDebugMessageControl: *fp_glDebugMessageControl =
	null: *fp_glDebugMessageControl;
export let glDebugMessageControlARB: *fp_glDebugMessageControlARB =
	null: *fp_glDebugMessageControlARB;
export let glDebugMessageEnableAMD: *fp_glDebugMessageEnableAMD =
	null: *fp_glDebugMessageEnableAMD;
export let glDebugMessageInsert: *fp_glDebugMessageInsert =
	null: *fp_glDebugMessageInsert;
export let glDebugMessageInsertAMD: *fp_glDebugMessageInsertAMD =
	null: *fp_glDebugMessageInsertAMD;
export let glDebugMessageInsertARB: *fp_glDebugMessageInsertARB =
	null: *fp_glDebugMessageInsertARB;
export let glDeformSGIX: *fp_glDeformSGIX =
	null: *fp_glDeformSGIX;
export let glDeformationMap3dSGIX: *fp_glDeformationMap3dSGIX =
	null: *fp_glDeformationMap3dSGIX;
export let glDeformationMap3fSGIX: *fp_glDeformationMap3fSGIX =
	null: *fp_glDeformationMap3fSGIX;
export let glDeleteAsyncMarkersSGIX: *fp_glDeleteAsyncMarkersSGIX =
	null: *fp_glDeleteAsyncMarkersSGIX;
export let glDeleteBuffers: *fp_glDeleteBuffers =
	null: *fp_glDeleteBuffers;
export let glDeleteBuffersARB: *fp_glDeleteBuffersARB =
	null: *fp_glDeleteBuffersARB;
export let glDeleteCommandListsNV: *fp_glDeleteCommandListsNV =
	null: *fp_glDeleteCommandListsNV;
export let glDeleteFencesAPPLE: *fp_glDeleteFencesAPPLE =
	null: *fp_glDeleteFencesAPPLE;
export let glDeleteFencesNV: *fp_glDeleteFencesNV =
	null: *fp_glDeleteFencesNV;
export let glDeleteFragmentShaderATI: *fp_glDeleteFragmentShaderATI =
	null: *fp_glDeleteFragmentShaderATI;
export let glDeleteFramebuffers: *fp_glDeleteFramebuffers =
	null: *fp_glDeleteFramebuffers;
export let glDeleteFramebuffersEXT: *fp_glDeleteFramebuffersEXT =
	null: *fp_glDeleteFramebuffersEXT;
export let glDeleteMemoryObjectsEXT: *fp_glDeleteMemoryObjectsEXT =
	null: *fp_glDeleteMemoryObjectsEXT;
export let glDeleteNamedStringARB: *fp_glDeleteNamedStringARB =
	null: *fp_glDeleteNamedStringARB;
export let glDeleteNamesAMD: *fp_glDeleteNamesAMD =
	null: *fp_glDeleteNamesAMD;
export let glDeleteObjectARB: *fp_glDeleteObjectARB =
	null: *fp_glDeleteObjectARB;
export let glDeleteOcclusionQueriesNV: *fp_glDeleteOcclusionQueriesNV =
	null: *fp_glDeleteOcclusionQueriesNV;
export let glDeletePathsNV: *fp_glDeletePathsNV =
	null: *fp_glDeletePathsNV;
export let glDeletePerfMonitorsAMD: *fp_glDeletePerfMonitorsAMD =
	null: *fp_glDeletePerfMonitorsAMD;
export let glDeletePerfQueryINTEL: *fp_glDeletePerfQueryINTEL =
	null: *fp_glDeletePerfQueryINTEL;
export let glDeleteProgram: *fp_glDeleteProgram =
	null: *fp_glDeleteProgram;
export let glDeleteProgramPipelines: *fp_glDeleteProgramPipelines =
	null: *fp_glDeleteProgramPipelines;
export let glDeleteProgramsARB: *fp_glDeleteProgramsARB =
	null: *fp_glDeleteProgramsARB;
export let glDeleteProgramsNV: *fp_glDeleteProgramsNV =
	null: *fp_glDeleteProgramsNV;
export let glDeleteQueries: *fp_glDeleteQueries =
	null: *fp_glDeleteQueries;
export let glDeleteQueriesARB: *fp_glDeleteQueriesARB =
	null: *fp_glDeleteQueriesARB;
export let glDeleteQueryResourceTagNV: *fp_glDeleteQueryResourceTagNV =
	null: *fp_glDeleteQueryResourceTagNV;
export let glDeleteRenderbuffers: *fp_glDeleteRenderbuffers =
	null: *fp_glDeleteRenderbuffers;
export let glDeleteRenderbuffersEXT: *fp_glDeleteRenderbuffersEXT =
	null: *fp_glDeleteRenderbuffersEXT;
export let glDeleteSamplers: *fp_glDeleteSamplers =
	null: *fp_glDeleteSamplers;
export let glDeleteSemaphoresEXT: *fp_glDeleteSemaphoresEXT =
	null: *fp_glDeleteSemaphoresEXT;
export let glDeleteShader: *fp_glDeleteShader =
	null: *fp_glDeleteShader;
export let glDeleteStatesNV: *fp_glDeleteStatesNV =
	null: *fp_glDeleteStatesNV;
export let glDeleteSync: *fp_glDeleteSync =
	null: *fp_glDeleteSync;
export let glDeleteTextures: *fp_glDeleteTextures =
	null: *fp_glDeleteTextures;
export let glDeleteTexturesEXT: *fp_glDeleteTexturesEXT =
	null: *fp_glDeleteTexturesEXT;
export let glDeleteTransformFeedbacks: *fp_glDeleteTransformFeedbacks =
	null: *fp_glDeleteTransformFeedbacks;
export let glDeleteTransformFeedbacksNV: *fp_glDeleteTransformFeedbacksNV =
	null: *fp_glDeleteTransformFeedbacksNV;
export let glDeleteVertexArrays: *fp_glDeleteVertexArrays =
	null: *fp_glDeleteVertexArrays;
export let glDeleteVertexArraysAPPLE: *fp_glDeleteVertexArraysAPPLE =
	null: *fp_glDeleteVertexArraysAPPLE;
export let glDeleteVertexShaderEXT: *fp_glDeleteVertexShaderEXT =
	null: *fp_glDeleteVertexShaderEXT;
export let glDepthBoundsEXT: *fp_glDepthBoundsEXT =
	null: *fp_glDepthBoundsEXT;
export let glDepthBoundsdNV: *fp_glDepthBoundsdNV =
	null: *fp_glDepthBoundsdNV;
export let glDepthFunc: *fp_glDepthFunc =
	null: *fp_glDepthFunc;
export let glDepthMask: *fp_glDepthMask =
	null: *fp_glDepthMask;
export let glDepthRange: *fp_glDepthRange =
	null: *fp_glDepthRange;
export let glDepthRangeArraydvNV: *fp_glDepthRangeArraydvNV =
	null: *fp_glDepthRangeArraydvNV;
export let glDepthRangeArrayv: *fp_glDepthRangeArrayv =
	null: *fp_glDepthRangeArrayv;
export let glDepthRangeIndexed: *fp_glDepthRangeIndexed =
	null: *fp_glDepthRangeIndexed;
export let glDepthRangeIndexeddNV: *fp_glDepthRangeIndexeddNV =
	null: *fp_glDepthRangeIndexeddNV;
export let glDepthRangedNV: *fp_glDepthRangedNV =
	null: *fp_glDepthRangedNV;
export let glDepthRangef: *fp_glDepthRangef =
	null: *fp_glDepthRangef;
export let glDepthRangefOES: *fp_glDepthRangefOES =
	null: *fp_glDepthRangefOES;
export let glDepthRangexOES: *fp_glDepthRangexOES =
	null: *fp_glDepthRangexOES;
export let glDetachObjectARB: *fp_glDetachObjectARB =
	null: *fp_glDetachObjectARB;
export let glDetachShader: *fp_glDetachShader =
	null: *fp_glDetachShader;
export let glDetailTexFuncSGIS: *fp_glDetailTexFuncSGIS =
	null: *fp_glDetailTexFuncSGIS;
export let glDisable: *fp_glDisable =
	null: *fp_glDisable;
export let glDisableClientStateIndexedEXT: *fp_glDisableClientStateIndexedEXT =
	null: *fp_glDisableClientStateIndexedEXT;
export let glDisableClientStateiEXT: *fp_glDisableClientStateiEXT =
	null: *fp_glDisableClientStateiEXT;
export let glDisableIndexedEXT: *fp_glDisableIndexedEXT =
	null: *fp_glDisableIndexedEXT;
export let glDisableVariantClientStateEXT: *fp_glDisableVariantClientStateEXT =
	null: *fp_glDisableVariantClientStateEXT;
export let glDisableVertexArrayAttrib: *fp_glDisableVertexArrayAttrib =
	null: *fp_glDisableVertexArrayAttrib;
export let glDisableVertexArrayAttribEXT: *fp_glDisableVertexArrayAttribEXT =
	null: *fp_glDisableVertexArrayAttribEXT;
export let glDisableVertexArrayEXT: *fp_glDisableVertexArrayEXT =
	null: *fp_glDisableVertexArrayEXT;
export let glDisableVertexAttribAPPLE: *fp_glDisableVertexAttribAPPLE =
	null: *fp_glDisableVertexAttribAPPLE;
export let glDisableVertexAttribArray: *fp_glDisableVertexAttribArray =
	null: *fp_glDisableVertexAttribArray;
export let glDisableVertexAttribArrayARB: *fp_glDisableVertexAttribArrayARB =
	null: *fp_glDisableVertexAttribArrayARB;
export let glDisablei: *fp_glDisablei =
	null: *fp_glDisablei;
export let glDispatchCompute: *fp_glDispatchCompute =
	null: *fp_glDispatchCompute;
export let glDispatchComputeGroupSizeARB: *fp_glDispatchComputeGroupSizeARB =
	null: *fp_glDispatchComputeGroupSizeARB;
export let glDispatchComputeIndirect: *fp_glDispatchComputeIndirect =
	null: *fp_glDispatchComputeIndirect;
export let glDrawArrays: *fp_glDrawArrays =
	null: *fp_glDrawArrays;
export let glDrawArraysEXT: *fp_glDrawArraysEXT =
	null: *fp_glDrawArraysEXT;
export let glDrawArraysIndirect: *fp_glDrawArraysIndirect =
	null: *fp_glDrawArraysIndirect;
export let glDrawArraysInstanced: *fp_glDrawArraysInstanced =
	null: *fp_glDrawArraysInstanced;
export let glDrawArraysInstancedARB: *fp_glDrawArraysInstancedARB =
	null: *fp_glDrawArraysInstancedARB;
export let glDrawArraysInstancedBaseInstance: *fp_glDrawArraysInstancedBaseInstance =
	null: *fp_glDrawArraysInstancedBaseInstance;
export let glDrawArraysInstancedEXT: *fp_glDrawArraysInstancedEXT =
	null: *fp_glDrawArraysInstancedEXT;
export let glDrawBuffer: *fp_glDrawBuffer =
	null: *fp_glDrawBuffer;
export let glDrawBuffers: *fp_glDrawBuffers =
	null: *fp_glDrawBuffers;
export let glDrawBuffersARB: *fp_glDrawBuffersARB =
	null: *fp_glDrawBuffersARB;
export let glDrawBuffersATI: *fp_glDrawBuffersATI =
	null: *fp_glDrawBuffersATI;
export let glDrawCommandsAddressNV: *fp_glDrawCommandsAddressNV =
	null: *fp_glDrawCommandsAddressNV;
export let glDrawCommandsNV: *fp_glDrawCommandsNV =
	null: *fp_glDrawCommandsNV;
export let glDrawCommandsStatesAddressNV: *fp_glDrawCommandsStatesAddressNV =
	null: *fp_glDrawCommandsStatesAddressNV;
export let glDrawCommandsStatesNV: *fp_glDrawCommandsStatesNV =
	null: *fp_glDrawCommandsStatesNV;
export let glDrawElementArrayAPPLE: *fp_glDrawElementArrayAPPLE =
	null: *fp_glDrawElementArrayAPPLE;
export let glDrawElementArrayATI: *fp_glDrawElementArrayATI =
	null: *fp_glDrawElementArrayATI;
export let glDrawElements: *fp_glDrawElements =
	null: *fp_glDrawElements;
export let glDrawElementsBaseVertex: *fp_glDrawElementsBaseVertex =
	null: *fp_glDrawElementsBaseVertex;
export let glDrawElementsIndirect: *fp_glDrawElementsIndirect =
	null: *fp_glDrawElementsIndirect;
export let glDrawElementsInstanced: *fp_glDrawElementsInstanced =
	null: *fp_glDrawElementsInstanced;
export let glDrawElementsInstancedARB: *fp_glDrawElementsInstancedARB =
	null: *fp_glDrawElementsInstancedARB;
export let glDrawElementsInstancedBaseInstance: *fp_glDrawElementsInstancedBaseInstance =
	null: *fp_glDrawElementsInstancedBaseInstance;
export let glDrawElementsInstancedBaseVertex: *fp_glDrawElementsInstancedBaseVertex =
	null: *fp_glDrawElementsInstancedBaseVertex;
export let glDrawElementsInstancedBaseVertexBaseInstance: *fp_glDrawElementsInstancedBaseVertexBaseInstance =
	null: *fp_glDrawElementsInstancedBaseVertexBaseInstance;
export let glDrawElementsInstancedEXT: *fp_glDrawElementsInstancedEXT =
	null: *fp_glDrawElementsInstancedEXT;
export let glDrawMeshArraysSUN: *fp_glDrawMeshArraysSUN =
	null: *fp_glDrawMeshArraysSUN;
export let glDrawMeshTasksIndirectNV: *fp_glDrawMeshTasksIndirectNV =
	null: *fp_glDrawMeshTasksIndirectNV;
export let glDrawMeshTasksNV: *fp_glDrawMeshTasksNV =
	null: *fp_glDrawMeshTasksNV;
export let glDrawRangeElementArrayAPPLE: *fp_glDrawRangeElementArrayAPPLE =
	null: *fp_glDrawRangeElementArrayAPPLE;
export let glDrawRangeElementArrayATI: *fp_glDrawRangeElementArrayATI =
	null: *fp_glDrawRangeElementArrayATI;
export let glDrawRangeElements: *fp_glDrawRangeElements =
	null: *fp_glDrawRangeElements;
export let glDrawRangeElementsBaseVertex: *fp_glDrawRangeElementsBaseVertex =
	null: *fp_glDrawRangeElementsBaseVertex;
export let glDrawRangeElementsEXT: *fp_glDrawRangeElementsEXT =
	null: *fp_glDrawRangeElementsEXT;
export let glDrawTextureNV: *fp_glDrawTextureNV =
	null: *fp_glDrawTextureNV;
export let glDrawTransformFeedback: *fp_glDrawTransformFeedback =
	null: *fp_glDrawTransformFeedback;
export let glDrawTransformFeedbackInstanced: *fp_glDrawTransformFeedbackInstanced =
	null: *fp_glDrawTransformFeedbackInstanced;
export let glDrawTransformFeedbackNV: *fp_glDrawTransformFeedbackNV =
	null: *fp_glDrawTransformFeedbackNV;
export let glDrawTransformFeedbackStream: *fp_glDrawTransformFeedbackStream =
	null: *fp_glDrawTransformFeedbackStream;
export let glDrawTransformFeedbackStreamInstanced: *fp_glDrawTransformFeedbackStreamInstanced =
	null: *fp_glDrawTransformFeedbackStreamInstanced;
export let glDrawVkImageNV: *fp_glDrawVkImageNV =
	null: *fp_glDrawVkImageNV;
export let glEGLImageTargetTexStorageEXT: *fp_glEGLImageTargetTexStorageEXT =
	null: *fp_glEGLImageTargetTexStorageEXT;
export let glEGLImageTargetTextureStorageEXT: *fp_glEGLImageTargetTextureStorageEXT =
	null: *fp_glEGLImageTargetTextureStorageEXT;
export let glEdgeFlagFormatNV: *fp_glEdgeFlagFormatNV =
	null: *fp_glEdgeFlagFormatNV;
export let glEdgeFlagPointerEXT: *fp_glEdgeFlagPointerEXT =
	null: *fp_glEdgeFlagPointerEXT;
export let glEdgeFlagPointerListIBM: *fp_glEdgeFlagPointerListIBM =
	null: *fp_glEdgeFlagPointerListIBM;
export let glElementPointerAPPLE: *fp_glElementPointerAPPLE =
	null: *fp_glElementPointerAPPLE;
export let glElementPointerATI: *fp_glElementPointerATI =
	null: *fp_glElementPointerATI;
export let glEnable: *fp_glEnable =
	null: *fp_glEnable;
export let glEnableClientStateIndexedEXT: *fp_glEnableClientStateIndexedEXT =
	null: *fp_glEnableClientStateIndexedEXT;
export let glEnableClientStateiEXT: *fp_glEnableClientStateiEXT =
	null: *fp_glEnableClientStateiEXT;
export let glEnableIndexedEXT: *fp_glEnableIndexedEXT =
	null: *fp_glEnableIndexedEXT;
export let glEnableVariantClientStateEXT: *fp_glEnableVariantClientStateEXT =
	null: *fp_glEnableVariantClientStateEXT;
export let glEnableVertexArrayAttrib: *fp_glEnableVertexArrayAttrib =
	null: *fp_glEnableVertexArrayAttrib;
export let glEnableVertexArrayAttribEXT: *fp_glEnableVertexArrayAttribEXT =
	null: *fp_glEnableVertexArrayAttribEXT;
export let glEnableVertexArrayEXT: *fp_glEnableVertexArrayEXT =
	null: *fp_glEnableVertexArrayEXT;
export let glEnableVertexAttribAPPLE: *fp_glEnableVertexAttribAPPLE =
	null: *fp_glEnableVertexAttribAPPLE;
export let glEnableVertexAttribArray: *fp_glEnableVertexAttribArray =
	null: *fp_glEnableVertexAttribArray;
export let glEnableVertexAttribArrayARB: *fp_glEnableVertexAttribArrayARB =
	null: *fp_glEnableVertexAttribArrayARB;
export let glEnablei: *fp_glEnablei =
	null: *fp_glEnablei;
export let glEndConditionalRender: *fp_glEndConditionalRender =
	null: *fp_glEndConditionalRender;
export let glEndConditionalRenderNV: *fp_glEndConditionalRenderNV =
	null: *fp_glEndConditionalRenderNV;
export let glEndConditionalRenderNVX: *fp_glEndConditionalRenderNVX =
	null: *fp_glEndConditionalRenderNVX;
export let glEndFragmentShaderATI: *fp_glEndFragmentShaderATI =
	null: *fp_glEndFragmentShaderATI;
export let glEndOcclusionQueryNV: *fp_glEndOcclusionQueryNV =
	null: *fp_glEndOcclusionQueryNV;
export let glEndPerfMonitorAMD: *fp_glEndPerfMonitorAMD =
	null: *fp_glEndPerfMonitorAMD;
export let glEndPerfQueryINTEL: *fp_glEndPerfQueryINTEL =
	null: *fp_glEndPerfQueryINTEL;
export let glEndQuery: *fp_glEndQuery =
	null: *fp_glEndQuery;
export let glEndQueryARB: *fp_glEndQueryARB =
	null: *fp_glEndQueryARB;
export let glEndQueryIndexed: *fp_glEndQueryIndexed =
	null: *fp_glEndQueryIndexed;
export let glEndTransformFeedback: *fp_glEndTransformFeedback =
	null: *fp_glEndTransformFeedback;
export let glEndTransformFeedbackEXT: *fp_glEndTransformFeedbackEXT =
	null: *fp_glEndTransformFeedbackEXT;
export let glEndTransformFeedbackNV: *fp_glEndTransformFeedbackNV =
	null: *fp_glEndTransformFeedbackNV;
export let glEndVertexShaderEXT: *fp_glEndVertexShaderEXT =
	null: *fp_glEndVertexShaderEXT;
export let glEndVideoCaptureNV: *fp_glEndVideoCaptureNV =
	null: *fp_glEndVideoCaptureNV;
export let glEvalCoord1xOES: *fp_glEvalCoord1xOES =
	null: *fp_glEvalCoord1xOES;
export let glEvalCoord1xvOES: *fp_glEvalCoord1xvOES =
	null: *fp_glEvalCoord1xvOES;
export let glEvalCoord2xOES: *fp_glEvalCoord2xOES =
	null: *fp_glEvalCoord2xOES;
export let glEvalCoord2xvOES: *fp_glEvalCoord2xvOES =
	null: *fp_glEvalCoord2xvOES;
export let glEvalMapsNV: *fp_glEvalMapsNV =
	null: *fp_glEvalMapsNV;
export let glEvaluateDepthValuesARB: *fp_glEvaluateDepthValuesARB =
	null: *fp_glEvaluateDepthValuesARB;
export let glExecuteProgramNV: *fp_glExecuteProgramNV =
	null: *fp_glExecuteProgramNV;
export let glExtractComponentEXT: *fp_glExtractComponentEXT =
	null: *fp_glExtractComponentEXT;
export let glFeedbackBufferxOES: *fp_glFeedbackBufferxOES =
	null: *fp_glFeedbackBufferxOES;
export let glFenceSync: *fp_glFenceSync =
	null: *fp_glFenceSync;
export let glFinalCombinerInputNV: *fp_glFinalCombinerInputNV =
	null: *fp_glFinalCombinerInputNV;
export let glFinish: *fp_glFinish =
	null: *fp_glFinish;
export let glFinishAsyncSGIX: *fp_glFinishAsyncSGIX =
	null: *fp_glFinishAsyncSGIX;
export let glFinishFenceAPPLE: *fp_glFinishFenceAPPLE =
	null: *fp_glFinishFenceAPPLE;
export let glFinishFenceNV: *fp_glFinishFenceNV =
	null: *fp_glFinishFenceNV;
export let glFinishObjectAPPLE: *fp_glFinishObjectAPPLE =
	null: *fp_glFinishObjectAPPLE;
export let glFinishTextureSUNX: *fp_glFinishTextureSUNX =
	null: *fp_glFinishTextureSUNX;
export let glFlush: *fp_glFlush =
	null: *fp_glFlush;
export let glFlushMappedBufferRange: *fp_glFlushMappedBufferRange =
	null: *fp_glFlushMappedBufferRange;
export let glFlushMappedBufferRangeAPPLE: *fp_glFlushMappedBufferRangeAPPLE =
	null: *fp_glFlushMappedBufferRangeAPPLE;
export let glFlushMappedNamedBufferRange: *fp_glFlushMappedNamedBufferRange =
	null: *fp_glFlushMappedNamedBufferRange;
export let glFlushMappedNamedBufferRangeEXT: *fp_glFlushMappedNamedBufferRangeEXT =
	null: *fp_glFlushMappedNamedBufferRangeEXT;
export let glFlushPixelDataRangeNV: *fp_glFlushPixelDataRangeNV =
	null: *fp_glFlushPixelDataRangeNV;
export let glFlushRasterSGIX: *fp_glFlushRasterSGIX =
	null: *fp_glFlushRasterSGIX;
export let glFlushStaticDataIBM: *fp_glFlushStaticDataIBM =
	null: *fp_glFlushStaticDataIBM;
export let glFlushVertexArrayRangeAPPLE: *fp_glFlushVertexArrayRangeAPPLE =
	null: *fp_glFlushVertexArrayRangeAPPLE;
export let glFlushVertexArrayRangeNV: *fp_glFlushVertexArrayRangeNV =
	null: *fp_glFlushVertexArrayRangeNV;
export let glFogCoordFormatNV: *fp_glFogCoordFormatNV =
	null: *fp_glFogCoordFormatNV;
export let glFogCoordPointerEXT: *fp_glFogCoordPointerEXT =
	null: *fp_glFogCoordPointerEXT;
export let glFogCoordPointerListIBM: *fp_glFogCoordPointerListIBM =
	null: *fp_glFogCoordPointerListIBM;
export let glFogCoorddEXT: *fp_glFogCoorddEXT =
	null: *fp_glFogCoorddEXT;
export let glFogCoorddvEXT: *fp_glFogCoorddvEXT =
	null: *fp_glFogCoorddvEXT;
export let glFogCoordfEXT: *fp_glFogCoordfEXT =
	null: *fp_glFogCoordfEXT;
export let glFogCoordfvEXT: *fp_glFogCoordfvEXT =
	null: *fp_glFogCoordfvEXT;
export let glFogCoordhNV: *fp_glFogCoordhNV =
	null: *fp_glFogCoordhNV;
export let glFogCoordhvNV: *fp_glFogCoordhvNV =
	null: *fp_glFogCoordhvNV;
export let glFogFuncSGIS: *fp_glFogFuncSGIS =
	null: *fp_glFogFuncSGIS;
export let glFogxOES: *fp_glFogxOES =
	null: *fp_glFogxOES;
export let glFogxvOES: *fp_glFogxvOES =
	null: *fp_glFogxvOES;
export let glFragmentColorMaterialSGIX: *fp_glFragmentColorMaterialSGIX =
	null: *fp_glFragmentColorMaterialSGIX;
export let glFragmentCoverageColorNV: *fp_glFragmentCoverageColorNV =
	null: *fp_glFragmentCoverageColorNV;
export let glFragmentLightModelfSGIX: *fp_glFragmentLightModelfSGIX =
	null: *fp_glFragmentLightModelfSGIX;
export let glFragmentLightModelfvSGIX: *fp_glFragmentLightModelfvSGIX =
	null: *fp_glFragmentLightModelfvSGIX;
export let glFragmentLightModeliSGIX: *fp_glFragmentLightModeliSGIX =
	null: *fp_glFragmentLightModeliSGIX;
export let glFragmentLightModelivSGIX: *fp_glFragmentLightModelivSGIX =
	null: *fp_glFragmentLightModelivSGIX;
export let glFragmentLightfSGIX: *fp_glFragmentLightfSGIX =
	null: *fp_glFragmentLightfSGIX;
export let glFragmentLightfvSGIX: *fp_glFragmentLightfvSGIX =
	null: *fp_glFragmentLightfvSGIX;
export let glFragmentLightiSGIX: *fp_glFragmentLightiSGIX =
	null: *fp_glFragmentLightiSGIX;
export let glFragmentLightivSGIX: *fp_glFragmentLightivSGIX =
	null: *fp_glFragmentLightivSGIX;
export let glFragmentMaterialfSGIX: *fp_glFragmentMaterialfSGIX =
	null: *fp_glFragmentMaterialfSGIX;
export let glFragmentMaterialfvSGIX: *fp_glFragmentMaterialfvSGIX =
	null: *fp_glFragmentMaterialfvSGIX;
export let glFragmentMaterialiSGIX: *fp_glFragmentMaterialiSGIX =
	null: *fp_glFragmentMaterialiSGIX;
export let glFragmentMaterialivSGIX: *fp_glFragmentMaterialivSGIX =
	null: *fp_glFragmentMaterialivSGIX;
export let glFrameTerminatorGREMEDY: *fp_glFrameTerminatorGREMEDY =
	null: *fp_glFrameTerminatorGREMEDY;
export let glFrameZoomSGIX: *fp_glFrameZoomSGIX =
	null: *fp_glFrameZoomSGIX;
export let glFramebufferDrawBufferEXT: *fp_glFramebufferDrawBufferEXT =
	null: *fp_glFramebufferDrawBufferEXT;
export let glFramebufferDrawBuffersEXT: *fp_glFramebufferDrawBuffersEXT =
	null: *fp_glFramebufferDrawBuffersEXT;
export let glFramebufferFetchBarrierEXT: *fp_glFramebufferFetchBarrierEXT =
	null: *fp_glFramebufferFetchBarrierEXT;
export let glFramebufferParameteri: *fp_glFramebufferParameteri =
	null: *fp_glFramebufferParameteri;
export let glFramebufferParameteriMESA: *fp_glFramebufferParameteriMESA =
	null: *fp_glFramebufferParameteriMESA;
export let glFramebufferReadBufferEXT: *fp_glFramebufferReadBufferEXT =
	null: *fp_glFramebufferReadBufferEXT;
export let glFramebufferRenderbuffer: *fp_glFramebufferRenderbuffer =
	null: *fp_glFramebufferRenderbuffer;
export let glFramebufferRenderbufferEXT: *fp_glFramebufferRenderbufferEXT =
	null: *fp_glFramebufferRenderbufferEXT;
export let glFramebufferSampleLocationsfvARB: *fp_glFramebufferSampleLocationsfvARB =
	null: *fp_glFramebufferSampleLocationsfvARB;
export let glFramebufferSampleLocationsfvNV: *fp_glFramebufferSampleLocationsfvNV =
	null: *fp_glFramebufferSampleLocationsfvNV;
export let glFramebufferSamplePositionsfvAMD: *fp_glFramebufferSamplePositionsfvAMD =
	null: *fp_glFramebufferSamplePositionsfvAMD;
export let glFramebufferTexture: *fp_glFramebufferTexture =
	null: *fp_glFramebufferTexture;
export let glFramebufferTexture1D: *fp_glFramebufferTexture1D =
	null: *fp_glFramebufferTexture1D;
export let glFramebufferTexture1DEXT: *fp_glFramebufferTexture1DEXT =
	null: *fp_glFramebufferTexture1DEXT;
export let glFramebufferTexture2D: *fp_glFramebufferTexture2D =
	null: *fp_glFramebufferTexture2D;
export let glFramebufferTexture2DEXT: *fp_glFramebufferTexture2DEXT =
	null: *fp_glFramebufferTexture2DEXT;
export let glFramebufferTexture3D: *fp_glFramebufferTexture3D =
	null: *fp_glFramebufferTexture3D;
export let glFramebufferTexture3DEXT: *fp_glFramebufferTexture3DEXT =
	null: *fp_glFramebufferTexture3DEXT;
export let glFramebufferTextureARB: *fp_glFramebufferTextureARB =
	null: *fp_glFramebufferTextureARB;
export let glFramebufferTextureEXT: *fp_glFramebufferTextureEXT =
	null: *fp_glFramebufferTextureEXT;
export let glFramebufferTextureFaceARB: *fp_glFramebufferTextureFaceARB =
	null: *fp_glFramebufferTextureFaceARB;
export let glFramebufferTextureFaceEXT: *fp_glFramebufferTextureFaceEXT =
	null: *fp_glFramebufferTextureFaceEXT;
export let glFramebufferTextureLayer: *fp_glFramebufferTextureLayer =
	null: *fp_glFramebufferTextureLayer;
export let glFramebufferTextureLayerARB: *fp_glFramebufferTextureLayerARB =
	null: *fp_glFramebufferTextureLayerARB;
export let glFramebufferTextureLayerEXT: *fp_glFramebufferTextureLayerEXT =
	null: *fp_glFramebufferTextureLayerEXT;
export let glFramebufferTextureMultiviewOVR: *fp_glFramebufferTextureMultiviewOVR =
	null: *fp_glFramebufferTextureMultiviewOVR;
export let glFreeObjectBufferATI: *fp_glFreeObjectBufferATI =
	null: *fp_glFreeObjectBufferATI;
export let glFrontFace: *fp_glFrontFace =
	null: *fp_glFrontFace;
export let glFrustumfOES: *fp_glFrustumfOES =
	null: *fp_glFrustumfOES;
export let glFrustumxOES: *fp_glFrustumxOES =
	null: *fp_glFrustumxOES;
export let glGenAsyncMarkersSGIX: *fp_glGenAsyncMarkersSGIX =
	null: *fp_glGenAsyncMarkersSGIX;
export let glGenBuffers: *fp_glGenBuffers =
	null: *fp_glGenBuffers;
export let glGenBuffersARB: *fp_glGenBuffersARB =
	null: *fp_glGenBuffersARB;
export let glGenFencesAPPLE: *fp_glGenFencesAPPLE =
	null: *fp_glGenFencesAPPLE;
export let glGenFencesNV: *fp_glGenFencesNV =
	null: *fp_glGenFencesNV;
export let glGenFragmentShadersATI: *fp_glGenFragmentShadersATI =
	null: *fp_glGenFragmentShadersATI;
export let glGenFramebuffers: *fp_glGenFramebuffers =
	null: *fp_glGenFramebuffers;
export let glGenFramebuffersEXT: *fp_glGenFramebuffersEXT =
	null: *fp_glGenFramebuffersEXT;
export let glGenNamesAMD: *fp_glGenNamesAMD =
	null: *fp_glGenNamesAMD;
export let glGenOcclusionQueriesNV: *fp_glGenOcclusionQueriesNV =
	null: *fp_glGenOcclusionQueriesNV;
export let glGenPathsNV: *fp_glGenPathsNV =
	null: *fp_glGenPathsNV;
export let glGenPerfMonitorsAMD: *fp_glGenPerfMonitorsAMD =
	null: *fp_glGenPerfMonitorsAMD;
export let glGenProgramPipelines: *fp_glGenProgramPipelines =
	null: *fp_glGenProgramPipelines;
export let glGenProgramsARB: *fp_glGenProgramsARB =
	null: *fp_glGenProgramsARB;
export let glGenProgramsNV: *fp_glGenProgramsNV =
	null: *fp_glGenProgramsNV;
export let glGenQueries: *fp_glGenQueries =
	null: *fp_glGenQueries;
export let glGenQueriesARB: *fp_glGenQueriesARB =
	null: *fp_glGenQueriesARB;
export let glGenQueryResourceTagNV: *fp_glGenQueryResourceTagNV =
	null: *fp_glGenQueryResourceTagNV;
export let glGenRenderbuffers: *fp_glGenRenderbuffers =
	null: *fp_glGenRenderbuffers;
export let glGenRenderbuffersEXT: *fp_glGenRenderbuffersEXT =
	null: *fp_glGenRenderbuffersEXT;
export let glGenSamplers: *fp_glGenSamplers =
	null: *fp_glGenSamplers;
export let glGenSemaphoresEXT: *fp_glGenSemaphoresEXT =
	null: *fp_glGenSemaphoresEXT;
export let glGenSymbolsEXT: *fp_glGenSymbolsEXT =
	null: *fp_glGenSymbolsEXT;
export let glGenTextures: *fp_glGenTextures =
	null: *fp_glGenTextures;
export let glGenTexturesEXT: *fp_glGenTexturesEXT =
	null: *fp_glGenTexturesEXT;
export let glGenTransformFeedbacks: *fp_glGenTransformFeedbacks =
	null: *fp_glGenTransformFeedbacks;
export let glGenTransformFeedbacksNV: *fp_glGenTransformFeedbacksNV =
	null: *fp_glGenTransformFeedbacksNV;
export let glGenVertexArrays: *fp_glGenVertexArrays =
	null: *fp_glGenVertexArrays;
export let glGenVertexArraysAPPLE: *fp_glGenVertexArraysAPPLE =
	null: *fp_glGenVertexArraysAPPLE;
export let glGenVertexShadersEXT: *fp_glGenVertexShadersEXT =
	null: *fp_glGenVertexShadersEXT;
export let glGenerateMipmap: *fp_glGenerateMipmap =
	null: *fp_glGenerateMipmap;
export let glGenerateMipmapEXT: *fp_glGenerateMipmapEXT =
	null: *fp_glGenerateMipmapEXT;
export let glGenerateMultiTexMipmapEXT: *fp_glGenerateMultiTexMipmapEXT =
	null: *fp_glGenerateMultiTexMipmapEXT;
export let glGenerateTextureMipmap: *fp_glGenerateTextureMipmap =
	null: *fp_glGenerateTextureMipmap;
export let glGenerateTextureMipmapEXT: *fp_glGenerateTextureMipmapEXT =
	null: *fp_glGenerateTextureMipmapEXT;
export let glGetActiveAtomicCounterBufferiv: *fp_glGetActiveAtomicCounterBufferiv =
	null: *fp_glGetActiveAtomicCounterBufferiv;
export let glGetActiveAttrib: *fp_glGetActiveAttrib =
	null: *fp_glGetActiveAttrib;
export let glGetActiveAttribARB: *fp_glGetActiveAttribARB =
	null: *fp_glGetActiveAttribARB;
export let glGetActiveSubroutineName: *fp_glGetActiveSubroutineName =
	null: *fp_glGetActiveSubroutineName;
export let glGetActiveSubroutineUniformName: *fp_glGetActiveSubroutineUniformName =
	null: *fp_glGetActiveSubroutineUniformName;
export let glGetActiveSubroutineUniformiv: *fp_glGetActiveSubroutineUniformiv =
	null: *fp_glGetActiveSubroutineUniformiv;
export let glGetActiveUniform: *fp_glGetActiveUniform =
	null: *fp_glGetActiveUniform;
export let glGetActiveUniformARB: *fp_glGetActiveUniformARB =
	null: *fp_glGetActiveUniformARB;
export let glGetActiveUniformBlockName: *fp_glGetActiveUniformBlockName =
	null: *fp_glGetActiveUniformBlockName;
export let glGetActiveUniformBlockiv: *fp_glGetActiveUniformBlockiv =
	null: *fp_glGetActiveUniformBlockiv;
export let glGetActiveUniformName: *fp_glGetActiveUniformName =
	null: *fp_glGetActiveUniformName;
export let glGetActiveUniformsiv: *fp_glGetActiveUniformsiv =
	null: *fp_glGetActiveUniformsiv;
export let glGetActiveVaryingNV: *fp_glGetActiveVaryingNV =
	null: *fp_glGetActiveVaryingNV;
export let glGetArrayObjectfvATI: *fp_glGetArrayObjectfvATI =
	null: *fp_glGetArrayObjectfvATI;
export let glGetArrayObjectivATI: *fp_glGetArrayObjectivATI =
	null: *fp_glGetArrayObjectivATI;
export let glGetAttachedObjectsARB: *fp_glGetAttachedObjectsARB =
	null: *fp_glGetAttachedObjectsARB;
export let glGetAttachedShaders: *fp_glGetAttachedShaders =
	null: *fp_glGetAttachedShaders;
export let glGetAttribLocation: *fp_glGetAttribLocation =
	null: *fp_glGetAttribLocation;
export let glGetAttribLocationARB: *fp_glGetAttribLocationARB =
	null: *fp_glGetAttribLocationARB;
export let glGetBooleanIndexedvEXT: *fp_glGetBooleanIndexedvEXT =
	null: *fp_glGetBooleanIndexedvEXT;
export let glGetBooleani_v: *fp_glGetBooleani_v =
	null: *fp_glGetBooleani_v;
export let glGetBooleanv: *fp_glGetBooleanv =
	null: *fp_glGetBooleanv;
export let glGetBufferParameteri64v: *fp_glGetBufferParameteri64v =
	null: *fp_glGetBufferParameteri64v;
export let glGetBufferParameteriv: *fp_glGetBufferParameteriv =
	null: *fp_glGetBufferParameteriv;
export let glGetBufferParameterivARB: *fp_glGetBufferParameterivARB =
	null: *fp_glGetBufferParameterivARB;
export let glGetBufferParameterui64vNV: *fp_glGetBufferParameterui64vNV =
	null: *fp_glGetBufferParameterui64vNV;
export let glGetBufferPointerv: *fp_glGetBufferPointerv =
	null: *fp_glGetBufferPointerv;
export let glGetBufferPointervARB: *fp_glGetBufferPointervARB =
	null: *fp_glGetBufferPointervARB;
export let glGetBufferSubData: *fp_glGetBufferSubData =
	null: *fp_glGetBufferSubData;
export let glGetBufferSubDataARB: *fp_glGetBufferSubDataARB =
	null: *fp_glGetBufferSubDataARB;
export let glGetClipPlanefOES: *fp_glGetClipPlanefOES =
	null: *fp_glGetClipPlanefOES;
export let glGetClipPlanexOES: *fp_glGetClipPlanexOES =
	null: *fp_glGetClipPlanexOES;
export let glGetColorTableEXT: *fp_glGetColorTableEXT =
	null: *fp_glGetColorTableEXT;
export let glGetColorTableParameterfvEXT: *fp_glGetColorTableParameterfvEXT =
	null: *fp_glGetColorTableParameterfvEXT;
export let glGetColorTableParameterfvSGI: *fp_glGetColorTableParameterfvSGI =
	null: *fp_glGetColorTableParameterfvSGI;
export let glGetColorTableParameterivEXT: *fp_glGetColorTableParameterivEXT =
	null: *fp_glGetColorTableParameterivEXT;
export let glGetColorTableParameterivSGI: *fp_glGetColorTableParameterivSGI =
	null: *fp_glGetColorTableParameterivSGI;
export let glGetColorTableSGI: *fp_glGetColorTableSGI =
	null: *fp_glGetColorTableSGI;
export let glGetCombinerInputParameterfvNV: *fp_glGetCombinerInputParameterfvNV =
	null: *fp_glGetCombinerInputParameterfvNV;
export let glGetCombinerInputParameterivNV: *fp_glGetCombinerInputParameterivNV =
	null: *fp_glGetCombinerInputParameterivNV;
export let glGetCombinerOutputParameterfvNV: *fp_glGetCombinerOutputParameterfvNV =
	null: *fp_glGetCombinerOutputParameterfvNV;
export let glGetCombinerOutputParameterivNV: *fp_glGetCombinerOutputParameterivNV =
	null: *fp_glGetCombinerOutputParameterivNV;
export let glGetCombinerStageParameterfvNV: *fp_glGetCombinerStageParameterfvNV =
	null: *fp_glGetCombinerStageParameterfvNV;
export let glGetCommandHeaderNV: *fp_glGetCommandHeaderNV =
	null: *fp_glGetCommandHeaderNV;
export let glGetCompressedMultiTexImageEXT: *fp_glGetCompressedMultiTexImageEXT =
	null: *fp_glGetCompressedMultiTexImageEXT;
export let glGetCompressedTexImage: *fp_glGetCompressedTexImage =
	null: *fp_glGetCompressedTexImage;
export let glGetCompressedTexImageARB: *fp_glGetCompressedTexImageARB =
	null: *fp_glGetCompressedTexImageARB;
export let glGetCompressedTextureImage: *fp_glGetCompressedTextureImage =
	null: *fp_glGetCompressedTextureImage;
export let glGetCompressedTextureImageEXT: *fp_glGetCompressedTextureImageEXT =
	null: *fp_glGetCompressedTextureImageEXT;
export let glGetCompressedTextureSubImage: *fp_glGetCompressedTextureSubImage =
	null: *fp_glGetCompressedTextureSubImage;
export let glGetConvolutionFilterEXT: *fp_glGetConvolutionFilterEXT =
	null: *fp_glGetConvolutionFilterEXT;
export let glGetConvolutionParameterfvEXT: *fp_glGetConvolutionParameterfvEXT =
	null: *fp_glGetConvolutionParameterfvEXT;
export let glGetConvolutionParameterivEXT: *fp_glGetConvolutionParameterivEXT =
	null: *fp_glGetConvolutionParameterivEXT;
export let glGetConvolutionParameterxvOES: *fp_glGetConvolutionParameterxvOES =
	null: *fp_glGetConvolutionParameterxvOES;
export let glGetCoverageModulationTableNV: *fp_glGetCoverageModulationTableNV =
	null: *fp_glGetCoverageModulationTableNV;
export let glGetDebugMessageLog: *fp_glGetDebugMessageLog =
	null: *fp_glGetDebugMessageLog;
export let glGetDebugMessageLogAMD: *fp_glGetDebugMessageLogAMD =
	null: *fp_glGetDebugMessageLogAMD;
export let glGetDebugMessageLogARB: *fp_glGetDebugMessageLogARB =
	null: *fp_glGetDebugMessageLogARB;
export let glGetDetailTexFuncSGIS: *fp_glGetDetailTexFuncSGIS =
	null: *fp_glGetDetailTexFuncSGIS;
export let glGetDoubleIndexedvEXT: *fp_glGetDoubleIndexedvEXT =
	null: *fp_glGetDoubleIndexedvEXT;
export let glGetDoublei_v: *fp_glGetDoublei_v =
	null: *fp_glGetDoublei_v;
export let glGetDoublei_vEXT: *fp_glGetDoublei_vEXT =
	null: *fp_glGetDoublei_vEXT;
export let glGetDoublev: *fp_glGetDoublev =
	null: *fp_glGetDoublev;
export let glGetError: *fp_glGetError =
	null: *fp_glGetError;
export let glGetFenceivNV: *fp_glGetFenceivNV =
	null: *fp_glGetFenceivNV;
export let glGetFinalCombinerInputParameterfvNV: *fp_glGetFinalCombinerInputParameterfvNV =
	null: *fp_glGetFinalCombinerInputParameterfvNV;
export let glGetFinalCombinerInputParameterivNV: *fp_glGetFinalCombinerInputParameterivNV =
	null: *fp_glGetFinalCombinerInputParameterivNV;
export let glGetFirstPerfQueryIdINTEL: *fp_glGetFirstPerfQueryIdINTEL =
	null: *fp_glGetFirstPerfQueryIdINTEL;
export let glGetFixedvOES: *fp_glGetFixedvOES =
	null: *fp_glGetFixedvOES;
export let glGetFloatIndexedvEXT: *fp_glGetFloatIndexedvEXT =
	null: *fp_glGetFloatIndexedvEXT;
export let glGetFloati_v: *fp_glGetFloati_v =
	null: *fp_glGetFloati_v;
export let glGetFloati_vEXT: *fp_glGetFloati_vEXT =
	null: *fp_glGetFloati_vEXT;
export let glGetFloatv: *fp_glGetFloatv =
	null: *fp_glGetFloatv;
export let glGetFogFuncSGIS: *fp_glGetFogFuncSGIS =
	null: *fp_glGetFogFuncSGIS;
export let glGetFragDataIndex: *fp_glGetFragDataIndex =
	null: *fp_glGetFragDataIndex;
export let glGetFragDataLocation: *fp_glGetFragDataLocation =
	null: *fp_glGetFragDataLocation;
export let glGetFragDataLocationEXT: *fp_glGetFragDataLocationEXT =
	null: *fp_glGetFragDataLocationEXT;
export let glGetFragmentLightfvSGIX: *fp_glGetFragmentLightfvSGIX =
	null: *fp_glGetFragmentLightfvSGIX;
export let glGetFragmentLightivSGIX: *fp_glGetFragmentLightivSGIX =
	null: *fp_glGetFragmentLightivSGIX;
export let glGetFragmentMaterialfvSGIX: *fp_glGetFragmentMaterialfvSGIX =
	null: *fp_glGetFragmentMaterialfvSGIX;
export let glGetFragmentMaterialivSGIX: *fp_glGetFragmentMaterialivSGIX =
	null: *fp_glGetFragmentMaterialivSGIX;
export let glGetFramebufferAttachmentParameteriv: *fp_glGetFramebufferAttachmentParameteriv =
	null: *fp_glGetFramebufferAttachmentParameteriv;
export let glGetFramebufferAttachmentParameterivEXT: *fp_glGetFramebufferAttachmentParameterivEXT =
	null: *fp_glGetFramebufferAttachmentParameterivEXT;
export let glGetFramebufferParameterfvAMD: *fp_glGetFramebufferParameterfvAMD =
	null: *fp_glGetFramebufferParameterfvAMD;
export let glGetFramebufferParameteriv: *fp_glGetFramebufferParameteriv =
	null: *fp_glGetFramebufferParameteriv;
export let glGetFramebufferParameterivEXT: *fp_glGetFramebufferParameterivEXT =
	null: *fp_glGetFramebufferParameterivEXT;
export let glGetFramebufferParameterivMESA: *fp_glGetFramebufferParameterivMESA =
	null: *fp_glGetFramebufferParameterivMESA;
export let glGetGraphicsResetStatus: *fp_glGetGraphicsResetStatus =
	null: *fp_glGetGraphicsResetStatus;
export let glGetGraphicsResetStatusARB: *fp_glGetGraphicsResetStatusARB =
	null: *fp_glGetGraphicsResetStatusARB;
export let glGetHandleARB: *fp_glGetHandleARB =
	null: *fp_glGetHandleARB;
export let glGetHistogramEXT: *fp_glGetHistogramEXT =
	null: *fp_glGetHistogramEXT;
export let glGetHistogramParameterfvEXT: *fp_glGetHistogramParameterfvEXT =
	null: *fp_glGetHistogramParameterfvEXT;
export let glGetHistogramParameterivEXT: *fp_glGetHistogramParameterivEXT =
	null: *fp_glGetHistogramParameterivEXT;
export let glGetHistogramParameterxvOES: *fp_glGetHistogramParameterxvOES =
	null: *fp_glGetHistogramParameterxvOES;
export let glGetImageHandleARB: *fp_glGetImageHandleARB =
	null: *fp_glGetImageHandleARB;
export let glGetImageHandleNV: *fp_glGetImageHandleNV =
	null: *fp_glGetImageHandleNV;
export let glGetImageTransformParameterfvHP: *fp_glGetImageTransformParameterfvHP =
	null: *fp_glGetImageTransformParameterfvHP;
export let glGetImageTransformParameterivHP: *fp_glGetImageTransformParameterivHP =
	null: *fp_glGetImageTransformParameterivHP;
export let glGetInfoLogARB: *fp_glGetInfoLogARB =
	null: *fp_glGetInfoLogARB;
export let glGetInstrumentsSGIX: *fp_glGetInstrumentsSGIX =
	null: *fp_glGetInstrumentsSGIX;
export let glGetInteger64i_v: *fp_glGetInteger64i_v =
	null: *fp_glGetInteger64i_v;
export let glGetInteger64v: *fp_glGetInteger64v =
	null: *fp_glGetInteger64v;
export let glGetIntegerIndexedvEXT: *fp_glGetIntegerIndexedvEXT =
	null: *fp_glGetIntegerIndexedvEXT;
export let glGetIntegeri_v: *fp_glGetIntegeri_v =
	null: *fp_glGetIntegeri_v;
export let glGetIntegerui64i_vNV: *fp_glGetIntegerui64i_vNV =
	null: *fp_glGetIntegerui64i_vNV;
export let glGetIntegerui64vNV: *fp_glGetIntegerui64vNV =
	null: *fp_glGetIntegerui64vNV;
export let glGetIntegerv: *fp_glGetIntegerv =
	null: *fp_glGetIntegerv;
export let glGetInternalformatSampleivNV: *fp_glGetInternalformatSampleivNV =
	null: *fp_glGetInternalformatSampleivNV;
export let glGetInternalformati64v: *fp_glGetInternalformati64v =
	null: *fp_glGetInternalformati64v;
export let glGetInternalformativ: *fp_glGetInternalformativ =
	null: *fp_glGetInternalformativ;
export let glGetInvariantBooleanvEXT: *fp_glGetInvariantBooleanvEXT =
	null: *fp_glGetInvariantBooleanvEXT;
export let glGetInvariantFloatvEXT: *fp_glGetInvariantFloatvEXT =
	null: *fp_glGetInvariantFloatvEXT;
export let glGetInvariantIntegervEXT: *fp_glGetInvariantIntegervEXT =
	null: *fp_glGetInvariantIntegervEXT;
export let glGetLightxOES: *fp_glGetLightxOES =
	null: *fp_glGetLightxOES;
export let glGetListParameterfvSGIX: *fp_glGetListParameterfvSGIX =
	null: *fp_glGetListParameterfvSGIX;
export let glGetListParameterivSGIX: *fp_glGetListParameterivSGIX =
	null: *fp_glGetListParameterivSGIX;
export let glGetLocalConstantBooleanvEXT: *fp_glGetLocalConstantBooleanvEXT =
	null: *fp_glGetLocalConstantBooleanvEXT;
export let glGetLocalConstantFloatvEXT: *fp_glGetLocalConstantFloatvEXT =
	null: *fp_glGetLocalConstantFloatvEXT;
export let glGetLocalConstantIntegervEXT: *fp_glGetLocalConstantIntegervEXT =
	null: *fp_glGetLocalConstantIntegervEXT;
export let glGetMapAttribParameterfvNV: *fp_glGetMapAttribParameterfvNV =
	null: *fp_glGetMapAttribParameterfvNV;
export let glGetMapAttribParameterivNV: *fp_glGetMapAttribParameterivNV =
	null: *fp_glGetMapAttribParameterivNV;
export let glGetMapControlPointsNV: *fp_glGetMapControlPointsNV =
	null: *fp_glGetMapControlPointsNV;
export let glGetMapParameterfvNV: *fp_glGetMapParameterfvNV =
	null: *fp_glGetMapParameterfvNV;
export let glGetMapParameterivNV: *fp_glGetMapParameterivNV =
	null: *fp_glGetMapParameterivNV;
export let glGetMapxvOES: *fp_glGetMapxvOES =
	null: *fp_glGetMapxvOES;
export let glGetMaterialxOES: *fp_glGetMaterialxOES =
	null: *fp_glGetMaterialxOES;
export let glGetMemoryObjectDetachedResourcesuivNV: *fp_glGetMemoryObjectDetachedResourcesuivNV =
	null: *fp_glGetMemoryObjectDetachedResourcesuivNV;
export let glGetMemoryObjectParameterivEXT: *fp_glGetMemoryObjectParameterivEXT =
	null: *fp_glGetMemoryObjectParameterivEXT;
export let glGetMinmaxEXT: *fp_glGetMinmaxEXT =
	null: *fp_glGetMinmaxEXT;
export let glGetMinmaxParameterfvEXT: *fp_glGetMinmaxParameterfvEXT =
	null: *fp_glGetMinmaxParameterfvEXT;
export let glGetMinmaxParameterivEXT: *fp_glGetMinmaxParameterivEXT =
	null: *fp_glGetMinmaxParameterivEXT;
export let glGetMultiTexEnvfvEXT: *fp_glGetMultiTexEnvfvEXT =
	null: *fp_glGetMultiTexEnvfvEXT;
export let glGetMultiTexEnvivEXT: *fp_glGetMultiTexEnvivEXT =
	null: *fp_glGetMultiTexEnvivEXT;
export let glGetMultiTexGendvEXT: *fp_glGetMultiTexGendvEXT =
	null: *fp_glGetMultiTexGendvEXT;
export let glGetMultiTexGenfvEXT: *fp_glGetMultiTexGenfvEXT =
	null: *fp_glGetMultiTexGenfvEXT;
export let glGetMultiTexGenivEXT: *fp_glGetMultiTexGenivEXT =
	null: *fp_glGetMultiTexGenivEXT;
export let glGetMultiTexImageEXT: *fp_glGetMultiTexImageEXT =
	null: *fp_glGetMultiTexImageEXT;
export let glGetMultiTexLevelParameterfvEXT: *fp_glGetMultiTexLevelParameterfvEXT =
	null: *fp_glGetMultiTexLevelParameterfvEXT;
export let glGetMultiTexLevelParameterivEXT: *fp_glGetMultiTexLevelParameterivEXT =
	null: *fp_glGetMultiTexLevelParameterivEXT;
export let glGetMultiTexParameterIivEXT: *fp_glGetMultiTexParameterIivEXT =
	null: *fp_glGetMultiTexParameterIivEXT;
export let glGetMultiTexParameterIuivEXT: *fp_glGetMultiTexParameterIuivEXT =
	null: *fp_glGetMultiTexParameterIuivEXT;
export let glGetMultiTexParameterfvEXT: *fp_glGetMultiTexParameterfvEXT =
	null: *fp_glGetMultiTexParameterfvEXT;
export let glGetMultiTexParameterivEXT: *fp_glGetMultiTexParameterivEXT =
	null: *fp_glGetMultiTexParameterivEXT;
export let glGetMultisamplefv: *fp_glGetMultisamplefv =
	null: *fp_glGetMultisamplefv;
export let glGetMultisamplefvNV: *fp_glGetMultisamplefvNV =
	null: *fp_glGetMultisamplefvNV;
export let glGetNamedBufferParameteri64v: *fp_glGetNamedBufferParameteri64v =
	null: *fp_glGetNamedBufferParameteri64v;
export let glGetNamedBufferParameteriv: *fp_glGetNamedBufferParameteriv =
	null: *fp_glGetNamedBufferParameteriv;
export let glGetNamedBufferParameterivEXT: *fp_glGetNamedBufferParameterivEXT =
	null: *fp_glGetNamedBufferParameterivEXT;
export let glGetNamedBufferParameterui64vNV: *fp_glGetNamedBufferParameterui64vNV =
	null: *fp_glGetNamedBufferParameterui64vNV;
export let glGetNamedBufferPointerv: *fp_glGetNamedBufferPointerv =
	null: *fp_glGetNamedBufferPointerv;
export let glGetNamedBufferPointervEXT: *fp_glGetNamedBufferPointervEXT =
	null: *fp_glGetNamedBufferPointervEXT;
export let glGetNamedBufferSubData: *fp_glGetNamedBufferSubData =
	null: *fp_glGetNamedBufferSubData;
export let glGetNamedBufferSubDataEXT: *fp_glGetNamedBufferSubDataEXT =
	null: *fp_glGetNamedBufferSubDataEXT;
export let glGetNamedFramebufferAttachmentParameteriv: *fp_glGetNamedFramebufferAttachmentParameteriv =
	null: *fp_glGetNamedFramebufferAttachmentParameteriv;
export let glGetNamedFramebufferAttachmentParameterivEXT: *fp_glGetNamedFramebufferAttachmentParameterivEXT =
	null: *fp_glGetNamedFramebufferAttachmentParameterivEXT;
export let glGetNamedFramebufferParameterfvAMD: *fp_glGetNamedFramebufferParameterfvAMD =
	null: *fp_glGetNamedFramebufferParameterfvAMD;
export let glGetNamedFramebufferParameteriv: *fp_glGetNamedFramebufferParameteriv =
	null: *fp_glGetNamedFramebufferParameteriv;
export let glGetNamedFramebufferParameterivEXT: *fp_glGetNamedFramebufferParameterivEXT =
	null: *fp_glGetNamedFramebufferParameterivEXT;
export let glGetNamedProgramLocalParameterIivEXT: *fp_glGetNamedProgramLocalParameterIivEXT =
	null: *fp_glGetNamedProgramLocalParameterIivEXT;
export let glGetNamedProgramLocalParameterIuivEXT: *fp_glGetNamedProgramLocalParameterIuivEXT =
	null: *fp_glGetNamedProgramLocalParameterIuivEXT;
export let glGetNamedProgramLocalParameterdvEXT: *fp_glGetNamedProgramLocalParameterdvEXT =
	null: *fp_glGetNamedProgramLocalParameterdvEXT;
export let glGetNamedProgramLocalParameterfvEXT: *fp_glGetNamedProgramLocalParameterfvEXT =
	null: *fp_glGetNamedProgramLocalParameterfvEXT;
export let glGetNamedProgramStringEXT: *fp_glGetNamedProgramStringEXT =
	null: *fp_glGetNamedProgramStringEXT;
export let glGetNamedProgramivEXT: *fp_glGetNamedProgramivEXT =
	null: *fp_glGetNamedProgramivEXT;
export let glGetNamedRenderbufferParameteriv: *fp_glGetNamedRenderbufferParameteriv =
	null: *fp_glGetNamedRenderbufferParameteriv;
export let glGetNamedRenderbufferParameterivEXT: *fp_glGetNamedRenderbufferParameterivEXT =
	null: *fp_glGetNamedRenderbufferParameterivEXT;
export let glGetNamedStringARB: *fp_glGetNamedStringARB =
	null: *fp_glGetNamedStringARB;
export let glGetNamedStringivARB: *fp_glGetNamedStringivARB =
	null: *fp_glGetNamedStringivARB;
export let glGetNextPerfQueryIdINTEL: *fp_glGetNextPerfQueryIdINTEL =
	null: *fp_glGetNextPerfQueryIdINTEL;
export let glGetObjectBufferfvATI: *fp_glGetObjectBufferfvATI =
	null: *fp_glGetObjectBufferfvATI;
export let glGetObjectBufferivATI: *fp_glGetObjectBufferivATI =
	null: *fp_glGetObjectBufferivATI;
export let glGetObjectLabel: *fp_glGetObjectLabel =
	null: *fp_glGetObjectLabel;
export let glGetObjectLabelEXT: *fp_glGetObjectLabelEXT =
	null: *fp_glGetObjectLabelEXT;
export let glGetObjectParameterfvARB: *fp_glGetObjectParameterfvARB =
	null: *fp_glGetObjectParameterfvARB;
export let glGetObjectParameterivAPPLE: *fp_glGetObjectParameterivAPPLE =
	null: *fp_glGetObjectParameterivAPPLE;
export let glGetObjectParameterivARB: *fp_glGetObjectParameterivARB =
	null: *fp_glGetObjectParameterivARB;
export let glGetObjectPtrLabel: *fp_glGetObjectPtrLabel =
	null: *fp_glGetObjectPtrLabel;
export let glGetOcclusionQueryivNV: *fp_glGetOcclusionQueryivNV =
	null: *fp_glGetOcclusionQueryivNV;
export let glGetOcclusionQueryuivNV: *fp_glGetOcclusionQueryuivNV =
	null: *fp_glGetOcclusionQueryuivNV;
export let glGetPathCommandsNV: *fp_glGetPathCommandsNV =
	null: *fp_glGetPathCommandsNV;
export let glGetPathCoordsNV: *fp_glGetPathCoordsNV =
	null: *fp_glGetPathCoordsNV;
export let glGetPathDashArrayNV: *fp_glGetPathDashArrayNV =
	null: *fp_glGetPathDashArrayNV;
export let glGetPathLengthNV: *fp_glGetPathLengthNV =
	null: *fp_glGetPathLengthNV;
export let glGetPathMetricRangeNV: *fp_glGetPathMetricRangeNV =
	null: *fp_glGetPathMetricRangeNV;
export let glGetPathMetricsNV: *fp_glGetPathMetricsNV =
	null: *fp_glGetPathMetricsNV;
export let glGetPathParameterfvNV: *fp_glGetPathParameterfvNV =
	null: *fp_glGetPathParameterfvNV;
export let glGetPathParameterivNV: *fp_glGetPathParameterivNV =
	null: *fp_glGetPathParameterivNV;
export let glGetPathSpacingNV: *fp_glGetPathSpacingNV =
	null: *fp_glGetPathSpacingNV;
export let glGetPerfCounterInfoINTEL: *fp_glGetPerfCounterInfoINTEL =
	null: *fp_glGetPerfCounterInfoINTEL;
export let glGetPerfMonitorCounterDataAMD: *fp_glGetPerfMonitorCounterDataAMD =
	null: *fp_glGetPerfMonitorCounterDataAMD;
export let glGetPerfMonitorCounterInfoAMD: *fp_glGetPerfMonitorCounterInfoAMD =
	null: *fp_glGetPerfMonitorCounterInfoAMD;
export let glGetPerfMonitorCounterStringAMD: *fp_glGetPerfMonitorCounterStringAMD =
	null: *fp_glGetPerfMonitorCounterStringAMD;
export let glGetPerfMonitorCountersAMD: *fp_glGetPerfMonitorCountersAMD =
	null: *fp_glGetPerfMonitorCountersAMD;
export let glGetPerfMonitorGroupStringAMD: *fp_glGetPerfMonitorGroupStringAMD =
	null: *fp_glGetPerfMonitorGroupStringAMD;
export let glGetPerfMonitorGroupsAMD: *fp_glGetPerfMonitorGroupsAMD =
	null: *fp_glGetPerfMonitorGroupsAMD;
export let glGetPerfQueryDataINTEL: *fp_glGetPerfQueryDataINTEL =
	null: *fp_glGetPerfQueryDataINTEL;
export let glGetPerfQueryIdByNameINTEL: *fp_glGetPerfQueryIdByNameINTEL =
	null: *fp_glGetPerfQueryIdByNameINTEL;
export let glGetPerfQueryInfoINTEL: *fp_glGetPerfQueryInfoINTEL =
	null: *fp_glGetPerfQueryInfoINTEL;
export let glGetPixelMapxv: *fp_glGetPixelMapxv =
	null: *fp_glGetPixelMapxv;
export let glGetPixelTexGenParameterfvSGIS: *fp_glGetPixelTexGenParameterfvSGIS =
	null: *fp_glGetPixelTexGenParameterfvSGIS;
export let glGetPixelTexGenParameterivSGIS: *fp_glGetPixelTexGenParameterivSGIS =
	null: *fp_glGetPixelTexGenParameterivSGIS;
export let glGetPixelTransformParameterfvEXT: *fp_glGetPixelTransformParameterfvEXT =
	null: *fp_glGetPixelTransformParameterfvEXT;
export let glGetPixelTransformParameterivEXT: *fp_glGetPixelTransformParameterivEXT =
	null: *fp_glGetPixelTransformParameterivEXT;
export let glGetPointerIndexedvEXT: *fp_glGetPointerIndexedvEXT =
	null: *fp_glGetPointerIndexedvEXT;
export let glGetPointeri_vEXT: *fp_glGetPointeri_vEXT =
	null: *fp_glGetPointeri_vEXT;
export let glGetPointerv: *fp_glGetPointerv =
	null: *fp_glGetPointerv;
export let glGetPointervEXT: *fp_glGetPointervEXT =
	null: *fp_glGetPointervEXT;
export let glGetProgramBinary: *fp_glGetProgramBinary =
	null: *fp_glGetProgramBinary;
export let glGetProgramEnvParameterIivNV: *fp_glGetProgramEnvParameterIivNV =
	null: *fp_glGetProgramEnvParameterIivNV;
export let glGetProgramEnvParameterIuivNV: *fp_glGetProgramEnvParameterIuivNV =
	null: *fp_glGetProgramEnvParameterIuivNV;
export let glGetProgramEnvParameterdvARB: *fp_glGetProgramEnvParameterdvARB =
	null: *fp_glGetProgramEnvParameterdvARB;
export let glGetProgramEnvParameterfvARB: *fp_glGetProgramEnvParameterfvARB =
	null: *fp_glGetProgramEnvParameterfvARB;
export let glGetProgramInfoLog: *fp_glGetProgramInfoLog =
	null: *fp_glGetProgramInfoLog;
export let glGetProgramInterfaceiv: *fp_glGetProgramInterfaceiv =
	null: *fp_glGetProgramInterfaceiv;
export let glGetProgramLocalParameterIivNV: *fp_glGetProgramLocalParameterIivNV =
	null: *fp_glGetProgramLocalParameterIivNV;
export let glGetProgramLocalParameterIuivNV: *fp_glGetProgramLocalParameterIuivNV =
	null: *fp_glGetProgramLocalParameterIuivNV;
export let glGetProgramLocalParameterdvARB: *fp_glGetProgramLocalParameterdvARB =
	null: *fp_glGetProgramLocalParameterdvARB;
export let glGetProgramLocalParameterfvARB: *fp_glGetProgramLocalParameterfvARB =
	null: *fp_glGetProgramLocalParameterfvARB;
export let glGetProgramNamedParameterdvNV: *fp_glGetProgramNamedParameterdvNV =
	null: *fp_glGetProgramNamedParameterdvNV;
export let glGetProgramNamedParameterfvNV: *fp_glGetProgramNamedParameterfvNV =
	null: *fp_glGetProgramNamedParameterfvNV;
export let glGetProgramParameterdvNV: *fp_glGetProgramParameterdvNV =
	null: *fp_glGetProgramParameterdvNV;
export let glGetProgramParameterfvNV: *fp_glGetProgramParameterfvNV =
	null: *fp_glGetProgramParameterfvNV;
export let glGetProgramPipelineInfoLog: *fp_glGetProgramPipelineInfoLog =
	null: *fp_glGetProgramPipelineInfoLog;
export let glGetProgramPipelineiv: *fp_glGetProgramPipelineiv =
	null: *fp_glGetProgramPipelineiv;
export let glGetProgramResourceIndex: *fp_glGetProgramResourceIndex =
	null: *fp_glGetProgramResourceIndex;
export let glGetProgramResourceLocation: *fp_glGetProgramResourceLocation =
	null: *fp_glGetProgramResourceLocation;
export let glGetProgramResourceLocationIndex: *fp_glGetProgramResourceLocationIndex =
	null: *fp_glGetProgramResourceLocationIndex;
export let glGetProgramResourceName: *fp_glGetProgramResourceName =
	null: *fp_glGetProgramResourceName;
export let glGetProgramResourcefvNV: *fp_glGetProgramResourcefvNV =
	null: *fp_glGetProgramResourcefvNV;
export let glGetProgramResourceiv: *fp_glGetProgramResourceiv =
	null: *fp_glGetProgramResourceiv;
export let glGetProgramStageiv: *fp_glGetProgramStageiv =
	null: *fp_glGetProgramStageiv;
export let glGetProgramStringARB: *fp_glGetProgramStringARB =
	null: *fp_glGetProgramStringARB;
export let glGetProgramStringNV: *fp_glGetProgramStringNV =
	null: *fp_glGetProgramStringNV;
export let glGetProgramSubroutineParameteruivNV: *fp_glGetProgramSubroutineParameteruivNV =
	null: *fp_glGetProgramSubroutineParameteruivNV;
export let glGetProgramiv: *fp_glGetProgramiv =
	null: *fp_glGetProgramiv;
export let glGetProgramivARB: *fp_glGetProgramivARB =
	null: *fp_glGetProgramivARB;
export let glGetProgramivNV: *fp_glGetProgramivNV =
	null: *fp_glGetProgramivNV;
export let glGetQueryBufferObjecti64v: *fp_glGetQueryBufferObjecti64v =
	null: *fp_glGetQueryBufferObjecti64v;
export let glGetQueryBufferObjectiv: *fp_glGetQueryBufferObjectiv =
	null: *fp_glGetQueryBufferObjectiv;
export let glGetQueryBufferObjectui64v: *fp_glGetQueryBufferObjectui64v =
	null: *fp_glGetQueryBufferObjectui64v;
export let glGetQueryBufferObjectuiv: *fp_glGetQueryBufferObjectuiv =
	null: *fp_glGetQueryBufferObjectuiv;
export let glGetQueryIndexediv: *fp_glGetQueryIndexediv =
	null: *fp_glGetQueryIndexediv;
export let glGetQueryObjecti64v: *fp_glGetQueryObjecti64v =
	null: *fp_glGetQueryObjecti64v;
export let glGetQueryObjecti64vEXT: *fp_glGetQueryObjecti64vEXT =
	null: *fp_glGetQueryObjecti64vEXT;
export let glGetQueryObjectiv: *fp_glGetQueryObjectiv =
	null: *fp_glGetQueryObjectiv;
export let glGetQueryObjectivARB: *fp_glGetQueryObjectivARB =
	null: *fp_glGetQueryObjectivARB;
export let glGetQueryObjectui64v: *fp_glGetQueryObjectui64v =
	null: *fp_glGetQueryObjectui64v;
export let glGetQueryObjectui64vEXT: *fp_glGetQueryObjectui64vEXT =
	null: *fp_glGetQueryObjectui64vEXT;
export let glGetQueryObjectuiv: *fp_glGetQueryObjectuiv =
	null: *fp_glGetQueryObjectuiv;
export let glGetQueryObjectuivARB: *fp_glGetQueryObjectuivARB =
	null: *fp_glGetQueryObjectuivARB;
export let glGetQueryiv: *fp_glGetQueryiv =
	null: *fp_glGetQueryiv;
export let glGetQueryivARB: *fp_glGetQueryivARB =
	null: *fp_glGetQueryivARB;
export let glGetRenderbufferParameteriv: *fp_glGetRenderbufferParameteriv =
	null: *fp_glGetRenderbufferParameteriv;
export let glGetRenderbufferParameterivEXT: *fp_glGetRenderbufferParameterivEXT =
	null: *fp_glGetRenderbufferParameterivEXT;
export let glGetSamplerParameterIiv: *fp_glGetSamplerParameterIiv =
	null: *fp_glGetSamplerParameterIiv;
export let glGetSamplerParameterIuiv: *fp_glGetSamplerParameterIuiv =
	null: *fp_glGetSamplerParameterIuiv;
export let glGetSamplerParameterfv: *fp_glGetSamplerParameterfv =
	null: *fp_glGetSamplerParameterfv;
export let glGetSamplerParameteriv: *fp_glGetSamplerParameteriv =
	null: *fp_glGetSamplerParameteriv;
export let glGetSemaphoreParameterivNV: *fp_glGetSemaphoreParameterivNV =
	null: *fp_glGetSemaphoreParameterivNV;
export let glGetSemaphoreParameterui64vEXT: *fp_glGetSemaphoreParameterui64vEXT =
	null: *fp_glGetSemaphoreParameterui64vEXT;
export let glGetSeparableFilterEXT: *fp_glGetSeparableFilterEXT =
	null: *fp_glGetSeparableFilterEXT;
export let glGetShaderInfoLog: *fp_glGetShaderInfoLog =
	null: *fp_glGetShaderInfoLog;
export let glGetShaderPrecisionFormat: *fp_glGetShaderPrecisionFormat =
	null: *fp_glGetShaderPrecisionFormat;
export let glGetShaderSource: *fp_glGetShaderSource =
	null: *fp_glGetShaderSource;
export let glGetShaderSourceARB: *fp_glGetShaderSourceARB =
	null: *fp_glGetShaderSourceARB;
export let glGetShaderiv: *fp_glGetShaderiv =
	null: *fp_glGetShaderiv;
export let glGetShadingRateImagePaletteNV: *fp_glGetShadingRateImagePaletteNV =
	null: *fp_glGetShadingRateImagePaletteNV;
export let glGetShadingRateSampleLocationivNV: *fp_glGetShadingRateSampleLocationivNV =
	null: *fp_glGetShadingRateSampleLocationivNV;
export let glGetSharpenTexFuncSGIS: *fp_glGetSharpenTexFuncSGIS =
	null: *fp_glGetSharpenTexFuncSGIS;
export let glGetStageIndexNV: *fp_glGetStageIndexNV =
	null: *fp_glGetStageIndexNV;
export let glGetString: *fp_glGetString =
	null: *fp_glGetString;
export let glGetStringi: *fp_glGetStringi =
	null: *fp_glGetStringi;
export let glGetSubroutineIndex: *fp_glGetSubroutineIndex =
	null: *fp_glGetSubroutineIndex;
export let glGetSubroutineUniformLocation: *fp_glGetSubroutineUniformLocation =
	null: *fp_glGetSubroutineUniformLocation;
export let glGetSynciv: *fp_glGetSynciv =
	null: *fp_glGetSynciv;
export let glGetTexBumpParameterfvATI: *fp_glGetTexBumpParameterfvATI =
	null: *fp_glGetTexBumpParameterfvATI;
export let glGetTexBumpParameterivATI: *fp_glGetTexBumpParameterivATI =
	null: *fp_glGetTexBumpParameterivATI;
export let glGetTexEnvxvOES: *fp_glGetTexEnvxvOES =
	null: *fp_glGetTexEnvxvOES;
export let glGetTexFilterFuncSGIS: *fp_glGetTexFilterFuncSGIS =
	null: *fp_glGetTexFilterFuncSGIS;
export let glGetTexGenxvOES: *fp_glGetTexGenxvOES =
	null: *fp_glGetTexGenxvOES;
export let glGetTexImage: *fp_glGetTexImage =
	null: *fp_glGetTexImage;
export let glGetTexLevelParameterfv: *fp_glGetTexLevelParameterfv =
	null: *fp_glGetTexLevelParameterfv;
export let glGetTexLevelParameteriv: *fp_glGetTexLevelParameteriv =
	null: *fp_glGetTexLevelParameteriv;
export let glGetTexLevelParameterxvOES: *fp_glGetTexLevelParameterxvOES =
	null: *fp_glGetTexLevelParameterxvOES;
export let glGetTexParameterIiv: *fp_glGetTexParameterIiv =
	null: *fp_glGetTexParameterIiv;
export let glGetTexParameterIivEXT: *fp_glGetTexParameterIivEXT =
	null: *fp_glGetTexParameterIivEXT;
export let glGetTexParameterIuiv: *fp_glGetTexParameterIuiv =
	null: *fp_glGetTexParameterIuiv;
export let glGetTexParameterIuivEXT: *fp_glGetTexParameterIuivEXT =
	null: *fp_glGetTexParameterIuivEXT;
export let glGetTexParameterPointervAPPLE: *fp_glGetTexParameterPointervAPPLE =
	null: *fp_glGetTexParameterPointervAPPLE;
export let glGetTexParameterfv: *fp_glGetTexParameterfv =
	null: *fp_glGetTexParameterfv;
export let glGetTexParameteriv: *fp_glGetTexParameteriv =
	null: *fp_glGetTexParameteriv;
export let glGetTexParameterxvOES: *fp_glGetTexParameterxvOES =
	null: *fp_glGetTexParameterxvOES;
export let glGetTextureHandleARB: *fp_glGetTextureHandleARB =
	null: *fp_glGetTextureHandleARB;
export let glGetTextureHandleNV: *fp_glGetTextureHandleNV =
	null: *fp_glGetTextureHandleNV;
export let glGetTextureImage: *fp_glGetTextureImage =
	null: *fp_glGetTextureImage;
export let glGetTextureImageEXT: *fp_glGetTextureImageEXT =
	null: *fp_glGetTextureImageEXT;
export let glGetTextureLevelParameterfv: *fp_glGetTextureLevelParameterfv =
	null: *fp_glGetTextureLevelParameterfv;
export let glGetTextureLevelParameterfvEXT: *fp_glGetTextureLevelParameterfvEXT =
	null: *fp_glGetTextureLevelParameterfvEXT;
export let glGetTextureLevelParameteriv: *fp_glGetTextureLevelParameteriv =
	null: *fp_glGetTextureLevelParameteriv;
export let glGetTextureLevelParameterivEXT: *fp_glGetTextureLevelParameterivEXT =
	null: *fp_glGetTextureLevelParameterivEXT;
export let glGetTextureParameterIiv: *fp_glGetTextureParameterIiv =
	null: *fp_glGetTextureParameterIiv;
export let glGetTextureParameterIivEXT: *fp_glGetTextureParameterIivEXT =
	null: *fp_glGetTextureParameterIivEXT;
export let glGetTextureParameterIuiv: *fp_glGetTextureParameterIuiv =
	null: *fp_glGetTextureParameterIuiv;
export let glGetTextureParameterIuivEXT: *fp_glGetTextureParameterIuivEXT =
	null: *fp_glGetTextureParameterIuivEXT;
export let glGetTextureParameterfv: *fp_glGetTextureParameterfv =
	null: *fp_glGetTextureParameterfv;
export let glGetTextureParameterfvEXT: *fp_glGetTextureParameterfvEXT =
	null: *fp_glGetTextureParameterfvEXT;
export let glGetTextureParameteriv: *fp_glGetTextureParameteriv =
	null: *fp_glGetTextureParameteriv;
export let glGetTextureParameterivEXT: *fp_glGetTextureParameterivEXT =
	null: *fp_glGetTextureParameterivEXT;
export let glGetTextureSamplerHandleARB: *fp_glGetTextureSamplerHandleARB =
	null: *fp_glGetTextureSamplerHandleARB;
export let glGetTextureSamplerHandleNV: *fp_glGetTextureSamplerHandleNV =
	null: *fp_glGetTextureSamplerHandleNV;
export let glGetTextureSubImage: *fp_glGetTextureSubImage =
	null: *fp_glGetTextureSubImage;
export let glGetTrackMatrixivNV: *fp_glGetTrackMatrixivNV =
	null: *fp_glGetTrackMatrixivNV;
export let glGetTransformFeedbackVarying: *fp_glGetTransformFeedbackVarying =
	null: *fp_glGetTransformFeedbackVarying;
export let glGetTransformFeedbackVaryingEXT: *fp_glGetTransformFeedbackVaryingEXT =
	null: *fp_glGetTransformFeedbackVaryingEXT;
export let glGetTransformFeedbackVaryingNV: *fp_glGetTransformFeedbackVaryingNV =
	null: *fp_glGetTransformFeedbackVaryingNV;
export let glGetTransformFeedbacki64_v: *fp_glGetTransformFeedbacki64_v =
	null: *fp_glGetTransformFeedbacki64_v;
export let glGetTransformFeedbacki_v: *fp_glGetTransformFeedbacki_v =
	null: *fp_glGetTransformFeedbacki_v;
export let glGetTransformFeedbackiv: *fp_glGetTransformFeedbackiv =
	null: *fp_glGetTransformFeedbackiv;
export let glGetUniformBlockIndex: *fp_glGetUniformBlockIndex =
	null: *fp_glGetUniformBlockIndex;
export let glGetUniformBufferSizeEXT: *fp_glGetUniformBufferSizeEXT =
	null: *fp_glGetUniformBufferSizeEXT;
export let glGetUniformIndices: *fp_glGetUniformIndices =
	null: *fp_glGetUniformIndices;
export let glGetUniformLocation: *fp_glGetUniformLocation =
	null: *fp_glGetUniformLocation;
export let glGetUniformLocationARB: *fp_glGetUniformLocationARB =
	null: *fp_glGetUniformLocationARB;
export let glGetUniformOffsetEXT: *fp_glGetUniformOffsetEXT =
	null: *fp_glGetUniformOffsetEXT;
export let glGetUniformSubroutineuiv: *fp_glGetUniformSubroutineuiv =
	null: *fp_glGetUniformSubroutineuiv;
export let glGetUniformdv: *fp_glGetUniformdv =
	null: *fp_glGetUniformdv;
export let glGetUniformfv: *fp_glGetUniformfv =
	null: *fp_glGetUniformfv;
export let glGetUniformfvARB: *fp_glGetUniformfvARB =
	null: *fp_glGetUniformfvARB;
export let glGetUniformi64vARB: *fp_glGetUniformi64vARB =
	null: *fp_glGetUniformi64vARB;
export let glGetUniformi64vNV: *fp_glGetUniformi64vNV =
	null: *fp_glGetUniformi64vNV;
export let glGetUniformiv: *fp_glGetUniformiv =
	null: *fp_glGetUniformiv;
export let glGetUniformivARB: *fp_glGetUniformivARB =
	null: *fp_glGetUniformivARB;
export let glGetUniformui64vARB: *fp_glGetUniformui64vARB =
	null: *fp_glGetUniformui64vARB;
export let glGetUniformui64vNV: *fp_glGetUniformui64vNV =
	null: *fp_glGetUniformui64vNV;
export let glGetUniformuiv: *fp_glGetUniformuiv =
	null: *fp_glGetUniformuiv;
export let glGetUniformuivEXT: *fp_glGetUniformuivEXT =
	null: *fp_glGetUniformuivEXT;
export let glGetUnsignedBytei_vEXT: *fp_glGetUnsignedBytei_vEXT =
	null: *fp_glGetUnsignedBytei_vEXT;
export let glGetUnsignedBytevEXT: *fp_glGetUnsignedBytevEXT =
	null: *fp_glGetUnsignedBytevEXT;
export let glGetVariantArrayObjectfvATI: *fp_glGetVariantArrayObjectfvATI =
	null: *fp_glGetVariantArrayObjectfvATI;
export let glGetVariantArrayObjectivATI: *fp_glGetVariantArrayObjectivATI =
	null: *fp_glGetVariantArrayObjectivATI;
export let glGetVariantBooleanvEXT: *fp_glGetVariantBooleanvEXT =
	null: *fp_glGetVariantBooleanvEXT;
export let glGetVariantFloatvEXT: *fp_glGetVariantFloatvEXT =
	null: *fp_glGetVariantFloatvEXT;
export let glGetVariantIntegervEXT: *fp_glGetVariantIntegervEXT =
	null: *fp_glGetVariantIntegervEXT;
export let glGetVariantPointervEXT: *fp_glGetVariantPointervEXT =
	null: *fp_glGetVariantPointervEXT;
export let glGetVaryingLocationNV: *fp_glGetVaryingLocationNV =
	null: *fp_glGetVaryingLocationNV;
export let glGetVertexArrayIndexed64iv: *fp_glGetVertexArrayIndexed64iv =
	null: *fp_glGetVertexArrayIndexed64iv;
export let glGetVertexArrayIndexediv: *fp_glGetVertexArrayIndexediv =
	null: *fp_glGetVertexArrayIndexediv;
export let glGetVertexArrayIntegeri_vEXT: *fp_glGetVertexArrayIntegeri_vEXT =
	null: *fp_glGetVertexArrayIntegeri_vEXT;
export let glGetVertexArrayIntegervEXT: *fp_glGetVertexArrayIntegervEXT =
	null: *fp_glGetVertexArrayIntegervEXT;
export let glGetVertexArrayPointeri_vEXT: *fp_glGetVertexArrayPointeri_vEXT =
	null: *fp_glGetVertexArrayPointeri_vEXT;
export let glGetVertexArrayPointervEXT: *fp_glGetVertexArrayPointervEXT =
	null: *fp_glGetVertexArrayPointervEXT;
export let glGetVertexArrayiv: *fp_glGetVertexArrayiv =
	null: *fp_glGetVertexArrayiv;
export let glGetVertexAttribArrayObjectfvATI: *fp_glGetVertexAttribArrayObjectfvATI =
	null: *fp_glGetVertexAttribArrayObjectfvATI;
export let glGetVertexAttribArrayObjectivATI: *fp_glGetVertexAttribArrayObjectivATI =
	null: *fp_glGetVertexAttribArrayObjectivATI;
export let glGetVertexAttribIiv: *fp_glGetVertexAttribIiv =
	null: *fp_glGetVertexAttribIiv;
export let glGetVertexAttribIivEXT: *fp_glGetVertexAttribIivEXT =
	null: *fp_glGetVertexAttribIivEXT;
export let glGetVertexAttribIuiv: *fp_glGetVertexAttribIuiv =
	null: *fp_glGetVertexAttribIuiv;
export let glGetVertexAttribIuivEXT: *fp_glGetVertexAttribIuivEXT =
	null: *fp_glGetVertexAttribIuivEXT;
export let glGetVertexAttribLdv: *fp_glGetVertexAttribLdv =
	null: *fp_glGetVertexAttribLdv;
export let glGetVertexAttribLdvEXT: *fp_glGetVertexAttribLdvEXT =
	null: *fp_glGetVertexAttribLdvEXT;
export let glGetVertexAttribLi64vNV: *fp_glGetVertexAttribLi64vNV =
	null: *fp_glGetVertexAttribLi64vNV;
export let glGetVertexAttribLui64vARB: *fp_glGetVertexAttribLui64vARB =
	null: *fp_glGetVertexAttribLui64vARB;
export let glGetVertexAttribLui64vNV: *fp_glGetVertexAttribLui64vNV =
	null: *fp_glGetVertexAttribLui64vNV;
export let glGetVertexAttribPointerv: *fp_glGetVertexAttribPointerv =
	null: *fp_glGetVertexAttribPointerv;
export let glGetVertexAttribPointervARB: *fp_glGetVertexAttribPointervARB =
	null: *fp_glGetVertexAttribPointervARB;
export let glGetVertexAttribPointervNV: *fp_glGetVertexAttribPointervNV =
	null: *fp_glGetVertexAttribPointervNV;
export let glGetVertexAttribdv: *fp_glGetVertexAttribdv =
	null: *fp_glGetVertexAttribdv;
export let glGetVertexAttribdvARB: *fp_glGetVertexAttribdvARB =
	null: *fp_glGetVertexAttribdvARB;
export let glGetVertexAttribdvNV: *fp_glGetVertexAttribdvNV =
	null: *fp_glGetVertexAttribdvNV;
export let glGetVertexAttribfv: *fp_glGetVertexAttribfv =
	null: *fp_glGetVertexAttribfv;
export let glGetVertexAttribfvARB: *fp_glGetVertexAttribfvARB =
	null: *fp_glGetVertexAttribfvARB;
export let glGetVertexAttribfvNV: *fp_glGetVertexAttribfvNV =
	null: *fp_glGetVertexAttribfvNV;
export let glGetVertexAttribiv: *fp_glGetVertexAttribiv =
	null: *fp_glGetVertexAttribiv;
export let glGetVertexAttribivARB: *fp_glGetVertexAttribivARB =
	null: *fp_glGetVertexAttribivARB;
export let glGetVertexAttribivNV: *fp_glGetVertexAttribivNV =
	null: *fp_glGetVertexAttribivNV;
export let glGetVideoCaptureStreamdvNV: *fp_glGetVideoCaptureStreamdvNV =
	null: *fp_glGetVideoCaptureStreamdvNV;
export let glGetVideoCaptureStreamfvNV: *fp_glGetVideoCaptureStreamfvNV =
	null: *fp_glGetVideoCaptureStreamfvNV;
export let glGetVideoCaptureStreamivNV: *fp_glGetVideoCaptureStreamivNV =
	null: *fp_glGetVideoCaptureStreamivNV;
export let glGetVideoCaptureivNV: *fp_glGetVideoCaptureivNV =
	null: *fp_glGetVideoCaptureivNV;
export let glGetVideoi64vNV: *fp_glGetVideoi64vNV =
	null: *fp_glGetVideoi64vNV;
export let glGetVideoivNV: *fp_glGetVideoivNV =
	null: *fp_glGetVideoivNV;
export let glGetVideoui64vNV: *fp_glGetVideoui64vNV =
	null: *fp_glGetVideoui64vNV;
export let glGetVideouivNV: *fp_glGetVideouivNV =
	null: *fp_glGetVideouivNV;
export let glGetVkProcAddrNV: *fp_glGetVkProcAddrNV =
	null: *fp_glGetVkProcAddrNV;
export let glGetnCompressedTexImageARB: *fp_glGetnCompressedTexImageARB =
	null: *fp_glGetnCompressedTexImageARB;
export let glGetnTexImageARB: *fp_glGetnTexImageARB =
	null: *fp_glGetnTexImageARB;
export let glGetnUniformdvARB: *fp_glGetnUniformdvARB =
	null: *fp_glGetnUniformdvARB;
export let glGetnUniformfv: *fp_glGetnUniformfv =
	null: *fp_glGetnUniformfv;
export let glGetnUniformfvARB: *fp_glGetnUniformfvARB =
	null: *fp_glGetnUniformfvARB;
export let glGetnUniformi64vARB: *fp_glGetnUniformi64vARB =
	null: *fp_glGetnUniformi64vARB;
export let glGetnUniformiv: *fp_glGetnUniformiv =
	null: *fp_glGetnUniformiv;
export let glGetnUniformivARB: *fp_glGetnUniformivARB =
	null: *fp_glGetnUniformivARB;
export let glGetnUniformui64vARB: *fp_glGetnUniformui64vARB =
	null: *fp_glGetnUniformui64vARB;
export let glGetnUniformuiv: *fp_glGetnUniformuiv =
	null: *fp_glGetnUniformuiv;
export let glGetnUniformuivARB: *fp_glGetnUniformuivARB =
	null: *fp_glGetnUniformuivARB;
export let glGlobalAlphaFactorbSUN: *fp_glGlobalAlphaFactorbSUN =
	null: *fp_glGlobalAlphaFactorbSUN;
export let glGlobalAlphaFactordSUN: *fp_glGlobalAlphaFactordSUN =
	null: *fp_glGlobalAlphaFactordSUN;
export let glGlobalAlphaFactorfSUN: *fp_glGlobalAlphaFactorfSUN =
	null: *fp_glGlobalAlphaFactorfSUN;
export let glGlobalAlphaFactoriSUN: *fp_glGlobalAlphaFactoriSUN =
	null: *fp_glGlobalAlphaFactoriSUN;
export let glGlobalAlphaFactorsSUN: *fp_glGlobalAlphaFactorsSUN =
	null: *fp_glGlobalAlphaFactorsSUN;
export let glGlobalAlphaFactorubSUN: *fp_glGlobalAlphaFactorubSUN =
	null: *fp_glGlobalAlphaFactorubSUN;
export let glGlobalAlphaFactoruiSUN: *fp_glGlobalAlphaFactoruiSUN =
	null: *fp_glGlobalAlphaFactoruiSUN;
export let glGlobalAlphaFactorusSUN: *fp_glGlobalAlphaFactorusSUN =
	null: *fp_glGlobalAlphaFactorusSUN;
export let glHint: *fp_glHint =
	null: *fp_glHint;
export let glHintPGI: *fp_glHintPGI =
	null: *fp_glHintPGI;
export let glHistogramEXT: *fp_glHistogramEXT =
	null: *fp_glHistogramEXT;
export let glIglooInterfaceSGIX: *fp_glIglooInterfaceSGIX =
	null: *fp_glIglooInterfaceSGIX;
export let glImageTransformParameterfHP: *fp_glImageTransformParameterfHP =
	null: *fp_glImageTransformParameterfHP;
export let glImageTransformParameterfvHP: *fp_glImageTransformParameterfvHP =
	null: *fp_glImageTransformParameterfvHP;
export let glImageTransformParameteriHP: *fp_glImageTransformParameteriHP =
	null: *fp_glImageTransformParameteriHP;
export let glImageTransformParameterivHP: *fp_glImageTransformParameterivHP =
	null: *fp_glImageTransformParameterivHP;
export let glImportMemoryFdEXT: *fp_glImportMemoryFdEXT =
	null: *fp_glImportMemoryFdEXT;
export let glImportMemoryWin32HandleEXT: *fp_glImportMemoryWin32HandleEXT =
	null: *fp_glImportMemoryWin32HandleEXT;
export let glImportMemoryWin32NameEXT: *fp_glImportMemoryWin32NameEXT =
	null: *fp_glImportMemoryWin32NameEXT;
export let glImportSemaphoreFdEXT: *fp_glImportSemaphoreFdEXT =
	null: *fp_glImportSemaphoreFdEXT;
export let glImportSemaphoreWin32HandleEXT: *fp_glImportSemaphoreWin32HandleEXT =
	null: *fp_glImportSemaphoreWin32HandleEXT;
export let glImportSemaphoreWin32NameEXT: *fp_glImportSemaphoreWin32NameEXT =
	null: *fp_glImportSemaphoreWin32NameEXT;
export let glImportSyncEXT: *fp_glImportSyncEXT =
	null: *fp_glImportSyncEXT;
export let glIndexFormatNV: *fp_glIndexFormatNV =
	null: *fp_glIndexFormatNV;
export let glIndexFuncEXT: *fp_glIndexFuncEXT =
	null: *fp_glIndexFuncEXT;
export let glIndexMaterialEXT: *fp_glIndexMaterialEXT =
	null: *fp_glIndexMaterialEXT;
export let glIndexPointerEXT: *fp_glIndexPointerEXT =
	null: *fp_glIndexPointerEXT;
export let glIndexPointerListIBM: *fp_glIndexPointerListIBM =
	null: *fp_glIndexPointerListIBM;
export let glIndexxOES: *fp_glIndexxOES =
	null: *fp_glIndexxOES;
export let glIndexxvOES: *fp_glIndexxvOES =
	null: *fp_glIndexxvOES;
export let glInsertComponentEXT: *fp_glInsertComponentEXT =
	null: *fp_glInsertComponentEXT;
export let glInsertEventMarkerEXT: *fp_glInsertEventMarkerEXT =
	null: *fp_glInsertEventMarkerEXT;
export let glInstrumentsBufferSGIX: *fp_glInstrumentsBufferSGIX =
	null: *fp_glInstrumentsBufferSGIX;
export let glInterpolatePathsNV: *fp_glInterpolatePathsNV =
	null: *fp_glInterpolatePathsNV;
export let glInvalidateBufferData: *fp_glInvalidateBufferData =
	null: *fp_glInvalidateBufferData;
export let glInvalidateBufferSubData: *fp_glInvalidateBufferSubData =
	null: *fp_glInvalidateBufferSubData;
export let glInvalidateFramebuffer: *fp_glInvalidateFramebuffer =
	null: *fp_glInvalidateFramebuffer;
export let glInvalidateNamedFramebufferData: *fp_glInvalidateNamedFramebufferData =
	null: *fp_glInvalidateNamedFramebufferData;
export let glInvalidateNamedFramebufferSubData: *fp_glInvalidateNamedFramebufferSubData =
	null: *fp_glInvalidateNamedFramebufferSubData;
export let glInvalidateSubFramebuffer: *fp_glInvalidateSubFramebuffer =
	null: *fp_glInvalidateSubFramebuffer;
export let glInvalidateTexImage: *fp_glInvalidateTexImage =
	null: *fp_glInvalidateTexImage;
export let glInvalidateTexSubImage: *fp_glInvalidateTexSubImage =
	null: *fp_glInvalidateTexSubImage;
export let glIsAsyncMarkerSGIX: *fp_glIsAsyncMarkerSGIX =
	null: *fp_glIsAsyncMarkerSGIX;
export let glIsBuffer: *fp_glIsBuffer =
	null: *fp_glIsBuffer;
export let glIsBufferARB: *fp_glIsBufferARB =
	null: *fp_glIsBufferARB;
export let glIsBufferResidentNV: *fp_glIsBufferResidentNV =
	null: *fp_glIsBufferResidentNV;
export let glIsCommandListNV: *fp_glIsCommandListNV =
	null: *fp_glIsCommandListNV;
export let glIsEnabled: *fp_glIsEnabled =
	null: *fp_glIsEnabled;
export let glIsEnabledIndexedEXT: *fp_glIsEnabledIndexedEXT =
	null: *fp_glIsEnabledIndexedEXT;
export let glIsEnabledi: *fp_glIsEnabledi =
	null: *fp_glIsEnabledi;
export let glIsFenceAPPLE: *fp_glIsFenceAPPLE =
	null: *fp_glIsFenceAPPLE;
export let glIsFenceNV: *fp_glIsFenceNV =
	null: *fp_glIsFenceNV;
export let glIsFramebuffer: *fp_glIsFramebuffer =
	null: *fp_glIsFramebuffer;
export let glIsFramebufferEXT: *fp_glIsFramebufferEXT =
	null: *fp_glIsFramebufferEXT;
export let glIsImageHandleResidentARB: *fp_glIsImageHandleResidentARB =
	null: *fp_glIsImageHandleResidentARB;
export let glIsImageHandleResidentNV: *fp_glIsImageHandleResidentNV =
	null: *fp_glIsImageHandleResidentNV;
export let glIsMemoryObjectEXT: *fp_glIsMemoryObjectEXT =
	null: *fp_glIsMemoryObjectEXT;
export let glIsNameAMD: *fp_glIsNameAMD =
	null: *fp_glIsNameAMD;
export let glIsNamedBufferResidentNV: *fp_glIsNamedBufferResidentNV =
	null: *fp_glIsNamedBufferResidentNV;
export let glIsNamedStringARB: *fp_glIsNamedStringARB =
	null: *fp_glIsNamedStringARB;
export let glIsObjectBufferATI: *fp_glIsObjectBufferATI =
	null: *fp_glIsObjectBufferATI;
export let glIsOcclusionQueryNV: *fp_glIsOcclusionQueryNV =
	null: *fp_glIsOcclusionQueryNV;
export let glIsPathNV: *fp_glIsPathNV =
	null: *fp_glIsPathNV;
export let glIsPointInFillPathNV: *fp_glIsPointInFillPathNV =
	null: *fp_glIsPointInFillPathNV;
export let glIsPointInStrokePathNV: *fp_glIsPointInStrokePathNV =
	null: *fp_glIsPointInStrokePathNV;
export let glIsProgram: *fp_glIsProgram =
	null: *fp_glIsProgram;
export let glIsProgramARB: *fp_glIsProgramARB =
	null: *fp_glIsProgramARB;
export let glIsProgramNV: *fp_glIsProgramNV =
	null: *fp_glIsProgramNV;
export let glIsProgramPipeline: *fp_glIsProgramPipeline =
	null: *fp_glIsProgramPipeline;
export let glIsQuery: *fp_glIsQuery =
	null: *fp_glIsQuery;
export let glIsQueryARB: *fp_glIsQueryARB =
	null: *fp_glIsQueryARB;
export let glIsRenderbuffer: *fp_glIsRenderbuffer =
	null: *fp_glIsRenderbuffer;
export let glIsRenderbufferEXT: *fp_glIsRenderbufferEXT =
	null: *fp_glIsRenderbufferEXT;
export let glIsSampler: *fp_glIsSampler =
	null: *fp_glIsSampler;
export let glIsSemaphoreEXT: *fp_glIsSemaphoreEXT =
	null: *fp_glIsSemaphoreEXT;
export let glIsShader: *fp_glIsShader =
	null: *fp_glIsShader;
export let glIsStateNV: *fp_glIsStateNV =
	null: *fp_glIsStateNV;
export let glIsSync: *fp_glIsSync =
	null: *fp_glIsSync;
export let glIsTexture: *fp_glIsTexture =
	null: *fp_glIsTexture;
export let glIsTextureEXT: *fp_glIsTextureEXT =
	null: *fp_glIsTextureEXT;
export let glIsTextureHandleResidentARB: *fp_glIsTextureHandleResidentARB =
	null: *fp_glIsTextureHandleResidentARB;
export let glIsTextureHandleResidentNV: *fp_glIsTextureHandleResidentNV =
	null: *fp_glIsTextureHandleResidentNV;
export let glIsTransformFeedback: *fp_glIsTransformFeedback =
	null: *fp_glIsTransformFeedback;
export let glIsTransformFeedbackNV: *fp_glIsTransformFeedbackNV =
	null: *fp_glIsTransformFeedbackNV;
export let glIsVariantEnabledEXT: *fp_glIsVariantEnabledEXT =
	null: *fp_glIsVariantEnabledEXT;
export let glIsVertexArray: *fp_glIsVertexArray =
	null: *fp_glIsVertexArray;
export let glIsVertexArrayAPPLE: *fp_glIsVertexArrayAPPLE =
	null: *fp_glIsVertexArrayAPPLE;
export let glIsVertexAttribEnabledAPPLE: *fp_glIsVertexAttribEnabledAPPLE =
	null: *fp_glIsVertexAttribEnabledAPPLE;
export let glLGPUCopyImageSubDataNVX: *fp_glLGPUCopyImageSubDataNVX =
	null: *fp_glLGPUCopyImageSubDataNVX;
export let glLGPUInterlockNVX: *fp_glLGPUInterlockNVX =
	null: *fp_glLGPUInterlockNVX;
export let glLGPUNamedBufferSubDataNVX: *fp_glLGPUNamedBufferSubDataNVX =
	null: *fp_glLGPUNamedBufferSubDataNVX;
export let glLabelObjectEXT: *fp_glLabelObjectEXT =
	null: *fp_glLabelObjectEXT;
export let glLightEnviSGIX: *fp_glLightEnviSGIX =
	null: *fp_glLightEnviSGIX;
export let glLightModelxOES: *fp_glLightModelxOES =
	null: *fp_glLightModelxOES;
export let glLightModelxvOES: *fp_glLightModelxvOES =
	null: *fp_glLightModelxvOES;
export let glLightxOES: *fp_glLightxOES =
	null: *fp_glLightxOES;
export let glLightxvOES: *fp_glLightxvOES =
	null: *fp_glLightxvOES;
export let glLineWidth: *fp_glLineWidth =
	null: *fp_glLineWidth;
export let glLineWidthxOES: *fp_glLineWidthxOES =
	null: *fp_glLineWidthxOES;
export let glLinkProgram: *fp_glLinkProgram =
	null: *fp_glLinkProgram;
export let glLinkProgramARB: *fp_glLinkProgramARB =
	null: *fp_glLinkProgramARB;
export let glListDrawCommandsStatesClientNV: *fp_glListDrawCommandsStatesClientNV =
	null: *fp_glListDrawCommandsStatesClientNV;
export let glListParameterfSGIX: *fp_glListParameterfSGIX =
	null: *fp_glListParameterfSGIX;
export let glListParameterfvSGIX: *fp_glListParameterfvSGIX =
	null: *fp_glListParameterfvSGIX;
export let glListParameteriSGIX: *fp_glListParameteriSGIX =
	null: *fp_glListParameteriSGIX;
export let glListParameterivSGIX: *fp_glListParameterivSGIX =
	null: *fp_glListParameterivSGIX;
export let glLoadIdentityDeformationMapSGIX: *fp_glLoadIdentityDeformationMapSGIX =
	null: *fp_glLoadIdentityDeformationMapSGIX;
export let glLoadMatrixxOES: *fp_glLoadMatrixxOES =
	null: *fp_glLoadMatrixxOES;
export let glLoadProgramNV: *fp_glLoadProgramNV =
	null: *fp_glLoadProgramNV;
export let glLoadTransposeMatrixdARB: *fp_glLoadTransposeMatrixdARB =
	null: *fp_glLoadTransposeMatrixdARB;
export let glLoadTransposeMatrixfARB: *fp_glLoadTransposeMatrixfARB =
	null: *fp_glLoadTransposeMatrixfARB;
export let glLoadTransposeMatrixxOES: *fp_glLoadTransposeMatrixxOES =
	null: *fp_glLoadTransposeMatrixxOES;
export let glLockArraysEXT: *fp_glLockArraysEXT =
	null: *fp_glLockArraysEXT;
export let glLogicOp: *fp_glLogicOp =
	null: *fp_glLogicOp;
export let glMakeBufferNonResidentNV: *fp_glMakeBufferNonResidentNV =
	null: *fp_glMakeBufferNonResidentNV;
export let glMakeBufferResidentNV: *fp_glMakeBufferResidentNV =
	null: *fp_glMakeBufferResidentNV;
export let glMakeImageHandleNonResidentARB: *fp_glMakeImageHandleNonResidentARB =
	null: *fp_glMakeImageHandleNonResidentARB;
export let glMakeImageHandleNonResidentNV: *fp_glMakeImageHandleNonResidentNV =
	null: *fp_glMakeImageHandleNonResidentNV;
export let glMakeImageHandleResidentARB: *fp_glMakeImageHandleResidentARB =
	null: *fp_glMakeImageHandleResidentARB;
export let glMakeImageHandleResidentNV: *fp_glMakeImageHandleResidentNV =
	null: *fp_glMakeImageHandleResidentNV;
export let glMakeNamedBufferNonResidentNV: *fp_glMakeNamedBufferNonResidentNV =
	null: *fp_glMakeNamedBufferNonResidentNV;
export let glMakeNamedBufferResidentNV: *fp_glMakeNamedBufferResidentNV =
	null: *fp_glMakeNamedBufferResidentNV;
export let glMakeTextureHandleNonResidentARB: *fp_glMakeTextureHandleNonResidentARB =
	null: *fp_glMakeTextureHandleNonResidentARB;
export let glMakeTextureHandleNonResidentNV: *fp_glMakeTextureHandleNonResidentNV =
	null: *fp_glMakeTextureHandleNonResidentNV;
export let glMakeTextureHandleResidentARB: *fp_glMakeTextureHandleResidentARB =
	null: *fp_glMakeTextureHandleResidentARB;
export let glMakeTextureHandleResidentNV: *fp_glMakeTextureHandleResidentNV =
	null: *fp_glMakeTextureHandleResidentNV;
export let glMap1xOES: *fp_glMap1xOES =
	null: *fp_glMap1xOES;
export let glMap2xOES: *fp_glMap2xOES =
	null: *fp_glMap2xOES;
export let glMapBuffer: *fp_glMapBuffer =
	null: *fp_glMapBuffer;
export let glMapBufferARB: *fp_glMapBufferARB =
	null: *fp_glMapBufferARB;
export let glMapBufferRange: *fp_glMapBufferRange =
	null: *fp_glMapBufferRange;
export let glMapControlPointsNV: *fp_glMapControlPointsNV =
	null: *fp_glMapControlPointsNV;
export let glMapGrid1xOES: *fp_glMapGrid1xOES =
	null: *fp_glMapGrid1xOES;
export let glMapGrid2xOES: *fp_glMapGrid2xOES =
	null: *fp_glMapGrid2xOES;
export let glMapNamedBuffer: *fp_glMapNamedBuffer =
	null: *fp_glMapNamedBuffer;
export let glMapNamedBufferEXT: *fp_glMapNamedBufferEXT =
	null: *fp_glMapNamedBufferEXT;
export let glMapNamedBufferRange: *fp_glMapNamedBufferRange =
	null: *fp_glMapNamedBufferRange;
export let glMapNamedBufferRangeEXT: *fp_glMapNamedBufferRangeEXT =
	null: *fp_glMapNamedBufferRangeEXT;
export let glMapObjectBufferATI: *fp_glMapObjectBufferATI =
	null: *fp_glMapObjectBufferATI;
export let glMapParameterfvNV: *fp_glMapParameterfvNV =
	null: *fp_glMapParameterfvNV;
export let glMapParameterivNV: *fp_glMapParameterivNV =
	null: *fp_glMapParameterivNV;
export let glMapTexture2DINTEL: *fp_glMapTexture2DINTEL =
	null: *fp_glMapTexture2DINTEL;
export let glMapVertexAttrib1dAPPLE: *fp_glMapVertexAttrib1dAPPLE =
	null: *fp_glMapVertexAttrib1dAPPLE;
export let glMapVertexAttrib1fAPPLE: *fp_glMapVertexAttrib1fAPPLE =
	null: *fp_glMapVertexAttrib1fAPPLE;
export let glMapVertexAttrib2dAPPLE: *fp_glMapVertexAttrib2dAPPLE =
	null: *fp_glMapVertexAttrib2dAPPLE;
export let glMapVertexAttrib2fAPPLE: *fp_glMapVertexAttrib2fAPPLE =
	null: *fp_glMapVertexAttrib2fAPPLE;
export let glMaterialxOES: *fp_glMaterialxOES =
	null: *fp_glMaterialxOES;
export let glMaterialxvOES: *fp_glMaterialxvOES =
	null: *fp_glMaterialxvOES;
export let glMatrixFrustumEXT: *fp_glMatrixFrustumEXT =
	null: *fp_glMatrixFrustumEXT;
export let glMatrixIndexPointerARB: *fp_glMatrixIndexPointerARB =
	null: *fp_glMatrixIndexPointerARB;
export let glMatrixIndexubvARB: *fp_glMatrixIndexubvARB =
	null: *fp_glMatrixIndexubvARB;
export let glMatrixIndexuivARB: *fp_glMatrixIndexuivARB =
	null: *fp_glMatrixIndexuivARB;
export let glMatrixIndexusvARB: *fp_glMatrixIndexusvARB =
	null: *fp_glMatrixIndexusvARB;
export let glMatrixLoad3x2fNV: *fp_glMatrixLoad3x2fNV =
	null: *fp_glMatrixLoad3x2fNV;
export let glMatrixLoad3x3fNV: *fp_glMatrixLoad3x3fNV =
	null: *fp_glMatrixLoad3x3fNV;
export let glMatrixLoadIdentityEXT: *fp_glMatrixLoadIdentityEXT =
	null: *fp_glMatrixLoadIdentityEXT;
export let glMatrixLoadTranspose3x3fNV: *fp_glMatrixLoadTranspose3x3fNV =
	null: *fp_glMatrixLoadTranspose3x3fNV;
export let glMatrixLoadTransposedEXT: *fp_glMatrixLoadTransposedEXT =
	null: *fp_glMatrixLoadTransposedEXT;
export let glMatrixLoadTransposefEXT: *fp_glMatrixLoadTransposefEXT =
	null: *fp_glMatrixLoadTransposefEXT;
export let glMatrixLoaddEXT: *fp_glMatrixLoaddEXT =
	null: *fp_glMatrixLoaddEXT;
export let glMatrixLoadfEXT: *fp_glMatrixLoadfEXT =
	null: *fp_glMatrixLoadfEXT;
export let glMatrixMult3x2fNV: *fp_glMatrixMult3x2fNV =
	null: *fp_glMatrixMult3x2fNV;
export let glMatrixMult3x3fNV: *fp_glMatrixMult3x3fNV =
	null: *fp_glMatrixMult3x3fNV;
export let glMatrixMultTranspose3x3fNV: *fp_glMatrixMultTranspose3x3fNV =
	null: *fp_glMatrixMultTranspose3x3fNV;
export let glMatrixMultTransposedEXT: *fp_glMatrixMultTransposedEXT =
	null: *fp_glMatrixMultTransposedEXT;
export let glMatrixMultTransposefEXT: *fp_glMatrixMultTransposefEXT =
	null: *fp_glMatrixMultTransposefEXT;
export let glMatrixMultdEXT: *fp_glMatrixMultdEXT =
	null: *fp_glMatrixMultdEXT;
export let glMatrixMultfEXT: *fp_glMatrixMultfEXT =
	null: *fp_glMatrixMultfEXT;
export let glMatrixOrthoEXT: *fp_glMatrixOrthoEXT =
	null: *fp_glMatrixOrthoEXT;
export let glMatrixPopEXT: *fp_glMatrixPopEXT =
	null: *fp_glMatrixPopEXT;
export let glMatrixPushEXT: *fp_glMatrixPushEXT =
	null: *fp_glMatrixPushEXT;
export let glMatrixRotatedEXT: *fp_glMatrixRotatedEXT =
	null: *fp_glMatrixRotatedEXT;
export let glMatrixRotatefEXT: *fp_glMatrixRotatefEXT =
	null: *fp_glMatrixRotatefEXT;
export let glMatrixScaledEXT: *fp_glMatrixScaledEXT =
	null: *fp_glMatrixScaledEXT;
export let glMatrixScalefEXT: *fp_glMatrixScalefEXT =
	null: *fp_glMatrixScalefEXT;
export let glMatrixTranslatedEXT: *fp_glMatrixTranslatedEXT =
	null: *fp_glMatrixTranslatedEXT;
export let glMatrixTranslatefEXT: *fp_glMatrixTranslatefEXT =
	null: *fp_glMatrixTranslatefEXT;
export let glMaxShaderCompilerThreadsARB: *fp_glMaxShaderCompilerThreadsARB =
	null: *fp_glMaxShaderCompilerThreadsARB;
export let glMaxShaderCompilerThreadsKHR: *fp_glMaxShaderCompilerThreadsKHR =
	null: *fp_glMaxShaderCompilerThreadsKHR;
export let glMemoryBarrier: *fp_glMemoryBarrier =
	null: *fp_glMemoryBarrier;
export let glMemoryBarrierByRegion: *fp_glMemoryBarrierByRegion =
	null: *fp_glMemoryBarrierByRegion;
export let glMemoryBarrierEXT: *fp_glMemoryBarrierEXT =
	null: *fp_glMemoryBarrierEXT;
export let glMemoryObjectParameterivEXT: *fp_glMemoryObjectParameterivEXT =
	null: *fp_glMemoryObjectParameterivEXT;
export let glMinSampleShadingARB: *fp_glMinSampleShadingARB =
	null: *fp_glMinSampleShadingARB;
export let glMinmaxEXT: *fp_glMinmaxEXT =
	null: *fp_glMinmaxEXT;
export let glMultMatrixxOES: *fp_glMultMatrixxOES =
	null: *fp_glMultMatrixxOES;
export let glMultTransposeMatrixdARB: *fp_glMultTransposeMatrixdARB =
	null: *fp_glMultTransposeMatrixdARB;
export let glMultTransposeMatrixfARB: *fp_glMultTransposeMatrixfARB =
	null: *fp_glMultTransposeMatrixfARB;
export let glMultTransposeMatrixxOES: *fp_glMultTransposeMatrixxOES =
	null: *fp_glMultTransposeMatrixxOES;
export let glMultiDrawArrays: *fp_glMultiDrawArrays =
	null: *fp_glMultiDrawArrays;
export let glMultiDrawArraysEXT: *fp_glMultiDrawArraysEXT =
	null: *fp_glMultiDrawArraysEXT;
export let glMultiDrawArraysIndirect: *fp_glMultiDrawArraysIndirect =
	null: *fp_glMultiDrawArraysIndirect;
export let glMultiDrawArraysIndirectAMD: *fp_glMultiDrawArraysIndirectAMD =
	null: *fp_glMultiDrawArraysIndirectAMD;
export let glMultiDrawArraysIndirectBindlessCountNV: *fp_glMultiDrawArraysIndirectBindlessCountNV =
	null: *fp_glMultiDrawArraysIndirectBindlessCountNV;
export let glMultiDrawArraysIndirectBindlessNV: *fp_glMultiDrawArraysIndirectBindlessNV =
	null: *fp_glMultiDrawArraysIndirectBindlessNV;
export let glMultiDrawArraysIndirectCountARB: *fp_glMultiDrawArraysIndirectCountARB =
	null: *fp_glMultiDrawArraysIndirectCountARB;
export let glMultiDrawElementArrayAPPLE: *fp_glMultiDrawElementArrayAPPLE =
	null: *fp_glMultiDrawElementArrayAPPLE;
export let glMultiDrawElements: *fp_glMultiDrawElements =
	null: *fp_glMultiDrawElements;
export let glMultiDrawElementsBaseVertex: *fp_glMultiDrawElementsBaseVertex =
	null: *fp_glMultiDrawElementsBaseVertex;
export let glMultiDrawElementsEXT: *fp_glMultiDrawElementsEXT =
	null: *fp_glMultiDrawElementsEXT;
export let glMultiDrawElementsIndirect: *fp_glMultiDrawElementsIndirect =
	null: *fp_glMultiDrawElementsIndirect;
export let glMultiDrawElementsIndirectAMD: *fp_glMultiDrawElementsIndirectAMD =
	null: *fp_glMultiDrawElementsIndirectAMD;
export let glMultiDrawElementsIndirectBindlessCountNV: *fp_glMultiDrawElementsIndirectBindlessCountNV =
	null: *fp_glMultiDrawElementsIndirectBindlessCountNV;
export let glMultiDrawElementsIndirectBindlessNV: *fp_glMultiDrawElementsIndirectBindlessNV =
	null: *fp_glMultiDrawElementsIndirectBindlessNV;
export let glMultiDrawElementsIndirectCountARB: *fp_glMultiDrawElementsIndirectCountARB =
	null: *fp_glMultiDrawElementsIndirectCountARB;
export let glMultiDrawMeshTasksIndirectCountNV: *fp_glMultiDrawMeshTasksIndirectCountNV =
	null: *fp_glMultiDrawMeshTasksIndirectCountNV;
export let glMultiDrawMeshTasksIndirectNV: *fp_glMultiDrawMeshTasksIndirectNV =
	null: *fp_glMultiDrawMeshTasksIndirectNV;
export let glMultiDrawRangeElementArrayAPPLE: *fp_glMultiDrawRangeElementArrayAPPLE =
	null: *fp_glMultiDrawRangeElementArrayAPPLE;
export let glMultiModeDrawArraysIBM: *fp_glMultiModeDrawArraysIBM =
	null: *fp_glMultiModeDrawArraysIBM;
export let glMultiModeDrawElementsIBM: *fp_glMultiModeDrawElementsIBM =
	null: *fp_glMultiModeDrawElementsIBM;
export let glMultiTexBufferEXT: *fp_glMultiTexBufferEXT =
	null: *fp_glMultiTexBufferEXT;
export let glMultiTexCoord1bOES: *fp_glMultiTexCoord1bOES =
	null: *fp_glMultiTexCoord1bOES;
export let glMultiTexCoord1bvOES: *fp_glMultiTexCoord1bvOES =
	null: *fp_glMultiTexCoord1bvOES;
export let glMultiTexCoord1dARB: *fp_glMultiTexCoord1dARB =
	null: *fp_glMultiTexCoord1dARB;
export let glMultiTexCoord1dvARB: *fp_glMultiTexCoord1dvARB =
	null: *fp_glMultiTexCoord1dvARB;
export let glMultiTexCoord1fARB: *fp_glMultiTexCoord1fARB =
	null: *fp_glMultiTexCoord1fARB;
export let glMultiTexCoord1fvARB: *fp_glMultiTexCoord1fvARB =
	null: *fp_glMultiTexCoord1fvARB;
export let glMultiTexCoord1hNV: *fp_glMultiTexCoord1hNV =
	null: *fp_glMultiTexCoord1hNV;
export let glMultiTexCoord1hvNV: *fp_glMultiTexCoord1hvNV =
	null: *fp_glMultiTexCoord1hvNV;
export let glMultiTexCoord1iARB: *fp_glMultiTexCoord1iARB =
	null: *fp_glMultiTexCoord1iARB;
export let glMultiTexCoord1ivARB: *fp_glMultiTexCoord1ivARB =
	null: *fp_glMultiTexCoord1ivARB;
export let glMultiTexCoord1sARB: *fp_glMultiTexCoord1sARB =
	null: *fp_glMultiTexCoord1sARB;
export let glMultiTexCoord1svARB: *fp_glMultiTexCoord1svARB =
	null: *fp_glMultiTexCoord1svARB;
export let glMultiTexCoord1xOES: *fp_glMultiTexCoord1xOES =
	null: *fp_glMultiTexCoord1xOES;
export let glMultiTexCoord1xvOES: *fp_glMultiTexCoord1xvOES =
	null: *fp_glMultiTexCoord1xvOES;
export let glMultiTexCoord2bOES: *fp_glMultiTexCoord2bOES =
	null: *fp_glMultiTexCoord2bOES;
export let glMultiTexCoord2bvOES: *fp_glMultiTexCoord2bvOES =
	null: *fp_glMultiTexCoord2bvOES;
export let glMultiTexCoord2dARB: *fp_glMultiTexCoord2dARB =
	null: *fp_glMultiTexCoord2dARB;
export let glMultiTexCoord2dvARB: *fp_glMultiTexCoord2dvARB =
	null: *fp_glMultiTexCoord2dvARB;
export let glMultiTexCoord2fARB: *fp_glMultiTexCoord2fARB =
	null: *fp_glMultiTexCoord2fARB;
export let glMultiTexCoord2fvARB: *fp_glMultiTexCoord2fvARB =
	null: *fp_glMultiTexCoord2fvARB;
export let glMultiTexCoord2hNV: *fp_glMultiTexCoord2hNV =
	null: *fp_glMultiTexCoord2hNV;
export let glMultiTexCoord2hvNV: *fp_glMultiTexCoord2hvNV =
	null: *fp_glMultiTexCoord2hvNV;
export let glMultiTexCoord2iARB: *fp_glMultiTexCoord2iARB =
	null: *fp_glMultiTexCoord2iARB;
export let glMultiTexCoord2ivARB: *fp_glMultiTexCoord2ivARB =
	null: *fp_glMultiTexCoord2ivARB;
export let glMultiTexCoord2sARB: *fp_glMultiTexCoord2sARB =
	null: *fp_glMultiTexCoord2sARB;
export let glMultiTexCoord2svARB: *fp_glMultiTexCoord2svARB =
	null: *fp_glMultiTexCoord2svARB;
export let glMultiTexCoord2xOES: *fp_glMultiTexCoord2xOES =
	null: *fp_glMultiTexCoord2xOES;
export let glMultiTexCoord2xvOES: *fp_glMultiTexCoord2xvOES =
	null: *fp_glMultiTexCoord2xvOES;
export let glMultiTexCoord3bOES: *fp_glMultiTexCoord3bOES =
	null: *fp_glMultiTexCoord3bOES;
export let glMultiTexCoord3bvOES: *fp_glMultiTexCoord3bvOES =
	null: *fp_glMultiTexCoord3bvOES;
export let glMultiTexCoord3dARB: *fp_glMultiTexCoord3dARB =
	null: *fp_glMultiTexCoord3dARB;
export let glMultiTexCoord3dvARB: *fp_glMultiTexCoord3dvARB =
	null: *fp_glMultiTexCoord3dvARB;
export let glMultiTexCoord3fARB: *fp_glMultiTexCoord3fARB =
	null: *fp_glMultiTexCoord3fARB;
export let glMultiTexCoord3fvARB: *fp_glMultiTexCoord3fvARB =
	null: *fp_glMultiTexCoord3fvARB;
export let glMultiTexCoord3hNV: *fp_glMultiTexCoord3hNV =
	null: *fp_glMultiTexCoord3hNV;
export let glMultiTexCoord3hvNV: *fp_glMultiTexCoord3hvNV =
	null: *fp_glMultiTexCoord3hvNV;
export let glMultiTexCoord3iARB: *fp_glMultiTexCoord3iARB =
	null: *fp_glMultiTexCoord3iARB;
export let glMultiTexCoord3ivARB: *fp_glMultiTexCoord3ivARB =
	null: *fp_glMultiTexCoord3ivARB;
export let glMultiTexCoord3sARB: *fp_glMultiTexCoord3sARB =
	null: *fp_glMultiTexCoord3sARB;
export let glMultiTexCoord3svARB: *fp_glMultiTexCoord3svARB =
	null: *fp_glMultiTexCoord3svARB;
export let glMultiTexCoord3xOES: *fp_glMultiTexCoord3xOES =
	null: *fp_glMultiTexCoord3xOES;
export let glMultiTexCoord3xvOES: *fp_glMultiTexCoord3xvOES =
	null: *fp_glMultiTexCoord3xvOES;
export let glMultiTexCoord4bOES: *fp_glMultiTexCoord4bOES =
	null: *fp_glMultiTexCoord4bOES;
export let glMultiTexCoord4bvOES: *fp_glMultiTexCoord4bvOES =
	null: *fp_glMultiTexCoord4bvOES;
export let glMultiTexCoord4dARB: *fp_glMultiTexCoord4dARB =
	null: *fp_glMultiTexCoord4dARB;
export let glMultiTexCoord4dvARB: *fp_glMultiTexCoord4dvARB =
	null: *fp_glMultiTexCoord4dvARB;
export let glMultiTexCoord4fARB: *fp_glMultiTexCoord4fARB =
	null: *fp_glMultiTexCoord4fARB;
export let glMultiTexCoord4fvARB: *fp_glMultiTexCoord4fvARB =
	null: *fp_glMultiTexCoord4fvARB;
export let glMultiTexCoord4hNV: *fp_glMultiTexCoord4hNV =
	null: *fp_glMultiTexCoord4hNV;
export let glMultiTexCoord4hvNV: *fp_glMultiTexCoord4hvNV =
	null: *fp_glMultiTexCoord4hvNV;
export let glMultiTexCoord4iARB: *fp_glMultiTexCoord4iARB =
	null: *fp_glMultiTexCoord4iARB;
export let glMultiTexCoord4ivARB: *fp_glMultiTexCoord4ivARB =
	null: *fp_glMultiTexCoord4ivARB;
export let glMultiTexCoord4sARB: *fp_glMultiTexCoord4sARB =
	null: *fp_glMultiTexCoord4sARB;
export let glMultiTexCoord4svARB: *fp_glMultiTexCoord4svARB =
	null: *fp_glMultiTexCoord4svARB;
export let glMultiTexCoord4xOES: *fp_glMultiTexCoord4xOES =
	null: *fp_glMultiTexCoord4xOES;
export let glMultiTexCoord4xvOES: *fp_glMultiTexCoord4xvOES =
	null: *fp_glMultiTexCoord4xvOES;
export let glMultiTexCoordPointerEXT: *fp_glMultiTexCoordPointerEXT =
	null: *fp_glMultiTexCoordPointerEXT;
export let glMultiTexEnvfEXT: *fp_glMultiTexEnvfEXT =
	null: *fp_glMultiTexEnvfEXT;
export let glMultiTexEnvfvEXT: *fp_glMultiTexEnvfvEXT =
	null: *fp_glMultiTexEnvfvEXT;
export let glMultiTexEnviEXT: *fp_glMultiTexEnviEXT =
	null: *fp_glMultiTexEnviEXT;
export let glMultiTexEnvivEXT: *fp_glMultiTexEnvivEXT =
	null: *fp_glMultiTexEnvivEXT;
export let glMultiTexGendEXT: *fp_glMultiTexGendEXT =
	null: *fp_glMultiTexGendEXT;
export let glMultiTexGendvEXT: *fp_glMultiTexGendvEXT =
	null: *fp_glMultiTexGendvEXT;
export let glMultiTexGenfEXT: *fp_glMultiTexGenfEXT =
	null: *fp_glMultiTexGenfEXT;
export let glMultiTexGenfvEXT: *fp_glMultiTexGenfvEXT =
	null: *fp_glMultiTexGenfvEXT;
export let glMultiTexGeniEXT: *fp_glMultiTexGeniEXT =
	null: *fp_glMultiTexGeniEXT;
export let glMultiTexGenivEXT: *fp_glMultiTexGenivEXT =
	null: *fp_glMultiTexGenivEXT;
export let glMultiTexImage1DEXT: *fp_glMultiTexImage1DEXT =
	null: *fp_glMultiTexImage1DEXT;
export let glMultiTexImage2DEXT: *fp_glMultiTexImage2DEXT =
	null: *fp_glMultiTexImage2DEXT;
export let glMultiTexImage3DEXT: *fp_glMultiTexImage3DEXT =
	null: *fp_glMultiTexImage3DEXT;
export let glMultiTexParameterIivEXT: *fp_glMultiTexParameterIivEXT =
	null: *fp_glMultiTexParameterIivEXT;
export let glMultiTexParameterIuivEXT: *fp_glMultiTexParameterIuivEXT =
	null: *fp_glMultiTexParameterIuivEXT;
export let glMultiTexParameterfEXT: *fp_glMultiTexParameterfEXT =
	null: *fp_glMultiTexParameterfEXT;
export let glMultiTexParameterfvEXT: *fp_glMultiTexParameterfvEXT =
	null: *fp_glMultiTexParameterfvEXT;
export let glMultiTexParameteriEXT: *fp_glMultiTexParameteriEXT =
	null: *fp_glMultiTexParameteriEXT;
export let glMultiTexParameterivEXT: *fp_glMultiTexParameterivEXT =
	null: *fp_glMultiTexParameterivEXT;
export let glMultiTexRenderbufferEXT: *fp_glMultiTexRenderbufferEXT =
	null: *fp_glMultiTexRenderbufferEXT;
export let glMultiTexSubImage1DEXT: *fp_glMultiTexSubImage1DEXT =
	null: *fp_glMultiTexSubImage1DEXT;
export let glMultiTexSubImage2DEXT: *fp_glMultiTexSubImage2DEXT =
	null: *fp_glMultiTexSubImage2DEXT;
export let glMultiTexSubImage3DEXT: *fp_glMultiTexSubImage3DEXT =
	null: *fp_glMultiTexSubImage3DEXT;
export let glMulticastBarrierNV: *fp_glMulticastBarrierNV =
	null: *fp_glMulticastBarrierNV;
export let glMulticastBlitFramebufferNV: *fp_glMulticastBlitFramebufferNV =
	null: *fp_glMulticastBlitFramebufferNV;
export let glMulticastBufferSubDataNV: *fp_glMulticastBufferSubDataNV =
	null: *fp_glMulticastBufferSubDataNV;
export let glMulticastCopyBufferSubDataNV: *fp_glMulticastCopyBufferSubDataNV =
	null: *fp_glMulticastCopyBufferSubDataNV;
export let glMulticastCopyImageSubDataNV: *fp_glMulticastCopyImageSubDataNV =
	null: *fp_glMulticastCopyImageSubDataNV;
export let glMulticastFramebufferSampleLocationsfvNV: *fp_glMulticastFramebufferSampleLocationsfvNV =
	null: *fp_glMulticastFramebufferSampleLocationsfvNV;
export let glMulticastGetQueryObjecti64vNV: *fp_glMulticastGetQueryObjecti64vNV =
	null: *fp_glMulticastGetQueryObjecti64vNV;
export let glMulticastGetQueryObjectivNV: *fp_glMulticastGetQueryObjectivNV =
	null: *fp_glMulticastGetQueryObjectivNV;
export let glMulticastGetQueryObjectui64vNV: *fp_glMulticastGetQueryObjectui64vNV =
	null: *fp_glMulticastGetQueryObjectui64vNV;
export let glMulticastGetQueryObjectuivNV: *fp_glMulticastGetQueryObjectuivNV =
	null: *fp_glMulticastGetQueryObjectuivNV;
export let glMulticastScissorArrayvNVX: *fp_glMulticastScissorArrayvNVX =
	null: *fp_glMulticastScissorArrayvNVX;
export let glMulticastViewportArrayvNVX: *fp_glMulticastViewportArrayvNVX =
	null: *fp_glMulticastViewportArrayvNVX;
export let glMulticastViewportPositionWScaleNVX: *fp_glMulticastViewportPositionWScaleNVX =
	null: *fp_glMulticastViewportPositionWScaleNVX;
export let glMulticastWaitSyncNV: *fp_glMulticastWaitSyncNV =
	null: *fp_glMulticastWaitSyncNV;
export let glNamedBufferAttachMemoryNV: *fp_glNamedBufferAttachMemoryNV =
	null: *fp_glNamedBufferAttachMemoryNV;
export let glNamedBufferData: *fp_glNamedBufferData =
	null: *fp_glNamedBufferData;
export let glNamedBufferDataEXT: *fp_glNamedBufferDataEXT =
	null: *fp_glNamedBufferDataEXT;
export let glNamedBufferPageCommitmentARB: *fp_glNamedBufferPageCommitmentARB =
	null: *fp_glNamedBufferPageCommitmentARB;
export let glNamedBufferPageCommitmentEXT: *fp_glNamedBufferPageCommitmentEXT =
	null: *fp_glNamedBufferPageCommitmentEXT;
export let glNamedBufferPageCommitmentMemNV: *fp_glNamedBufferPageCommitmentMemNV =
	null: *fp_glNamedBufferPageCommitmentMemNV;
export let glNamedBufferStorage: *fp_glNamedBufferStorage =
	null: *fp_glNamedBufferStorage;
export let glNamedBufferStorageEXT: *fp_glNamedBufferStorageEXT =
	null: *fp_glNamedBufferStorageEXT;
export let glNamedBufferStorageExternalEXT: *fp_glNamedBufferStorageExternalEXT =
	null: *fp_glNamedBufferStorageExternalEXT;
export let glNamedBufferStorageMemEXT: *fp_glNamedBufferStorageMemEXT =
	null: *fp_glNamedBufferStorageMemEXT;
export let glNamedBufferSubData: *fp_glNamedBufferSubData =
	null: *fp_glNamedBufferSubData;
export let glNamedBufferSubDataEXT: *fp_glNamedBufferSubDataEXT =
	null: *fp_glNamedBufferSubDataEXT;
export let glNamedCopyBufferSubDataEXT: *fp_glNamedCopyBufferSubDataEXT =
	null: *fp_glNamedCopyBufferSubDataEXT;
export let glNamedFramebufferDrawBuffer: *fp_glNamedFramebufferDrawBuffer =
	null: *fp_glNamedFramebufferDrawBuffer;
export let glNamedFramebufferDrawBuffers: *fp_glNamedFramebufferDrawBuffers =
	null: *fp_glNamedFramebufferDrawBuffers;
export let glNamedFramebufferParameteri: *fp_glNamedFramebufferParameteri =
	null: *fp_glNamedFramebufferParameteri;
export let glNamedFramebufferParameteriEXT: *fp_glNamedFramebufferParameteriEXT =
	null: *fp_glNamedFramebufferParameteriEXT;
export let glNamedFramebufferReadBuffer: *fp_glNamedFramebufferReadBuffer =
	null: *fp_glNamedFramebufferReadBuffer;
export let glNamedFramebufferRenderbuffer: *fp_glNamedFramebufferRenderbuffer =
	null: *fp_glNamedFramebufferRenderbuffer;
export let glNamedFramebufferRenderbufferEXT: *fp_glNamedFramebufferRenderbufferEXT =
	null: *fp_glNamedFramebufferRenderbufferEXT;
export let glNamedFramebufferSampleLocationsfvARB: *fp_glNamedFramebufferSampleLocationsfvARB =
	null: *fp_glNamedFramebufferSampleLocationsfvARB;
export let glNamedFramebufferSampleLocationsfvNV: *fp_glNamedFramebufferSampleLocationsfvNV =
	null: *fp_glNamedFramebufferSampleLocationsfvNV;
export let glNamedFramebufferSamplePositionsfvAMD: *fp_glNamedFramebufferSamplePositionsfvAMD =
	null: *fp_glNamedFramebufferSamplePositionsfvAMD;
export let glNamedFramebufferTexture: *fp_glNamedFramebufferTexture =
	null: *fp_glNamedFramebufferTexture;
export let glNamedFramebufferTexture1DEXT: *fp_glNamedFramebufferTexture1DEXT =
	null: *fp_glNamedFramebufferTexture1DEXT;
export let glNamedFramebufferTexture2DEXT: *fp_glNamedFramebufferTexture2DEXT =
	null: *fp_glNamedFramebufferTexture2DEXT;
export let glNamedFramebufferTexture3DEXT: *fp_glNamedFramebufferTexture3DEXT =
	null: *fp_glNamedFramebufferTexture3DEXT;
export let glNamedFramebufferTextureEXT: *fp_glNamedFramebufferTextureEXT =
	null: *fp_glNamedFramebufferTextureEXT;
export let glNamedFramebufferTextureFaceEXT: *fp_glNamedFramebufferTextureFaceEXT =
	null: *fp_glNamedFramebufferTextureFaceEXT;
export let glNamedFramebufferTextureLayer: *fp_glNamedFramebufferTextureLayer =
	null: *fp_glNamedFramebufferTextureLayer;
export let glNamedFramebufferTextureLayerEXT: *fp_glNamedFramebufferTextureLayerEXT =
	null: *fp_glNamedFramebufferTextureLayerEXT;
export let glNamedProgramLocalParameter4dEXT: *fp_glNamedProgramLocalParameter4dEXT =
	null: *fp_glNamedProgramLocalParameter4dEXT;
export let glNamedProgramLocalParameter4dvEXT: *fp_glNamedProgramLocalParameter4dvEXT =
	null: *fp_glNamedProgramLocalParameter4dvEXT;
export let glNamedProgramLocalParameter4fEXT: *fp_glNamedProgramLocalParameter4fEXT =
	null: *fp_glNamedProgramLocalParameter4fEXT;
export let glNamedProgramLocalParameter4fvEXT: *fp_glNamedProgramLocalParameter4fvEXT =
	null: *fp_glNamedProgramLocalParameter4fvEXT;
export let glNamedProgramLocalParameterI4iEXT: *fp_glNamedProgramLocalParameterI4iEXT =
	null: *fp_glNamedProgramLocalParameterI4iEXT;
export let glNamedProgramLocalParameterI4ivEXT: *fp_glNamedProgramLocalParameterI4ivEXT =
	null: *fp_glNamedProgramLocalParameterI4ivEXT;
export let glNamedProgramLocalParameterI4uiEXT: *fp_glNamedProgramLocalParameterI4uiEXT =
	null: *fp_glNamedProgramLocalParameterI4uiEXT;
export let glNamedProgramLocalParameterI4uivEXT: *fp_glNamedProgramLocalParameterI4uivEXT =
	null: *fp_glNamedProgramLocalParameterI4uivEXT;
export let glNamedProgramLocalParameters4fvEXT: *fp_glNamedProgramLocalParameters4fvEXT =
	null: *fp_glNamedProgramLocalParameters4fvEXT;
export let glNamedProgramLocalParametersI4ivEXT: *fp_glNamedProgramLocalParametersI4ivEXT =
	null: *fp_glNamedProgramLocalParametersI4ivEXT;
export let glNamedProgramLocalParametersI4uivEXT: *fp_glNamedProgramLocalParametersI4uivEXT =
	null: *fp_glNamedProgramLocalParametersI4uivEXT;
export let glNamedProgramStringEXT: *fp_glNamedProgramStringEXT =
	null: *fp_glNamedProgramStringEXT;
export let glNamedRenderbufferStorage: *fp_glNamedRenderbufferStorage =
	null: *fp_glNamedRenderbufferStorage;
export let glNamedRenderbufferStorageEXT: *fp_glNamedRenderbufferStorageEXT =
	null: *fp_glNamedRenderbufferStorageEXT;
export let glNamedRenderbufferStorageMultisample: *fp_glNamedRenderbufferStorageMultisample =
	null: *fp_glNamedRenderbufferStorageMultisample;
export let glNamedRenderbufferStorageMultisampleAdvancedAMD: *fp_glNamedRenderbufferStorageMultisampleAdvancedAMD =
	null: *fp_glNamedRenderbufferStorageMultisampleAdvancedAMD;
export let glNamedRenderbufferStorageMultisampleCoverageEXT: *fp_glNamedRenderbufferStorageMultisampleCoverageEXT =
	null: *fp_glNamedRenderbufferStorageMultisampleCoverageEXT;
export let glNamedRenderbufferStorageMultisampleEXT: *fp_glNamedRenderbufferStorageMultisampleEXT =
	null: *fp_glNamedRenderbufferStorageMultisampleEXT;
export let glNamedStringARB: *fp_glNamedStringARB =
	null: *fp_glNamedStringARB;
export let glNewObjectBufferATI: *fp_glNewObjectBufferATI =
	null: *fp_glNewObjectBufferATI;
export let glNormal3fVertex3fSUN: *fp_glNormal3fVertex3fSUN =
	null: *fp_glNormal3fVertex3fSUN;
export let glNormal3fVertex3fvSUN: *fp_glNormal3fVertex3fvSUN =
	null: *fp_glNormal3fVertex3fvSUN;
export let glNormal3hNV: *fp_glNormal3hNV =
	null: *fp_glNormal3hNV;
export let glNormal3hvNV: *fp_glNormal3hvNV =
	null: *fp_glNormal3hvNV;
export let glNormal3xOES: *fp_glNormal3xOES =
	null: *fp_glNormal3xOES;
export let glNormal3xvOES: *fp_glNormal3xvOES =
	null: *fp_glNormal3xvOES;
export let glNormalFormatNV: *fp_glNormalFormatNV =
	null: *fp_glNormalFormatNV;
export let glNormalPointerEXT: *fp_glNormalPointerEXT =
	null: *fp_glNormalPointerEXT;
export let glNormalPointerListIBM: *fp_glNormalPointerListIBM =
	null: *fp_glNormalPointerListIBM;
export let glNormalPointervINTEL: *fp_glNormalPointervINTEL =
	null: *fp_glNormalPointervINTEL;
export let glNormalStream3bATI: *fp_glNormalStream3bATI =
	null: *fp_glNormalStream3bATI;
export let glNormalStream3bvATI: *fp_glNormalStream3bvATI =
	null: *fp_glNormalStream3bvATI;
export let glNormalStream3dATI: *fp_glNormalStream3dATI =
	null: *fp_glNormalStream3dATI;
export let glNormalStream3dvATI: *fp_glNormalStream3dvATI =
	null: *fp_glNormalStream3dvATI;
export let glNormalStream3fATI: *fp_glNormalStream3fATI =
	null: *fp_glNormalStream3fATI;
export let glNormalStream3fvATI: *fp_glNormalStream3fvATI =
	null: *fp_glNormalStream3fvATI;
export let glNormalStream3iATI: *fp_glNormalStream3iATI =
	null: *fp_glNormalStream3iATI;
export let glNormalStream3ivATI: *fp_glNormalStream3ivATI =
	null: *fp_glNormalStream3ivATI;
export let glNormalStream3sATI: *fp_glNormalStream3sATI =
	null: *fp_glNormalStream3sATI;
export let glNormalStream3svATI: *fp_glNormalStream3svATI =
	null: *fp_glNormalStream3svATI;
export let glObjectLabel: *fp_glObjectLabel =
	null: *fp_glObjectLabel;
export let glObjectPtrLabel: *fp_glObjectPtrLabel =
	null: *fp_glObjectPtrLabel;
export let glObjectPurgeableAPPLE: *fp_glObjectPurgeableAPPLE =
	null: *fp_glObjectPurgeableAPPLE;
export let glObjectUnpurgeableAPPLE: *fp_glObjectUnpurgeableAPPLE =
	null: *fp_glObjectUnpurgeableAPPLE;
export let glOrthofOES: *fp_glOrthofOES =
	null: *fp_glOrthofOES;
export let glOrthoxOES: *fp_glOrthoxOES =
	null: *fp_glOrthoxOES;
export let glPNTrianglesfATI: *fp_glPNTrianglesfATI =
	null: *fp_glPNTrianglesfATI;
export let glPNTrianglesiATI: *fp_glPNTrianglesiATI =
	null: *fp_glPNTrianglesiATI;
export let glPassTexCoordATI: *fp_glPassTexCoordATI =
	null: *fp_glPassTexCoordATI;
export let glPassThroughxOES: *fp_glPassThroughxOES =
	null: *fp_glPassThroughxOES;
export let glPatchParameterfv: *fp_glPatchParameterfv =
	null: *fp_glPatchParameterfv;
export let glPatchParameteri: *fp_glPatchParameteri =
	null: *fp_glPatchParameteri;
export let glPathCommandsNV: *fp_glPathCommandsNV =
	null: *fp_glPathCommandsNV;
export let glPathCoordsNV: *fp_glPathCoordsNV =
	null: *fp_glPathCoordsNV;
export let glPathCoverDepthFuncNV: *fp_glPathCoverDepthFuncNV =
	null: *fp_glPathCoverDepthFuncNV;
export let glPathDashArrayNV: *fp_glPathDashArrayNV =
	null: *fp_glPathDashArrayNV;
export let glPathGlyphIndexArrayNV: *fp_glPathGlyphIndexArrayNV =
	null: *fp_glPathGlyphIndexArrayNV;
export let glPathGlyphIndexRangeNV: *fp_glPathGlyphIndexRangeNV =
	null: *fp_glPathGlyphIndexRangeNV;
export let glPathGlyphRangeNV: *fp_glPathGlyphRangeNV =
	null: *fp_glPathGlyphRangeNV;
export let glPathGlyphsNV: *fp_glPathGlyphsNV =
	null: *fp_glPathGlyphsNV;
export let glPathMemoryGlyphIndexArrayNV: *fp_glPathMemoryGlyphIndexArrayNV =
	null: *fp_glPathMemoryGlyphIndexArrayNV;
export let glPathParameterfNV: *fp_glPathParameterfNV =
	null: *fp_glPathParameterfNV;
export let glPathParameterfvNV: *fp_glPathParameterfvNV =
	null: *fp_glPathParameterfvNV;
export let glPathParameteriNV: *fp_glPathParameteriNV =
	null: *fp_glPathParameteriNV;
export let glPathParameterivNV: *fp_glPathParameterivNV =
	null: *fp_glPathParameterivNV;
export let glPathStencilDepthOffsetNV: *fp_glPathStencilDepthOffsetNV =
	null: *fp_glPathStencilDepthOffsetNV;
export let glPathStencilFuncNV: *fp_glPathStencilFuncNV =
	null: *fp_glPathStencilFuncNV;
export let glPathStringNV: *fp_glPathStringNV =
	null: *fp_glPathStringNV;
export let glPathSubCommandsNV: *fp_glPathSubCommandsNV =
	null: *fp_glPathSubCommandsNV;
export let glPathSubCoordsNV: *fp_glPathSubCoordsNV =
	null: *fp_glPathSubCoordsNV;
export let glPauseTransformFeedback: *fp_glPauseTransformFeedback =
	null: *fp_glPauseTransformFeedback;
export let glPauseTransformFeedbackNV: *fp_glPauseTransformFeedbackNV =
	null: *fp_glPauseTransformFeedbackNV;
export let glPixelDataRangeNV: *fp_glPixelDataRangeNV =
	null: *fp_glPixelDataRangeNV;
export let glPixelMapx: *fp_glPixelMapx =
	null: *fp_glPixelMapx;
export let glPixelStoref: *fp_glPixelStoref =
	null: *fp_glPixelStoref;
export let glPixelStorei: *fp_glPixelStorei =
	null: *fp_glPixelStorei;
export let glPixelStorex: *fp_glPixelStorex =
	null: *fp_glPixelStorex;
export let glPixelTexGenParameterfSGIS: *fp_glPixelTexGenParameterfSGIS =
	null: *fp_glPixelTexGenParameterfSGIS;
export let glPixelTexGenParameterfvSGIS: *fp_glPixelTexGenParameterfvSGIS =
	null: *fp_glPixelTexGenParameterfvSGIS;
export let glPixelTexGenParameteriSGIS: *fp_glPixelTexGenParameteriSGIS =
	null: *fp_glPixelTexGenParameteriSGIS;
export let glPixelTexGenParameterivSGIS: *fp_glPixelTexGenParameterivSGIS =
	null: *fp_glPixelTexGenParameterivSGIS;
export let glPixelTexGenSGIX: *fp_glPixelTexGenSGIX =
	null: *fp_glPixelTexGenSGIX;
export let glPixelTransferxOES: *fp_glPixelTransferxOES =
	null: *fp_glPixelTransferxOES;
export let glPixelTransformParameterfEXT: *fp_glPixelTransformParameterfEXT =
	null: *fp_glPixelTransformParameterfEXT;
export let glPixelTransformParameterfvEXT: *fp_glPixelTransformParameterfvEXT =
	null: *fp_glPixelTransformParameterfvEXT;
export let glPixelTransformParameteriEXT: *fp_glPixelTransformParameteriEXT =
	null: *fp_glPixelTransformParameteriEXT;
export let glPixelTransformParameterivEXT: *fp_glPixelTransformParameterivEXT =
	null: *fp_glPixelTransformParameterivEXT;
export let glPixelZoomxOES: *fp_glPixelZoomxOES =
	null: *fp_glPixelZoomxOES;
export let glPointAlongPathNV: *fp_glPointAlongPathNV =
	null: *fp_glPointAlongPathNV;
export let glPointParameterf: *fp_glPointParameterf =
	null: *fp_glPointParameterf;
export let glPointParameterfARB: *fp_glPointParameterfARB =
	null: *fp_glPointParameterfARB;
export let glPointParameterfEXT: *fp_glPointParameterfEXT =
	null: *fp_glPointParameterfEXT;
export let glPointParameterfSGIS: *fp_glPointParameterfSGIS =
	null: *fp_glPointParameterfSGIS;
export let glPointParameterfv: *fp_glPointParameterfv =
	null: *fp_glPointParameterfv;
export let glPointParameterfvARB: *fp_glPointParameterfvARB =
	null: *fp_glPointParameterfvARB;
export let glPointParameterfvEXT: *fp_glPointParameterfvEXT =
	null: *fp_glPointParameterfvEXT;
export let glPointParameterfvSGIS: *fp_glPointParameterfvSGIS =
	null: *fp_glPointParameterfvSGIS;
export let glPointParameteri: *fp_glPointParameteri =
	null: *fp_glPointParameteri;
export let glPointParameteriNV: *fp_glPointParameteriNV =
	null: *fp_glPointParameteriNV;
export let glPointParameteriv: *fp_glPointParameteriv =
	null: *fp_glPointParameteriv;
export let glPointParameterivNV: *fp_glPointParameterivNV =
	null: *fp_glPointParameterivNV;
export let glPointParameterxvOES: *fp_glPointParameterxvOES =
	null: *fp_glPointParameterxvOES;
export let glPointSize: *fp_glPointSize =
	null: *fp_glPointSize;
export let glPointSizexOES: *fp_glPointSizexOES =
	null: *fp_glPointSizexOES;
export let glPollAsyncSGIX: *fp_glPollAsyncSGIX =
	null: *fp_glPollAsyncSGIX;
export let glPollInstrumentsSGIX: *fp_glPollInstrumentsSGIX =
	null: *fp_glPollInstrumentsSGIX;
export let glPolygonMode: *fp_glPolygonMode =
	null: *fp_glPolygonMode;
export let glPolygonOffset: *fp_glPolygonOffset =
	null: *fp_glPolygonOffset;
export let glPolygonOffsetClamp: *fp_glPolygonOffsetClamp =
	null: *fp_glPolygonOffsetClamp;
export let glPolygonOffsetClampEXT: *fp_glPolygonOffsetClampEXT =
	null: *fp_glPolygonOffsetClampEXT;
export let glPolygonOffsetEXT: *fp_glPolygonOffsetEXT =
	null: *fp_glPolygonOffsetEXT;
export let glPolygonOffsetxOES: *fp_glPolygonOffsetxOES =
	null: *fp_glPolygonOffsetxOES;
export let glPopDebugGroup: *fp_glPopDebugGroup =
	null: *fp_glPopDebugGroup;
export let glPopGroupMarkerEXT: *fp_glPopGroupMarkerEXT =
	null: *fp_glPopGroupMarkerEXT;
export let glPresentFrameDualFillNV: *fp_glPresentFrameDualFillNV =
	null: *fp_glPresentFrameDualFillNV;
export let glPresentFrameKeyedNV: *fp_glPresentFrameKeyedNV =
	null: *fp_glPresentFrameKeyedNV;
export let glPrimitiveBoundingBoxARB: *fp_glPrimitiveBoundingBoxARB =
	null: *fp_glPrimitiveBoundingBoxARB;
export let glPrimitiveRestartIndex: *fp_glPrimitiveRestartIndex =
	null: *fp_glPrimitiveRestartIndex;
export let glPrimitiveRestartIndexNV: *fp_glPrimitiveRestartIndexNV =
	null: *fp_glPrimitiveRestartIndexNV;
export let glPrimitiveRestartNV: *fp_glPrimitiveRestartNV =
	null: *fp_glPrimitiveRestartNV;
export let glPrioritizeTexturesEXT: *fp_glPrioritizeTexturesEXT =
	null: *fp_glPrioritizeTexturesEXT;
export let glPrioritizeTexturesxOES: *fp_glPrioritizeTexturesxOES =
	null: *fp_glPrioritizeTexturesxOES;
export let glProgramBinary: *fp_glProgramBinary =
	null: *fp_glProgramBinary;
export let glProgramBufferParametersIivNV: *fp_glProgramBufferParametersIivNV =
	null: *fp_glProgramBufferParametersIivNV;
export let glProgramBufferParametersIuivNV: *fp_glProgramBufferParametersIuivNV =
	null: *fp_glProgramBufferParametersIuivNV;
export let glProgramBufferParametersfvNV: *fp_glProgramBufferParametersfvNV =
	null: *fp_glProgramBufferParametersfvNV;
export let glProgramEnvParameter4dARB: *fp_glProgramEnvParameter4dARB =
	null: *fp_glProgramEnvParameter4dARB;
export let glProgramEnvParameter4dvARB: *fp_glProgramEnvParameter4dvARB =
	null: *fp_glProgramEnvParameter4dvARB;
export let glProgramEnvParameter4fARB: *fp_glProgramEnvParameter4fARB =
	null: *fp_glProgramEnvParameter4fARB;
export let glProgramEnvParameter4fvARB: *fp_glProgramEnvParameter4fvARB =
	null: *fp_glProgramEnvParameter4fvARB;
export let glProgramEnvParameterI4iNV: *fp_glProgramEnvParameterI4iNV =
	null: *fp_glProgramEnvParameterI4iNV;
export let glProgramEnvParameterI4ivNV: *fp_glProgramEnvParameterI4ivNV =
	null: *fp_glProgramEnvParameterI4ivNV;
export let glProgramEnvParameterI4uiNV: *fp_glProgramEnvParameterI4uiNV =
	null: *fp_glProgramEnvParameterI4uiNV;
export let glProgramEnvParameterI4uivNV: *fp_glProgramEnvParameterI4uivNV =
	null: *fp_glProgramEnvParameterI4uivNV;
export let glProgramEnvParameters4fvEXT: *fp_glProgramEnvParameters4fvEXT =
	null: *fp_glProgramEnvParameters4fvEXT;
export let glProgramEnvParametersI4ivNV: *fp_glProgramEnvParametersI4ivNV =
	null: *fp_glProgramEnvParametersI4ivNV;
export let glProgramEnvParametersI4uivNV: *fp_glProgramEnvParametersI4uivNV =
	null: *fp_glProgramEnvParametersI4uivNV;
export let glProgramLocalParameter4dARB: *fp_glProgramLocalParameter4dARB =
	null: *fp_glProgramLocalParameter4dARB;
export let glProgramLocalParameter4dvARB: *fp_glProgramLocalParameter4dvARB =
	null: *fp_glProgramLocalParameter4dvARB;
export let glProgramLocalParameter4fARB: *fp_glProgramLocalParameter4fARB =
	null: *fp_glProgramLocalParameter4fARB;
export let glProgramLocalParameter4fvARB: *fp_glProgramLocalParameter4fvARB =
	null: *fp_glProgramLocalParameter4fvARB;
export let glProgramLocalParameterI4iNV: *fp_glProgramLocalParameterI4iNV =
	null: *fp_glProgramLocalParameterI4iNV;
export let glProgramLocalParameterI4ivNV: *fp_glProgramLocalParameterI4ivNV =
	null: *fp_glProgramLocalParameterI4ivNV;
export let glProgramLocalParameterI4uiNV: *fp_glProgramLocalParameterI4uiNV =
	null: *fp_glProgramLocalParameterI4uiNV;
export let glProgramLocalParameterI4uivNV: *fp_glProgramLocalParameterI4uivNV =
	null: *fp_glProgramLocalParameterI4uivNV;
export let glProgramLocalParameters4fvEXT: *fp_glProgramLocalParameters4fvEXT =
	null: *fp_glProgramLocalParameters4fvEXT;
export let glProgramLocalParametersI4ivNV: *fp_glProgramLocalParametersI4ivNV =
	null: *fp_glProgramLocalParametersI4ivNV;
export let glProgramLocalParametersI4uivNV: *fp_glProgramLocalParametersI4uivNV =
	null: *fp_glProgramLocalParametersI4uivNV;
export let glProgramNamedParameter4dNV: *fp_glProgramNamedParameter4dNV =
	null: *fp_glProgramNamedParameter4dNV;
export let glProgramNamedParameter4dvNV: *fp_glProgramNamedParameter4dvNV =
	null: *fp_glProgramNamedParameter4dvNV;
export let glProgramNamedParameter4fNV: *fp_glProgramNamedParameter4fNV =
	null: *fp_glProgramNamedParameter4fNV;
export let glProgramNamedParameter4fvNV: *fp_glProgramNamedParameter4fvNV =
	null: *fp_glProgramNamedParameter4fvNV;
export let glProgramParameter4dNV: *fp_glProgramParameter4dNV =
	null: *fp_glProgramParameter4dNV;
export let glProgramParameter4dvNV: *fp_glProgramParameter4dvNV =
	null: *fp_glProgramParameter4dvNV;
export let glProgramParameter4fNV: *fp_glProgramParameter4fNV =
	null: *fp_glProgramParameter4fNV;
export let glProgramParameter4fvNV: *fp_glProgramParameter4fvNV =
	null: *fp_glProgramParameter4fvNV;
export let glProgramParameteri: *fp_glProgramParameteri =
	null: *fp_glProgramParameteri;
export let glProgramParameteriARB: *fp_glProgramParameteriARB =
	null: *fp_glProgramParameteriARB;
export let glProgramParameteriEXT: *fp_glProgramParameteriEXT =
	null: *fp_glProgramParameteriEXT;
export let glProgramParameters4dvNV: *fp_glProgramParameters4dvNV =
	null: *fp_glProgramParameters4dvNV;
export let glProgramParameters4fvNV: *fp_glProgramParameters4fvNV =
	null: *fp_glProgramParameters4fvNV;
export let glProgramPathFragmentInputGenNV: *fp_glProgramPathFragmentInputGenNV =
	null: *fp_glProgramPathFragmentInputGenNV;
export let glProgramStringARB: *fp_glProgramStringARB =
	null: *fp_glProgramStringARB;
export let glProgramSubroutineParametersuivNV: *fp_glProgramSubroutineParametersuivNV =
	null: *fp_glProgramSubroutineParametersuivNV;
export let glProgramUniform1d: *fp_glProgramUniform1d =
	null: *fp_glProgramUniform1d;
export let glProgramUniform1dEXT: *fp_glProgramUniform1dEXT =
	null: *fp_glProgramUniform1dEXT;
export let glProgramUniform1dv: *fp_glProgramUniform1dv =
	null: *fp_glProgramUniform1dv;
export let glProgramUniform1dvEXT: *fp_glProgramUniform1dvEXT =
	null: *fp_glProgramUniform1dvEXT;
export let glProgramUniform1f: *fp_glProgramUniform1f =
	null: *fp_glProgramUniform1f;
export let glProgramUniform1fEXT: *fp_glProgramUniform1fEXT =
	null: *fp_glProgramUniform1fEXT;
export let glProgramUniform1fv: *fp_glProgramUniform1fv =
	null: *fp_glProgramUniform1fv;
export let glProgramUniform1fvEXT: *fp_glProgramUniform1fvEXT =
	null: *fp_glProgramUniform1fvEXT;
export let glProgramUniform1i: *fp_glProgramUniform1i =
	null: *fp_glProgramUniform1i;
export let glProgramUniform1i64ARB: *fp_glProgramUniform1i64ARB =
	null: *fp_glProgramUniform1i64ARB;
export let glProgramUniform1i64NV: *fp_glProgramUniform1i64NV =
	null: *fp_glProgramUniform1i64NV;
export let glProgramUniform1i64vARB: *fp_glProgramUniform1i64vARB =
	null: *fp_glProgramUniform1i64vARB;
export let glProgramUniform1i64vNV: *fp_glProgramUniform1i64vNV =
	null: *fp_glProgramUniform1i64vNV;
export let glProgramUniform1iEXT: *fp_glProgramUniform1iEXT =
	null: *fp_glProgramUniform1iEXT;
export let glProgramUniform1iv: *fp_glProgramUniform1iv =
	null: *fp_glProgramUniform1iv;
export let glProgramUniform1ivEXT: *fp_glProgramUniform1ivEXT =
	null: *fp_glProgramUniform1ivEXT;
export let glProgramUniform1ui: *fp_glProgramUniform1ui =
	null: *fp_glProgramUniform1ui;
export let glProgramUniform1ui64ARB: *fp_glProgramUniform1ui64ARB =
	null: *fp_glProgramUniform1ui64ARB;
export let glProgramUniform1ui64NV: *fp_glProgramUniform1ui64NV =
	null: *fp_glProgramUniform1ui64NV;
export let glProgramUniform1ui64vARB: *fp_glProgramUniform1ui64vARB =
	null: *fp_glProgramUniform1ui64vARB;
export let glProgramUniform1ui64vNV: *fp_glProgramUniform1ui64vNV =
	null: *fp_glProgramUniform1ui64vNV;
export let glProgramUniform1uiEXT: *fp_glProgramUniform1uiEXT =
	null: *fp_glProgramUniform1uiEXT;
export let glProgramUniform1uiv: *fp_glProgramUniform1uiv =
	null: *fp_glProgramUniform1uiv;
export let glProgramUniform1uivEXT: *fp_glProgramUniform1uivEXT =
	null: *fp_glProgramUniform1uivEXT;
export let glProgramUniform2d: *fp_glProgramUniform2d =
	null: *fp_glProgramUniform2d;
export let glProgramUniform2dEXT: *fp_glProgramUniform2dEXT =
	null: *fp_glProgramUniform2dEXT;
export let glProgramUniform2dv: *fp_glProgramUniform2dv =
	null: *fp_glProgramUniform2dv;
export let glProgramUniform2dvEXT: *fp_glProgramUniform2dvEXT =
	null: *fp_glProgramUniform2dvEXT;
export let glProgramUniform2f: *fp_glProgramUniform2f =
	null: *fp_glProgramUniform2f;
export let glProgramUniform2fEXT: *fp_glProgramUniform2fEXT =
	null: *fp_glProgramUniform2fEXT;
export let glProgramUniform2fv: *fp_glProgramUniform2fv =
	null: *fp_glProgramUniform2fv;
export let glProgramUniform2fvEXT: *fp_glProgramUniform2fvEXT =
	null: *fp_glProgramUniform2fvEXT;
export let glProgramUniform2i: *fp_glProgramUniform2i =
	null: *fp_glProgramUniform2i;
export let glProgramUniform2i64ARB: *fp_glProgramUniform2i64ARB =
	null: *fp_glProgramUniform2i64ARB;
export let glProgramUniform2i64NV: *fp_glProgramUniform2i64NV =
	null: *fp_glProgramUniform2i64NV;
export let glProgramUniform2i64vARB: *fp_glProgramUniform2i64vARB =
	null: *fp_glProgramUniform2i64vARB;
export let glProgramUniform2i64vNV: *fp_glProgramUniform2i64vNV =
	null: *fp_glProgramUniform2i64vNV;
export let glProgramUniform2iEXT: *fp_glProgramUniform2iEXT =
	null: *fp_glProgramUniform2iEXT;
export let glProgramUniform2iv: *fp_glProgramUniform2iv =
	null: *fp_glProgramUniform2iv;
export let glProgramUniform2ivEXT: *fp_glProgramUniform2ivEXT =
	null: *fp_glProgramUniform2ivEXT;
export let glProgramUniform2ui: *fp_glProgramUniform2ui =
	null: *fp_glProgramUniform2ui;
export let glProgramUniform2ui64ARB: *fp_glProgramUniform2ui64ARB =
	null: *fp_glProgramUniform2ui64ARB;
export let glProgramUniform2ui64NV: *fp_glProgramUniform2ui64NV =
	null: *fp_glProgramUniform2ui64NV;
export let glProgramUniform2ui64vARB: *fp_glProgramUniform2ui64vARB =
	null: *fp_glProgramUniform2ui64vARB;
export let glProgramUniform2ui64vNV: *fp_glProgramUniform2ui64vNV =
	null: *fp_glProgramUniform2ui64vNV;
export let glProgramUniform2uiEXT: *fp_glProgramUniform2uiEXT =
	null: *fp_glProgramUniform2uiEXT;
export let glProgramUniform2uiv: *fp_glProgramUniform2uiv =
	null: *fp_glProgramUniform2uiv;
export let glProgramUniform2uivEXT: *fp_glProgramUniform2uivEXT =
	null: *fp_glProgramUniform2uivEXT;
export let glProgramUniform3d: *fp_glProgramUniform3d =
	null: *fp_glProgramUniform3d;
export let glProgramUniform3dEXT: *fp_glProgramUniform3dEXT =
	null: *fp_glProgramUniform3dEXT;
export let glProgramUniform3dv: *fp_glProgramUniform3dv =
	null: *fp_glProgramUniform3dv;
export let glProgramUniform3dvEXT: *fp_glProgramUniform3dvEXT =
	null: *fp_glProgramUniform3dvEXT;
export let glProgramUniform3f: *fp_glProgramUniform3f =
	null: *fp_glProgramUniform3f;
export let glProgramUniform3fEXT: *fp_glProgramUniform3fEXT =
	null: *fp_glProgramUniform3fEXT;
export let glProgramUniform3fv: *fp_glProgramUniform3fv =
	null: *fp_glProgramUniform3fv;
export let glProgramUniform3fvEXT: *fp_glProgramUniform3fvEXT =
	null: *fp_glProgramUniform3fvEXT;
export let glProgramUniform3i: *fp_glProgramUniform3i =
	null: *fp_glProgramUniform3i;
export let glProgramUniform3i64ARB: *fp_glProgramUniform3i64ARB =
	null: *fp_glProgramUniform3i64ARB;
export let glProgramUniform3i64NV: *fp_glProgramUniform3i64NV =
	null: *fp_glProgramUniform3i64NV;
export let glProgramUniform3i64vARB: *fp_glProgramUniform3i64vARB =
	null: *fp_glProgramUniform3i64vARB;
export let glProgramUniform3i64vNV: *fp_glProgramUniform3i64vNV =
	null: *fp_glProgramUniform3i64vNV;
export let glProgramUniform3iEXT: *fp_glProgramUniform3iEXT =
	null: *fp_glProgramUniform3iEXT;
export let glProgramUniform3iv: *fp_glProgramUniform3iv =
	null: *fp_glProgramUniform3iv;
export let glProgramUniform3ivEXT: *fp_glProgramUniform3ivEXT =
	null: *fp_glProgramUniform3ivEXT;
export let glProgramUniform3ui: *fp_glProgramUniform3ui =
	null: *fp_glProgramUniform3ui;
export let glProgramUniform3ui64ARB: *fp_glProgramUniform3ui64ARB =
	null: *fp_glProgramUniform3ui64ARB;
export let glProgramUniform3ui64NV: *fp_glProgramUniform3ui64NV =
	null: *fp_glProgramUniform3ui64NV;
export let glProgramUniform3ui64vARB: *fp_glProgramUniform3ui64vARB =
	null: *fp_glProgramUniform3ui64vARB;
export let glProgramUniform3ui64vNV: *fp_glProgramUniform3ui64vNV =
	null: *fp_glProgramUniform3ui64vNV;
export let glProgramUniform3uiEXT: *fp_glProgramUniform3uiEXT =
	null: *fp_glProgramUniform3uiEXT;
export let glProgramUniform3uiv: *fp_glProgramUniform3uiv =
	null: *fp_glProgramUniform3uiv;
export let glProgramUniform3uivEXT: *fp_glProgramUniform3uivEXT =
	null: *fp_glProgramUniform3uivEXT;
export let glProgramUniform4d: *fp_glProgramUniform4d =
	null: *fp_glProgramUniform4d;
export let glProgramUniform4dEXT: *fp_glProgramUniform4dEXT =
	null: *fp_glProgramUniform4dEXT;
export let glProgramUniform4dv: *fp_glProgramUniform4dv =
	null: *fp_glProgramUniform4dv;
export let glProgramUniform4dvEXT: *fp_glProgramUniform4dvEXT =
	null: *fp_glProgramUniform4dvEXT;
export let glProgramUniform4f: *fp_glProgramUniform4f =
	null: *fp_glProgramUniform4f;
export let glProgramUniform4fEXT: *fp_glProgramUniform4fEXT =
	null: *fp_glProgramUniform4fEXT;
export let glProgramUniform4fv: *fp_glProgramUniform4fv =
	null: *fp_glProgramUniform4fv;
export let glProgramUniform4fvEXT: *fp_glProgramUniform4fvEXT =
	null: *fp_glProgramUniform4fvEXT;
export let glProgramUniform4i: *fp_glProgramUniform4i =
	null: *fp_glProgramUniform4i;
export let glProgramUniform4i64ARB: *fp_glProgramUniform4i64ARB =
	null: *fp_glProgramUniform4i64ARB;
export let glProgramUniform4i64NV: *fp_glProgramUniform4i64NV =
	null: *fp_glProgramUniform4i64NV;
export let glProgramUniform4i64vARB: *fp_glProgramUniform4i64vARB =
	null: *fp_glProgramUniform4i64vARB;
export let glProgramUniform4i64vNV: *fp_glProgramUniform4i64vNV =
	null: *fp_glProgramUniform4i64vNV;
export let glProgramUniform4iEXT: *fp_glProgramUniform4iEXT =
	null: *fp_glProgramUniform4iEXT;
export let glProgramUniform4iv: *fp_glProgramUniform4iv =
	null: *fp_glProgramUniform4iv;
export let glProgramUniform4ivEXT: *fp_glProgramUniform4ivEXT =
	null: *fp_glProgramUniform4ivEXT;
export let glProgramUniform4ui: *fp_glProgramUniform4ui =
	null: *fp_glProgramUniform4ui;
export let glProgramUniform4ui64ARB: *fp_glProgramUniform4ui64ARB =
	null: *fp_glProgramUniform4ui64ARB;
export let glProgramUniform4ui64NV: *fp_glProgramUniform4ui64NV =
	null: *fp_glProgramUniform4ui64NV;
export let glProgramUniform4ui64vARB: *fp_glProgramUniform4ui64vARB =
	null: *fp_glProgramUniform4ui64vARB;
export let glProgramUniform4ui64vNV: *fp_glProgramUniform4ui64vNV =
	null: *fp_glProgramUniform4ui64vNV;
export let glProgramUniform4uiEXT: *fp_glProgramUniform4uiEXT =
	null: *fp_glProgramUniform4uiEXT;
export let glProgramUniform4uiv: *fp_glProgramUniform4uiv =
	null: *fp_glProgramUniform4uiv;
export let glProgramUniform4uivEXT: *fp_glProgramUniform4uivEXT =
	null: *fp_glProgramUniform4uivEXT;
export let glProgramUniformHandleui64ARB: *fp_glProgramUniformHandleui64ARB =
	null: *fp_glProgramUniformHandleui64ARB;
export let glProgramUniformHandleui64NV: *fp_glProgramUniformHandleui64NV =
	null: *fp_glProgramUniformHandleui64NV;
export let glProgramUniformHandleui64vARB: *fp_glProgramUniformHandleui64vARB =
	null: *fp_glProgramUniformHandleui64vARB;
export let glProgramUniformHandleui64vNV: *fp_glProgramUniformHandleui64vNV =
	null: *fp_glProgramUniformHandleui64vNV;
export let glProgramUniformMatrix2dv: *fp_glProgramUniformMatrix2dv =
	null: *fp_glProgramUniformMatrix2dv;
export let glProgramUniformMatrix2dvEXT: *fp_glProgramUniformMatrix2dvEXT =
	null: *fp_glProgramUniformMatrix2dvEXT;
export let glProgramUniformMatrix2fv: *fp_glProgramUniformMatrix2fv =
	null: *fp_glProgramUniformMatrix2fv;
export let glProgramUniformMatrix2fvEXT: *fp_glProgramUniformMatrix2fvEXT =
	null: *fp_glProgramUniformMatrix2fvEXT;
export let glProgramUniformMatrix2x3dv: *fp_glProgramUniformMatrix2x3dv =
	null: *fp_glProgramUniformMatrix2x3dv;
export let glProgramUniformMatrix2x3dvEXT: *fp_glProgramUniformMatrix2x3dvEXT =
	null: *fp_glProgramUniformMatrix2x3dvEXT;
export let glProgramUniformMatrix2x3fv: *fp_glProgramUniformMatrix2x3fv =
	null: *fp_glProgramUniformMatrix2x3fv;
export let glProgramUniformMatrix2x3fvEXT: *fp_glProgramUniformMatrix2x3fvEXT =
	null: *fp_glProgramUniformMatrix2x3fvEXT;
export let glProgramUniformMatrix2x4dv: *fp_glProgramUniformMatrix2x4dv =
	null: *fp_glProgramUniformMatrix2x4dv;
export let glProgramUniformMatrix2x4dvEXT: *fp_glProgramUniformMatrix2x4dvEXT =
	null: *fp_glProgramUniformMatrix2x4dvEXT;
export let glProgramUniformMatrix2x4fv: *fp_glProgramUniformMatrix2x4fv =
	null: *fp_glProgramUniformMatrix2x4fv;
export let glProgramUniformMatrix2x4fvEXT: *fp_glProgramUniformMatrix2x4fvEXT =
	null: *fp_glProgramUniformMatrix2x4fvEXT;
export let glProgramUniformMatrix3dv: *fp_glProgramUniformMatrix3dv =
	null: *fp_glProgramUniformMatrix3dv;
export let glProgramUniformMatrix3dvEXT: *fp_glProgramUniformMatrix3dvEXT =
	null: *fp_glProgramUniformMatrix3dvEXT;
export let glProgramUniformMatrix3fv: *fp_glProgramUniformMatrix3fv =
	null: *fp_glProgramUniformMatrix3fv;
export let glProgramUniformMatrix3fvEXT: *fp_glProgramUniformMatrix3fvEXT =
	null: *fp_glProgramUniformMatrix3fvEXT;
export let glProgramUniformMatrix3x2dv: *fp_glProgramUniformMatrix3x2dv =
	null: *fp_glProgramUniformMatrix3x2dv;
export let glProgramUniformMatrix3x2dvEXT: *fp_glProgramUniformMatrix3x2dvEXT =
	null: *fp_glProgramUniformMatrix3x2dvEXT;
export let glProgramUniformMatrix3x2fv: *fp_glProgramUniformMatrix3x2fv =
	null: *fp_glProgramUniformMatrix3x2fv;
export let glProgramUniformMatrix3x2fvEXT: *fp_glProgramUniformMatrix3x2fvEXT =
	null: *fp_glProgramUniformMatrix3x2fvEXT;
export let glProgramUniformMatrix3x4dv: *fp_glProgramUniformMatrix3x4dv =
	null: *fp_glProgramUniformMatrix3x4dv;
export let glProgramUniformMatrix3x4dvEXT: *fp_glProgramUniformMatrix3x4dvEXT =
	null: *fp_glProgramUniformMatrix3x4dvEXT;
export let glProgramUniformMatrix3x4fv: *fp_glProgramUniformMatrix3x4fv =
	null: *fp_glProgramUniformMatrix3x4fv;
export let glProgramUniformMatrix3x4fvEXT: *fp_glProgramUniformMatrix3x4fvEXT =
	null: *fp_glProgramUniformMatrix3x4fvEXT;
export let glProgramUniformMatrix4dv: *fp_glProgramUniformMatrix4dv =
	null: *fp_glProgramUniformMatrix4dv;
export let glProgramUniformMatrix4dvEXT: *fp_glProgramUniformMatrix4dvEXT =
	null: *fp_glProgramUniformMatrix4dvEXT;
export let glProgramUniformMatrix4fv: *fp_glProgramUniformMatrix4fv =
	null: *fp_glProgramUniformMatrix4fv;
export let glProgramUniformMatrix4fvEXT: *fp_glProgramUniformMatrix4fvEXT =
	null: *fp_glProgramUniformMatrix4fvEXT;
export let glProgramUniformMatrix4x2dv: *fp_glProgramUniformMatrix4x2dv =
	null: *fp_glProgramUniformMatrix4x2dv;
export let glProgramUniformMatrix4x2dvEXT: *fp_glProgramUniformMatrix4x2dvEXT =
	null: *fp_glProgramUniformMatrix4x2dvEXT;
export let glProgramUniformMatrix4x2fv: *fp_glProgramUniformMatrix4x2fv =
	null: *fp_glProgramUniformMatrix4x2fv;
export let glProgramUniformMatrix4x2fvEXT: *fp_glProgramUniformMatrix4x2fvEXT =
	null: *fp_glProgramUniformMatrix4x2fvEXT;
export let glProgramUniformMatrix4x3dv: *fp_glProgramUniformMatrix4x3dv =
	null: *fp_glProgramUniformMatrix4x3dv;
export let glProgramUniformMatrix4x3dvEXT: *fp_glProgramUniformMatrix4x3dvEXT =
	null: *fp_glProgramUniformMatrix4x3dvEXT;
export let glProgramUniformMatrix4x3fv: *fp_glProgramUniformMatrix4x3fv =
	null: *fp_glProgramUniformMatrix4x3fv;
export let glProgramUniformMatrix4x3fvEXT: *fp_glProgramUniformMatrix4x3fvEXT =
	null: *fp_glProgramUniformMatrix4x3fvEXT;
export let glProgramUniformui64NV: *fp_glProgramUniformui64NV =
	null: *fp_glProgramUniformui64NV;
export let glProgramUniformui64vNV: *fp_glProgramUniformui64vNV =
	null: *fp_glProgramUniformui64vNV;
export let glProgramVertexLimitNV: *fp_glProgramVertexLimitNV =
	null: *fp_glProgramVertexLimitNV;
export let glProvokingVertex: *fp_glProvokingVertex =
	null: *fp_glProvokingVertex;
export let glProvokingVertexEXT: *fp_glProvokingVertexEXT =
	null: *fp_glProvokingVertexEXT;
export let glPushClientAttribDefaultEXT: *fp_glPushClientAttribDefaultEXT =
	null: *fp_glPushClientAttribDefaultEXT;
export let glPushDebugGroup: *fp_glPushDebugGroup =
	null: *fp_glPushDebugGroup;
export let glPushGroupMarkerEXT: *fp_glPushGroupMarkerEXT =
	null: *fp_glPushGroupMarkerEXT;
export let glQueryCounter: *fp_glQueryCounter =
	null: *fp_glQueryCounter;
export let glQueryMatrixxOES: *fp_glQueryMatrixxOES =
	null: *fp_glQueryMatrixxOES;
export let glQueryObjectParameteruiAMD: *fp_glQueryObjectParameteruiAMD =
	null: *fp_glQueryObjectParameteruiAMD;
export let glQueryResourceNV: *fp_glQueryResourceNV =
	null: *fp_glQueryResourceNV;
export let glQueryResourceTagNV: *fp_glQueryResourceTagNV =
	null: *fp_glQueryResourceTagNV;
export let glRasterPos2xOES: *fp_glRasterPos2xOES =
	null: *fp_glRasterPos2xOES;
export let glRasterPos2xvOES: *fp_glRasterPos2xvOES =
	null: *fp_glRasterPos2xvOES;
export let glRasterPos3xOES: *fp_glRasterPos3xOES =
	null: *fp_glRasterPos3xOES;
export let glRasterPos3xvOES: *fp_glRasterPos3xvOES =
	null: *fp_glRasterPos3xvOES;
export let glRasterPos4xOES: *fp_glRasterPos4xOES =
	null: *fp_glRasterPos4xOES;
export let glRasterPos4xvOES: *fp_glRasterPos4xvOES =
	null: *fp_glRasterPos4xvOES;
export let glRasterSamplesEXT: *fp_glRasterSamplesEXT =
	null: *fp_glRasterSamplesEXT;
export let glReadBuffer: *fp_glReadBuffer =
	null: *fp_glReadBuffer;
export let glReadInstrumentsSGIX: *fp_glReadInstrumentsSGIX =
	null: *fp_glReadInstrumentsSGIX;
export let glReadPixels: *fp_glReadPixels =
	null: *fp_glReadPixels;
export let glReadnPixels: *fp_glReadnPixels =
	null: *fp_glReadnPixels;
export let glReadnPixelsARB: *fp_glReadnPixelsARB =
	null: *fp_glReadnPixelsARB;
export let glRectxOES: *fp_glRectxOES =
	null: *fp_glRectxOES;
export let glRectxvOES: *fp_glRectxvOES =
	null: *fp_glRectxvOES;
export let glReferencePlaneSGIX: *fp_glReferencePlaneSGIX =
	null: *fp_glReferencePlaneSGIX;
export let glReleaseKeyedMutexWin32EXT: *fp_glReleaseKeyedMutexWin32EXT =
	null: *fp_glReleaseKeyedMutexWin32EXT;
export let glReleaseShaderCompiler: *fp_glReleaseShaderCompiler =
	null: *fp_glReleaseShaderCompiler;
export let glRenderGpuMaskNV: *fp_glRenderGpuMaskNV =
	null: *fp_glRenderGpuMaskNV;
export let glRenderbufferStorage: *fp_glRenderbufferStorage =
	null: *fp_glRenderbufferStorage;
export let glRenderbufferStorageEXT: *fp_glRenderbufferStorageEXT =
	null: *fp_glRenderbufferStorageEXT;
export let glRenderbufferStorageMultisample: *fp_glRenderbufferStorageMultisample =
	null: *fp_glRenderbufferStorageMultisample;
export let glRenderbufferStorageMultisampleAdvancedAMD: *fp_glRenderbufferStorageMultisampleAdvancedAMD =
	null: *fp_glRenderbufferStorageMultisampleAdvancedAMD;
export let glRenderbufferStorageMultisampleCoverageNV: *fp_glRenderbufferStorageMultisampleCoverageNV =
	null: *fp_glRenderbufferStorageMultisampleCoverageNV;
export let glRenderbufferStorageMultisampleEXT: *fp_glRenderbufferStorageMultisampleEXT =
	null: *fp_glRenderbufferStorageMultisampleEXT;
export let glReplacementCodePointerSUN: *fp_glReplacementCodePointerSUN =
	null: *fp_glReplacementCodePointerSUN;
export let glReplacementCodeubSUN: *fp_glReplacementCodeubSUN =
	null: *fp_glReplacementCodeubSUN;
export let glReplacementCodeubvSUN: *fp_glReplacementCodeubvSUN =
	null: *fp_glReplacementCodeubvSUN;
export let glReplacementCodeuiColor3fVertex3fSUN: *fp_glReplacementCodeuiColor3fVertex3fSUN =
	null: *fp_glReplacementCodeuiColor3fVertex3fSUN;
export let glReplacementCodeuiColor3fVertex3fvSUN: *fp_glReplacementCodeuiColor3fVertex3fvSUN =
	null: *fp_glReplacementCodeuiColor3fVertex3fvSUN;
export let glReplacementCodeuiColor4fNormal3fVertex3fSUN: *fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN =
	null: *fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
export let glReplacementCodeuiColor4fNormal3fVertex3fvSUN: *fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN =
	null: *fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
export let glReplacementCodeuiColor4ubVertex3fSUN: *fp_glReplacementCodeuiColor4ubVertex3fSUN =
	null: *fp_glReplacementCodeuiColor4ubVertex3fSUN;
export let glReplacementCodeuiColor4ubVertex3fvSUN: *fp_glReplacementCodeuiColor4ubVertex3fvSUN =
	null: *fp_glReplacementCodeuiColor4ubVertex3fvSUN;
export let glReplacementCodeuiNormal3fVertex3fSUN: *fp_glReplacementCodeuiNormal3fVertex3fSUN =
	null: *fp_glReplacementCodeuiNormal3fVertex3fSUN;
export let glReplacementCodeuiNormal3fVertex3fvSUN: *fp_glReplacementCodeuiNormal3fVertex3fvSUN =
	null: *fp_glReplacementCodeuiNormal3fVertex3fvSUN;
export let glReplacementCodeuiSUN: *fp_glReplacementCodeuiSUN =
	null: *fp_glReplacementCodeuiSUN;
export let glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN =
	null: *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
export let glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN =
	null: *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
export let glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN =
	null: *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
export let glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN =
	null: *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
export let glReplacementCodeuiTexCoord2fVertex3fSUN: *fp_glReplacementCodeuiTexCoord2fVertex3fSUN =
	null: *fp_glReplacementCodeuiTexCoord2fVertex3fSUN;
export let glReplacementCodeuiTexCoord2fVertex3fvSUN: *fp_glReplacementCodeuiTexCoord2fVertex3fvSUN =
	null: *fp_glReplacementCodeuiTexCoord2fVertex3fvSUN;
export let glReplacementCodeuiVertex3fSUN: *fp_glReplacementCodeuiVertex3fSUN =
	null: *fp_glReplacementCodeuiVertex3fSUN;
export let glReplacementCodeuiVertex3fvSUN: *fp_glReplacementCodeuiVertex3fvSUN =
	null: *fp_glReplacementCodeuiVertex3fvSUN;
export let glReplacementCodeuivSUN: *fp_glReplacementCodeuivSUN =
	null: *fp_glReplacementCodeuivSUN;
export let glReplacementCodeusSUN: *fp_glReplacementCodeusSUN =
	null: *fp_glReplacementCodeusSUN;
export let glReplacementCodeusvSUN: *fp_glReplacementCodeusvSUN =
	null: *fp_glReplacementCodeusvSUN;
export let glRequestResidentProgramsNV: *fp_glRequestResidentProgramsNV =
	null: *fp_glRequestResidentProgramsNV;
export let glResetHistogramEXT: *fp_glResetHistogramEXT =
	null: *fp_glResetHistogramEXT;
export let glResetMemoryObjectParameterNV: *fp_glResetMemoryObjectParameterNV =
	null: *fp_glResetMemoryObjectParameterNV;
export let glResetMinmaxEXT: *fp_glResetMinmaxEXT =
	null: *fp_glResetMinmaxEXT;
export let glResizeBuffersMESA: *fp_glResizeBuffersMESA =
	null: *fp_glResizeBuffersMESA;
export let glResolveDepthValuesNV: *fp_glResolveDepthValuesNV =
	null: *fp_glResolveDepthValuesNV;
export let glResumeTransformFeedback: *fp_glResumeTransformFeedback =
	null: *fp_glResumeTransformFeedback;
export let glResumeTransformFeedbackNV: *fp_glResumeTransformFeedbackNV =
	null: *fp_glResumeTransformFeedbackNV;
export let glRotatexOES: *fp_glRotatexOES =
	null: *fp_glRotatexOES;
export let glSampleCoverage: *fp_glSampleCoverage =
	null: *fp_glSampleCoverage;
export let glSampleCoverageARB: *fp_glSampleCoverageARB =
	null: *fp_glSampleCoverageARB;
export let glSampleMapATI: *fp_glSampleMapATI =
	null: *fp_glSampleMapATI;
export let glSampleMaskEXT: *fp_glSampleMaskEXT =
	null: *fp_glSampleMaskEXT;
export let glSampleMaskIndexedNV: *fp_glSampleMaskIndexedNV =
	null: *fp_glSampleMaskIndexedNV;
export let glSampleMaskSGIS: *fp_glSampleMaskSGIS =
	null: *fp_glSampleMaskSGIS;
export let glSampleMaski: *fp_glSampleMaski =
	null: *fp_glSampleMaski;
export let glSamplePatternEXT: *fp_glSamplePatternEXT =
	null: *fp_glSamplePatternEXT;
export let glSamplePatternSGIS: *fp_glSamplePatternSGIS =
	null: *fp_glSamplePatternSGIS;
export let glSamplerParameterIiv: *fp_glSamplerParameterIiv =
	null: *fp_glSamplerParameterIiv;
export let glSamplerParameterIuiv: *fp_glSamplerParameterIuiv =
	null: *fp_glSamplerParameterIuiv;
export let glSamplerParameterf: *fp_glSamplerParameterf =
	null: *fp_glSamplerParameterf;
export let glSamplerParameterfv: *fp_glSamplerParameterfv =
	null: *fp_glSamplerParameterfv;
export let glSamplerParameteri: *fp_glSamplerParameteri =
	null: *fp_glSamplerParameteri;
export let glSamplerParameteriv: *fp_glSamplerParameteriv =
	null: *fp_glSamplerParameteriv;
export let glScalexOES: *fp_glScalexOES =
	null: *fp_glScalexOES;
export let glScissor: *fp_glScissor =
	null: *fp_glScissor;
export let glScissorArrayv: *fp_glScissorArrayv =
	null: *fp_glScissorArrayv;
export let glScissorExclusiveArrayvNV: *fp_glScissorExclusiveArrayvNV =
	null: *fp_glScissorExclusiveArrayvNV;
export let glScissorExclusiveNV: *fp_glScissorExclusiveNV =
	null: *fp_glScissorExclusiveNV;
export let glScissorIndexed: *fp_glScissorIndexed =
	null: *fp_glScissorIndexed;
export let glScissorIndexedv: *fp_glScissorIndexedv =
	null: *fp_glScissorIndexedv;
export let glSecondaryColor3bEXT: *fp_glSecondaryColor3bEXT =
	null: *fp_glSecondaryColor3bEXT;
export let glSecondaryColor3bvEXT: *fp_glSecondaryColor3bvEXT =
	null: *fp_glSecondaryColor3bvEXT;
export let glSecondaryColor3dEXT: *fp_glSecondaryColor3dEXT =
	null: *fp_glSecondaryColor3dEXT;
export let glSecondaryColor3dvEXT: *fp_glSecondaryColor3dvEXT =
	null: *fp_glSecondaryColor3dvEXT;
export let glSecondaryColor3fEXT: *fp_glSecondaryColor3fEXT =
	null: *fp_glSecondaryColor3fEXT;
export let glSecondaryColor3fvEXT: *fp_glSecondaryColor3fvEXT =
	null: *fp_glSecondaryColor3fvEXT;
export let glSecondaryColor3hNV: *fp_glSecondaryColor3hNV =
	null: *fp_glSecondaryColor3hNV;
export let glSecondaryColor3hvNV: *fp_glSecondaryColor3hvNV =
	null: *fp_glSecondaryColor3hvNV;
export let glSecondaryColor3iEXT: *fp_glSecondaryColor3iEXT =
	null: *fp_glSecondaryColor3iEXT;
export let glSecondaryColor3ivEXT: *fp_glSecondaryColor3ivEXT =
	null: *fp_glSecondaryColor3ivEXT;
export let glSecondaryColor3sEXT: *fp_glSecondaryColor3sEXT =
	null: *fp_glSecondaryColor3sEXT;
export let glSecondaryColor3svEXT: *fp_glSecondaryColor3svEXT =
	null: *fp_glSecondaryColor3svEXT;
export let glSecondaryColor3ubEXT: *fp_glSecondaryColor3ubEXT =
	null: *fp_glSecondaryColor3ubEXT;
export let glSecondaryColor3ubvEXT: *fp_glSecondaryColor3ubvEXT =
	null: *fp_glSecondaryColor3ubvEXT;
export let glSecondaryColor3uiEXT: *fp_glSecondaryColor3uiEXT =
	null: *fp_glSecondaryColor3uiEXT;
export let glSecondaryColor3uivEXT: *fp_glSecondaryColor3uivEXT =
	null: *fp_glSecondaryColor3uivEXT;
export let glSecondaryColor3usEXT: *fp_glSecondaryColor3usEXT =
	null: *fp_glSecondaryColor3usEXT;
export let glSecondaryColor3usvEXT: *fp_glSecondaryColor3usvEXT =
	null: *fp_glSecondaryColor3usvEXT;
export let glSecondaryColorFormatNV: *fp_glSecondaryColorFormatNV =
	null: *fp_glSecondaryColorFormatNV;
export let glSecondaryColorPointerEXT: *fp_glSecondaryColorPointerEXT =
	null: *fp_glSecondaryColorPointerEXT;
export let glSecondaryColorPointerListIBM: *fp_glSecondaryColorPointerListIBM =
	null: *fp_glSecondaryColorPointerListIBM;
export let glSelectPerfMonitorCountersAMD: *fp_glSelectPerfMonitorCountersAMD =
	null: *fp_glSelectPerfMonitorCountersAMD;
export let glSemaphoreParameterivNV: *fp_glSemaphoreParameterivNV =
	null: *fp_glSemaphoreParameterivNV;
export let glSemaphoreParameterui64vEXT: *fp_glSemaphoreParameterui64vEXT =
	null: *fp_glSemaphoreParameterui64vEXT;
export let glSeparableFilter2DEXT: *fp_glSeparableFilter2DEXT =
	null: *fp_glSeparableFilter2DEXT;
export let glSetFenceAPPLE: *fp_glSetFenceAPPLE =
	null: *fp_glSetFenceAPPLE;
export let glSetFenceNV: *fp_glSetFenceNV =
	null: *fp_glSetFenceNV;
export let glSetFragmentShaderConstantATI: *fp_glSetFragmentShaderConstantATI =
	null: *fp_glSetFragmentShaderConstantATI;
export let glSetInvariantEXT: *fp_glSetInvariantEXT =
	null: *fp_glSetInvariantEXT;
export let glSetLocalConstantEXT: *fp_glSetLocalConstantEXT =
	null: *fp_glSetLocalConstantEXT;
export let glSetMultisamplefvAMD: *fp_glSetMultisamplefvAMD =
	null: *fp_glSetMultisamplefvAMD;
export let glShaderBinary: *fp_glShaderBinary =
	null: *fp_glShaderBinary;
export let glShaderOp1EXT: *fp_glShaderOp1EXT =
	null: *fp_glShaderOp1EXT;
export let glShaderOp2EXT: *fp_glShaderOp2EXT =
	null: *fp_glShaderOp2EXT;
export let glShaderOp3EXT: *fp_glShaderOp3EXT =
	null: *fp_glShaderOp3EXT;
export let glShaderSource: *fp_glShaderSource =
	null: *fp_glShaderSource;
export let glShaderSourceARB: *fp_glShaderSourceARB =
	null: *fp_glShaderSourceARB;
export let glShaderStorageBlockBinding: *fp_glShaderStorageBlockBinding =
	null: *fp_glShaderStorageBlockBinding;
export let glShadingRateImageBarrierNV: *fp_glShadingRateImageBarrierNV =
	null: *fp_glShadingRateImageBarrierNV;
export let glShadingRateImagePaletteNV: *fp_glShadingRateImagePaletteNV =
	null: *fp_glShadingRateImagePaletteNV;
export let glShadingRateSampleOrderCustomNV: *fp_glShadingRateSampleOrderCustomNV =
	null: *fp_glShadingRateSampleOrderCustomNV;
export let glShadingRateSampleOrderNV: *fp_glShadingRateSampleOrderNV =
	null: *fp_glShadingRateSampleOrderNV;
export let glSharpenTexFuncSGIS: *fp_glSharpenTexFuncSGIS =
	null: *fp_glSharpenTexFuncSGIS;
export let glSignalSemaphoreEXT: *fp_glSignalSemaphoreEXT =
	null: *fp_glSignalSemaphoreEXT;
export let glSignalSemaphoreui64NVX: *fp_glSignalSemaphoreui64NVX =
	null: *fp_glSignalSemaphoreui64NVX;
export let glSignalVkFenceNV: *fp_glSignalVkFenceNV =
	null: *fp_glSignalVkFenceNV;
export let glSignalVkSemaphoreNV: *fp_glSignalVkSemaphoreNV =
	null: *fp_glSignalVkSemaphoreNV;
export let glSpecializeShaderARB: *fp_glSpecializeShaderARB =
	null: *fp_glSpecializeShaderARB;
export let glSpriteParameterfSGIX: *fp_glSpriteParameterfSGIX =
	null: *fp_glSpriteParameterfSGIX;
export let glSpriteParameterfvSGIX: *fp_glSpriteParameterfvSGIX =
	null: *fp_glSpriteParameterfvSGIX;
export let glSpriteParameteriSGIX: *fp_glSpriteParameteriSGIX =
	null: *fp_glSpriteParameteriSGIX;
export let glSpriteParameterivSGIX: *fp_glSpriteParameterivSGIX =
	null: *fp_glSpriteParameterivSGIX;
export let glStartInstrumentsSGIX: *fp_glStartInstrumentsSGIX =
	null: *fp_glStartInstrumentsSGIX;
export let glStateCaptureNV: *fp_glStateCaptureNV =
	null: *fp_glStateCaptureNV;
export let glStencilClearTagEXT: *fp_glStencilClearTagEXT =
	null: *fp_glStencilClearTagEXT;
export let glStencilFillPathInstancedNV: *fp_glStencilFillPathInstancedNV =
	null: *fp_glStencilFillPathInstancedNV;
export let glStencilFillPathNV: *fp_glStencilFillPathNV =
	null: *fp_glStencilFillPathNV;
export let glStencilFunc: *fp_glStencilFunc =
	null: *fp_glStencilFunc;
export let glStencilFuncSeparate: *fp_glStencilFuncSeparate =
	null: *fp_glStencilFuncSeparate;
export let glStencilFuncSeparateATI: *fp_glStencilFuncSeparateATI =
	null: *fp_glStencilFuncSeparateATI;
export let glStencilMask: *fp_glStencilMask =
	null: *fp_glStencilMask;
export let glStencilMaskSeparate: *fp_glStencilMaskSeparate =
	null: *fp_glStencilMaskSeparate;
export let glStencilOp: *fp_glStencilOp =
	null: *fp_glStencilOp;
export let glStencilOpSeparate: *fp_glStencilOpSeparate =
	null: *fp_glStencilOpSeparate;
export let glStencilOpSeparateATI: *fp_glStencilOpSeparateATI =
	null: *fp_glStencilOpSeparateATI;
export let glStencilOpValueAMD: *fp_glStencilOpValueAMD =
	null: *fp_glStencilOpValueAMD;
export let glStencilStrokePathInstancedNV: *fp_glStencilStrokePathInstancedNV =
	null: *fp_glStencilStrokePathInstancedNV;
export let glStencilStrokePathNV: *fp_glStencilStrokePathNV =
	null: *fp_glStencilStrokePathNV;
export let glStencilThenCoverFillPathInstancedNV: *fp_glStencilThenCoverFillPathInstancedNV =
	null: *fp_glStencilThenCoverFillPathInstancedNV;
export let glStencilThenCoverFillPathNV: *fp_glStencilThenCoverFillPathNV =
	null: *fp_glStencilThenCoverFillPathNV;
export let glStencilThenCoverStrokePathInstancedNV: *fp_glStencilThenCoverStrokePathInstancedNV =
	null: *fp_glStencilThenCoverStrokePathInstancedNV;
export let glStencilThenCoverStrokePathNV: *fp_glStencilThenCoverStrokePathNV =
	null: *fp_glStencilThenCoverStrokePathNV;
export let glStopInstrumentsSGIX: *fp_glStopInstrumentsSGIX =
	null: *fp_glStopInstrumentsSGIX;
export let glStringMarkerGREMEDY: *fp_glStringMarkerGREMEDY =
	null: *fp_glStringMarkerGREMEDY;
export let glSubpixelPrecisionBiasNV: *fp_glSubpixelPrecisionBiasNV =
	null: *fp_glSubpixelPrecisionBiasNV;
export let glSwizzleEXT: *fp_glSwizzleEXT =
	null: *fp_glSwizzleEXT;
export let glSyncTextureINTEL: *fp_glSyncTextureINTEL =
	null: *fp_glSyncTextureINTEL;
export let glTagSampleBufferSGIX: *fp_glTagSampleBufferSGIX =
	null: *fp_glTagSampleBufferSGIX;
export let glTangent3bEXT: *fp_glTangent3bEXT =
	null: *fp_glTangent3bEXT;
export let glTangent3bvEXT: *fp_glTangent3bvEXT =
	null: *fp_glTangent3bvEXT;
export let glTangent3dEXT: *fp_glTangent3dEXT =
	null: *fp_glTangent3dEXT;
export let glTangent3dvEXT: *fp_glTangent3dvEXT =
	null: *fp_glTangent3dvEXT;
export let glTangent3fEXT: *fp_glTangent3fEXT =
	null: *fp_glTangent3fEXT;
export let glTangent3fvEXT: *fp_glTangent3fvEXT =
	null: *fp_glTangent3fvEXT;
export let glTangent3iEXT: *fp_glTangent3iEXT =
	null: *fp_glTangent3iEXT;
export let glTangent3ivEXT: *fp_glTangent3ivEXT =
	null: *fp_glTangent3ivEXT;
export let glTangent3sEXT: *fp_glTangent3sEXT =
	null: *fp_glTangent3sEXT;
export let glTangent3svEXT: *fp_glTangent3svEXT =
	null: *fp_glTangent3svEXT;
export let glTangentPointerEXT: *fp_glTangentPointerEXT =
	null: *fp_glTangentPointerEXT;
export let glTbufferMask3DFX: *fp_glTbufferMask3DFX =
	null: *fp_glTbufferMask3DFX;
export let glTessellationFactorAMD: *fp_glTessellationFactorAMD =
	null: *fp_glTessellationFactorAMD;
export let glTessellationModeAMD: *fp_glTessellationModeAMD =
	null: *fp_glTessellationModeAMD;
export let glTestFenceAPPLE: *fp_glTestFenceAPPLE =
	null: *fp_glTestFenceAPPLE;
export let glTestFenceNV: *fp_glTestFenceNV =
	null: *fp_glTestFenceNV;
export let glTestObjectAPPLE: *fp_glTestObjectAPPLE =
	null: *fp_glTestObjectAPPLE;
export let glTexAttachMemoryNV: *fp_glTexAttachMemoryNV =
	null: *fp_glTexAttachMemoryNV;
export let glTexBuffer: *fp_glTexBuffer =
	null: *fp_glTexBuffer;
export let glTexBufferARB: *fp_glTexBufferARB =
	null: *fp_glTexBufferARB;
export let glTexBufferEXT: *fp_glTexBufferEXT =
	null: *fp_glTexBufferEXT;
export let glTexBufferRange: *fp_glTexBufferRange =
	null: *fp_glTexBufferRange;
export let glTexBumpParameterfvATI: *fp_glTexBumpParameterfvATI =
	null: *fp_glTexBumpParameterfvATI;
export let glTexBumpParameterivATI: *fp_glTexBumpParameterivATI =
	null: *fp_glTexBumpParameterivATI;
export let glTexCoord1bOES: *fp_glTexCoord1bOES =
	null: *fp_glTexCoord1bOES;
export let glTexCoord1bvOES: *fp_glTexCoord1bvOES =
	null: *fp_glTexCoord1bvOES;
export let glTexCoord1hNV: *fp_glTexCoord1hNV =
	null: *fp_glTexCoord1hNV;
export let glTexCoord1hvNV: *fp_glTexCoord1hvNV =
	null: *fp_glTexCoord1hvNV;
export let glTexCoord1xOES: *fp_glTexCoord1xOES =
	null: *fp_glTexCoord1xOES;
export let glTexCoord1xvOES: *fp_glTexCoord1xvOES =
	null: *fp_glTexCoord1xvOES;
export let glTexCoord2bOES: *fp_glTexCoord2bOES =
	null: *fp_glTexCoord2bOES;
export let glTexCoord2bvOES: *fp_glTexCoord2bvOES =
	null: *fp_glTexCoord2bvOES;
export let glTexCoord2fColor3fVertex3fSUN: *fp_glTexCoord2fColor3fVertex3fSUN =
	null: *fp_glTexCoord2fColor3fVertex3fSUN;
export let glTexCoord2fColor3fVertex3fvSUN: *fp_glTexCoord2fColor3fVertex3fvSUN =
	null: *fp_glTexCoord2fColor3fVertex3fvSUN;
export let glTexCoord2fColor4fNormal3fVertex3fSUN: *fp_glTexCoord2fColor4fNormal3fVertex3fSUN =
	null: *fp_glTexCoord2fColor4fNormal3fVertex3fSUN;
export let glTexCoord2fColor4fNormal3fVertex3fvSUN: *fp_glTexCoord2fColor4fNormal3fVertex3fvSUN =
	null: *fp_glTexCoord2fColor4fNormal3fVertex3fvSUN;
export let glTexCoord2fColor4ubVertex3fSUN: *fp_glTexCoord2fColor4ubVertex3fSUN =
	null: *fp_glTexCoord2fColor4ubVertex3fSUN;
export let glTexCoord2fColor4ubVertex3fvSUN: *fp_glTexCoord2fColor4ubVertex3fvSUN =
	null: *fp_glTexCoord2fColor4ubVertex3fvSUN;
export let glTexCoord2fNormal3fVertex3fSUN: *fp_glTexCoord2fNormal3fVertex3fSUN =
	null: *fp_glTexCoord2fNormal3fVertex3fSUN;
export let glTexCoord2fNormal3fVertex3fvSUN: *fp_glTexCoord2fNormal3fVertex3fvSUN =
	null: *fp_glTexCoord2fNormal3fVertex3fvSUN;
export let glTexCoord2fVertex3fSUN: *fp_glTexCoord2fVertex3fSUN =
	null: *fp_glTexCoord2fVertex3fSUN;
export let glTexCoord2fVertex3fvSUN: *fp_glTexCoord2fVertex3fvSUN =
	null: *fp_glTexCoord2fVertex3fvSUN;
export let glTexCoord2hNV: *fp_glTexCoord2hNV =
	null: *fp_glTexCoord2hNV;
export let glTexCoord2hvNV: *fp_glTexCoord2hvNV =
	null: *fp_glTexCoord2hvNV;
export let glTexCoord2xOES: *fp_glTexCoord2xOES =
	null: *fp_glTexCoord2xOES;
export let glTexCoord2xvOES: *fp_glTexCoord2xvOES =
	null: *fp_glTexCoord2xvOES;
export let glTexCoord3bOES: *fp_glTexCoord3bOES =
	null: *fp_glTexCoord3bOES;
export let glTexCoord3bvOES: *fp_glTexCoord3bvOES =
	null: *fp_glTexCoord3bvOES;
export let glTexCoord3hNV: *fp_glTexCoord3hNV =
	null: *fp_glTexCoord3hNV;
export let glTexCoord3hvNV: *fp_glTexCoord3hvNV =
	null: *fp_glTexCoord3hvNV;
export let glTexCoord3xOES: *fp_glTexCoord3xOES =
	null: *fp_glTexCoord3xOES;
export let glTexCoord3xvOES: *fp_glTexCoord3xvOES =
	null: *fp_glTexCoord3xvOES;
export let glTexCoord4bOES: *fp_glTexCoord4bOES =
	null: *fp_glTexCoord4bOES;
export let glTexCoord4bvOES: *fp_glTexCoord4bvOES =
	null: *fp_glTexCoord4bvOES;
export let glTexCoord4fColor4fNormal3fVertex4fSUN: *fp_glTexCoord4fColor4fNormal3fVertex4fSUN =
	null: *fp_glTexCoord4fColor4fNormal3fVertex4fSUN;
export let glTexCoord4fColor4fNormal3fVertex4fvSUN: *fp_glTexCoord4fColor4fNormal3fVertex4fvSUN =
	null: *fp_glTexCoord4fColor4fNormal3fVertex4fvSUN;
export let glTexCoord4fVertex4fSUN: *fp_glTexCoord4fVertex4fSUN =
	null: *fp_glTexCoord4fVertex4fSUN;
export let glTexCoord4fVertex4fvSUN: *fp_glTexCoord4fVertex4fvSUN =
	null: *fp_glTexCoord4fVertex4fvSUN;
export let glTexCoord4hNV: *fp_glTexCoord4hNV =
	null: *fp_glTexCoord4hNV;
export let glTexCoord4hvNV: *fp_glTexCoord4hvNV =
	null: *fp_glTexCoord4hvNV;
export let glTexCoord4xOES: *fp_glTexCoord4xOES =
	null: *fp_glTexCoord4xOES;
export let glTexCoord4xvOES: *fp_glTexCoord4xvOES =
	null: *fp_glTexCoord4xvOES;
export let glTexCoordFormatNV: *fp_glTexCoordFormatNV =
	null: *fp_glTexCoordFormatNV;
export let glTexCoordPointerEXT: *fp_glTexCoordPointerEXT =
	null: *fp_glTexCoordPointerEXT;
export let glTexCoordPointerListIBM: *fp_glTexCoordPointerListIBM =
	null: *fp_glTexCoordPointerListIBM;
export let glTexCoordPointervINTEL: *fp_glTexCoordPointervINTEL =
	null: *fp_glTexCoordPointervINTEL;
export let glTexEnvxOES: *fp_glTexEnvxOES =
	null: *fp_glTexEnvxOES;
export let glTexEnvxvOES: *fp_glTexEnvxvOES =
	null: *fp_glTexEnvxvOES;
export let glTexFilterFuncSGIS: *fp_glTexFilterFuncSGIS =
	null: *fp_glTexFilterFuncSGIS;
export let glTexGenxOES: *fp_glTexGenxOES =
	null: *fp_glTexGenxOES;
export let glTexGenxvOES: *fp_glTexGenxvOES =
	null: *fp_glTexGenxvOES;
export let glTexImage1D: *fp_glTexImage1D =
	null: *fp_glTexImage1D;
export let glTexImage2D: *fp_glTexImage2D =
	null: *fp_glTexImage2D;
export let glTexImage2DMultisample: *fp_glTexImage2DMultisample =
	null: *fp_glTexImage2DMultisample;
export let glTexImage2DMultisampleCoverageNV: *fp_glTexImage2DMultisampleCoverageNV =
	null: *fp_glTexImage2DMultisampleCoverageNV;
export let glTexImage3D: *fp_glTexImage3D =
	null: *fp_glTexImage3D;
export let glTexImage3DEXT: *fp_glTexImage3DEXT =
	null: *fp_glTexImage3DEXT;
export let glTexImage3DMultisample: *fp_glTexImage3DMultisample =
	null: *fp_glTexImage3DMultisample;
export let glTexImage3DMultisampleCoverageNV: *fp_glTexImage3DMultisampleCoverageNV =
	null: *fp_glTexImage3DMultisampleCoverageNV;
export let glTexImage4DSGIS: *fp_glTexImage4DSGIS =
	null: *fp_glTexImage4DSGIS;
export let glTexPageCommitmentARB: *fp_glTexPageCommitmentARB =
	null: *fp_glTexPageCommitmentARB;
export let glTexPageCommitmentMemNV: *fp_glTexPageCommitmentMemNV =
	null: *fp_glTexPageCommitmentMemNV;
export let glTexParameterIiv: *fp_glTexParameterIiv =
	null: *fp_glTexParameterIiv;
export let glTexParameterIivEXT: *fp_glTexParameterIivEXT =
	null: *fp_glTexParameterIivEXT;
export let glTexParameterIuiv: *fp_glTexParameterIuiv =
	null: *fp_glTexParameterIuiv;
export let glTexParameterIuivEXT: *fp_glTexParameterIuivEXT =
	null: *fp_glTexParameterIuivEXT;
export let glTexParameterf: *fp_glTexParameterf =
	null: *fp_glTexParameterf;
export let glTexParameterfv: *fp_glTexParameterfv =
	null: *fp_glTexParameterfv;
export let glTexParameteri: *fp_glTexParameteri =
	null: *fp_glTexParameteri;
export let glTexParameteriv: *fp_glTexParameteriv =
	null: *fp_glTexParameteriv;
export let glTexParameterxOES: *fp_glTexParameterxOES =
	null: *fp_glTexParameterxOES;
export let glTexParameterxvOES: *fp_glTexParameterxvOES =
	null: *fp_glTexParameterxvOES;
export let glTexRenderbufferNV: *fp_glTexRenderbufferNV =
	null: *fp_glTexRenderbufferNV;
export let glTexStorage1D: *fp_glTexStorage1D =
	null: *fp_glTexStorage1D;
export let glTexStorage1DEXT: *fp_glTexStorage1DEXT =
	null: *fp_glTexStorage1DEXT;
export let glTexStorage2D: *fp_glTexStorage2D =
	null: *fp_glTexStorage2D;
export let glTexStorage2DEXT: *fp_glTexStorage2DEXT =
	null: *fp_glTexStorage2DEXT;
export let glTexStorage2DMultisample: *fp_glTexStorage2DMultisample =
	null: *fp_glTexStorage2DMultisample;
export let glTexStorage3D: *fp_glTexStorage3D =
	null: *fp_glTexStorage3D;
export let glTexStorage3DEXT: *fp_glTexStorage3DEXT =
	null: *fp_glTexStorage3DEXT;
export let glTexStorage3DMultisample: *fp_glTexStorage3DMultisample =
	null: *fp_glTexStorage3DMultisample;
export let glTexStorageMem1DEXT: *fp_glTexStorageMem1DEXT =
	null: *fp_glTexStorageMem1DEXT;
export let glTexStorageMem2DEXT: *fp_glTexStorageMem2DEXT =
	null: *fp_glTexStorageMem2DEXT;
export let glTexStorageMem2DMultisampleEXT: *fp_glTexStorageMem2DMultisampleEXT =
	null: *fp_glTexStorageMem2DMultisampleEXT;
export let glTexStorageMem3DEXT: *fp_glTexStorageMem3DEXT =
	null: *fp_glTexStorageMem3DEXT;
export let glTexStorageMem3DMultisampleEXT: *fp_glTexStorageMem3DMultisampleEXT =
	null: *fp_glTexStorageMem3DMultisampleEXT;
export let glTexStorageSparseAMD: *fp_glTexStorageSparseAMD =
	null: *fp_glTexStorageSparseAMD;
export let glTexSubImage1D: *fp_glTexSubImage1D =
	null: *fp_glTexSubImage1D;
export let glTexSubImage1DEXT: *fp_glTexSubImage1DEXT =
	null: *fp_glTexSubImage1DEXT;
export let glTexSubImage2D: *fp_glTexSubImage2D =
	null: *fp_glTexSubImage2D;
export let glTexSubImage2DEXT: *fp_glTexSubImage2DEXT =
	null: *fp_glTexSubImage2DEXT;
export let glTexSubImage3D: *fp_glTexSubImage3D =
	null: *fp_glTexSubImage3D;
export let glTexSubImage3DEXT: *fp_glTexSubImage3DEXT =
	null: *fp_glTexSubImage3DEXT;
export let glTexSubImage4DSGIS: *fp_glTexSubImage4DSGIS =
	null: *fp_glTexSubImage4DSGIS;
export let glTextureAttachMemoryNV: *fp_glTextureAttachMemoryNV =
	null: *fp_glTextureAttachMemoryNV;
export let glTextureBarrier: *fp_glTextureBarrier =
	null: *fp_glTextureBarrier;
export let glTextureBarrierNV: *fp_glTextureBarrierNV =
	null: *fp_glTextureBarrierNV;
export let glTextureBuffer: *fp_glTextureBuffer =
	null: *fp_glTextureBuffer;
export let glTextureBufferEXT: *fp_glTextureBufferEXT =
	null: *fp_glTextureBufferEXT;
export let glTextureBufferRange: *fp_glTextureBufferRange =
	null: *fp_glTextureBufferRange;
export let glTextureBufferRangeEXT: *fp_glTextureBufferRangeEXT =
	null: *fp_glTextureBufferRangeEXT;
export let glTextureColorMaskSGIS: *fp_glTextureColorMaskSGIS =
	null: *fp_glTextureColorMaskSGIS;
export let glTextureImage1DEXT: *fp_glTextureImage1DEXT =
	null: *fp_glTextureImage1DEXT;
export let glTextureImage2DEXT: *fp_glTextureImage2DEXT =
	null: *fp_glTextureImage2DEXT;
export let glTextureImage2DMultisampleCoverageNV: *fp_glTextureImage2DMultisampleCoverageNV =
	null: *fp_glTextureImage2DMultisampleCoverageNV;
export let glTextureImage2DMultisampleNV: *fp_glTextureImage2DMultisampleNV =
	null: *fp_glTextureImage2DMultisampleNV;
export let glTextureImage3DEXT: *fp_glTextureImage3DEXT =
	null: *fp_glTextureImage3DEXT;
export let glTextureImage3DMultisampleCoverageNV: *fp_glTextureImage3DMultisampleCoverageNV =
	null: *fp_glTextureImage3DMultisampleCoverageNV;
export let glTextureImage3DMultisampleNV: *fp_glTextureImage3DMultisampleNV =
	null: *fp_glTextureImage3DMultisampleNV;
export let glTextureLightEXT: *fp_glTextureLightEXT =
	null: *fp_glTextureLightEXT;
export let glTextureMaterialEXT: *fp_glTextureMaterialEXT =
	null: *fp_glTextureMaterialEXT;
export let glTextureNormalEXT: *fp_glTextureNormalEXT =
	null: *fp_glTextureNormalEXT;
export let glTexturePageCommitmentEXT: *fp_glTexturePageCommitmentEXT =
	null: *fp_glTexturePageCommitmentEXT;
export let glTexturePageCommitmentMemNV: *fp_glTexturePageCommitmentMemNV =
	null: *fp_glTexturePageCommitmentMemNV;
export let glTextureParameterIiv: *fp_glTextureParameterIiv =
	null: *fp_glTextureParameterIiv;
export let glTextureParameterIivEXT: *fp_glTextureParameterIivEXT =
	null: *fp_glTextureParameterIivEXT;
export let glTextureParameterIuiv: *fp_glTextureParameterIuiv =
	null: *fp_glTextureParameterIuiv;
export let glTextureParameterIuivEXT: *fp_glTextureParameterIuivEXT =
	null: *fp_glTextureParameterIuivEXT;
export let glTextureParameterf: *fp_glTextureParameterf =
	null: *fp_glTextureParameterf;
export let glTextureParameterfEXT: *fp_glTextureParameterfEXT =
	null: *fp_glTextureParameterfEXT;
export let glTextureParameterfv: *fp_glTextureParameterfv =
	null: *fp_glTextureParameterfv;
export let glTextureParameterfvEXT: *fp_glTextureParameterfvEXT =
	null: *fp_glTextureParameterfvEXT;
export let glTextureParameteri: *fp_glTextureParameteri =
	null: *fp_glTextureParameteri;
export let glTextureParameteriEXT: *fp_glTextureParameteriEXT =
	null: *fp_glTextureParameteriEXT;
export let glTextureParameteriv: *fp_glTextureParameteriv =
	null: *fp_glTextureParameteriv;
export let glTextureParameterivEXT: *fp_glTextureParameterivEXT =
	null: *fp_glTextureParameterivEXT;
export let glTextureRangeAPPLE: *fp_glTextureRangeAPPLE =
	null: *fp_glTextureRangeAPPLE;
export let glTextureRenderbufferEXT: *fp_glTextureRenderbufferEXT =
	null: *fp_glTextureRenderbufferEXT;
export let glTextureStorage1D: *fp_glTextureStorage1D =
	null: *fp_glTextureStorage1D;
export let glTextureStorage1DEXT: *fp_glTextureStorage1DEXT =
	null: *fp_glTextureStorage1DEXT;
export let glTextureStorage2D: *fp_glTextureStorage2D =
	null: *fp_glTextureStorage2D;
export let glTextureStorage2DEXT: *fp_glTextureStorage2DEXT =
	null: *fp_glTextureStorage2DEXT;
export let glTextureStorage2DMultisample: *fp_glTextureStorage2DMultisample =
	null: *fp_glTextureStorage2DMultisample;
export let glTextureStorage2DMultisampleEXT: *fp_glTextureStorage2DMultisampleEXT =
	null: *fp_glTextureStorage2DMultisampleEXT;
export let glTextureStorage3D: *fp_glTextureStorage3D =
	null: *fp_glTextureStorage3D;
export let glTextureStorage3DEXT: *fp_glTextureStorage3DEXT =
	null: *fp_glTextureStorage3DEXT;
export let glTextureStorage3DMultisample: *fp_glTextureStorage3DMultisample =
	null: *fp_glTextureStorage3DMultisample;
export let glTextureStorage3DMultisampleEXT: *fp_glTextureStorage3DMultisampleEXT =
	null: *fp_glTextureStorage3DMultisampleEXT;
export let glTextureStorageMem1DEXT: *fp_glTextureStorageMem1DEXT =
	null: *fp_glTextureStorageMem1DEXT;
export let glTextureStorageMem2DEXT: *fp_glTextureStorageMem2DEXT =
	null: *fp_glTextureStorageMem2DEXT;
export let glTextureStorageMem2DMultisampleEXT: *fp_glTextureStorageMem2DMultisampleEXT =
	null: *fp_glTextureStorageMem2DMultisampleEXT;
export let glTextureStorageMem3DEXT: *fp_glTextureStorageMem3DEXT =
	null: *fp_glTextureStorageMem3DEXT;
export let glTextureStorageMem3DMultisampleEXT: *fp_glTextureStorageMem3DMultisampleEXT =
	null: *fp_glTextureStorageMem3DMultisampleEXT;
export let glTextureStorageSparseAMD: *fp_glTextureStorageSparseAMD =
	null: *fp_glTextureStorageSparseAMD;
export let glTextureSubImage1D: *fp_glTextureSubImage1D =
	null: *fp_glTextureSubImage1D;
export let glTextureSubImage1DEXT: *fp_glTextureSubImage1DEXT =
	null: *fp_glTextureSubImage1DEXT;
export let glTextureSubImage2D: *fp_glTextureSubImage2D =
	null: *fp_glTextureSubImage2D;
export let glTextureSubImage2DEXT: *fp_glTextureSubImage2DEXT =
	null: *fp_glTextureSubImage2DEXT;
export let glTextureSubImage3D: *fp_glTextureSubImage3D =
	null: *fp_glTextureSubImage3D;
export let glTextureSubImage3DEXT: *fp_glTextureSubImage3DEXT =
	null: *fp_glTextureSubImage3DEXT;
export let glTextureView: *fp_glTextureView =
	null: *fp_glTextureView;
export let glTrackMatrixNV: *fp_glTrackMatrixNV =
	null: *fp_glTrackMatrixNV;
export let glTransformFeedbackAttribsNV: *fp_glTransformFeedbackAttribsNV =
	null: *fp_glTransformFeedbackAttribsNV;
export let glTransformFeedbackBufferBase: *fp_glTransformFeedbackBufferBase =
	null: *fp_glTransformFeedbackBufferBase;
export let glTransformFeedbackBufferRange: *fp_glTransformFeedbackBufferRange =
	null: *fp_glTransformFeedbackBufferRange;
export let glTransformFeedbackStreamAttribsNV: *fp_glTransformFeedbackStreamAttribsNV =
	null: *fp_glTransformFeedbackStreamAttribsNV;
export let glTransformFeedbackVaryings: *fp_glTransformFeedbackVaryings =
	null: *fp_glTransformFeedbackVaryings;
export let glTransformFeedbackVaryingsEXT: *fp_glTransformFeedbackVaryingsEXT =
	null: *fp_glTransformFeedbackVaryingsEXT;
export let glTransformFeedbackVaryingsNV: *fp_glTransformFeedbackVaryingsNV =
	null: *fp_glTransformFeedbackVaryingsNV;
export let glTransformPathNV: *fp_glTransformPathNV =
	null: *fp_glTransformPathNV;
export let glTranslatexOES: *fp_glTranslatexOES =
	null: *fp_glTranslatexOES;
export let glUniform1d: *fp_glUniform1d =
	null: *fp_glUniform1d;
export let glUniform1dv: *fp_glUniform1dv =
	null: *fp_glUniform1dv;
export let glUniform1f: *fp_glUniform1f =
	null: *fp_glUniform1f;
export let glUniform1fARB: *fp_glUniform1fARB =
	null: *fp_glUniform1fARB;
export let glUniform1fv: *fp_glUniform1fv =
	null: *fp_glUniform1fv;
export let glUniform1fvARB: *fp_glUniform1fvARB =
	null: *fp_glUniform1fvARB;
export let glUniform1i: *fp_glUniform1i =
	null: *fp_glUniform1i;
export let glUniform1i64ARB: *fp_glUniform1i64ARB =
	null: *fp_glUniform1i64ARB;
export let glUniform1i64NV: *fp_glUniform1i64NV =
	null: *fp_glUniform1i64NV;
export let glUniform1i64vARB: *fp_glUniform1i64vARB =
	null: *fp_glUniform1i64vARB;
export let glUniform1i64vNV: *fp_glUniform1i64vNV =
	null: *fp_glUniform1i64vNV;
export let glUniform1iARB: *fp_glUniform1iARB =
	null: *fp_glUniform1iARB;
export let glUniform1iv: *fp_glUniform1iv =
	null: *fp_glUniform1iv;
export let glUniform1ivARB: *fp_glUniform1ivARB =
	null: *fp_glUniform1ivARB;
export let glUniform1ui: *fp_glUniform1ui =
	null: *fp_glUniform1ui;
export let glUniform1ui64ARB: *fp_glUniform1ui64ARB =
	null: *fp_glUniform1ui64ARB;
export let glUniform1ui64NV: *fp_glUniform1ui64NV =
	null: *fp_glUniform1ui64NV;
export let glUniform1ui64vARB: *fp_glUniform1ui64vARB =
	null: *fp_glUniform1ui64vARB;
export let glUniform1ui64vNV: *fp_glUniform1ui64vNV =
	null: *fp_glUniform1ui64vNV;
export let glUniform1uiEXT: *fp_glUniform1uiEXT =
	null: *fp_glUniform1uiEXT;
export let glUniform1uiv: *fp_glUniform1uiv =
	null: *fp_glUniform1uiv;
export let glUniform1uivEXT: *fp_glUniform1uivEXT =
	null: *fp_glUniform1uivEXT;
export let glUniform2d: *fp_glUniform2d =
	null: *fp_glUniform2d;
export let glUniform2dv: *fp_glUniform2dv =
	null: *fp_glUniform2dv;
export let glUniform2f: *fp_glUniform2f =
	null: *fp_glUniform2f;
export let glUniform2fARB: *fp_glUniform2fARB =
	null: *fp_glUniform2fARB;
export let glUniform2fv: *fp_glUniform2fv =
	null: *fp_glUniform2fv;
export let glUniform2fvARB: *fp_glUniform2fvARB =
	null: *fp_glUniform2fvARB;
export let glUniform2i: *fp_glUniform2i =
	null: *fp_glUniform2i;
export let glUniform2i64ARB: *fp_glUniform2i64ARB =
	null: *fp_glUniform2i64ARB;
export let glUniform2i64NV: *fp_glUniform2i64NV =
	null: *fp_glUniform2i64NV;
export let glUniform2i64vARB: *fp_glUniform2i64vARB =
	null: *fp_glUniform2i64vARB;
export let glUniform2i64vNV: *fp_glUniform2i64vNV =
	null: *fp_glUniform2i64vNV;
export let glUniform2iARB: *fp_glUniform2iARB =
	null: *fp_glUniform2iARB;
export let glUniform2iv: *fp_glUniform2iv =
	null: *fp_glUniform2iv;
export let glUniform2ivARB: *fp_glUniform2ivARB =
	null: *fp_glUniform2ivARB;
export let glUniform2ui: *fp_glUniform2ui =
	null: *fp_glUniform2ui;
export let glUniform2ui64ARB: *fp_glUniform2ui64ARB =
	null: *fp_glUniform2ui64ARB;
export let glUniform2ui64NV: *fp_glUniform2ui64NV =
	null: *fp_glUniform2ui64NV;
export let glUniform2ui64vARB: *fp_glUniform2ui64vARB =
	null: *fp_glUniform2ui64vARB;
export let glUniform2ui64vNV: *fp_glUniform2ui64vNV =
	null: *fp_glUniform2ui64vNV;
export let glUniform2uiEXT: *fp_glUniform2uiEXT =
	null: *fp_glUniform2uiEXT;
export let glUniform2uiv: *fp_glUniform2uiv =
	null: *fp_glUniform2uiv;
export let glUniform2uivEXT: *fp_glUniform2uivEXT =
	null: *fp_glUniform2uivEXT;
export let glUniform3d: *fp_glUniform3d =
	null: *fp_glUniform3d;
export let glUniform3dv: *fp_glUniform3dv =
	null: *fp_glUniform3dv;
export let glUniform3f: *fp_glUniform3f =
	null: *fp_glUniform3f;
export let glUniform3fARB: *fp_glUniform3fARB =
	null: *fp_glUniform3fARB;
export let glUniform3fv: *fp_glUniform3fv =
	null: *fp_glUniform3fv;
export let glUniform3fvARB: *fp_glUniform3fvARB =
	null: *fp_glUniform3fvARB;
export let glUniform3i: *fp_glUniform3i =
	null: *fp_glUniform3i;
export let glUniform3i64ARB: *fp_glUniform3i64ARB =
	null: *fp_glUniform3i64ARB;
export let glUniform3i64NV: *fp_glUniform3i64NV =
	null: *fp_glUniform3i64NV;
export let glUniform3i64vARB: *fp_glUniform3i64vARB =
	null: *fp_glUniform3i64vARB;
export let glUniform3i64vNV: *fp_glUniform3i64vNV =
	null: *fp_glUniform3i64vNV;
export let glUniform3iARB: *fp_glUniform3iARB =
	null: *fp_glUniform3iARB;
export let glUniform3iv: *fp_glUniform3iv =
	null: *fp_glUniform3iv;
export let glUniform3ivARB: *fp_glUniform3ivARB =
	null: *fp_glUniform3ivARB;
export let glUniform3ui: *fp_glUniform3ui =
	null: *fp_glUniform3ui;
export let glUniform3ui64ARB: *fp_glUniform3ui64ARB =
	null: *fp_glUniform3ui64ARB;
export let glUniform3ui64NV: *fp_glUniform3ui64NV =
	null: *fp_glUniform3ui64NV;
export let glUniform3ui64vARB: *fp_glUniform3ui64vARB =
	null: *fp_glUniform3ui64vARB;
export let glUniform3ui64vNV: *fp_glUniform3ui64vNV =
	null: *fp_glUniform3ui64vNV;
export let glUniform3uiEXT: *fp_glUniform3uiEXT =
	null: *fp_glUniform3uiEXT;
export let glUniform3uiv: *fp_glUniform3uiv =
	null: *fp_glUniform3uiv;
export let glUniform3uivEXT: *fp_glUniform3uivEXT =
	null: *fp_glUniform3uivEXT;
export let glUniform4d: *fp_glUniform4d =
	null: *fp_glUniform4d;
export let glUniform4dv: *fp_glUniform4dv =
	null: *fp_glUniform4dv;
export let glUniform4f: *fp_glUniform4f =
	null: *fp_glUniform4f;
export let glUniform4fARB: *fp_glUniform4fARB =
	null: *fp_glUniform4fARB;
export let glUniform4fv: *fp_glUniform4fv =
	null: *fp_glUniform4fv;
export let glUniform4fvARB: *fp_glUniform4fvARB =
	null: *fp_glUniform4fvARB;
export let glUniform4i: *fp_glUniform4i =
	null: *fp_glUniform4i;
export let glUniform4i64ARB: *fp_glUniform4i64ARB =
	null: *fp_glUniform4i64ARB;
export let glUniform4i64NV: *fp_glUniform4i64NV =
	null: *fp_glUniform4i64NV;
export let glUniform4i64vARB: *fp_glUniform4i64vARB =
	null: *fp_glUniform4i64vARB;
export let glUniform4i64vNV: *fp_glUniform4i64vNV =
	null: *fp_glUniform4i64vNV;
export let glUniform4iARB: *fp_glUniform4iARB =
	null: *fp_glUniform4iARB;
export let glUniform4iv: *fp_glUniform4iv =
	null: *fp_glUniform4iv;
export let glUniform4ivARB: *fp_glUniform4ivARB =
	null: *fp_glUniform4ivARB;
export let glUniform4ui: *fp_glUniform4ui =
	null: *fp_glUniform4ui;
export let glUniform4ui64ARB: *fp_glUniform4ui64ARB =
	null: *fp_glUniform4ui64ARB;
export let glUniform4ui64NV: *fp_glUniform4ui64NV =
	null: *fp_glUniform4ui64NV;
export let glUniform4ui64vARB: *fp_glUniform4ui64vARB =
	null: *fp_glUniform4ui64vARB;
export let glUniform4ui64vNV: *fp_glUniform4ui64vNV =
	null: *fp_glUniform4ui64vNV;
export let glUniform4uiEXT: *fp_glUniform4uiEXT =
	null: *fp_glUniform4uiEXT;
export let glUniform4uiv: *fp_glUniform4uiv =
	null: *fp_glUniform4uiv;
export let glUniform4uivEXT: *fp_glUniform4uivEXT =
	null: *fp_glUniform4uivEXT;
export let glUniformBlockBinding: *fp_glUniformBlockBinding =
	null: *fp_glUniformBlockBinding;
export let glUniformBufferEXT: *fp_glUniformBufferEXT =
	null: *fp_glUniformBufferEXT;
export let glUniformHandleui64ARB: *fp_glUniformHandleui64ARB =
	null: *fp_glUniformHandleui64ARB;
export let glUniformHandleui64NV: *fp_glUniformHandleui64NV =
	null: *fp_glUniformHandleui64NV;
export let glUniformHandleui64vARB: *fp_glUniformHandleui64vARB =
	null: *fp_glUniformHandleui64vARB;
export let glUniformHandleui64vNV: *fp_glUniformHandleui64vNV =
	null: *fp_glUniformHandleui64vNV;
export let glUniformMatrix2dv: *fp_glUniformMatrix2dv =
	null: *fp_glUniformMatrix2dv;
export let glUniformMatrix2fv: *fp_glUniformMatrix2fv =
	null: *fp_glUniformMatrix2fv;
export let glUniformMatrix2fvARB: *fp_glUniformMatrix2fvARB =
	null: *fp_glUniformMatrix2fvARB;
export let glUniformMatrix2x3dv: *fp_glUniformMatrix2x3dv =
	null: *fp_glUniformMatrix2x3dv;
export let glUniformMatrix2x3fv: *fp_glUniformMatrix2x3fv =
	null: *fp_glUniformMatrix2x3fv;
export let glUniformMatrix2x4dv: *fp_glUniformMatrix2x4dv =
	null: *fp_glUniformMatrix2x4dv;
export let glUniformMatrix2x4fv: *fp_glUniformMatrix2x4fv =
	null: *fp_glUniformMatrix2x4fv;
export let glUniformMatrix3dv: *fp_glUniformMatrix3dv =
	null: *fp_glUniformMatrix3dv;
export let glUniformMatrix3fv: *fp_glUniformMatrix3fv =
	null: *fp_glUniformMatrix3fv;
export let glUniformMatrix3fvARB: *fp_glUniformMatrix3fvARB =
	null: *fp_glUniformMatrix3fvARB;
export let glUniformMatrix3x2dv: *fp_glUniformMatrix3x2dv =
	null: *fp_glUniformMatrix3x2dv;
export let glUniformMatrix3x2fv: *fp_glUniformMatrix3x2fv =
	null: *fp_glUniformMatrix3x2fv;
export let glUniformMatrix3x4dv: *fp_glUniformMatrix3x4dv =
	null: *fp_glUniformMatrix3x4dv;
export let glUniformMatrix3x4fv: *fp_glUniformMatrix3x4fv =
	null: *fp_glUniformMatrix3x4fv;
export let glUniformMatrix4dv: *fp_glUniformMatrix4dv =
	null: *fp_glUniformMatrix4dv;
export let glUniformMatrix4fv: *fp_glUniformMatrix4fv =
	null: *fp_glUniformMatrix4fv;
export let glUniformMatrix4fvARB: *fp_glUniformMatrix4fvARB =
	null: *fp_glUniformMatrix4fvARB;
export let glUniformMatrix4x2dv: *fp_glUniformMatrix4x2dv =
	null: *fp_glUniformMatrix4x2dv;
export let glUniformMatrix4x2fv: *fp_glUniformMatrix4x2fv =
	null: *fp_glUniformMatrix4x2fv;
export let glUniformMatrix4x3dv: *fp_glUniformMatrix4x3dv =
	null: *fp_glUniformMatrix4x3dv;
export let glUniformMatrix4x3fv: *fp_glUniformMatrix4x3fv =
	null: *fp_glUniformMatrix4x3fv;
export let glUniformSubroutinesuiv: *fp_glUniformSubroutinesuiv =
	null: *fp_glUniformSubroutinesuiv;
export let glUniformui64NV: *fp_glUniformui64NV =
	null: *fp_glUniformui64NV;
export let glUniformui64vNV: *fp_glUniformui64vNV =
	null: *fp_glUniformui64vNV;
export let glUnlockArraysEXT: *fp_glUnlockArraysEXT =
	null: *fp_glUnlockArraysEXT;
export let glUnmapBuffer: *fp_glUnmapBuffer =
	null: *fp_glUnmapBuffer;
export let glUnmapBufferARB: *fp_glUnmapBufferARB =
	null: *fp_glUnmapBufferARB;
export let glUnmapNamedBuffer: *fp_glUnmapNamedBuffer =
	null: *fp_glUnmapNamedBuffer;
export let glUnmapNamedBufferEXT: *fp_glUnmapNamedBufferEXT =
	null: *fp_glUnmapNamedBufferEXT;
export let glUnmapObjectBufferATI: *fp_glUnmapObjectBufferATI =
	null: *fp_glUnmapObjectBufferATI;
export let glUnmapTexture2DINTEL: *fp_glUnmapTexture2DINTEL =
	null: *fp_glUnmapTexture2DINTEL;
export let glUpdateObjectBufferATI: *fp_glUpdateObjectBufferATI =
	null: *fp_glUpdateObjectBufferATI;
export let glUploadGpuMaskNVX: *fp_glUploadGpuMaskNVX =
	null: *fp_glUploadGpuMaskNVX;
export let glUseProgram: *fp_glUseProgram =
	null: *fp_glUseProgram;
export let glUseProgramObjectARB: *fp_glUseProgramObjectARB =
	null: *fp_glUseProgramObjectARB;
export let glUseProgramStages: *fp_glUseProgramStages =
	null: *fp_glUseProgramStages;
export let glUseShaderProgramEXT: *fp_glUseShaderProgramEXT =
	null: *fp_glUseShaderProgramEXT;
export let glVDPAUFiniNV: *fp_glVDPAUFiniNV =
	null: *fp_glVDPAUFiniNV;
export let glVDPAUGetSurfaceivNV: *fp_glVDPAUGetSurfaceivNV =
	null: *fp_glVDPAUGetSurfaceivNV;
export let glVDPAUInitNV: *fp_glVDPAUInitNV =
	null: *fp_glVDPAUInitNV;
export let glVDPAUIsSurfaceNV: *fp_glVDPAUIsSurfaceNV =
	null: *fp_glVDPAUIsSurfaceNV;
export let glVDPAUMapSurfacesNV: *fp_glVDPAUMapSurfacesNV =
	null: *fp_glVDPAUMapSurfacesNV;
export let glVDPAURegisterOutputSurfaceNV: *fp_glVDPAURegisterOutputSurfaceNV =
	null: *fp_glVDPAURegisterOutputSurfaceNV;
export let glVDPAURegisterVideoSurfaceNV: *fp_glVDPAURegisterVideoSurfaceNV =
	null: *fp_glVDPAURegisterVideoSurfaceNV;
export let glVDPAURegisterVideoSurfaceWithPictureStructureNV: *fp_glVDPAURegisterVideoSurfaceWithPictureStructureNV =
	null: *fp_glVDPAURegisterVideoSurfaceWithPictureStructureNV;
export let glVDPAUSurfaceAccessNV: *fp_glVDPAUSurfaceAccessNV =
	null: *fp_glVDPAUSurfaceAccessNV;
export let glVDPAUUnmapSurfacesNV: *fp_glVDPAUUnmapSurfacesNV =
	null: *fp_glVDPAUUnmapSurfacesNV;
export let glVDPAUUnregisterSurfaceNV: *fp_glVDPAUUnregisterSurfaceNV =
	null: *fp_glVDPAUUnregisterSurfaceNV;
export let glValidateProgram: *fp_glValidateProgram =
	null: *fp_glValidateProgram;
export let glValidateProgramARB: *fp_glValidateProgramARB =
	null: *fp_glValidateProgramARB;
export let glValidateProgramPipeline: *fp_glValidateProgramPipeline =
	null: *fp_glValidateProgramPipeline;
export let glVariantArrayObjectATI: *fp_glVariantArrayObjectATI =
	null: *fp_glVariantArrayObjectATI;
export let glVariantPointerEXT: *fp_glVariantPointerEXT =
	null: *fp_glVariantPointerEXT;
export let glVariantbvEXT: *fp_glVariantbvEXT =
	null: *fp_glVariantbvEXT;
export let glVariantdvEXT: *fp_glVariantdvEXT =
	null: *fp_glVariantdvEXT;
export let glVariantfvEXT: *fp_glVariantfvEXT =
	null: *fp_glVariantfvEXT;
export let glVariantivEXT: *fp_glVariantivEXT =
	null: *fp_glVariantivEXT;
export let glVariantsvEXT: *fp_glVariantsvEXT =
	null: *fp_glVariantsvEXT;
export let glVariantubvEXT: *fp_glVariantubvEXT =
	null: *fp_glVariantubvEXT;
export let glVariantuivEXT: *fp_glVariantuivEXT =
	null: *fp_glVariantuivEXT;
export let glVariantusvEXT: *fp_glVariantusvEXT =
	null: *fp_glVariantusvEXT;
export let glVertex2bOES: *fp_glVertex2bOES =
	null: *fp_glVertex2bOES;
export let glVertex2bvOES: *fp_glVertex2bvOES =
	null: *fp_glVertex2bvOES;
export let glVertex2hNV: *fp_glVertex2hNV =
	null: *fp_glVertex2hNV;
export let glVertex2hvNV: *fp_glVertex2hvNV =
	null: *fp_glVertex2hvNV;
export let glVertex2xOES: *fp_glVertex2xOES =
	null: *fp_glVertex2xOES;
export let glVertex2xvOES: *fp_glVertex2xvOES =
	null: *fp_glVertex2xvOES;
export let glVertex3bOES: *fp_glVertex3bOES =
	null: *fp_glVertex3bOES;
export let glVertex3bvOES: *fp_glVertex3bvOES =
	null: *fp_glVertex3bvOES;
export let glVertex3hNV: *fp_glVertex3hNV =
	null: *fp_glVertex3hNV;
export let glVertex3hvNV: *fp_glVertex3hvNV =
	null: *fp_glVertex3hvNV;
export let glVertex3xOES: *fp_glVertex3xOES =
	null: *fp_glVertex3xOES;
export let glVertex3xvOES: *fp_glVertex3xvOES =
	null: *fp_glVertex3xvOES;
export let glVertex4bOES: *fp_glVertex4bOES =
	null: *fp_glVertex4bOES;
export let glVertex4bvOES: *fp_glVertex4bvOES =
	null: *fp_glVertex4bvOES;
export let glVertex4hNV: *fp_glVertex4hNV =
	null: *fp_glVertex4hNV;
export let glVertex4hvNV: *fp_glVertex4hvNV =
	null: *fp_glVertex4hvNV;
export let glVertex4xOES: *fp_glVertex4xOES =
	null: *fp_glVertex4xOES;
export let glVertex4xvOES: *fp_glVertex4xvOES =
	null: *fp_glVertex4xvOES;
export let glVertexArrayAttribBinding: *fp_glVertexArrayAttribBinding =
	null: *fp_glVertexArrayAttribBinding;
export let glVertexArrayAttribFormat: *fp_glVertexArrayAttribFormat =
	null: *fp_glVertexArrayAttribFormat;
export let glVertexArrayAttribIFormat: *fp_glVertexArrayAttribIFormat =
	null: *fp_glVertexArrayAttribIFormat;
export let glVertexArrayAttribLFormat: *fp_glVertexArrayAttribLFormat =
	null: *fp_glVertexArrayAttribLFormat;
export let glVertexArrayBindVertexBufferEXT: *fp_glVertexArrayBindVertexBufferEXT =
	null: *fp_glVertexArrayBindVertexBufferEXT;
export let glVertexArrayBindingDivisor: *fp_glVertexArrayBindingDivisor =
	null: *fp_glVertexArrayBindingDivisor;
export let glVertexArrayColorOffsetEXT: *fp_glVertexArrayColorOffsetEXT =
	null: *fp_glVertexArrayColorOffsetEXT;
export let glVertexArrayEdgeFlagOffsetEXT: *fp_glVertexArrayEdgeFlagOffsetEXT =
	null: *fp_glVertexArrayEdgeFlagOffsetEXT;
export let glVertexArrayElementBuffer: *fp_glVertexArrayElementBuffer =
	null: *fp_glVertexArrayElementBuffer;
export let glVertexArrayFogCoordOffsetEXT: *fp_glVertexArrayFogCoordOffsetEXT =
	null: *fp_glVertexArrayFogCoordOffsetEXT;
export let glVertexArrayIndexOffsetEXT: *fp_glVertexArrayIndexOffsetEXT =
	null: *fp_glVertexArrayIndexOffsetEXT;
export let glVertexArrayMultiTexCoordOffsetEXT: *fp_glVertexArrayMultiTexCoordOffsetEXT =
	null: *fp_glVertexArrayMultiTexCoordOffsetEXT;
export let glVertexArrayNormalOffsetEXT: *fp_glVertexArrayNormalOffsetEXT =
	null: *fp_glVertexArrayNormalOffsetEXT;
export let glVertexArrayParameteriAPPLE: *fp_glVertexArrayParameteriAPPLE =
	null: *fp_glVertexArrayParameteriAPPLE;
export let glVertexArrayRangeAPPLE: *fp_glVertexArrayRangeAPPLE =
	null: *fp_glVertexArrayRangeAPPLE;
export let glVertexArrayRangeNV: *fp_glVertexArrayRangeNV =
	null: *fp_glVertexArrayRangeNV;
export let glVertexArraySecondaryColorOffsetEXT: *fp_glVertexArraySecondaryColorOffsetEXT =
	null: *fp_glVertexArraySecondaryColorOffsetEXT;
export let glVertexArrayTexCoordOffsetEXT: *fp_glVertexArrayTexCoordOffsetEXT =
	null: *fp_glVertexArrayTexCoordOffsetEXT;
export let glVertexArrayVertexAttribBindingEXT: *fp_glVertexArrayVertexAttribBindingEXT =
	null: *fp_glVertexArrayVertexAttribBindingEXT;
export let glVertexArrayVertexAttribDivisorEXT: *fp_glVertexArrayVertexAttribDivisorEXT =
	null: *fp_glVertexArrayVertexAttribDivisorEXT;
export let glVertexArrayVertexAttribFormatEXT: *fp_glVertexArrayVertexAttribFormatEXT =
	null: *fp_glVertexArrayVertexAttribFormatEXT;
export let glVertexArrayVertexAttribIFormatEXT: *fp_glVertexArrayVertexAttribIFormatEXT =
	null: *fp_glVertexArrayVertexAttribIFormatEXT;
export let glVertexArrayVertexAttribIOffsetEXT: *fp_glVertexArrayVertexAttribIOffsetEXT =
	null: *fp_glVertexArrayVertexAttribIOffsetEXT;
export let glVertexArrayVertexAttribLFormatEXT: *fp_glVertexArrayVertexAttribLFormatEXT =
	null: *fp_glVertexArrayVertexAttribLFormatEXT;
export let glVertexArrayVertexAttribLOffsetEXT: *fp_glVertexArrayVertexAttribLOffsetEXT =
	null: *fp_glVertexArrayVertexAttribLOffsetEXT;
export let glVertexArrayVertexAttribOffsetEXT: *fp_glVertexArrayVertexAttribOffsetEXT =
	null: *fp_glVertexArrayVertexAttribOffsetEXT;
export let glVertexArrayVertexBindingDivisorEXT: *fp_glVertexArrayVertexBindingDivisorEXT =
	null: *fp_glVertexArrayVertexBindingDivisorEXT;
export let glVertexArrayVertexBuffer: *fp_glVertexArrayVertexBuffer =
	null: *fp_glVertexArrayVertexBuffer;
export let glVertexArrayVertexBuffers: *fp_glVertexArrayVertexBuffers =
	null: *fp_glVertexArrayVertexBuffers;
export let glVertexArrayVertexOffsetEXT: *fp_glVertexArrayVertexOffsetEXT =
	null: *fp_glVertexArrayVertexOffsetEXT;
export let glVertexAttrib1d: *fp_glVertexAttrib1d =
	null: *fp_glVertexAttrib1d;
export let glVertexAttrib1dARB: *fp_glVertexAttrib1dARB =
	null: *fp_glVertexAttrib1dARB;
export let glVertexAttrib1dNV: *fp_glVertexAttrib1dNV =
	null: *fp_glVertexAttrib1dNV;
export let glVertexAttrib1dv: *fp_glVertexAttrib1dv =
	null: *fp_glVertexAttrib1dv;
export let glVertexAttrib1dvARB: *fp_glVertexAttrib1dvARB =
	null: *fp_glVertexAttrib1dvARB;
export let glVertexAttrib1dvNV: *fp_glVertexAttrib1dvNV =
	null: *fp_glVertexAttrib1dvNV;
export let glVertexAttrib1f: *fp_glVertexAttrib1f =
	null: *fp_glVertexAttrib1f;
export let glVertexAttrib1fARB: *fp_glVertexAttrib1fARB =
	null: *fp_glVertexAttrib1fARB;
export let glVertexAttrib1fNV: *fp_glVertexAttrib1fNV =
	null: *fp_glVertexAttrib1fNV;
export let glVertexAttrib1fv: *fp_glVertexAttrib1fv =
	null: *fp_glVertexAttrib1fv;
export let glVertexAttrib1fvARB: *fp_glVertexAttrib1fvARB =
	null: *fp_glVertexAttrib1fvARB;
export let glVertexAttrib1fvNV: *fp_glVertexAttrib1fvNV =
	null: *fp_glVertexAttrib1fvNV;
export let glVertexAttrib1hNV: *fp_glVertexAttrib1hNV =
	null: *fp_glVertexAttrib1hNV;
export let glVertexAttrib1hvNV: *fp_glVertexAttrib1hvNV =
	null: *fp_glVertexAttrib1hvNV;
export let glVertexAttrib1s: *fp_glVertexAttrib1s =
	null: *fp_glVertexAttrib1s;
export let glVertexAttrib1sARB: *fp_glVertexAttrib1sARB =
	null: *fp_glVertexAttrib1sARB;
export let glVertexAttrib1sNV: *fp_glVertexAttrib1sNV =
	null: *fp_glVertexAttrib1sNV;
export let glVertexAttrib1sv: *fp_glVertexAttrib1sv =
	null: *fp_glVertexAttrib1sv;
export let glVertexAttrib1svARB: *fp_glVertexAttrib1svARB =
	null: *fp_glVertexAttrib1svARB;
export let glVertexAttrib1svNV: *fp_glVertexAttrib1svNV =
	null: *fp_glVertexAttrib1svNV;
export let glVertexAttrib2d: *fp_glVertexAttrib2d =
	null: *fp_glVertexAttrib2d;
export let glVertexAttrib2dARB: *fp_glVertexAttrib2dARB =
	null: *fp_glVertexAttrib2dARB;
export let glVertexAttrib2dNV: *fp_glVertexAttrib2dNV =
	null: *fp_glVertexAttrib2dNV;
export let glVertexAttrib2dv: *fp_glVertexAttrib2dv =
	null: *fp_glVertexAttrib2dv;
export let glVertexAttrib2dvARB: *fp_glVertexAttrib2dvARB =
	null: *fp_glVertexAttrib2dvARB;
export let glVertexAttrib2dvNV: *fp_glVertexAttrib2dvNV =
	null: *fp_glVertexAttrib2dvNV;
export let glVertexAttrib2f: *fp_glVertexAttrib2f =
	null: *fp_glVertexAttrib2f;
export let glVertexAttrib2fARB: *fp_glVertexAttrib2fARB =
	null: *fp_glVertexAttrib2fARB;
export let glVertexAttrib2fNV: *fp_glVertexAttrib2fNV =
	null: *fp_glVertexAttrib2fNV;
export let glVertexAttrib2fv: *fp_glVertexAttrib2fv =
	null: *fp_glVertexAttrib2fv;
export let glVertexAttrib2fvARB: *fp_glVertexAttrib2fvARB =
	null: *fp_glVertexAttrib2fvARB;
export let glVertexAttrib2fvNV: *fp_glVertexAttrib2fvNV =
	null: *fp_glVertexAttrib2fvNV;
export let glVertexAttrib2hNV: *fp_glVertexAttrib2hNV =
	null: *fp_glVertexAttrib2hNV;
export let glVertexAttrib2hvNV: *fp_glVertexAttrib2hvNV =
	null: *fp_glVertexAttrib2hvNV;
export let glVertexAttrib2s: *fp_glVertexAttrib2s =
	null: *fp_glVertexAttrib2s;
export let glVertexAttrib2sARB: *fp_glVertexAttrib2sARB =
	null: *fp_glVertexAttrib2sARB;
export let glVertexAttrib2sNV: *fp_glVertexAttrib2sNV =
	null: *fp_glVertexAttrib2sNV;
export let glVertexAttrib2sv: *fp_glVertexAttrib2sv =
	null: *fp_glVertexAttrib2sv;
export let glVertexAttrib2svARB: *fp_glVertexAttrib2svARB =
	null: *fp_glVertexAttrib2svARB;
export let glVertexAttrib2svNV: *fp_glVertexAttrib2svNV =
	null: *fp_glVertexAttrib2svNV;
export let glVertexAttrib3d: *fp_glVertexAttrib3d =
	null: *fp_glVertexAttrib3d;
export let glVertexAttrib3dARB: *fp_glVertexAttrib3dARB =
	null: *fp_glVertexAttrib3dARB;
export let glVertexAttrib3dNV: *fp_glVertexAttrib3dNV =
	null: *fp_glVertexAttrib3dNV;
export let glVertexAttrib3dv: *fp_glVertexAttrib3dv =
	null: *fp_glVertexAttrib3dv;
export let glVertexAttrib3dvARB: *fp_glVertexAttrib3dvARB =
	null: *fp_glVertexAttrib3dvARB;
export let glVertexAttrib3dvNV: *fp_glVertexAttrib3dvNV =
	null: *fp_glVertexAttrib3dvNV;
export let glVertexAttrib3f: *fp_glVertexAttrib3f =
	null: *fp_glVertexAttrib3f;
export let glVertexAttrib3fARB: *fp_glVertexAttrib3fARB =
	null: *fp_glVertexAttrib3fARB;
export let glVertexAttrib3fNV: *fp_glVertexAttrib3fNV =
	null: *fp_glVertexAttrib3fNV;
export let glVertexAttrib3fv: *fp_glVertexAttrib3fv =
	null: *fp_glVertexAttrib3fv;
export let glVertexAttrib3fvARB: *fp_glVertexAttrib3fvARB =
	null: *fp_glVertexAttrib3fvARB;
export let glVertexAttrib3fvNV: *fp_glVertexAttrib3fvNV =
	null: *fp_glVertexAttrib3fvNV;
export let glVertexAttrib3hNV: *fp_glVertexAttrib3hNV =
	null: *fp_glVertexAttrib3hNV;
export let glVertexAttrib3hvNV: *fp_glVertexAttrib3hvNV =
	null: *fp_glVertexAttrib3hvNV;
export let glVertexAttrib3s: *fp_glVertexAttrib3s =
	null: *fp_glVertexAttrib3s;
export let glVertexAttrib3sARB: *fp_glVertexAttrib3sARB =
	null: *fp_glVertexAttrib3sARB;
export let glVertexAttrib3sNV: *fp_glVertexAttrib3sNV =
	null: *fp_glVertexAttrib3sNV;
export let glVertexAttrib3sv: *fp_glVertexAttrib3sv =
	null: *fp_glVertexAttrib3sv;
export let glVertexAttrib3svARB: *fp_glVertexAttrib3svARB =
	null: *fp_glVertexAttrib3svARB;
export let glVertexAttrib3svNV: *fp_glVertexAttrib3svNV =
	null: *fp_glVertexAttrib3svNV;
export let glVertexAttrib4Nbv: *fp_glVertexAttrib4Nbv =
	null: *fp_glVertexAttrib4Nbv;
export let glVertexAttrib4NbvARB: *fp_glVertexAttrib4NbvARB =
	null: *fp_glVertexAttrib4NbvARB;
export let glVertexAttrib4Niv: *fp_glVertexAttrib4Niv =
	null: *fp_glVertexAttrib4Niv;
export let glVertexAttrib4NivARB: *fp_glVertexAttrib4NivARB =
	null: *fp_glVertexAttrib4NivARB;
export let glVertexAttrib4Nsv: *fp_glVertexAttrib4Nsv =
	null: *fp_glVertexAttrib4Nsv;
export let glVertexAttrib4NsvARB: *fp_glVertexAttrib4NsvARB =
	null: *fp_glVertexAttrib4NsvARB;
export let glVertexAttrib4Nub: *fp_glVertexAttrib4Nub =
	null: *fp_glVertexAttrib4Nub;
export let glVertexAttrib4NubARB: *fp_glVertexAttrib4NubARB =
	null: *fp_glVertexAttrib4NubARB;
export let glVertexAttrib4Nubv: *fp_glVertexAttrib4Nubv =
	null: *fp_glVertexAttrib4Nubv;
export let glVertexAttrib4NubvARB: *fp_glVertexAttrib4NubvARB =
	null: *fp_glVertexAttrib4NubvARB;
export let glVertexAttrib4Nuiv: *fp_glVertexAttrib4Nuiv =
	null: *fp_glVertexAttrib4Nuiv;
export let glVertexAttrib4NuivARB: *fp_glVertexAttrib4NuivARB =
	null: *fp_glVertexAttrib4NuivARB;
export let glVertexAttrib4Nusv: *fp_glVertexAttrib4Nusv =
	null: *fp_glVertexAttrib4Nusv;
export let glVertexAttrib4NusvARB: *fp_glVertexAttrib4NusvARB =
	null: *fp_glVertexAttrib4NusvARB;
export let glVertexAttrib4bv: *fp_glVertexAttrib4bv =
	null: *fp_glVertexAttrib4bv;
export let glVertexAttrib4bvARB: *fp_glVertexAttrib4bvARB =
	null: *fp_glVertexAttrib4bvARB;
export let glVertexAttrib4d: *fp_glVertexAttrib4d =
	null: *fp_glVertexAttrib4d;
export let glVertexAttrib4dARB: *fp_glVertexAttrib4dARB =
	null: *fp_glVertexAttrib4dARB;
export let glVertexAttrib4dNV: *fp_glVertexAttrib4dNV =
	null: *fp_glVertexAttrib4dNV;
export let glVertexAttrib4dv: *fp_glVertexAttrib4dv =
	null: *fp_glVertexAttrib4dv;
export let glVertexAttrib4dvARB: *fp_glVertexAttrib4dvARB =
	null: *fp_glVertexAttrib4dvARB;
export let glVertexAttrib4dvNV: *fp_glVertexAttrib4dvNV =
	null: *fp_glVertexAttrib4dvNV;
export let glVertexAttrib4f: *fp_glVertexAttrib4f =
	null: *fp_glVertexAttrib4f;
export let glVertexAttrib4fARB: *fp_glVertexAttrib4fARB =
	null: *fp_glVertexAttrib4fARB;
export let glVertexAttrib4fNV: *fp_glVertexAttrib4fNV =
	null: *fp_glVertexAttrib4fNV;
export let glVertexAttrib4fv: *fp_glVertexAttrib4fv =
	null: *fp_glVertexAttrib4fv;
export let glVertexAttrib4fvARB: *fp_glVertexAttrib4fvARB =
	null: *fp_glVertexAttrib4fvARB;
export let glVertexAttrib4fvNV: *fp_glVertexAttrib4fvNV =
	null: *fp_glVertexAttrib4fvNV;
export let glVertexAttrib4hNV: *fp_glVertexAttrib4hNV =
	null: *fp_glVertexAttrib4hNV;
export let glVertexAttrib4hvNV: *fp_glVertexAttrib4hvNV =
	null: *fp_glVertexAttrib4hvNV;
export let glVertexAttrib4iv: *fp_glVertexAttrib4iv =
	null: *fp_glVertexAttrib4iv;
export let glVertexAttrib4ivARB: *fp_glVertexAttrib4ivARB =
	null: *fp_glVertexAttrib4ivARB;
export let glVertexAttrib4s: *fp_glVertexAttrib4s =
	null: *fp_glVertexAttrib4s;
export let glVertexAttrib4sARB: *fp_glVertexAttrib4sARB =
	null: *fp_glVertexAttrib4sARB;
export let glVertexAttrib4sNV: *fp_glVertexAttrib4sNV =
	null: *fp_glVertexAttrib4sNV;
export let glVertexAttrib4sv: *fp_glVertexAttrib4sv =
	null: *fp_glVertexAttrib4sv;
export let glVertexAttrib4svARB: *fp_glVertexAttrib4svARB =
	null: *fp_glVertexAttrib4svARB;
export let glVertexAttrib4svNV: *fp_glVertexAttrib4svNV =
	null: *fp_glVertexAttrib4svNV;
export let glVertexAttrib4ubNV: *fp_glVertexAttrib4ubNV =
	null: *fp_glVertexAttrib4ubNV;
export let glVertexAttrib4ubv: *fp_glVertexAttrib4ubv =
	null: *fp_glVertexAttrib4ubv;
export let glVertexAttrib4ubvARB: *fp_glVertexAttrib4ubvARB =
	null: *fp_glVertexAttrib4ubvARB;
export let glVertexAttrib4ubvNV: *fp_glVertexAttrib4ubvNV =
	null: *fp_glVertexAttrib4ubvNV;
export let glVertexAttrib4uiv: *fp_glVertexAttrib4uiv =
	null: *fp_glVertexAttrib4uiv;
export let glVertexAttrib4uivARB: *fp_glVertexAttrib4uivARB =
	null: *fp_glVertexAttrib4uivARB;
export let glVertexAttrib4usv: *fp_glVertexAttrib4usv =
	null: *fp_glVertexAttrib4usv;
export let glVertexAttrib4usvARB: *fp_glVertexAttrib4usvARB =
	null: *fp_glVertexAttrib4usvARB;
export let glVertexAttribArrayObjectATI: *fp_glVertexAttribArrayObjectATI =
	null: *fp_glVertexAttribArrayObjectATI;
export let glVertexAttribBinding: *fp_glVertexAttribBinding =
	null: *fp_glVertexAttribBinding;
export let glVertexAttribDivisor: *fp_glVertexAttribDivisor =
	null: *fp_glVertexAttribDivisor;
export let glVertexAttribDivisorARB: *fp_glVertexAttribDivisorARB =
	null: *fp_glVertexAttribDivisorARB;
export let glVertexAttribFormat: *fp_glVertexAttribFormat =
	null: *fp_glVertexAttribFormat;
export let glVertexAttribFormatNV: *fp_glVertexAttribFormatNV =
	null: *fp_glVertexAttribFormatNV;
export let glVertexAttribI1i: *fp_glVertexAttribI1i =
	null: *fp_glVertexAttribI1i;
export let glVertexAttribI1iEXT: *fp_glVertexAttribI1iEXT =
	null: *fp_glVertexAttribI1iEXT;
export let glVertexAttribI1iv: *fp_glVertexAttribI1iv =
	null: *fp_glVertexAttribI1iv;
export let glVertexAttribI1ivEXT: *fp_glVertexAttribI1ivEXT =
	null: *fp_glVertexAttribI1ivEXT;
export let glVertexAttribI1ui: *fp_glVertexAttribI1ui =
	null: *fp_glVertexAttribI1ui;
export let glVertexAttribI1uiEXT: *fp_glVertexAttribI1uiEXT =
	null: *fp_glVertexAttribI1uiEXT;
export let glVertexAttribI1uiv: *fp_glVertexAttribI1uiv =
	null: *fp_glVertexAttribI1uiv;
export let glVertexAttribI1uivEXT: *fp_glVertexAttribI1uivEXT =
	null: *fp_glVertexAttribI1uivEXT;
export let glVertexAttribI2i: *fp_glVertexAttribI2i =
	null: *fp_glVertexAttribI2i;
export let glVertexAttribI2iEXT: *fp_glVertexAttribI2iEXT =
	null: *fp_glVertexAttribI2iEXT;
export let glVertexAttribI2iv: *fp_glVertexAttribI2iv =
	null: *fp_glVertexAttribI2iv;
export let glVertexAttribI2ivEXT: *fp_glVertexAttribI2ivEXT =
	null: *fp_glVertexAttribI2ivEXT;
export let glVertexAttribI2ui: *fp_glVertexAttribI2ui =
	null: *fp_glVertexAttribI2ui;
export let glVertexAttribI2uiEXT: *fp_glVertexAttribI2uiEXT =
	null: *fp_glVertexAttribI2uiEXT;
export let glVertexAttribI2uiv: *fp_glVertexAttribI2uiv =
	null: *fp_glVertexAttribI2uiv;
export let glVertexAttribI2uivEXT: *fp_glVertexAttribI2uivEXT =
	null: *fp_glVertexAttribI2uivEXT;
export let glVertexAttribI3i: *fp_glVertexAttribI3i =
	null: *fp_glVertexAttribI3i;
export let glVertexAttribI3iEXT: *fp_glVertexAttribI3iEXT =
	null: *fp_glVertexAttribI3iEXT;
export let glVertexAttribI3iv: *fp_glVertexAttribI3iv =
	null: *fp_glVertexAttribI3iv;
export let glVertexAttribI3ivEXT: *fp_glVertexAttribI3ivEXT =
	null: *fp_glVertexAttribI3ivEXT;
export let glVertexAttribI3ui: *fp_glVertexAttribI3ui =
	null: *fp_glVertexAttribI3ui;
export let glVertexAttribI3uiEXT: *fp_glVertexAttribI3uiEXT =
	null: *fp_glVertexAttribI3uiEXT;
export let glVertexAttribI3uiv: *fp_glVertexAttribI3uiv =
	null: *fp_glVertexAttribI3uiv;
export let glVertexAttribI3uivEXT: *fp_glVertexAttribI3uivEXT =
	null: *fp_glVertexAttribI3uivEXT;
export let glVertexAttribI4bv: *fp_glVertexAttribI4bv =
	null: *fp_glVertexAttribI4bv;
export let glVertexAttribI4bvEXT: *fp_glVertexAttribI4bvEXT =
	null: *fp_glVertexAttribI4bvEXT;
export let glVertexAttribI4i: *fp_glVertexAttribI4i =
	null: *fp_glVertexAttribI4i;
export let glVertexAttribI4iEXT: *fp_glVertexAttribI4iEXT =
	null: *fp_glVertexAttribI4iEXT;
export let glVertexAttribI4iv: *fp_glVertexAttribI4iv =
	null: *fp_glVertexAttribI4iv;
export let glVertexAttribI4ivEXT: *fp_glVertexAttribI4ivEXT =
	null: *fp_glVertexAttribI4ivEXT;
export let glVertexAttribI4sv: *fp_glVertexAttribI4sv =
	null: *fp_glVertexAttribI4sv;
export let glVertexAttribI4svEXT: *fp_glVertexAttribI4svEXT =
	null: *fp_glVertexAttribI4svEXT;
export let glVertexAttribI4ubv: *fp_glVertexAttribI4ubv =
	null: *fp_glVertexAttribI4ubv;
export let glVertexAttribI4ubvEXT: *fp_glVertexAttribI4ubvEXT =
	null: *fp_glVertexAttribI4ubvEXT;
export let glVertexAttribI4ui: *fp_glVertexAttribI4ui =
	null: *fp_glVertexAttribI4ui;
export let glVertexAttribI4uiEXT: *fp_glVertexAttribI4uiEXT =
	null: *fp_glVertexAttribI4uiEXT;
export let glVertexAttribI4uiv: *fp_glVertexAttribI4uiv =
	null: *fp_glVertexAttribI4uiv;
export let glVertexAttribI4uivEXT: *fp_glVertexAttribI4uivEXT =
	null: *fp_glVertexAttribI4uivEXT;
export let glVertexAttribI4usv: *fp_glVertexAttribI4usv =
	null: *fp_glVertexAttribI4usv;
export let glVertexAttribI4usvEXT: *fp_glVertexAttribI4usvEXT =
	null: *fp_glVertexAttribI4usvEXT;
export let glVertexAttribIFormat: *fp_glVertexAttribIFormat =
	null: *fp_glVertexAttribIFormat;
export let glVertexAttribIFormatNV: *fp_glVertexAttribIFormatNV =
	null: *fp_glVertexAttribIFormatNV;
export let glVertexAttribIPointer: *fp_glVertexAttribIPointer =
	null: *fp_glVertexAttribIPointer;
export let glVertexAttribIPointerEXT: *fp_glVertexAttribIPointerEXT =
	null: *fp_glVertexAttribIPointerEXT;
export let glVertexAttribL1d: *fp_glVertexAttribL1d =
	null: *fp_glVertexAttribL1d;
export let glVertexAttribL1dEXT: *fp_glVertexAttribL1dEXT =
	null: *fp_glVertexAttribL1dEXT;
export let glVertexAttribL1dv: *fp_glVertexAttribL1dv =
	null: *fp_glVertexAttribL1dv;
export let glVertexAttribL1dvEXT: *fp_glVertexAttribL1dvEXT =
	null: *fp_glVertexAttribL1dvEXT;
export let glVertexAttribL1i64NV: *fp_glVertexAttribL1i64NV =
	null: *fp_glVertexAttribL1i64NV;
export let glVertexAttribL1i64vNV: *fp_glVertexAttribL1i64vNV =
	null: *fp_glVertexAttribL1i64vNV;
export let glVertexAttribL1ui64ARB: *fp_glVertexAttribL1ui64ARB =
	null: *fp_glVertexAttribL1ui64ARB;
export let glVertexAttribL1ui64NV: *fp_glVertexAttribL1ui64NV =
	null: *fp_glVertexAttribL1ui64NV;
export let glVertexAttribL1ui64vARB: *fp_glVertexAttribL1ui64vARB =
	null: *fp_glVertexAttribL1ui64vARB;
export let glVertexAttribL1ui64vNV: *fp_glVertexAttribL1ui64vNV =
	null: *fp_glVertexAttribL1ui64vNV;
export let glVertexAttribL2d: *fp_glVertexAttribL2d =
	null: *fp_glVertexAttribL2d;
export let glVertexAttribL2dEXT: *fp_glVertexAttribL2dEXT =
	null: *fp_glVertexAttribL2dEXT;
export let glVertexAttribL2dv: *fp_glVertexAttribL2dv =
	null: *fp_glVertexAttribL2dv;
export let glVertexAttribL2dvEXT: *fp_glVertexAttribL2dvEXT =
	null: *fp_glVertexAttribL2dvEXT;
export let glVertexAttribL2i64NV: *fp_glVertexAttribL2i64NV =
	null: *fp_glVertexAttribL2i64NV;
export let glVertexAttribL2i64vNV: *fp_glVertexAttribL2i64vNV =
	null: *fp_glVertexAttribL2i64vNV;
export let glVertexAttribL2ui64NV: *fp_glVertexAttribL2ui64NV =
	null: *fp_glVertexAttribL2ui64NV;
export let glVertexAttribL2ui64vNV: *fp_glVertexAttribL2ui64vNV =
	null: *fp_glVertexAttribL2ui64vNV;
export let glVertexAttribL3d: *fp_glVertexAttribL3d =
	null: *fp_glVertexAttribL3d;
export let glVertexAttribL3dEXT: *fp_glVertexAttribL3dEXT =
	null: *fp_glVertexAttribL3dEXT;
export let glVertexAttribL3dv: *fp_glVertexAttribL3dv =
	null: *fp_glVertexAttribL3dv;
export let glVertexAttribL3dvEXT: *fp_glVertexAttribL3dvEXT =
	null: *fp_glVertexAttribL3dvEXT;
export let glVertexAttribL3i64NV: *fp_glVertexAttribL3i64NV =
	null: *fp_glVertexAttribL3i64NV;
export let glVertexAttribL3i64vNV: *fp_glVertexAttribL3i64vNV =
	null: *fp_glVertexAttribL3i64vNV;
export let glVertexAttribL3ui64NV: *fp_glVertexAttribL3ui64NV =
	null: *fp_glVertexAttribL3ui64NV;
export let glVertexAttribL3ui64vNV: *fp_glVertexAttribL3ui64vNV =
	null: *fp_glVertexAttribL3ui64vNV;
export let glVertexAttribL4d: *fp_glVertexAttribL4d =
	null: *fp_glVertexAttribL4d;
export let glVertexAttribL4dEXT: *fp_glVertexAttribL4dEXT =
	null: *fp_glVertexAttribL4dEXT;
export let glVertexAttribL4dv: *fp_glVertexAttribL4dv =
	null: *fp_glVertexAttribL4dv;
export let glVertexAttribL4dvEXT: *fp_glVertexAttribL4dvEXT =
	null: *fp_glVertexAttribL4dvEXT;
export let glVertexAttribL4i64NV: *fp_glVertexAttribL4i64NV =
	null: *fp_glVertexAttribL4i64NV;
export let glVertexAttribL4i64vNV: *fp_glVertexAttribL4i64vNV =
	null: *fp_glVertexAttribL4i64vNV;
export let glVertexAttribL4ui64NV: *fp_glVertexAttribL4ui64NV =
	null: *fp_glVertexAttribL4ui64NV;
export let glVertexAttribL4ui64vNV: *fp_glVertexAttribL4ui64vNV =
	null: *fp_glVertexAttribL4ui64vNV;
export let glVertexAttribLFormat: *fp_glVertexAttribLFormat =
	null: *fp_glVertexAttribLFormat;
export let glVertexAttribLFormatNV: *fp_glVertexAttribLFormatNV =
	null: *fp_glVertexAttribLFormatNV;
export let glVertexAttribLPointer: *fp_glVertexAttribLPointer =
	null: *fp_glVertexAttribLPointer;
export let glVertexAttribLPointerEXT: *fp_glVertexAttribLPointerEXT =
	null: *fp_glVertexAttribLPointerEXT;
export let glVertexAttribP1ui: *fp_glVertexAttribP1ui =
	null: *fp_glVertexAttribP1ui;
export let glVertexAttribP1uiv: *fp_glVertexAttribP1uiv =
	null: *fp_glVertexAttribP1uiv;
export let glVertexAttribP2ui: *fp_glVertexAttribP2ui =
	null: *fp_glVertexAttribP2ui;
export let glVertexAttribP2uiv: *fp_glVertexAttribP2uiv =
	null: *fp_glVertexAttribP2uiv;
export let glVertexAttribP3ui: *fp_glVertexAttribP3ui =
	null: *fp_glVertexAttribP3ui;
export let glVertexAttribP3uiv: *fp_glVertexAttribP3uiv =
	null: *fp_glVertexAttribP3uiv;
export let glVertexAttribP4ui: *fp_glVertexAttribP4ui =
	null: *fp_glVertexAttribP4ui;
export let glVertexAttribP4uiv: *fp_glVertexAttribP4uiv =
	null: *fp_glVertexAttribP4uiv;
export let glVertexAttribParameteriAMD: *fp_glVertexAttribParameteriAMD =
	null: *fp_glVertexAttribParameteriAMD;
export let glVertexAttribPointer: *fp_glVertexAttribPointer =
	null: *fp_glVertexAttribPointer;
export let glVertexAttribPointerARB: *fp_glVertexAttribPointerARB =
	null: *fp_glVertexAttribPointerARB;
export let glVertexAttribPointerNV: *fp_glVertexAttribPointerNV =
	null: *fp_glVertexAttribPointerNV;
export let glVertexAttribs1dvNV: *fp_glVertexAttribs1dvNV =
	null: *fp_glVertexAttribs1dvNV;
export let glVertexAttribs1fvNV: *fp_glVertexAttribs1fvNV =
	null: *fp_glVertexAttribs1fvNV;
export let glVertexAttribs1hvNV: *fp_glVertexAttribs1hvNV =
	null: *fp_glVertexAttribs1hvNV;
export let glVertexAttribs1svNV: *fp_glVertexAttribs1svNV =
	null: *fp_glVertexAttribs1svNV;
export let glVertexAttribs2dvNV: *fp_glVertexAttribs2dvNV =
	null: *fp_glVertexAttribs2dvNV;
export let glVertexAttribs2fvNV: *fp_glVertexAttribs2fvNV =
	null: *fp_glVertexAttribs2fvNV;
export let glVertexAttribs2hvNV: *fp_glVertexAttribs2hvNV =
	null: *fp_glVertexAttribs2hvNV;
export let glVertexAttribs2svNV: *fp_glVertexAttribs2svNV =
	null: *fp_glVertexAttribs2svNV;
export let glVertexAttribs3dvNV: *fp_glVertexAttribs3dvNV =
	null: *fp_glVertexAttribs3dvNV;
export let glVertexAttribs3fvNV: *fp_glVertexAttribs3fvNV =
	null: *fp_glVertexAttribs3fvNV;
export let glVertexAttribs3hvNV: *fp_glVertexAttribs3hvNV =
	null: *fp_glVertexAttribs3hvNV;
export let glVertexAttribs3svNV: *fp_glVertexAttribs3svNV =
	null: *fp_glVertexAttribs3svNV;
export let glVertexAttribs4dvNV: *fp_glVertexAttribs4dvNV =
	null: *fp_glVertexAttribs4dvNV;
export let glVertexAttribs4fvNV: *fp_glVertexAttribs4fvNV =
	null: *fp_glVertexAttribs4fvNV;
export let glVertexAttribs4hvNV: *fp_glVertexAttribs4hvNV =
	null: *fp_glVertexAttribs4hvNV;
export let glVertexAttribs4svNV: *fp_glVertexAttribs4svNV =
	null: *fp_glVertexAttribs4svNV;
export let glVertexAttribs4ubvNV: *fp_glVertexAttribs4ubvNV =
	null: *fp_glVertexAttribs4ubvNV;
export let glVertexBindingDivisor: *fp_glVertexBindingDivisor =
	null: *fp_glVertexBindingDivisor;
export let glVertexBlendARB: *fp_glVertexBlendARB =
	null: *fp_glVertexBlendARB;
export let glVertexBlendEnvfATI: *fp_glVertexBlendEnvfATI =
	null: *fp_glVertexBlendEnvfATI;
export let glVertexBlendEnviATI: *fp_glVertexBlendEnviATI =
	null: *fp_glVertexBlendEnviATI;
export let glVertexFormatNV: *fp_glVertexFormatNV =
	null: *fp_glVertexFormatNV;
export let glVertexPointerEXT: *fp_glVertexPointerEXT =
	null: *fp_glVertexPointerEXT;
export let glVertexPointerListIBM: *fp_glVertexPointerListIBM =
	null: *fp_glVertexPointerListIBM;
export let glVertexPointervINTEL: *fp_glVertexPointervINTEL =
	null: *fp_glVertexPointervINTEL;
export let glVertexStream1dATI: *fp_glVertexStream1dATI =
	null: *fp_glVertexStream1dATI;
export let glVertexStream1dvATI: *fp_glVertexStream1dvATI =
	null: *fp_glVertexStream1dvATI;
export let glVertexStream1fATI: *fp_glVertexStream1fATI =
	null: *fp_glVertexStream1fATI;
export let glVertexStream1fvATI: *fp_glVertexStream1fvATI =
	null: *fp_glVertexStream1fvATI;
export let glVertexStream1iATI: *fp_glVertexStream1iATI =
	null: *fp_glVertexStream1iATI;
export let glVertexStream1ivATI: *fp_glVertexStream1ivATI =
	null: *fp_glVertexStream1ivATI;
export let glVertexStream1sATI: *fp_glVertexStream1sATI =
	null: *fp_glVertexStream1sATI;
export let glVertexStream1svATI: *fp_glVertexStream1svATI =
	null: *fp_glVertexStream1svATI;
export let glVertexStream2dATI: *fp_glVertexStream2dATI =
	null: *fp_glVertexStream2dATI;
export let glVertexStream2dvATI: *fp_glVertexStream2dvATI =
	null: *fp_glVertexStream2dvATI;
export let glVertexStream2fATI: *fp_glVertexStream2fATI =
	null: *fp_glVertexStream2fATI;
export let glVertexStream2fvATI: *fp_glVertexStream2fvATI =
	null: *fp_glVertexStream2fvATI;
export let glVertexStream2iATI: *fp_glVertexStream2iATI =
	null: *fp_glVertexStream2iATI;
export let glVertexStream2ivATI: *fp_glVertexStream2ivATI =
	null: *fp_glVertexStream2ivATI;
export let glVertexStream2sATI: *fp_glVertexStream2sATI =
	null: *fp_glVertexStream2sATI;
export let glVertexStream2svATI: *fp_glVertexStream2svATI =
	null: *fp_glVertexStream2svATI;
export let glVertexStream3dATI: *fp_glVertexStream3dATI =
	null: *fp_glVertexStream3dATI;
export let glVertexStream3dvATI: *fp_glVertexStream3dvATI =
	null: *fp_glVertexStream3dvATI;
export let glVertexStream3fATI: *fp_glVertexStream3fATI =
	null: *fp_glVertexStream3fATI;
export let glVertexStream3fvATI: *fp_glVertexStream3fvATI =
	null: *fp_glVertexStream3fvATI;
export let glVertexStream3iATI: *fp_glVertexStream3iATI =
	null: *fp_glVertexStream3iATI;
export let glVertexStream3ivATI: *fp_glVertexStream3ivATI =
	null: *fp_glVertexStream3ivATI;
export let glVertexStream3sATI: *fp_glVertexStream3sATI =
	null: *fp_glVertexStream3sATI;
export let glVertexStream3svATI: *fp_glVertexStream3svATI =
	null: *fp_glVertexStream3svATI;
export let glVertexStream4dATI: *fp_glVertexStream4dATI =
	null: *fp_glVertexStream4dATI;
export let glVertexStream4dvATI: *fp_glVertexStream4dvATI =
	null: *fp_glVertexStream4dvATI;
export let glVertexStream4fATI: *fp_glVertexStream4fATI =
	null: *fp_glVertexStream4fATI;
export let glVertexStream4fvATI: *fp_glVertexStream4fvATI =
	null: *fp_glVertexStream4fvATI;
export let glVertexStream4iATI: *fp_glVertexStream4iATI =
	null: *fp_glVertexStream4iATI;
export let glVertexStream4ivATI: *fp_glVertexStream4ivATI =
	null: *fp_glVertexStream4ivATI;
export let glVertexStream4sATI: *fp_glVertexStream4sATI =
	null: *fp_glVertexStream4sATI;
export let glVertexStream4svATI: *fp_glVertexStream4svATI =
	null: *fp_glVertexStream4svATI;
export let glVertexWeightPointerEXT: *fp_glVertexWeightPointerEXT =
	null: *fp_glVertexWeightPointerEXT;
export let glVertexWeightfEXT: *fp_glVertexWeightfEXT =
	null: *fp_glVertexWeightfEXT;
export let glVertexWeightfvEXT: *fp_glVertexWeightfvEXT =
	null: *fp_glVertexWeightfvEXT;
export let glVertexWeighthNV: *fp_glVertexWeighthNV =
	null: *fp_glVertexWeighthNV;
export let glVertexWeighthvNV: *fp_glVertexWeighthvNV =
	null: *fp_glVertexWeighthvNV;
export let glVideoCaptureNV: *fp_glVideoCaptureNV =
	null: *fp_glVideoCaptureNV;
export let glVideoCaptureStreamParameterdvNV: *fp_glVideoCaptureStreamParameterdvNV =
	null: *fp_glVideoCaptureStreamParameterdvNV;
export let glVideoCaptureStreamParameterfvNV: *fp_glVideoCaptureStreamParameterfvNV =
	null: *fp_glVideoCaptureStreamParameterfvNV;
export let glVideoCaptureStreamParameterivNV: *fp_glVideoCaptureStreamParameterivNV =
	null: *fp_glVideoCaptureStreamParameterivNV;
export let glViewport: *fp_glViewport =
	null: *fp_glViewport;
export let glViewportArrayv: *fp_glViewportArrayv =
	null: *fp_glViewportArrayv;
export let glViewportIndexedf: *fp_glViewportIndexedf =
	null: *fp_glViewportIndexedf;
export let glViewportIndexedfv: *fp_glViewportIndexedfv =
	null: *fp_glViewportIndexedfv;
export let glViewportPositionWScaleNV: *fp_glViewportPositionWScaleNV =
	null: *fp_glViewportPositionWScaleNV;
export let glViewportSwizzleNV: *fp_glViewportSwizzleNV =
	null: *fp_glViewportSwizzleNV;
export let glWaitSemaphoreEXT: *fp_glWaitSemaphoreEXT =
	null: *fp_glWaitSemaphoreEXT;
export let glWaitSemaphoreui64NVX: *fp_glWaitSemaphoreui64NVX =
	null: *fp_glWaitSemaphoreui64NVX;
export let glWaitSync: *fp_glWaitSync =
	null: *fp_glWaitSync;
export let glWaitVkSemaphoreNV: *fp_glWaitVkSemaphoreNV =
	null: *fp_glWaitVkSemaphoreNV;
export let glWeightPathsNV: *fp_glWeightPathsNV =
	null: *fp_glWeightPathsNV;
export let glWeightPointerARB: *fp_glWeightPointerARB =
	null: *fp_glWeightPointerARB;
export let glWeightbvARB: *fp_glWeightbvARB =
	null: *fp_glWeightbvARB;
export let glWeightdvARB: *fp_glWeightdvARB =
	null: *fp_glWeightdvARB;
export let glWeightfvARB: *fp_glWeightfvARB =
	null: *fp_glWeightfvARB;
export let glWeightivARB: *fp_glWeightivARB =
	null: *fp_glWeightivARB;
export let glWeightsvARB: *fp_glWeightsvARB =
	null: *fp_glWeightsvARB;
export let glWeightubvARB: *fp_glWeightubvARB =
	null: *fp_glWeightubvARB;
export let glWeightuivARB: *fp_glWeightuivARB =
	null: *fp_glWeightuivARB;
export let glWeightusvARB: *fp_glWeightusvARB =
	null: *fp_glWeightusvARB;
export let glWindowPos2dARB: *fp_glWindowPos2dARB =
	null: *fp_glWindowPos2dARB;
export let glWindowPos2dMESA: *fp_glWindowPos2dMESA =
	null: *fp_glWindowPos2dMESA;
export let glWindowPos2dvARB: *fp_glWindowPos2dvARB =
	null: *fp_glWindowPos2dvARB;
export let glWindowPos2dvMESA: *fp_glWindowPos2dvMESA =
	null: *fp_glWindowPos2dvMESA;
export let glWindowPos2fARB: *fp_glWindowPos2fARB =
	null: *fp_glWindowPos2fARB;
export let glWindowPos2fMESA: *fp_glWindowPos2fMESA =
	null: *fp_glWindowPos2fMESA;
export let glWindowPos2fvARB: *fp_glWindowPos2fvARB =
	null: *fp_glWindowPos2fvARB;
export let glWindowPos2fvMESA: *fp_glWindowPos2fvMESA =
	null: *fp_glWindowPos2fvMESA;
export let glWindowPos2iARB: *fp_glWindowPos2iARB =
	null: *fp_glWindowPos2iARB;
export let glWindowPos2iMESA: *fp_glWindowPos2iMESA =
	null: *fp_glWindowPos2iMESA;
export let glWindowPos2ivARB: *fp_glWindowPos2ivARB =
	null: *fp_glWindowPos2ivARB;
export let glWindowPos2ivMESA: *fp_glWindowPos2ivMESA =
	null: *fp_glWindowPos2ivMESA;
export let glWindowPos2sARB: *fp_glWindowPos2sARB =
	null: *fp_glWindowPos2sARB;
export let glWindowPos2sMESA: *fp_glWindowPos2sMESA =
	null: *fp_glWindowPos2sMESA;
export let glWindowPos2svARB: *fp_glWindowPos2svARB =
	null: *fp_glWindowPos2svARB;
export let glWindowPos2svMESA: *fp_glWindowPos2svMESA =
	null: *fp_glWindowPos2svMESA;
export let glWindowPos3dARB: *fp_glWindowPos3dARB =
	null: *fp_glWindowPos3dARB;
export let glWindowPos3dMESA: *fp_glWindowPos3dMESA =
	null: *fp_glWindowPos3dMESA;
export let glWindowPos3dvARB: *fp_glWindowPos3dvARB =
	null: *fp_glWindowPos3dvARB;
export let glWindowPos3dvMESA: *fp_glWindowPos3dvMESA =
	null: *fp_glWindowPos3dvMESA;
export let glWindowPos3fARB: *fp_glWindowPos3fARB =
	null: *fp_glWindowPos3fARB;
export let glWindowPos3fMESA: *fp_glWindowPos3fMESA =
	null: *fp_glWindowPos3fMESA;
export let glWindowPos3fvARB: *fp_glWindowPos3fvARB =
	null: *fp_glWindowPos3fvARB;
export let glWindowPos3fvMESA: *fp_glWindowPos3fvMESA =
	null: *fp_glWindowPos3fvMESA;
export let glWindowPos3iARB: *fp_glWindowPos3iARB =
	null: *fp_glWindowPos3iARB;
export let glWindowPos3iMESA: *fp_glWindowPos3iMESA =
	null: *fp_glWindowPos3iMESA;
export let glWindowPos3ivARB: *fp_glWindowPos3ivARB =
	null: *fp_glWindowPos3ivARB;
export let glWindowPos3ivMESA: *fp_glWindowPos3ivMESA =
	null: *fp_glWindowPos3ivMESA;
export let glWindowPos3sARB: *fp_glWindowPos3sARB =
	null: *fp_glWindowPos3sARB;
export let glWindowPos3sMESA: *fp_glWindowPos3sMESA =
	null: *fp_glWindowPos3sMESA;
export let glWindowPos3svARB: *fp_glWindowPos3svARB =
	null: *fp_glWindowPos3svARB;
export let glWindowPos3svMESA: *fp_glWindowPos3svMESA =
	null: *fp_glWindowPos3svMESA;
export let glWindowPos4dMESA: *fp_glWindowPos4dMESA =
	null: *fp_glWindowPos4dMESA;
export let glWindowPos4dvMESA: *fp_glWindowPos4dvMESA =
	null: *fp_glWindowPos4dvMESA;
export let glWindowPos4fMESA: *fp_glWindowPos4fMESA =
	null: *fp_glWindowPos4fMESA;
export let glWindowPos4fvMESA: *fp_glWindowPos4fvMESA =
	null: *fp_glWindowPos4fvMESA;
export let glWindowPos4iMESA: *fp_glWindowPos4iMESA =
	null: *fp_glWindowPos4iMESA;
export let glWindowPos4ivMESA: *fp_glWindowPos4ivMESA =
	null: *fp_glWindowPos4ivMESA;
export let glWindowPos4sMESA: *fp_glWindowPos4sMESA =
	null: *fp_glWindowPos4sMESA;
export let glWindowPos4svMESA: *fp_glWindowPos4svMESA =
	null: *fp_glWindowPos4svMESA;
export let glWindowRectanglesEXT: *fp_glWindowRectanglesEXT =
	null: *fp_glWindowRectanglesEXT;
export let glWriteMaskEXT: *fp_glWriteMaskEXT =
	null: *fp_glWriteMaskEXT;

// Function loading with built-in loader
export fn load() void = {
	glAccumxOES = get_proc_address("glAccumxOES\0"): *fp_glAccumxOES;
	glAcquireKeyedMutexWin32EXT = get_proc_address("glAcquireKeyedMutexWin32EXT\0"): *fp_glAcquireKeyedMutexWin32EXT;
	glActiveProgramEXT = get_proc_address("glActiveProgramEXT\0"): *fp_glActiveProgramEXT;
	glActiveShaderProgram = get_proc_address("glActiveShaderProgram\0"): *fp_glActiveShaderProgram;
	glActiveStencilFaceEXT = get_proc_address("glActiveStencilFaceEXT\0"): *fp_glActiveStencilFaceEXT;
	glActiveTexture = get_proc_address("glActiveTexture\0"): *fp_glActiveTexture;
	glActiveTextureARB = get_proc_address("glActiveTextureARB\0"): *fp_glActiveTextureARB;
	glActiveVaryingNV = get_proc_address("glActiveVaryingNV\0"): *fp_glActiveVaryingNV;
	glAlphaFragmentOp1ATI = get_proc_address("glAlphaFragmentOp1ATI\0"): *fp_glAlphaFragmentOp1ATI;
	glAlphaFragmentOp2ATI = get_proc_address("glAlphaFragmentOp2ATI\0"): *fp_glAlphaFragmentOp2ATI;
	glAlphaFragmentOp3ATI = get_proc_address("glAlphaFragmentOp3ATI\0"): *fp_glAlphaFragmentOp3ATI;
	glAlphaFuncxOES = get_proc_address("glAlphaFuncxOES\0"): *fp_glAlphaFuncxOES;
	glAlphaToCoverageDitherControlNV = get_proc_address("glAlphaToCoverageDitherControlNV\0"): *fp_glAlphaToCoverageDitherControlNV;
	glApplyFramebufferAttachmentCMAAINTEL = get_proc_address("glApplyFramebufferAttachmentCMAAINTEL\0"): *fp_glApplyFramebufferAttachmentCMAAINTEL;
	glApplyTextureEXT = get_proc_address("glApplyTextureEXT\0"): *fp_glApplyTextureEXT;
	glAreProgramsResidentNV = get_proc_address("glAreProgramsResidentNV\0"): *fp_glAreProgramsResidentNV;
	glAreTexturesResidentEXT = get_proc_address("glAreTexturesResidentEXT\0"): *fp_glAreTexturesResidentEXT;
	glArrayElementEXT = get_proc_address("glArrayElementEXT\0"): *fp_glArrayElementEXT;
	glArrayObjectATI = get_proc_address("glArrayObjectATI\0"): *fp_glArrayObjectATI;
	glAsyncCopyBufferSubDataNVX = get_proc_address("glAsyncCopyBufferSubDataNVX\0"): *fp_glAsyncCopyBufferSubDataNVX;
	glAsyncCopyImageSubDataNVX = get_proc_address("glAsyncCopyImageSubDataNVX\0"): *fp_glAsyncCopyImageSubDataNVX;
	glAsyncMarkerSGIX = get_proc_address("glAsyncMarkerSGIX\0"): *fp_glAsyncMarkerSGIX;
	glAttachObjectARB = get_proc_address("glAttachObjectARB\0"): *fp_glAttachObjectARB;
	glAttachShader = get_proc_address("glAttachShader\0"): *fp_glAttachShader;
	glBeginConditionalRender = get_proc_address("glBeginConditionalRender\0"): *fp_glBeginConditionalRender;
	glBeginConditionalRenderNV = get_proc_address("glBeginConditionalRenderNV\0"): *fp_glBeginConditionalRenderNV;
	glBeginConditionalRenderNVX = get_proc_address("glBeginConditionalRenderNVX\0"): *fp_glBeginConditionalRenderNVX;
	glBeginFragmentShaderATI = get_proc_address("glBeginFragmentShaderATI\0"): *fp_glBeginFragmentShaderATI;
	glBeginOcclusionQueryNV = get_proc_address("glBeginOcclusionQueryNV\0"): *fp_glBeginOcclusionQueryNV;
	glBeginPerfMonitorAMD = get_proc_address("glBeginPerfMonitorAMD\0"): *fp_glBeginPerfMonitorAMD;
	glBeginPerfQueryINTEL = get_proc_address("glBeginPerfQueryINTEL\0"): *fp_glBeginPerfQueryINTEL;
	glBeginQuery = get_proc_address("glBeginQuery\0"): *fp_glBeginQuery;
	glBeginQueryARB = get_proc_address("glBeginQueryARB\0"): *fp_glBeginQueryARB;
	glBeginQueryIndexed = get_proc_address("glBeginQueryIndexed\0"): *fp_glBeginQueryIndexed;
	glBeginTransformFeedback = get_proc_address("glBeginTransformFeedback\0"): *fp_glBeginTransformFeedback;
	glBeginTransformFeedbackEXT = get_proc_address("glBeginTransformFeedbackEXT\0"): *fp_glBeginTransformFeedbackEXT;
	glBeginTransformFeedbackNV = get_proc_address("glBeginTransformFeedbackNV\0"): *fp_glBeginTransformFeedbackNV;
	glBeginVertexShaderEXT = get_proc_address("glBeginVertexShaderEXT\0"): *fp_glBeginVertexShaderEXT;
	glBeginVideoCaptureNV = get_proc_address("glBeginVideoCaptureNV\0"): *fp_glBeginVideoCaptureNV;
	glBindAttribLocation = get_proc_address("glBindAttribLocation\0"): *fp_glBindAttribLocation;
	glBindAttribLocationARB = get_proc_address("glBindAttribLocationARB\0"): *fp_glBindAttribLocationARB;
	glBindBuffer = get_proc_address("glBindBuffer\0"): *fp_glBindBuffer;
	glBindBufferARB = get_proc_address("glBindBufferARB\0"): *fp_glBindBufferARB;
	glBindBufferBase = get_proc_address("glBindBufferBase\0"): *fp_glBindBufferBase;
	glBindBufferBaseEXT = get_proc_address("glBindBufferBaseEXT\0"): *fp_glBindBufferBaseEXT;
	glBindBufferBaseNV = get_proc_address("glBindBufferBaseNV\0"): *fp_glBindBufferBaseNV;
	glBindBufferOffsetEXT = get_proc_address("glBindBufferOffsetEXT\0"): *fp_glBindBufferOffsetEXT;
	glBindBufferOffsetNV = get_proc_address("glBindBufferOffsetNV\0"): *fp_glBindBufferOffsetNV;
	glBindBufferRange = get_proc_address("glBindBufferRange\0"): *fp_glBindBufferRange;
	glBindBufferRangeEXT = get_proc_address("glBindBufferRangeEXT\0"): *fp_glBindBufferRangeEXT;
	glBindBufferRangeNV = get_proc_address("glBindBufferRangeNV\0"): *fp_glBindBufferRangeNV;
	glBindBuffersBase = get_proc_address("glBindBuffersBase\0"): *fp_glBindBuffersBase;
	glBindBuffersRange = get_proc_address("glBindBuffersRange\0"): *fp_glBindBuffersRange;
	glBindFragDataLocation = get_proc_address("glBindFragDataLocation\0"): *fp_glBindFragDataLocation;
	glBindFragDataLocationEXT = get_proc_address("glBindFragDataLocationEXT\0"): *fp_glBindFragDataLocationEXT;
	glBindFragDataLocationIndexed = get_proc_address("glBindFragDataLocationIndexed\0"): *fp_glBindFragDataLocationIndexed;
	glBindFragmentShaderATI = get_proc_address("glBindFragmentShaderATI\0"): *fp_glBindFragmentShaderATI;
	glBindFramebuffer = get_proc_address("glBindFramebuffer\0"): *fp_glBindFramebuffer;
	glBindFramebufferEXT = get_proc_address("glBindFramebufferEXT\0"): *fp_glBindFramebufferEXT;
	glBindImageTexture = get_proc_address("glBindImageTexture\0"): *fp_glBindImageTexture;
	glBindImageTextureEXT = get_proc_address("glBindImageTextureEXT\0"): *fp_glBindImageTextureEXT;
	glBindImageTextures = get_proc_address("glBindImageTextures\0"): *fp_glBindImageTextures;
	glBindLightParameterEXT = get_proc_address("glBindLightParameterEXT\0"): *fp_glBindLightParameterEXT;
	glBindMaterialParameterEXT = get_proc_address("glBindMaterialParameterEXT\0"): *fp_glBindMaterialParameterEXT;
	glBindMultiTextureEXT = get_proc_address("glBindMultiTextureEXT\0"): *fp_glBindMultiTextureEXT;
	glBindParameterEXT = get_proc_address("glBindParameterEXT\0"): *fp_glBindParameterEXT;
	glBindProgramARB = get_proc_address("glBindProgramARB\0"): *fp_glBindProgramARB;
	glBindProgramNV = get_proc_address("glBindProgramNV\0"): *fp_glBindProgramNV;
	glBindProgramPipeline = get_proc_address("glBindProgramPipeline\0"): *fp_glBindProgramPipeline;
	glBindRenderbuffer = get_proc_address("glBindRenderbuffer\0"): *fp_glBindRenderbuffer;
	glBindRenderbufferEXT = get_proc_address("glBindRenderbufferEXT\0"): *fp_glBindRenderbufferEXT;
	glBindSampler = get_proc_address("glBindSampler\0"): *fp_glBindSampler;
	glBindSamplers = get_proc_address("glBindSamplers\0"): *fp_glBindSamplers;
	glBindShadingRateImageNV = get_proc_address("glBindShadingRateImageNV\0"): *fp_glBindShadingRateImageNV;
	glBindTexGenParameterEXT = get_proc_address("glBindTexGenParameterEXT\0"): *fp_glBindTexGenParameterEXT;
	glBindTexture = get_proc_address("glBindTexture\0"): *fp_glBindTexture;
	glBindTextureEXT = get_proc_address("glBindTextureEXT\0"): *fp_glBindTextureEXT;
	glBindTextureUnit = get_proc_address("glBindTextureUnit\0"): *fp_glBindTextureUnit;
	glBindTextureUnitParameterEXT = get_proc_address("glBindTextureUnitParameterEXT\0"): *fp_glBindTextureUnitParameterEXT;
	glBindTextures = get_proc_address("glBindTextures\0"): *fp_glBindTextures;
	glBindTransformFeedback = get_proc_address("glBindTransformFeedback\0"): *fp_glBindTransformFeedback;
	glBindTransformFeedbackNV = get_proc_address("glBindTransformFeedbackNV\0"): *fp_glBindTransformFeedbackNV;
	glBindVertexArray = get_proc_address("glBindVertexArray\0"): *fp_glBindVertexArray;
	glBindVertexArrayAPPLE = get_proc_address("glBindVertexArrayAPPLE\0"): *fp_glBindVertexArrayAPPLE;
	glBindVertexBuffer = get_proc_address("glBindVertexBuffer\0"): *fp_glBindVertexBuffer;
	glBindVertexBuffers = get_proc_address("glBindVertexBuffers\0"): *fp_glBindVertexBuffers;
	glBindVertexShaderEXT = get_proc_address("glBindVertexShaderEXT\0"): *fp_glBindVertexShaderEXT;
	glBindVideoCaptureStreamBufferNV = get_proc_address("glBindVideoCaptureStreamBufferNV\0"): *fp_glBindVideoCaptureStreamBufferNV;
	glBindVideoCaptureStreamTextureNV = get_proc_address("glBindVideoCaptureStreamTextureNV\0"): *fp_glBindVideoCaptureStreamTextureNV;
	glBinormal3bEXT = get_proc_address("glBinormal3bEXT\0"): *fp_glBinormal3bEXT;
	glBinormal3bvEXT = get_proc_address("glBinormal3bvEXT\0"): *fp_glBinormal3bvEXT;
	glBinormal3dEXT = get_proc_address("glBinormal3dEXT\0"): *fp_glBinormal3dEXT;
	glBinormal3dvEXT = get_proc_address("glBinormal3dvEXT\0"): *fp_glBinormal3dvEXT;
	glBinormal3fEXT = get_proc_address("glBinormal3fEXT\0"): *fp_glBinormal3fEXT;
	glBinormal3fvEXT = get_proc_address("glBinormal3fvEXT\0"): *fp_glBinormal3fvEXT;
	glBinormal3iEXT = get_proc_address("glBinormal3iEXT\0"): *fp_glBinormal3iEXT;
	glBinormal3ivEXT = get_proc_address("glBinormal3ivEXT\0"): *fp_glBinormal3ivEXT;
	glBinormal3sEXT = get_proc_address("glBinormal3sEXT\0"): *fp_glBinormal3sEXT;
	glBinormal3svEXT = get_proc_address("glBinormal3svEXT\0"): *fp_glBinormal3svEXT;
	glBinormalPointerEXT = get_proc_address("glBinormalPointerEXT\0"): *fp_glBinormalPointerEXT;
	glBitmapxOES = get_proc_address("glBitmapxOES\0"): *fp_glBitmapxOES;
	glBlendBarrierKHR = get_proc_address("glBlendBarrierKHR\0"): *fp_glBlendBarrierKHR;
	glBlendBarrierNV = get_proc_address("glBlendBarrierNV\0"): *fp_glBlendBarrierNV;
	glBlendColor = get_proc_address("glBlendColor\0"): *fp_glBlendColor;
	glBlendColorEXT = get_proc_address("glBlendColorEXT\0"): *fp_glBlendColorEXT;
	glBlendColorxOES = get_proc_address("glBlendColorxOES\0"): *fp_glBlendColorxOES;
	glBlendEquation = get_proc_address("glBlendEquation\0"): *fp_glBlendEquation;
	glBlendEquationEXT = get_proc_address("glBlendEquationEXT\0"): *fp_glBlendEquationEXT;
	glBlendEquationIndexedAMD = get_proc_address("glBlendEquationIndexedAMD\0"): *fp_glBlendEquationIndexedAMD;
	glBlendEquationSeparate = get_proc_address("glBlendEquationSeparate\0"): *fp_glBlendEquationSeparate;
	glBlendEquationSeparateEXT = get_proc_address("glBlendEquationSeparateEXT\0"): *fp_glBlendEquationSeparateEXT;
	glBlendEquationSeparateIndexedAMD = get_proc_address("glBlendEquationSeparateIndexedAMD\0"): *fp_glBlendEquationSeparateIndexedAMD;
	glBlendEquationSeparateiARB = get_proc_address("glBlendEquationSeparateiARB\0"): *fp_glBlendEquationSeparateiARB;
	glBlendEquationiARB = get_proc_address("glBlendEquationiARB\0"): *fp_glBlendEquationiARB;
	glBlendFunc = get_proc_address("glBlendFunc\0"): *fp_glBlendFunc;
	glBlendFuncIndexedAMD = get_proc_address("glBlendFuncIndexedAMD\0"): *fp_glBlendFuncIndexedAMD;
	glBlendFuncSeparate = get_proc_address("glBlendFuncSeparate\0"): *fp_glBlendFuncSeparate;
	glBlendFuncSeparateEXT = get_proc_address("glBlendFuncSeparateEXT\0"): *fp_glBlendFuncSeparateEXT;
	glBlendFuncSeparateINGR = get_proc_address("glBlendFuncSeparateINGR\0"): *fp_glBlendFuncSeparateINGR;
	glBlendFuncSeparateIndexedAMD = get_proc_address("glBlendFuncSeparateIndexedAMD\0"): *fp_glBlendFuncSeparateIndexedAMD;
	glBlendFuncSeparateiARB = get_proc_address("glBlendFuncSeparateiARB\0"): *fp_glBlendFuncSeparateiARB;
	glBlendFunciARB = get_proc_address("glBlendFunciARB\0"): *fp_glBlendFunciARB;
	glBlendParameteriNV = get_proc_address("glBlendParameteriNV\0"): *fp_glBlendParameteriNV;
	glBlitFramebuffer = get_proc_address("glBlitFramebuffer\0"): *fp_glBlitFramebuffer;
	glBlitFramebufferEXT = get_proc_address("glBlitFramebufferEXT\0"): *fp_glBlitFramebufferEXT;
	glBlitNamedFramebuffer = get_proc_address("glBlitNamedFramebuffer\0"): *fp_glBlitNamedFramebuffer;
	glBufferAddressRangeNV = get_proc_address("glBufferAddressRangeNV\0"): *fp_glBufferAddressRangeNV;
	glBufferAttachMemoryNV = get_proc_address("glBufferAttachMemoryNV\0"): *fp_glBufferAttachMemoryNV;
	glBufferData = get_proc_address("glBufferData\0"): *fp_glBufferData;
	glBufferDataARB = get_proc_address("glBufferDataARB\0"): *fp_glBufferDataARB;
	glBufferPageCommitmentARB = get_proc_address("glBufferPageCommitmentARB\0"): *fp_glBufferPageCommitmentARB;
	glBufferPageCommitmentMemNV = get_proc_address("glBufferPageCommitmentMemNV\0"): *fp_glBufferPageCommitmentMemNV;
	glBufferParameteriAPPLE = get_proc_address("glBufferParameteriAPPLE\0"): *fp_glBufferParameteriAPPLE;
	glBufferStorage = get_proc_address("glBufferStorage\0"): *fp_glBufferStorage;
	glBufferStorageExternalEXT = get_proc_address("glBufferStorageExternalEXT\0"): *fp_glBufferStorageExternalEXT;
	glBufferStorageMemEXT = get_proc_address("glBufferStorageMemEXT\0"): *fp_glBufferStorageMemEXT;
	glBufferSubData = get_proc_address("glBufferSubData\0"): *fp_glBufferSubData;
	glBufferSubDataARB = get_proc_address("glBufferSubDataARB\0"): *fp_glBufferSubDataARB;
	glCallCommandListNV = get_proc_address("glCallCommandListNV\0"): *fp_glCallCommandListNV;
	glCheckFramebufferStatus = get_proc_address("glCheckFramebufferStatus\0"): *fp_glCheckFramebufferStatus;
	glCheckFramebufferStatusEXT = get_proc_address("glCheckFramebufferStatusEXT\0"): *fp_glCheckFramebufferStatusEXT;
	glCheckNamedFramebufferStatus = get_proc_address("glCheckNamedFramebufferStatus\0"): *fp_glCheckNamedFramebufferStatus;
	glCheckNamedFramebufferStatusEXT = get_proc_address("glCheckNamedFramebufferStatusEXT\0"): *fp_glCheckNamedFramebufferStatusEXT;
	glClampColor = get_proc_address("glClampColor\0"): *fp_glClampColor;
	glClampColorARB = get_proc_address("glClampColorARB\0"): *fp_glClampColorARB;
	glClear = get_proc_address("glClear\0"): *fp_glClear;
	glClearAccumxOES = get_proc_address("glClearAccumxOES\0"): *fp_glClearAccumxOES;
	glClearBufferData = get_proc_address("glClearBufferData\0"): *fp_glClearBufferData;
	glClearBufferSubData = get_proc_address("glClearBufferSubData\0"): *fp_glClearBufferSubData;
	glClearBufferfi = get_proc_address("glClearBufferfi\0"): *fp_glClearBufferfi;
	glClearBufferfv = get_proc_address("glClearBufferfv\0"): *fp_glClearBufferfv;
	glClearBufferiv = get_proc_address("glClearBufferiv\0"): *fp_glClearBufferiv;
	glClearBufferuiv = get_proc_address("glClearBufferuiv\0"): *fp_glClearBufferuiv;
	glClearColor = get_proc_address("glClearColor\0"): *fp_glClearColor;
	glClearColorIiEXT = get_proc_address("glClearColorIiEXT\0"): *fp_glClearColorIiEXT;
	glClearColorIuiEXT = get_proc_address("glClearColorIuiEXT\0"): *fp_glClearColorIuiEXT;
	glClearColorxOES = get_proc_address("glClearColorxOES\0"): *fp_glClearColorxOES;
	glClearDepth = get_proc_address("glClearDepth\0"): *fp_glClearDepth;
	glClearDepthdNV = get_proc_address("glClearDepthdNV\0"): *fp_glClearDepthdNV;
	glClearDepthf = get_proc_address("glClearDepthf\0"): *fp_glClearDepthf;
	glClearDepthfOES = get_proc_address("glClearDepthfOES\0"): *fp_glClearDepthfOES;
	glClearDepthxOES = get_proc_address("glClearDepthxOES\0"): *fp_glClearDepthxOES;
	glClearNamedBufferData = get_proc_address("glClearNamedBufferData\0"): *fp_glClearNamedBufferData;
	glClearNamedBufferDataEXT = get_proc_address("glClearNamedBufferDataEXT\0"): *fp_glClearNamedBufferDataEXT;
	glClearNamedBufferSubData = get_proc_address("glClearNamedBufferSubData\0"): *fp_glClearNamedBufferSubData;
	glClearNamedBufferSubDataEXT = get_proc_address("glClearNamedBufferSubDataEXT\0"): *fp_glClearNamedBufferSubDataEXT;
	glClearNamedFramebufferfi = get_proc_address("glClearNamedFramebufferfi\0"): *fp_glClearNamedFramebufferfi;
	glClearNamedFramebufferfv = get_proc_address("glClearNamedFramebufferfv\0"): *fp_glClearNamedFramebufferfv;
	glClearNamedFramebufferiv = get_proc_address("glClearNamedFramebufferiv\0"): *fp_glClearNamedFramebufferiv;
	glClearNamedFramebufferuiv = get_proc_address("glClearNamedFramebufferuiv\0"): *fp_glClearNamedFramebufferuiv;
	glClearStencil = get_proc_address("glClearStencil\0"): *fp_glClearStencil;
	glClearTexImage = get_proc_address("glClearTexImage\0"): *fp_glClearTexImage;
	glClearTexSubImage = get_proc_address("glClearTexSubImage\0"): *fp_glClearTexSubImage;
	glClientActiveTextureARB = get_proc_address("glClientActiveTextureARB\0"): *fp_glClientActiveTextureARB;
	glClientActiveVertexStreamATI = get_proc_address("glClientActiveVertexStreamATI\0"): *fp_glClientActiveVertexStreamATI;
	glClientAttribDefaultEXT = get_proc_address("glClientAttribDefaultEXT\0"): *fp_glClientAttribDefaultEXT;
	glClientWaitSemaphoreui64NVX = get_proc_address("glClientWaitSemaphoreui64NVX\0"): *fp_glClientWaitSemaphoreui64NVX;
	glClientWaitSync = get_proc_address("glClientWaitSync\0"): *fp_glClientWaitSync;
	glClipControl = get_proc_address("glClipControl\0"): *fp_glClipControl;
	glClipPlanefOES = get_proc_address("glClipPlanefOES\0"): *fp_glClipPlanefOES;
	glClipPlanexOES = get_proc_address("glClipPlanexOES\0"): *fp_glClipPlanexOES;
	glColor3fVertex3fSUN = get_proc_address("glColor3fVertex3fSUN\0"): *fp_glColor3fVertex3fSUN;
	glColor3fVertex3fvSUN = get_proc_address("glColor3fVertex3fvSUN\0"): *fp_glColor3fVertex3fvSUN;
	glColor3hNV = get_proc_address("glColor3hNV\0"): *fp_glColor3hNV;
	glColor3hvNV = get_proc_address("glColor3hvNV\0"): *fp_glColor3hvNV;
	glColor3xOES = get_proc_address("glColor3xOES\0"): *fp_glColor3xOES;
	glColor3xvOES = get_proc_address("glColor3xvOES\0"): *fp_glColor3xvOES;
	glColor4fNormal3fVertex3fSUN = get_proc_address("glColor4fNormal3fVertex3fSUN\0"): *fp_glColor4fNormal3fVertex3fSUN;
	glColor4fNormal3fVertex3fvSUN = get_proc_address("glColor4fNormal3fVertex3fvSUN\0"): *fp_glColor4fNormal3fVertex3fvSUN;
	glColor4hNV = get_proc_address("glColor4hNV\0"): *fp_glColor4hNV;
	glColor4hvNV = get_proc_address("glColor4hvNV\0"): *fp_glColor4hvNV;
	glColor4ubVertex2fSUN = get_proc_address("glColor4ubVertex2fSUN\0"): *fp_glColor4ubVertex2fSUN;
	glColor4ubVertex2fvSUN = get_proc_address("glColor4ubVertex2fvSUN\0"): *fp_glColor4ubVertex2fvSUN;
	glColor4ubVertex3fSUN = get_proc_address("glColor4ubVertex3fSUN\0"): *fp_glColor4ubVertex3fSUN;
	glColor4ubVertex3fvSUN = get_proc_address("glColor4ubVertex3fvSUN\0"): *fp_glColor4ubVertex3fvSUN;
	glColor4xOES = get_proc_address("glColor4xOES\0"): *fp_glColor4xOES;
	glColor4xvOES = get_proc_address("glColor4xvOES\0"): *fp_glColor4xvOES;
	glColorFormatNV = get_proc_address("glColorFormatNV\0"): *fp_glColorFormatNV;
	glColorFragmentOp1ATI = get_proc_address("glColorFragmentOp1ATI\0"): *fp_glColorFragmentOp1ATI;
	glColorFragmentOp2ATI = get_proc_address("glColorFragmentOp2ATI\0"): *fp_glColorFragmentOp2ATI;
	glColorFragmentOp3ATI = get_proc_address("glColorFragmentOp3ATI\0"): *fp_glColorFragmentOp3ATI;
	glColorMask = get_proc_address("glColorMask\0"): *fp_glColorMask;
	glColorMaskIndexedEXT = get_proc_address("glColorMaskIndexedEXT\0"): *fp_glColorMaskIndexedEXT;
	glColorMaski = get_proc_address("glColorMaski\0"): *fp_glColorMaski;
	glColorPointerEXT = get_proc_address("glColorPointerEXT\0"): *fp_glColorPointerEXT;
	glColorPointerListIBM = get_proc_address("glColorPointerListIBM\0"): *fp_glColorPointerListIBM;
	glColorPointervINTEL = get_proc_address("glColorPointervINTEL\0"): *fp_glColorPointervINTEL;
	glColorSubTableEXT = get_proc_address("glColorSubTableEXT\0"): *fp_glColorSubTableEXT;
	glColorTableEXT = get_proc_address("glColorTableEXT\0"): *fp_glColorTableEXT;
	glColorTableParameterfvSGI = get_proc_address("glColorTableParameterfvSGI\0"): *fp_glColorTableParameterfvSGI;
	glColorTableParameterivSGI = get_proc_address("glColorTableParameterivSGI\0"): *fp_glColorTableParameterivSGI;
	glColorTableSGI = get_proc_address("glColorTableSGI\0"): *fp_glColorTableSGI;
	glCombinerInputNV = get_proc_address("glCombinerInputNV\0"): *fp_glCombinerInputNV;
	glCombinerOutputNV = get_proc_address("glCombinerOutputNV\0"): *fp_glCombinerOutputNV;
	glCombinerParameterfNV = get_proc_address("glCombinerParameterfNV\0"): *fp_glCombinerParameterfNV;
	glCombinerParameterfvNV = get_proc_address("glCombinerParameterfvNV\0"): *fp_glCombinerParameterfvNV;
	glCombinerParameteriNV = get_proc_address("glCombinerParameteriNV\0"): *fp_glCombinerParameteriNV;
	glCombinerParameterivNV = get_proc_address("glCombinerParameterivNV\0"): *fp_glCombinerParameterivNV;
	glCombinerStageParameterfvNV = get_proc_address("glCombinerStageParameterfvNV\0"): *fp_glCombinerStageParameterfvNV;
	glCommandListSegmentsNV = get_proc_address("glCommandListSegmentsNV\0"): *fp_glCommandListSegmentsNV;
	glCompileCommandListNV = get_proc_address("glCompileCommandListNV\0"): *fp_glCompileCommandListNV;
	glCompileShader = get_proc_address("glCompileShader\0"): *fp_glCompileShader;
	glCompileShaderARB = get_proc_address("glCompileShaderARB\0"): *fp_glCompileShaderARB;
	glCompileShaderIncludeARB = get_proc_address("glCompileShaderIncludeARB\0"): *fp_glCompileShaderIncludeARB;
	glCompressedMultiTexImage1DEXT = get_proc_address("glCompressedMultiTexImage1DEXT\0"): *fp_glCompressedMultiTexImage1DEXT;
	glCompressedMultiTexImage2DEXT = get_proc_address("glCompressedMultiTexImage2DEXT\0"): *fp_glCompressedMultiTexImage2DEXT;
	glCompressedMultiTexImage3DEXT = get_proc_address("glCompressedMultiTexImage3DEXT\0"): *fp_glCompressedMultiTexImage3DEXT;
	glCompressedMultiTexSubImage1DEXT = get_proc_address("glCompressedMultiTexSubImage1DEXT\0"): *fp_glCompressedMultiTexSubImage1DEXT;
	glCompressedMultiTexSubImage2DEXT = get_proc_address("glCompressedMultiTexSubImage2DEXT\0"): *fp_glCompressedMultiTexSubImage2DEXT;
	glCompressedMultiTexSubImage3DEXT = get_proc_address("glCompressedMultiTexSubImage3DEXT\0"): *fp_glCompressedMultiTexSubImage3DEXT;
	glCompressedTexImage1D = get_proc_address("glCompressedTexImage1D\0"): *fp_glCompressedTexImage1D;
	glCompressedTexImage1DARB = get_proc_address("glCompressedTexImage1DARB\0"): *fp_glCompressedTexImage1DARB;
	glCompressedTexImage2D = get_proc_address("glCompressedTexImage2D\0"): *fp_glCompressedTexImage2D;
	glCompressedTexImage2DARB = get_proc_address("glCompressedTexImage2DARB\0"): *fp_glCompressedTexImage2DARB;
	glCompressedTexImage3D = get_proc_address("glCompressedTexImage3D\0"): *fp_glCompressedTexImage3D;
	glCompressedTexImage3DARB = get_proc_address("glCompressedTexImage3DARB\0"): *fp_glCompressedTexImage3DARB;
	glCompressedTexSubImage1D = get_proc_address("glCompressedTexSubImage1D\0"): *fp_glCompressedTexSubImage1D;
	glCompressedTexSubImage1DARB = get_proc_address("glCompressedTexSubImage1DARB\0"): *fp_glCompressedTexSubImage1DARB;
	glCompressedTexSubImage2D = get_proc_address("glCompressedTexSubImage2D\0"): *fp_glCompressedTexSubImage2D;
	glCompressedTexSubImage2DARB = get_proc_address("glCompressedTexSubImage2DARB\0"): *fp_glCompressedTexSubImage2DARB;
	glCompressedTexSubImage3D = get_proc_address("glCompressedTexSubImage3D\0"): *fp_glCompressedTexSubImage3D;
	glCompressedTexSubImage3DARB = get_proc_address("glCompressedTexSubImage3DARB\0"): *fp_glCompressedTexSubImage3DARB;
	glCompressedTextureImage1DEXT = get_proc_address("glCompressedTextureImage1DEXT\0"): *fp_glCompressedTextureImage1DEXT;
	glCompressedTextureImage2DEXT = get_proc_address("glCompressedTextureImage2DEXT\0"): *fp_glCompressedTextureImage2DEXT;
	glCompressedTextureImage3DEXT = get_proc_address("glCompressedTextureImage3DEXT\0"): *fp_glCompressedTextureImage3DEXT;
	glCompressedTextureSubImage1D = get_proc_address("glCompressedTextureSubImage1D\0"): *fp_glCompressedTextureSubImage1D;
	glCompressedTextureSubImage1DEXT = get_proc_address("glCompressedTextureSubImage1DEXT\0"): *fp_glCompressedTextureSubImage1DEXT;
	glCompressedTextureSubImage2D = get_proc_address("glCompressedTextureSubImage2D\0"): *fp_glCompressedTextureSubImage2D;
	glCompressedTextureSubImage2DEXT = get_proc_address("glCompressedTextureSubImage2DEXT\0"): *fp_glCompressedTextureSubImage2DEXT;
	glCompressedTextureSubImage3D = get_proc_address("glCompressedTextureSubImage3D\0"): *fp_glCompressedTextureSubImage3D;
	glCompressedTextureSubImage3DEXT = get_proc_address("glCompressedTextureSubImage3DEXT\0"): *fp_glCompressedTextureSubImage3DEXT;
	glConservativeRasterParameterfNV = get_proc_address("glConservativeRasterParameterfNV\0"): *fp_glConservativeRasterParameterfNV;
	glConservativeRasterParameteriNV = get_proc_address("glConservativeRasterParameteriNV\0"): *fp_glConservativeRasterParameteriNV;
	glConvolutionFilter1DEXT = get_proc_address("glConvolutionFilter1DEXT\0"): *fp_glConvolutionFilter1DEXT;
	glConvolutionFilter2DEXT = get_proc_address("glConvolutionFilter2DEXT\0"): *fp_glConvolutionFilter2DEXT;
	glConvolutionParameterfEXT = get_proc_address("glConvolutionParameterfEXT\0"): *fp_glConvolutionParameterfEXT;
	glConvolutionParameterfvEXT = get_proc_address("glConvolutionParameterfvEXT\0"): *fp_glConvolutionParameterfvEXT;
	glConvolutionParameteriEXT = get_proc_address("glConvolutionParameteriEXT\0"): *fp_glConvolutionParameteriEXT;
	glConvolutionParameterivEXT = get_proc_address("glConvolutionParameterivEXT\0"): *fp_glConvolutionParameterivEXT;
	glConvolutionParameterxOES = get_proc_address("glConvolutionParameterxOES\0"): *fp_glConvolutionParameterxOES;
	glConvolutionParameterxvOES = get_proc_address("glConvolutionParameterxvOES\0"): *fp_glConvolutionParameterxvOES;
	glCopyBufferSubData = get_proc_address("glCopyBufferSubData\0"): *fp_glCopyBufferSubData;
	glCopyColorSubTableEXT = get_proc_address("glCopyColorSubTableEXT\0"): *fp_glCopyColorSubTableEXT;
	glCopyColorTableSGI = get_proc_address("glCopyColorTableSGI\0"): *fp_glCopyColorTableSGI;
	glCopyConvolutionFilter1DEXT = get_proc_address("glCopyConvolutionFilter1DEXT\0"): *fp_glCopyConvolutionFilter1DEXT;
	glCopyConvolutionFilter2DEXT = get_proc_address("glCopyConvolutionFilter2DEXT\0"): *fp_glCopyConvolutionFilter2DEXT;
	glCopyImageSubData = get_proc_address("glCopyImageSubData\0"): *fp_glCopyImageSubData;
	glCopyImageSubDataNV = get_proc_address("glCopyImageSubDataNV\0"): *fp_glCopyImageSubDataNV;
	glCopyMultiTexImage1DEXT = get_proc_address("glCopyMultiTexImage1DEXT\0"): *fp_glCopyMultiTexImage1DEXT;
	glCopyMultiTexImage2DEXT = get_proc_address("glCopyMultiTexImage2DEXT\0"): *fp_glCopyMultiTexImage2DEXT;
	glCopyMultiTexSubImage1DEXT = get_proc_address("glCopyMultiTexSubImage1DEXT\0"): *fp_glCopyMultiTexSubImage1DEXT;
	glCopyMultiTexSubImage2DEXT = get_proc_address("glCopyMultiTexSubImage2DEXT\0"): *fp_glCopyMultiTexSubImage2DEXT;
	glCopyMultiTexSubImage3DEXT = get_proc_address("glCopyMultiTexSubImage3DEXT\0"): *fp_glCopyMultiTexSubImage3DEXT;
	glCopyNamedBufferSubData = get_proc_address("glCopyNamedBufferSubData\0"): *fp_glCopyNamedBufferSubData;
	glCopyPathNV = get_proc_address("glCopyPathNV\0"): *fp_glCopyPathNV;
	glCopyTexImage1D = get_proc_address("glCopyTexImage1D\0"): *fp_glCopyTexImage1D;
	glCopyTexImage1DEXT = get_proc_address("glCopyTexImage1DEXT\0"): *fp_glCopyTexImage1DEXT;
	glCopyTexImage2D = get_proc_address("glCopyTexImage2D\0"): *fp_glCopyTexImage2D;
	glCopyTexImage2DEXT = get_proc_address("glCopyTexImage2DEXT\0"): *fp_glCopyTexImage2DEXT;
	glCopyTexSubImage1D = get_proc_address("glCopyTexSubImage1D\0"): *fp_glCopyTexSubImage1D;
	glCopyTexSubImage1DEXT = get_proc_address("glCopyTexSubImage1DEXT\0"): *fp_glCopyTexSubImage1DEXT;
	glCopyTexSubImage2D = get_proc_address("glCopyTexSubImage2D\0"): *fp_glCopyTexSubImage2D;
	glCopyTexSubImage2DEXT = get_proc_address("glCopyTexSubImage2DEXT\0"): *fp_glCopyTexSubImage2DEXT;
	glCopyTexSubImage3D = get_proc_address("glCopyTexSubImage3D\0"): *fp_glCopyTexSubImage3D;
	glCopyTexSubImage3DEXT = get_proc_address("glCopyTexSubImage3DEXT\0"): *fp_glCopyTexSubImage3DEXT;
	glCopyTextureImage1DEXT = get_proc_address("glCopyTextureImage1DEXT\0"): *fp_glCopyTextureImage1DEXT;
	glCopyTextureImage2DEXT = get_proc_address("glCopyTextureImage2DEXT\0"): *fp_glCopyTextureImage2DEXT;
	glCopyTextureSubImage1D = get_proc_address("glCopyTextureSubImage1D\0"): *fp_glCopyTextureSubImage1D;
	glCopyTextureSubImage1DEXT = get_proc_address("glCopyTextureSubImage1DEXT\0"): *fp_glCopyTextureSubImage1DEXT;
	glCopyTextureSubImage2D = get_proc_address("glCopyTextureSubImage2D\0"): *fp_glCopyTextureSubImage2D;
	glCopyTextureSubImage2DEXT = get_proc_address("glCopyTextureSubImage2DEXT\0"): *fp_glCopyTextureSubImage2DEXT;
	glCopyTextureSubImage3D = get_proc_address("glCopyTextureSubImage3D\0"): *fp_glCopyTextureSubImage3D;
	glCopyTextureSubImage3DEXT = get_proc_address("glCopyTextureSubImage3DEXT\0"): *fp_glCopyTextureSubImage3DEXT;
	glCoverFillPathInstancedNV = get_proc_address("glCoverFillPathInstancedNV\0"): *fp_glCoverFillPathInstancedNV;
	glCoverFillPathNV = get_proc_address("glCoverFillPathNV\0"): *fp_glCoverFillPathNV;
	glCoverStrokePathInstancedNV = get_proc_address("glCoverStrokePathInstancedNV\0"): *fp_glCoverStrokePathInstancedNV;
	glCoverStrokePathNV = get_proc_address("glCoverStrokePathNV\0"): *fp_glCoverStrokePathNV;
	glCoverageModulationNV = get_proc_address("glCoverageModulationNV\0"): *fp_glCoverageModulationNV;
	glCoverageModulationTableNV = get_proc_address("glCoverageModulationTableNV\0"): *fp_glCoverageModulationTableNV;
	glCreateBuffers = get_proc_address("glCreateBuffers\0"): *fp_glCreateBuffers;
	glCreateCommandListsNV = get_proc_address("glCreateCommandListsNV\0"): *fp_glCreateCommandListsNV;
	glCreateFramebuffers = get_proc_address("glCreateFramebuffers\0"): *fp_glCreateFramebuffers;
	glCreateMemoryObjectsEXT = get_proc_address("glCreateMemoryObjectsEXT\0"): *fp_glCreateMemoryObjectsEXT;
	glCreatePerfQueryINTEL = get_proc_address("glCreatePerfQueryINTEL\0"): *fp_glCreatePerfQueryINTEL;
	glCreateProgram = get_proc_address("glCreateProgram\0"): *fp_glCreateProgram;
	glCreateProgramObjectARB = get_proc_address("glCreateProgramObjectARB\0"): *fp_glCreateProgramObjectARB;
	glCreateProgramPipelines = get_proc_address("glCreateProgramPipelines\0"): *fp_glCreateProgramPipelines;
	glCreateProgressFenceNVX = get_proc_address("glCreateProgressFenceNVX\0"): *fp_glCreateProgressFenceNVX;
	glCreateQueries = get_proc_address("glCreateQueries\0"): *fp_glCreateQueries;
	glCreateRenderbuffers = get_proc_address("glCreateRenderbuffers\0"): *fp_glCreateRenderbuffers;
	glCreateSamplers = get_proc_address("glCreateSamplers\0"): *fp_glCreateSamplers;
	glCreateSemaphoresNV = get_proc_address("glCreateSemaphoresNV\0"): *fp_glCreateSemaphoresNV;
	glCreateShader = get_proc_address("glCreateShader\0"): *fp_glCreateShader;
	glCreateShaderObjectARB = get_proc_address("glCreateShaderObjectARB\0"): *fp_glCreateShaderObjectARB;
	glCreateShaderProgramEXT = get_proc_address("glCreateShaderProgramEXT\0"): *fp_glCreateShaderProgramEXT;
	glCreateShaderProgramv = get_proc_address("glCreateShaderProgramv\0"): *fp_glCreateShaderProgramv;
	glCreateStatesNV = get_proc_address("glCreateStatesNV\0"): *fp_glCreateStatesNV;
	glCreateSyncFromCLeventARB = get_proc_address("glCreateSyncFromCLeventARB\0"): *fp_glCreateSyncFromCLeventARB;
	glCreateTextures = get_proc_address("glCreateTextures\0"): *fp_glCreateTextures;
	glCreateTransformFeedbacks = get_proc_address("glCreateTransformFeedbacks\0"): *fp_glCreateTransformFeedbacks;
	glCreateVertexArrays = get_proc_address("glCreateVertexArrays\0"): *fp_glCreateVertexArrays;
	glCullFace = get_proc_address("glCullFace\0"): *fp_glCullFace;
	glCullParameterdvEXT = get_proc_address("glCullParameterdvEXT\0"): *fp_glCullParameterdvEXT;
	glCullParameterfvEXT = get_proc_address("glCullParameterfvEXT\0"): *fp_glCullParameterfvEXT;
	glCurrentPaletteMatrixARB = get_proc_address("glCurrentPaletteMatrixARB\0"): *fp_glCurrentPaletteMatrixARB;
	glDebugMessageCallback = get_proc_address("glDebugMessageCallback\0"): *fp_glDebugMessageCallback;
	glDebugMessageCallbackAMD = get_proc_address("glDebugMessageCallbackAMD\0"): *fp_glDebugMessageCallbackAMD;
	glDebugMessageCallbackARB = get_proc_address("glDebugMessageCallbackARB\0"): *fp_glDebugMessageCallbackARB;
	glDebugMessageControl = get_proc_address("glDebugMessageControl\0"): *fp_glDebugMessageControl;
	glDebugMessageControlARB = get_proc_address("glDebugMessageControlARB\0"): *fp_glDebugMessageControlARB;
	glDebugMessageEnableAMD = get_proc_address("glDebugMessageEnableAMD\0"): *fp_glDebugMessageEnableAMD;
	glDebugMessageInsert = get_proc_address("glDebugMessageInsert\0"): *fp_glDebugMessageInsert;
	glDebugMessageInsertAMD = get_proc_address("glDebugMessageInsertAMD\0"): *fp_glDebugMessageInsertAMD;
	glDebugMessageInsertARB = get_proc_address("glDebugMessageInsertARB\0"): *fp_glDebugMessageInsertARB;
	glDeformSGIX = get_proc_address("glDeformSGIX\0"): *fp_glDeformSGIX;
	glDeformationMap3dSGIX = get_proc_address("glDeformationMap3dSGIX\0"): *fp_glDeformationMap3dSGIX;
	glDeformationMap3fSGIX = get_proc_address("glDeformationMap3fSGIX\0"): *fp_glDeformationMap3fSGIX;
	glDeleteAsyncMarkersSGIX = get_proc_address("glDeleteAsyncMarkersSGIX\0"): *fp_glDeleteAsyncMarkersSGIX;
	glDeleteBuffers = get_proc_address("glDeleteBuffers\0"): *fp_glDeleteBuffers;
	glDeleteBuffersARB = get_proc_address("glDeleteBuffersARB\0"): *fp_glDeleteBuffersARB;
	glDeleteCommandListsNV = get_proc_address("glDeleteCommandListsNV\0"): *fp_glDeleteCommandListsNV;
	glDeleteFencesAPPLE = get_proc_address("glDeleteFencesAPPLE\0"): *fp_glDeleteFencesAPPLE;
	glDeleteFencesNV = get_proc_address("glDeleteFencesNV\0"): *fp_glDeleteFencesNV;
	glDeleteFragmentShaderATI = get_proc_address("glDeleteFragmentShaderATI\0"): *fp_glDeleteFragmentShaderATI;
	glDeleteFramebuffers = get_proc_address("glDeleteFramebuffers\0"): *fp_glDeleteFramebuffers;
	glDeleteFramebuffersEXT = get_proc_address("glDeleteFramebuffersEXT\0"): *fp_glDeleteFramebuffersEXT;
	glDeleteMemoryObjectsEXT = get_proc_address("glDeleteMemoryObjectsEXT\0"): *fp_glDeleteMemoryObjectsEXT;
	glDeleteNamedStringARB = get_proc_address("glDeleteNamedStringARB\0"): *fp_glDeleteNamedStringARB;
	glDeleteNamesAMD = get_proc_address("glDeleteNamesAMD\0"): *fp_glDeleteNamesAMD;
	glDeleteObjectARB = get_proc_address("glDeleteObjectARB\0"): *fp_glDeleteObjectARB;
	glDeleteOcclusionQueriesNV = get_proc_address("glDeleteOcclusionQueriesNV\0"): *fp_glDeleteOcclusionQueriesNV;
	glDeletePathsNV = get_proc_address("glDeletePathsNV\0"): *fp_glDeletePathsNV;
	glDeletePerfMonitorsAMD = get_proc_address("glDeletePerfMonitorsAMD\0"): *fp_glDeletePerfMonitorsAMD;
	glDeletePerfQueryINTEL = get_proc_address("glDeletePerfQueryINTEL\0"): *fp_glDeletePerfQueryINTEL;
	glDeleteProgram = get_proc_address("glDeleteProgram\0"): *fp_glDeleteProgram;
	glDeleteProgramPipelines = get_proc_address("glDeleteProgramPipelines\0"): *fp_glDeleteProgramPipelines;
	glDeleteProgramsARB = get_proc_address("glDeleteProgramsARB\0"): *fp_glDeleteProgramsARB;
	glDeleteProgramsNV = get_proc_address("glDeleteProgramsNV\0"): *fp_glDeleteProgramsNV;
	glDeleteQueries = get_proc_address("glDeleteQueries\0"): *fp_glDeleteQueries;
	glDeleteQueriesARB = get_proc_address("glDeleteQueriesARB\0"): *fp_glDeleteQueriesARB;
	glDeleteQueryResourceTagNV = get_proc_address("glDeleteQueryResourceTagNV\0"): *fp_glDeleteQueryResourceTagNV;
	glDeleteRenderbuffers = get_proc_address("glDeleteRenderbuffers\0"): *fp_glDeleteRenderbuffers;
	glDeleteRenderbuffersEXT = get_proc_address("glDeleteRenderbuffersEXT\0"): *fp_glDeleteRenderbuffersEXT;
	glDeleteSamplers = get_proc_address("glDeleteSamplers\0"): *fp_glDeleteSamplers;
	glDeleteSemaphoresEXT = get_proc_address("glDeleteSemaphoresEXT\0"): *fp_glDeleteSemaphoresEXT;
	glDeleteShader = get_proc_address("glDeleteShader\0"): *fp_glDeleteShader;
	glDeleteStatesNV = get_proc_address("glDeleteStatesNV\0"): *fp_glDeleteStatesNV;
	glDeleteSync = get_proc_address("glDeleteSync\0"): *fp_glDeleteSync;
	glDeleteTextures = get_proc_address("glDeleteTextures\0"): *fp_glDeleteTextures;
	glDeleteTexturesEXT = get_proc_address("glDeleteTexturesEXT\0"): *fp_glDeleteTexturesEXT;
	glDeleteTransformFeedbacks = get_proc_address("glDeleteTransformFeedbacks\0"): *fp_glDeleteTransformFeedbacks;
	glDeleteTransformFeedbacksNV = get_proc_address("glDeleteTransformFeedbacksNV\0"): *fp_glDeleteTransformFeedbacksNV;
	glDeleteVertexArrays = get_proc_address("glDeleteVertexArrays\0"): *fp_glDeleteVertexArrays;
	glDeleteVertexArraysAPPLE = get_proc_address("glDeleteVertexArraysAPPLE\0"): *fp_glDeleteVertexArraysAPPLE;
	glDeleteVertexShaderEXT = get_proc_address("glDeleteVertexShaderEXT\0"): *fp_glDeleteVertexShaderEXT;
	glDepthBoundsEXT = get_proc_address("glDepthBoundsEXT\0"): *fp_glDepthBoundsEXT;
	glDepthBoundsdNV = get_proc_address("glDepthBoundsdNV\0"): *fp_glDepthBoundsdNV;
	glDepthFunc = get_proc_address("glDepthFunc\0"): *fp_glDepthFunc;
	glDepthMask = get_proc_address("glDepthMask\0"): *fp_glDepthMask;
	glDepthRange = get_proc_address("glDepthRange\0"): *fp_glDepthRange;
	glDepthRangeArraydvNV = get_proc_address("glDepthRangeArraydvNV\0"): *fp_glDepthRangeArraydvNV;
	glDepthRangeArrayv = get_proc_address("glDepthRangeArrayv\0"): *fp_glDepthRangeArrayv;
	glDepthRangeIndexed = get_proc_address("glDepthRangeIndexed\0"): *fp_glDepthRangeIndexed;
	glDepthRangeIndexeddNV = get_proc_address("glDepthRangeIndexeddNV\0"): *fp_glDepthRangeIndexeddNV;
	glDepthRangedNV = get_proc_address("glDepthRangedNV\0"): *fp_glDepthRangedNV;
	glDepthRangef = get_proc_address("glDepthRangef\0"): *fp_glDepthRangef;
	glDepthRangefOES = get_proc_address("glDepthRangefOES\0"): *fp_glDepthRangefOES;
	glDepthRangexOES = get_proc_address("glDepthRangexOES\0"): *fp_glDepthRangexOES;
	glDetachObjectARB = get_proc_address("glDetachObjectARB\0"): *fp_glDetachObjectARB;
	glDetachShader = get_proc_address("glDetachShader\0"): *fp_glDetachShader;
	glDetailTexFuncSGIS = get_proc_address("glDetailTexFuncSGIS\0"): *fp_glDetailTexFuncSGIS;
	glDisable = get_proc_address("glDisable\0"): *fp_glDisable;
	glDisableClientStateIndexedEXT = get_proc_address("glDisableClientStateIndexedEXT\0"): *fp_glDisableClientStateIndexedEXT;
	glDisableClientStateiEXT = get_proc_address("glDisableClientStateiEXT\0"): *fp_glDisableClientStateiEXT;
	glDisableIndexedEXT = get_proc_address("glDisableIndexedEXT\0"): *fp_glDisableIndexedEXT;
	glDisableVariantClientStateEXT = get_proc_address("glDisableVariantClientStateEXT\0"): *fp_glDisableVariantClientStateEXT;
	glDisableVertexArrayAttrib = get_proc_address("glDisableVertexArrayAttrib\0"): *fp_glDisableVertexArrayAttrib;
	glDisableVertexArrayAttribEXT = get_proc_address("glDisableVertexArrayAttribEXT\0"): *fp_glDisableVertexArrayAttribEXT;
	glDisableVertexArrayEXT = get_proc_address("glDisableVertexArrayEXT\0"): *fp_glDisableVertexArrayEXT;
	glDisableVertexAttribAPPLE = get_proc_address("glDisableVertexAttribAPPLE\0"): *fp_glDisableVertexAttribAPPLE;
	glDisableVertexAttribArray = get_proc_address("glDisableVertexAttribArray\0"): *fp_glDisableVertexAttribArray;
	glDisableVertexAttribArrayARB = get_proc_address("glDisableVertexAttribArrayARB\0"): *fp_glDisableVertexAttribArrayARB;
	glDisablei = get_proc_address("glDisablei\0"): *fp_glDisablei;
	glDispatchCompute = get_proc_address("glDispatchCompute\0"): *fp_glDispatchCompute;
	glDispatchComputeGroupSizeARB = get_proc_address("glDispatchComputeGroupSizeARB\0"): *fp_glDispatchComputeGroupSizeARB;
	glDispatchComputeIndirect = get_proc_address("glDispatchComputeIndirect\0"): *fp_glDispatchComputeIndirect;
	glDrawArrays = get_proc_address("glDrawArrays\0"): *fp_glDrawArrays;
	glDrawArraysEXT = get_proc_address("glDrawArraysEXT\0"): *fp_glDrawArraysEXT;
	glDrawArraysIndirect = get_proc_address("glDrawArraysIndirect\0"): *fp_glDrawArraysIndirect;
	glDrawArraysInstanced = get_proc_address("glDrawArraysInstanced\0"): *fp_glDrawArraysInstanced;
	glDrawArraysInstancedARB = get_proc_address("glDrawArraysInstancedARB\0"): *fp_glDrawArraysInstancedARB;
	glDrawArraysInstancedBaseInstance = get_proc_address("glDrawArraysInstancedBaseInstance\0"): *fp_glDrawArraysInstancedBaseInstance;
	glDrawArraysInstancedEXT = get_proc_address("glDrawArraysInstancedEXT\0"): *fp_glDrawArraysInstancedEXT;
	glDrawBuffer = get_proc_address("glDrawBuffer\0"): *fp_glDrawBuffer;
	glDrawBuffers = get_proc_address("glDrawBuffers\0"): *fp_glDrawBuffers;
	glDrawBuffersARB = get_proc_address("glDrawBuffersARB\0"): *fp_glDrawBuffersARB;
	glDrawBuffersATI = get_proc_address("glDrawBuffersATI\0"): *fp_glDrawBuffersATI;
	glDrawCommandsAddressNV = get_proc_address("glDrawCommandsAddressNV\0"): *fp_glDrawCommandsAddressNV;
	glDrawCommandsNV = get_proc_address("glDrawCommandsNV\0"): *fp_glDrawCommandsNV;
	glDrawCommandsStatesAddressNV = get_proc_address("glDrawCommandsStatesAddressNV\0"): *fp_glDrawCommandsStatesAddressNV;
	glDrawCommandsStatesNV = get_proc_address("glDrawCommandsStatesNV\0"): *fp_glDrawCommandsStatesNV;
	glDrawElementArrayAPPLE = get_proc_address("glDrawElementArrayAPPLE\0"): *fp_glDrawElementArrayAPPLE;
	glDrawElementArrayATI = get_proc_address("glDrawElementArrayATI\0"): *fp_glDrawElementArrayATI;
	glDrawElements = get_proc_address("glDrawElements\0"): *fp_glDrawElements;
	glDrawElementsBaseVertex = get_proc_address("glDrawElementsBaseVertex\0"): *fp_glDrawElementsBaseVertex;
	glDrawElementsIndirect = get_proc_address("glDrawElementsIndirect\0"): *fp_glDrawElementsIndirect;
	glDrawElementsInstanced = get_proc_address("glDrawElementsInstanced\0"): *fp_glDrawElementsInstanced;
	glDrawElementsInstancedARB = get_proc_address("glDrawElementsInstancedARB\0"): *fp_glDrawElementsInstancedARB;
	glDrawElementsInstancedBaseInstance = get_proc_address("glDrawElementsInstancedBaseInstance\0"): *fp_glDrawElementsInstancedBaseInstance;
	glDrawElementsInstancedBaseVertex = get_proc_address("glDrawElementsInstancedBaseVertex\0"): *fp_glDrawElementsInstancedBaseVertex;
	glDrawElementsInstancedBaseVertexBaseInstance = get_proc_address("glDrawElementsInstancedBaseVertexBaseInstance\0"): *fp_glDrawElementsInstancedBaseVertexBaseInstance;
	glDrawElementsInstancedEXT = get_proc_address("glDrawElementsInstancedEXT\0"): *fp_glDrawElementsInstancedEXT;
	glDrawMeshArraysSUN = get_proc_address("glDrawMeshArraysSUN\0"): *fp_glDrawMeshArraysSUN;
	glDrawMeshTasksIndirectNV = get_proc_address("glDrawMeshTasksIndirectNV\0"): *fp_glDrawMeshTasksIndirectNV;
	glDrawMeshTasksNV = get_proc_address("glDrawMeshTasksNV\0"): *fp_glDrawMeshTasksNV;
	glDrawRangeElementArrayAPPLE = get_proc_address("glDrawRangeElementArrayAPPLE\0"): *fp_glDrawRangeElementArrayAPPLE;
	glDrawRangeElementArrayATI = get_proc_address("glDrawRangeElementArrayATI\0"): *fp_glDrawRangeElementArrayATI;
	glDrawRangeElements = get_proc_address("glDrawRangeElements\0"): *fp_glDrawRangeElements;
	glDrawRangeElementsBaseVertex = get_proc_address("glDrawRangeElementsBaseVertex\0"): *fp_glDrawRangeElementsBaseVertex;
	glDrawRangeElementsEXT = get_proc_address("glDrawRangeElementsEXT\0"): *fp_glDrawRangeElementsEXT;
	glDrawTextureNV = get_proc_address("glDrawTextureNV\0"): *fp_glDrawTextureNV;
	glDrawTransformFeedback = get_proc_address("glDrawTransformFeedback\0"): *fp_glDrawTransformFeedback;
	glDrawTransformFeedbackInstanced = get_proc_address("glDrawTransformFeedbackInstanced\0"): *fp_glDrawTransformFeedbackInstanced;
	glDrawTransformFeedbackNV = get_proc_address("glDrawTransformFeedbackNV\0"): *fp_glDrawTransformFeedbackNV;
	glDrawTransformFeedbackStream = get_proc_address("glDrawTransformFeedbackStream\0"): *fp_glDrawTransformFeedbackStream;
	glDrawTransformFeedbackStreamInstanced = get_proc_address("glDrawTransformFeedbackStreamInstanced\0"): *fp_glDrawTransformFeedbackStreamInstanced;
	glDrawVkImageNV = get_proc_address("glDrawVkImageNV\0"): *fp_glDrawVkImageNV;
	glEGLImageTargetTexStorageEXT = get_proc_address("glEGLImageTargetTexStorageEXT\0"): *fp_glEGLImageTargetTexStorageEXT;
	glEGLImageTargetTextureStorageEXT = get_proc_address("glEGLImageTargetTextureStorageEXT\0"): *fp_glEGLImageTargetTextureStorageEXT;
	glEdgeFlagFormatNV = get_proc_address("glEdgeFlagFormatNV\0"): *fp_glEdgeFlagFormatNV;
	glEdgeFlagPointerEXT = get_proc_address("glEdgeFlagPointerEXT\0"): *fp_glEdgeFlagPointerEXT;
	glEdgeFlagPointerListIBM = get_proc_address("glEdgeFlagPointerListIBM\0"): *fp_glEdgeFlagPointerListIBM;
	glElementPointerAPPLE = get_proc_address("glElementPointerAPPLE\0"): *fp_glElementPointerAPPLE;
	glElementPointerATI = get_proc_address("glElementPointerATI\0"): *fp_glElementPointerATI;
	glEnable = get_proc_address("glEnable\0"): *fp_glEnable;
	glEnableClientStateIndexedEXT = get_proc_address("glEnableClientStateIndexedEXT\0"): *fp_glEnableClientStateIndexedEXT;
	glEnableClientStateiEXT = get_proc_address("glEnableClientStateiEXT\0"): *fp_glEnableClientStateiEXT;
	glEnableIndexedEXT = get_proc_address("glEnableIndexedEXT\0"): *fp_glEnableIndexedEXT;
	glEnableVariantClientStateEXT = get_proc_address("glEnableVariantClientStateEXT\0"): *fp_glEnableVariantClientStateEXT;
	glEnableVertexArrayAttrib = get_proc_address("glEnableVertexArrayAttrib\0"): *fp_glEnableVertexArrayAttrib;
	glEnableVertexArrayAttribEXT = get_proc_address("glEnableVertexArrayAttribEXT\0"): *fp_glEnableVertexArrayAttribEXT;
	glEnableVertexArrayEXT = get_proc_address("glEnableVertexArrayEXT\0"): *fp_glEnableVertexArrayEXT;
	glEnableVertexAttribAPPLE = get_proc_address("glEnableVertexAttribAPPLE\0"): *fp_glEnableVertexAttribAPPLE;
	glEnableVertexAttribArray = get_proc_address("glEnableVertexAttribArray\0"): *fp_glEnableVertexAttribArray;
	glEnableVertexAttribArrayARB = get_proc_address("glEnableVertexAttribArrayARB\0"): *fp_glEnableVertexAttribArrayARB;
	glEnablei = get_proc_address("glEnablei\0"): *fp_glEnablei;
	glEndConditionalRender = get_proc_address("glEndConditionalRender\0"): *fp_glEndConditionalRender;
	glEndConditionalRenderNV = get_proc_address("glEndConditionalRenderNV\0"): *fp_glEndConditionalRenderNV;
	glEndConditionalRenderNVX = get_proc_address("glEndConditionalRenderNVX\0"): *fp_glEndConditionalRenderNVX;
	glEndFragmentShaderATI = get_proc_address("glEndFragmentShaderATI\0"): *fp_glEndFragmentShaderATI;
	glEndOcclusionQueryNV = get_proc_address("glEndOcclusionQueryNV\0"): *fp_glEndOcclusionQueryNV;
	glEndPerfMonitorAMD = get_proc_address("glEndPerfMonitorAMD\0"): *fp_glEndPerfMonitorAMD;
	glEndPerfQueryINTEL = get_proc_address("glEndPerfQueryINTEL\0"): *fp_glEndPerfQueryINTEL;
	glEndQuery = get_proc_address("glEndQuery\0"): *fp_glEndQuery;
	glEndQueryARB = get_proc_address("glEndQueryARB\0"): *fp_glEndQueryARB;
	glEndQueryIndexed = get_proc_address("glEndQueryIndexed\0"): *fp_glEndQueryIndexed;
	glEndTransformFeedback = get_proc_address("glEndTransformFeedback\0"): *fp_glEndTransformFeedback;
	glEndTransformFeedbackEXT = get_proc_address("glEndTransformFeedbackEXT\0"): *fp_glEndTransformFeedbackEXT;
	glEndTransformFeedbackNV = get_proc_address("glEndTransformFeedbackNV\0"): *fp_glEndTransformFeedbackNV;
	glEndVertexShaderEXT = get_proc_address("glEndVertexShaderEXT\0"): *fp_glEndVertexShaderEXT;
	glEndVideoCaptureNV = get_proc_address("glEndVideoCaptureNV\0"): *fp_glEndVideoCaptureNV;
	glEvalCoord1xOES = get_proc_address("glEvalCoord1xOES\0"): *fp_glEvalCoord1xOES;
	glEvalCoord1xvOES = get_proc_address("glEvalCoord1xvOES\0"): *fp_glEvalCoord1xvOES;
	glEvalCoord2xOES = get_proc_address("glEvalCoord2xOES\0"): *fp_glEvalCoord2xOES;
	glEvalCoord2xvOES = get_proc_address("glEvalCoord2xvOES\0"): *fp_glEvalCoord2xvOES;
	glEvalMapsNV = get_proc_address("glEvalMapsNV\0"): *fp_glEvalMapsNV;
	glEvaluateDepthValuesARB = get_proc_address("glEvaluateDepthValuesARB\0"): *fp_glEvaluateDepthValuesARB;
	glExecuteProgramNV = get_proc_address("glExecuteProgramNV\0"): *fp_glExecuteProgramNV;
	glExtractComponentEXT = get_proc_address("glExtractComponentEXT\0"): *fp_glExtractComponentEXT;
	glFeedbackBufferxOES = get_proc_address("glFeedbackBufferxOES\0"): *fp_glFeedbackBufferxOES;
	glFenceSync = get_proc_address("glFenceSync\0"): *fp_glFenceSync;
	glFinalCombinerInputNV = get_proc_address("glFinalCombinerInputNV\0"): *fp_glFinalCombinerInputNV;
	glFinish = get_proc_address("glFinish\0"): *fp_glFinish;
	glFinishAsyncSGIX = get_proc_address("glFinishAsyncSGIX\0"): *fp_glFinishAsyncSGIX;
	glFinishFenceAPPLE = get_proc_address("glFinishFenceAPPLE\0"): *fp_glFinishFenceAPPLE;
	glFinishFenceNV = get_proc_address("glFinishFenceNV\0"): *fp_glFinishFenceNV;
	glFinishObjectAPPLE = get_proc_address("glFinishObjectAPPLE\0"): *fp_glFinishObjectAPPLE;
	glFinishTextureSUNX = get_proc_address("glFinishTextureSUNX\0"): *fp_glFinishTextureSUNX;
	glFlush = get_proc_address("glFlush\0"): *fp_glFlush;
	glFlushMappedBufferRange = get_proc_address("glFlushMappedBufferRange\0"): *fp_glFlushMappedBufferRange;
	glFlushMappedBufferRangeAPPLE = get_proc_address("glFlushMappedBufferRangeAPPLE\0"): *fp_glFlushMappedBufferRangeAPPLE;
	glFlushMappedNamedBufferRange = get_proc_address("glFlushMappedNamedBufferRange\0"): *fp_glFlushMappedNamedBufferRange;
	glFlushMappedNamedBufferRangeEXT = get_proc_address("glFlushMappedNamedBufferRangeEXT\0"): *fp_glFlushMappedNamedBufferRangeEXT;
	glFlushPixelDataRangeNV = get_proc_address("glFlushPixelDataRangeNV\0"): *fp_glFlushPixelDataRangeNV;
	glFlushRasterSGIX = get_proc_address("glFlushRasterSGIX\0"): *fp_glFlushRasterSGIX;
	glFlushStaticDataIBM = get_proc_address("glFlushStaticDataIBM\0"): *fp_glFlushStaticDataIBM;
	glFlushVertexArrayRangeAPPLE = get_proc_address("glFlushVertexArrayRangeAPPLE\0"): *fp_glFlushVertexArrayRangeAPPLE;
	glFlushVertexArrayRangeNV = get_proc_address("glFlushVertexArrayRangeNV\0"): *fp_glFlushVertexArrayRangeNV;
	glFogCoordFormatNV = get_proc_address("glFogCoordFormatNV\0"): *fp_glFogCoordFormatNV;
	glFogCoordPointerEXT = get_proc_address("glFogCoordPointerEXT\0"): *fp_glFogCoordPointerEXT;
	glFogCoordPointerListIBM = get_proc_address("glFogCoordPointerListIBM\0"): *fp_glFogCoordPointerListIBM;
	glFogCoorddEXT = get_proc_address("glFogCoorddEXT\0"): *fp_glFogCoorddEXT;
	glFogCoorddvEXT = get_proc_address("glFogCoorddvEXT\0"): *fp_glFogCoorddvEXT;
	glFogCoordfEXT = get_proc_address("glFogCoordfEXT\0"): *fp_glFogCoordfEXT;
	glFogCoordfvEXT = get_proc_address("glFogCoordfvEXT\0"): *fp_glFogCoordfvEXT;
	glFogCoordhNV = get_proc_address("glFogCoordhNV\0"): *fp_glFogCoordhNV;
	glFogCoordhvNV = get_proc_address("glFogCoordhvNV\0"): *fp_glFogCoordhvNV;
	glFogFuncSGIS = get_proc_address("glFogFuncSGIS\0"): *fp_glFogFuncSGIS;
	glFogxOES = get_proc_address("glFogxOES\0"): *fp_glFogxOES;
	glFogxvOES = get_proc_address("glFogxvOES\0"): *fp_glFogxvOES;
	glFragmentColorMaterialSGIX = get_proc_address("glFragmentColorMaterialSGIX\0"): *fp_glFragmentColorMaterialSGIX;
	glFragmentCoverageColorNV = get_proc_address("glFragmentCoverageColorNV\0"): *fp_glFragmentCoverageColorNV;
	glFragmentLightModelfSGIX = get_proc_address("glFragmentLightModelfSGIX\0"): *fp_glFragmentLightModelfSGIX;
	glFragmentLightModelfvSGIX = get_proc_address("glFragmentLightModelfvSGIX\0"): *fp_glFragmentLightModelfvSGIX;
	glFragmentLightModeliSGIX = get_proc_address("glFragmentLightModeliSGIX\0"): *fp_glFragmentLightModeliSGIX;
	glFragmentLightModelivSGIX = get_proc_address("glFragmentLightModelivSGIX\0"): *fp_glFragmentLightModelivSGIX;
	glFragmentLightfSGIX = get_proc_address("glFragmentLightfSGIX\0"): *fp_glFragmentLightfSGIX;
	glFragmentLightfvSGIX = get_proc_address("glFragmentLightfvSGIX\0"): *fp_glFragmentLightfvSGIX;
	glFragmentLightiSGIX = get_proc_address("glFragmentLightiSGIX\0"): *fp_glFragmentLightiSGIX;
	glFragmentLightivSGIX = get_proc_address("glFragmentLightivSGIX\0"): *fp_glFragmentLightivSGIX;
	glFragmentMaterialfSGIX = get_proc_address("glFragmentMaterialfSGIX\0"): *fp_glFragmentMaterialfSGIX;
	glFragmentMaterialfvSGIX = get_proc_address("glFragmentMaterialfvSGIX\0"): *fp_glFragmentMaterialfvSGIX;
	glFragmentMaterialiSGIX = get_proc_address("glFragmentMaterialiSGIX\0"): *fp_glFragmentMaterialiSGIX;
	glFragmentMaterialivSGIX = get_proc_address("glFragmentMaterialivSGIX\0"): *fp_glFragmentMaterialivSGIX;
	glFrameTerminatorGREMEDY = get_proc_address("glFrameTerminatorGREMEDY\0"): *fp_glFrameTerminatorGREMEDY;
	glFrameZoomSGIX = get_proc_address("glFrameZoomSGIX\0"): *fp_glFrameZoomSGIX;
	glFramebufferDrawBufferEXT = get_proc_address("glFramebufferDrawBufferEXT\0"): *fp_glFramebufferDrawBufferEXT;
	glFramebufferDrawBuffersEXT = get_proc_address("glFramebufferDrawBuffersEXT\0"): *fp_glFramebufferDrawBuffersEXT;
	glFramebufferFetchBarrierEXT = get_proc_address("glFramebufferFetchBarrierEXT\0"): *fp_glFramebufferFetchBarrierEXT;
	glFramebufferParameteri = get_proc_address("glFramebufferParameteri\0"): *fp_glFramebufferParameteri;
	glFramebufferParameteriMESA = get_proc_address("glFramebufferParameteriMESA\0"): *fp_glFramebufferParameteriMESA;
	glFramebufferReadBufferEXT = get_proc_address("glFramebufferReadBufferEXT\0"): *fp_glFramebufferReadBufferEXT;
	glFramebufferRenderbuffer = get_proc_address("glFramebufferRenderbuffer\0"): *fp_glFramebufferRenderbuffer;
	glFramebufferRenderbufferEXT = get_proc_address("glFramebufferRenderbufferEXT\0"): *fp_glFramebufferRenderbufferEXT;
	glFramebufferSampleLocationsfvARB = get_proc_address("glFramebufferSampleLocationsfvARB\0"): *fp_glFramebufferSampleLocationsfvARB;
	glFramebufferSampleLocationsfvNV = get_proc_address("glFramebufferSampleLocationsfvNV\0"): *fp_glFramebufferSampleLocationsfvNV;
	glFramebufferSamplePositionsfvAMD = get_proc_address("glFramebufferSamplePositionsfvAMD\0"): *fp_glFramebufferSamplePositionsfvAMD;
	glFramebufferTexture = get_proc_address("glFramebufferTexture\0"): *fp_glFramebufferTexture;
	glFramebufferTexture1D = get_proc_address("glFramebufferTexture1D\0"): *fp_glFramebufferTexture1D;
	glFramebufferTexture1DEXT = get_proc_address("glFramebufferTexture1DEXT\0"): *fp_glFramebufferTexture1DEXT;
	glFramebufferTexture2D = get_proc_address("glFramebufferTexture2D\0"): *fp_glFramebufferTexture2D;
	glFramebufferTexture2DEXT = get_proc_address("glFramebufferTexture2DEXT\0"): *fp_glFramebufferTexture2DEXT;
	glFramebufferTexture3D = get_proc_address("glFramebufferTexture3D\0"): *fp_glFramebufferTexture3D;
	glFramebufferTexture3DEXT = get_proc_address("glFramebufferTexture3DEXT\0"): *fp_glFramebufferTexture3DEXT;
	glFramebufferTextureARB = get_proc_address("glFramebufferTextureARB\0"): *fp_glFramebufferTextureARB;
	glFramebufferTextureEXT = get_proc_address("glFramebufferTextureEXT\0"): *fp_glFramebufferTextureEXT;
	glFramebufferTextureFaceARB = get_proc_address("glFramebufferTextureFaceARB\0"): *fp_glFramebufferTextureFaceARB;
	glFramebufferTextureFaceEXT = get_proc_address("glFramebufferTextureFaceEXT\0"): *fp_glFramebufferTextureFaceEXT;
	glFramebufferTextureLayer = get_proc_address("glFramebufferTextureLayer\0"): *fp_glFramebufferTextureLayer;
	glFramebufferTextureLayerARB = get_proc_address("glFramebufferTextureLayerARB\0"): *fp_glFramebufferTextureLayerARB;
	glFramebufferTextureLayerEXT = get_proc_address("glFramebufferTextureLayerEXT\0"): *fp_glFramebufferTextureLayerEXT;
	glFramebufferTextureMultiviewOVR = get_proc_address("glFramebufferTextureMultiviewOVR\0"): *fp_glFramebufferTextureMultiviewOVR;
	glFreeObjectBufferATI = get_proc_address("glFreeObjectBufferATI\0"): *fp_glFreeObjectBufferATI;
	glFrontFace = get_proc_address("glFrontFace\0"): *fp_glFrontFace;
	glFrustumfOES = get_proc_address("glFrustumfOES\0"): *fp_glFrustumfOES;
	glFrustumxOES = get_proc_address("glFrustumxOES\0"): *fp_glFrustumxOES;
	glGenAsyncMarkersSGIX = get_proc_address("glGenAsyncMarkersSGIX\0"): *fp_glGenAsyncMarkersSGIX;
	glGenBuffers = get_proc_address("glGenBuffers\0"): *fp_glGenBuffers;
	glGenBuffersARB = get_proc_address("glGenBuffersARB\0"): *fp_glGenBuffersARB;
	glGenFencesAPPLE = get_proc_address("glGenFencesAPPLE\0"): *fp_glGenFencesAPPLE;
	glGenFencesNV = get_proc_address("glGenFencesNV\0"): *fp_glGenFencesNV;
	glGenFragmentShadersATI = get_proc_address("glGenFragmentShadersATI\0"): *fp_glGenFragmentShadersATI;
	glGenFramebuffers = get_proc_address("glGenFramebuffers\0"): *fp_glGenFramebuffers;
	glGenFramebuffersEXT = get_proc_address("glGenFramebuffersEXT\0"): *fp_glGenFramebuffersEXT;
	glGenNamesAMD = get_proc_address("glGenNamesAMD\0"): *fp_glGenNamesAMD;
	glGenOcclusionQueriesNV = get_proc_address("glGenOcclusionQueriesNV\0"): *fp_glGenOcclusionQueriesNV;
	glGenPathsNV = get_proc_address("glGenPathsNV\0"): *fp_glGenPathsNV;
	glGenPerfMonitorsAMD = get_proc_address("glGenPerfMonitorsAMD\0"): *fp_glGenPerfMonitorsAMD;
	glGenProgramPipelines = get_proc_address("glGenProgramPipelines\0"): *fp_glGenProgramPipelines;
	glGenProgramsARB = get_proc_address("glGenProgramsARB\0"): *fp_glGenProgramsARB;
	glGenProgramsNV = get_proc_address("glGenProgramsNV\0"): *fp_glGenProgramsNV;
	glGenQueries = get_proc_address("glGenQueries\0"): *fp_glGenQueries;
	glGenQueriesARB = get_proc_address("glGenQueriesARB\0"): *fp_glGenQueriesARB;
	glGenQueryResourceTagNV = get_proc_address("glGenQueryResourceTagNV\0"): *fp_glGenQueryResourceTagNV;
	glGenRenderbuffers = get_proc_address("glGenRenderbuffers\0"): *fp_glGenRenderbuffers;
	glGenRenderbuffersEXT = get_proc_address("glGenRenderbuffersEXT\0"): *fp_glGenRenderbuffersEXT;
	glGenSamplers = get_proc_address("glGenSamplers\0"): *fp_glGenSamplers;
	glGenSemaphoresEXT = get_proc_address("glGenSemaphoresEXT\0"): *fp_glGenSemaphoresEXT;
	glGenSymbolsEXT = get_proc_address("glGenSymbolsEXT\0"): *fp_glGenSymbolsEXT;
	glGenTextures = get_proc_address("glGenTextures\0"): *fp_glGenTextures;
	glGenTexturesEXT = get_proc_address("glGenTexturesEXT\0"): *fp_glGenTexturesEXT;
	glGenTransformFeedbacks = get_proc_address("glGenTransformFeedbacks\0"): *fp_glGenTransformFeedbacks;
	glGenTransformFeedbacksNV = get_proc_address("glGenTransformFeedbacksNV\0"): *fp_glGenTransformFeedbacksNV;
	glGenVertexArrays = get_proc_address("glGenVertexArrays\0"): *fp_glGenVertexArrays;
	glGenVertexArraysAPPLE = get_proc_address("glGenVertexArraysAPPLE\0"): *fp_glGenVertexArraysAPPLE;
	glGenVertexShadersEXT = get_proc_address("glGenVertexShadersEXT\0"): *fp_glGenVertexShadersEXT;
	glGenerateMipmap = get_proc_address("glGenerateMipmap\0"): *fp_glGenerateMipmap;
	glGenerateMipmapEXT = get_proc_address("glGenerateMipmapEXT\0"): *fp_glGenerateMipmapEXT;
	glGenerateMultiTexMipmapEXT = get_proc_address("glGenerateMultiTexMipmapEXT\0"): *fp_glGenerateMultiTexMipmapEXT;
	glGenerateTextureMipmap = get_proc_address("glGenerateTextureMipmap\0"): *fp_glGenerateTextureMipmap;
	glGenerateTextureMipmapEXT = get_proc_address("glGenerateTextureMipmapEXT\0"): *fp_glGenerateTextureMipmapEXT;
	glGetActiveAtomicCounterBufferiv = get_proc_address("glGetActiveAtomicCounterBufferiv\0"): *fp_glGetActiveAtomicCounterBufferiv;
	glGetActiveAttrib = get_proc_address("glGetActiveAttrib\0"): *fp_glGetActiveAttrib;
	glGetActiveAttribARB = get_proc_address("glGetActiveAttribARB\0"): *fp_glGetActiveAttribARB;
	glGetActiveSubroutineName = get_proc_address("glGetActiveSubroutineName\0"): *fp_glGetActiveSubroutineName;
	glGetActiveSubroutineUniformName = get_proc_address("glGetActiveSubroutineUniformName\0"): *fp_glGetActiveSubroutineUniformName;
	glGetActiveSubroutineUniformiv = get_proc_address("glGetActiveSubroutineUniformiv\0"): *fp_glGetActiveSubroutineUniformiv;
	glGetActiveUniform = get_proc_address("glGetActiveUniform\0"): *fp_glGetActiveUniform;
	glGetActiveUniformARB = get_proc_address("glGetActiveUniformARB\0"): *fp_glGetActiveUniformARB;
	glGetActiveUniformBlockName = get_proc_address("glGetActiveUniformBlockName\0"): *fp_glGetActiveUniformBlockName;
	glGetActiveUniformBlockiv = get_proc_address("glGetActiveUniformBlockiv\0"): *fp_glGetActiveUniformBlockiv;
	glGetActiveUniformName = get_proc_address("glGetActiveUniformName\0"): *fp_glGetActiveUniformName;
	glGetActiveUniformsiv = get_proc_address("glGetActiveUniformsiv\0"): *fp_glGetActiveUniformsiv;
	glGetActiveVaryingNV = get_proc_address("glGetActiveVaryingNV\0"): *fp_glGetActiveVaryingNV;
	glGetArrayObjectfvATI = get_proc_address("glGetArrayObjectfvATI\0"): *fp_glGetArrayObjectfvATI;
	glGetArrayObjectivATI = get_proc_address("glGetArrayObjectivATI\0"): *fp_glGetArrayObjectivATI;
	glGetAttachedObjectsARB = get_proc_address("glGetAttachedObjectsARB\0"): *fp_glGetAttachedObjectsARB;
	glGetAttachedShaders = get_proc_address("glGetAttachedShaders\0"): *fp_glGetAttachedShaders;
	glGetAttribLocation = get_proc_address("glGetAttribLocation\0"): *fp_glGetAttribLocation;
	glGetAttribLocationARB = get_proc_address("glGetAttribLocationARB\0"): *fp_glGetAttribLocationARB;
	glGetBooleanIndexedvEXT = get_proc_address("glGetBooleanIndexedvEXT\0"): *fp_glGetBooleanIndexedvEXT;
	glGetBooleani_v = get_proc_address("glGetBooleani_v\0"): *fp_glGetBooleani_v;
	glGetBooleanv = get_proc_address("glGetBooleanv\0"): *fp_glGetBooleanv;
	glGetBufferParameteri64v = get_proc_address("glGetBufferParameteri64v\0"): *fp_glGetBufferParameteri64v;
	glGetBufferParameteriv = get_proc_address("glGetBufferParameteriv\0"): *fp_glGetBufferParameteriv;
	glGetBufferParameterivARB = get_proc_address("glGetBufferParameterivARB\0"): *fp_glGetBufferParameterivARB;
	glGetBufferParameterui64vNV = get_proc_address("glGetBufferParameterui64vNV\0"): *fp_glGetBufferParameterui64vNV;
	glGetBufferPointerv = get_proc_address("glGetBufferPointerv\0"): *fp_glGetBufferPointerv;
	glGetBufferPointervARB = get_proc_address("glGetBufferPointervARB\0"): *fp_glGetBufferPointervARB;
	glGetBufferSubData = get_proc_address("glGetBufferSubData\0"): *fp_glGetBufferSubData;
	glGetBufferSubDataARB = get_proc_address("glGetBufferSubDataARB\0"): *fp_glGetBufferSubDataARB;
	glGetClipPlanefOES = get_proc_address("glGetClipPlanefOES\0"): *fp_glGetClipPlanefOES;
	glGetClipPlanexOES = get_proc_address("glGetClipPlanexOES\0"): *fp_glGetClipPlanexOES;
	glGetColorTableEXT = get_proc_address("glGetColorTableEXT\0"): *fp_glGetColorTableEXT;
	glGetColorTableParameterfvEXT = get_proc_address("glGetColorTableParameterfvEXT\0"): *fp_glGetColorTableParameterfvEXT;
	glGetColorTableParameterfvSGI = get_proc_address("glGetColorTableParameterfvSGI\0"): *fp_glGetColorTableParameterfvSGI;
	glGetColorTableParameterivEXT = get_proc_address("glGetColorTableParameterivEXT\0"): *fp_glGetColorTableParameterivEXT;
	glGetColorTableParameterivSGI = get_proc_address("glGetColorTableParameterivSGI\0"): *fp_glGetColorTableParameterivSGI;
	glGetColorTableSGI = get_proc_address("glGetColorTableSGI\0"): *fp_glGetColorTableSGI;
	glGetCombinerInputParameterfvNV = get_proc_address("glGetCombinerInputParameterfvNV\0"): *fp_glGetCombinerInputParameterfvNV;
	glGetCombinerInputParameterivNV = get_proc_address("glGetCombinerInputParameterivNV\0"): *fp_glGetCombinerInputParameterivNV;
	glGetCombinerOutputParameterfvNV = get_proc_address("glGetCombinerOutputParameterfvNV\0"): *fp_glGetCombinerOutputParameterfvNV;
	glGetCombinerOutputParameterivNV = get_proc_address("glGetCombinerOutputParameterivNV\0"): *fp_glGetCombinerOutputParameterivNV;
	glGetCombinerStageParameterfvNV = get_proc_address("glGetCombinerStageParameterfvNV\0"): *fp_glGetCombinerStageParameterfvNV;
	glGetCommandHeaderNV = get_proc_address("glGetCommandHeaderNV\0"): *fp_glGetCommandHeaderNV;
	glGetCompressedMultiTexImageEXT = get_proc_address("glGetCompressedMultiTexImageEXT\0"): *fp_glGetCompressedMultiTexImageEXT;
	glGetCompressedTexImage = get_proc_address("glGetCompressedTexImage\0"): *fp_glGetCompressedTexImage;
	glGetCompressedTexImageARB = get_proc_address("glGetCompressedTexImageARB\0"): *fp_glGetCompressedTexImageARB;
	glGetCompressedTextureImage = get_proc_address("glGetCompressedTextureImage\0"): *fp_glGetCompressedTextureImage;
	glGetCompressedTextureImageEXT = get_proc_address("glGetCompressedTextureImageEXT\0"): *fp_glGetCompressedTextureImageEXT;
	glGetCompressedTextureSubImage = get_proc_address("glGetCompressedTextureSubImage\0"): *fp_glGetCompressedTextureSubImage;
	glGetConvolutionFilterEXT = get_proc_address("glGetConvolutionFilterEXT\0"): *fp_glGetConvolutionFilterEXT;
	glGetConvolutionParameterfvEXT = get_proc_address("glGetConvolutionParameterfvEXT\0"): *fp_glGetConvolutionParameterfvEXT;
	glGetConvolutionParameterivEXT = get_proc_address("glGetConvolutionParameterivEXT\0"): *fp_glGetConvolutionParameterivEXT;
	glGetConvolutionParameterxvOES = get_proc_address("glGetConvolutionParameterxvOES\0"): *fp_glGetConvolutionParameterxvOES;
	glGetCoverageModulationTableNV = get_proc_address("glGetCoverageModulationTableNV\0"): *fp_glGetCoverageModulationTableNV;
	glGetDebugMessageLog = get_proc_address("glGetDebugMessageLog\0"): *fp_glGetDebugMessageLog;
	glGetDebugMessageLogAMD = get_proc_address("glGetDebugMessageLogAMD\0"): *fp_glGetDebugMessageLogAMD;
	glGetDebugMessageLogARB = get_proc_address("glGetDebugMessageLogARB\0"): *fp_glGetDebugMessageLogARB;
	glGetDetailTexFuncSGIS = get_proc_address("glGetDetailTexFuncSGIS\0"): *fp_glGetDetailTexFuncSGIS;
	glGetDoubleIndexedvEXT = get_proc_address("glGetDoubleIndexedvEXT\0"): *fp_glGetDoubleIndexedvEXT;
	glGetDoublei_v = get_proc_address("glGetDoublei_v\0"): *fp_glGetDoublei_v;
	glGetDoublei_vEXT = get_proc_address("glGetDoublei_vEXT\0"): *fp_glGetDoublei_vEXT;
	glGetDoublev = get_proc_address("glGetDoublev\0"): *fp_glGetDoublev;
	glGetError = get_proc_address("glGetError\0"): *fp_glGetError;
	glGetFenceivNV = get_proc_address("glGetFenceivNV\0"): *fp_glGetFenceivNV;
	glGetFinalCombinerInputParameterfvNV = get_proc_address("glGetFinalCombinerInputParameterfvNV\0"): *fp_glGetFinalCombinerInputParameterfvNV;
	glGetFinalCombinerInputParameterivNV = get_proc_address("glGetFinalCombinerInputParameterivNV\0"): *fp_glGetFinalCombinerInputParameterivNV;
	glGetFirstPerfQueryIdINTEL = get_proc_address("glGetFirstPerfQueryIdINTEL\0"): *fp_glGetFirstPerfQueryIdINTEL;
	glGetFixedvOES = get_proc_address("glGetFixedvOES\0"): *fp_glGetFixedvOES;
	glGetFloatIndexedvEXT = get_proc_address("glGetFloatIndexedvEXT\0"): *fp_glGetFloatIndexedvEXT;
	glGetFloati_v = get_proc_address("glGetFloati_v\0"): *fp_glGetFloati_v;
	glGetFloati_vEXT = get_proc_address("glGetFloati_vEXT\0"): *fp_glGetFloati_vEXT;
	glGetFloatv = get_proc_address("glGetFloatv\0"): *fp_glGetFloatv;
	glGetFogFuncSGIS = get_proc_address("glGetFogFuncSGIS\0"): *fp_glGetFogFuncSGIS;
	glGetFragDataIndex = get_proc_address("glGetFragDataIndex\0"): *fp_glGetFragDataIndex;
	glGetFragDataLocation = get_proc_address("glGetFragDataLocation\0"): *fp_glGetFragDataLocation;
	glGetFragDataLocationEXT = get_proc_address("glGetFragDataLocationEXT\0"): *fp_glGetFragDataLocationEXT;
	glGetFragmentLightfvSGIX = get_proc_address("glGetFragmentLightfvSGIX\0"): *fp_glGetFragmentLightfvSGIX;
	glGetFragmentLightivSGIX = get_proc_address("glGetFragmentLightivSGIX\0"): *fp_glGetFragmentLightivSGIX;
	glGetFragmentMaterialfvSGIX = get_proc_address("glGetFragmentMaterialfvSGIX\0"): *fp_glGetFragmentMaterialfvSGIX;
	glGetFragmentMaterialivSGIX = get_proc_address("glGetFragmentMaterialivSGIX\0"): *fp_glGetFragmentMaterialivSGIX;
	glGetFramebufferAttachmentParameteriv = get_proc_address("glGetFramebufferAttachmentParameteriv\0"): *fp_glGetFramebufferAttachmentParameteriv;
	glGetFramebufferAttachmentParameterivEXT = get_proc_address("glGetFramebufferAttachmentParameterivEXT\0"): *fp_glGetFramebufferAttachmentParameterivEXT;
	glGetFramebufferParameterfvAMD = get_proc_address("glGetFramebufferParameterfvAMD\0"): *fp_glGetFramebufferParameterfvAMD;
	glGetFramebufferParameteriv = get_proc_address("glGetFramebufferParameteriv\0"): *fp_glGetFramebufferParameteriv;
	glGetFramebufferParameterivEXT = get_proc_address("glGetFramebufferParameterivEXT\0"): *fp_glGetFramebufferParameterivEXT;
	glGetFramebufferParameterivMESA = get_proc_address("glGetFramebufferParameterivMESA\0"): *fp_glGetFramebufferParameterivMESA;
	glGetGraphicsResetStatus = get_proc_address("glGetGraphicsResetStatus\0"): *fp_glGetGraphicsResetStatus;
	glGetGraphicsResetStatusARB = get_proc_address("glGetGraphicsResetStatusARB\0"): *fp_glGetGraphicsResetStatusARB;
	glGetHandleARB = get_proc_address("glGetHandleARB\0"): *fp_glGetHandleARB;
	glGetHistogramEXT = get_proc_address("glGetHistogramEXT\0"): *fp_glGetHistogramEXT;
	glGetHistogramParameterfvEXT = get_proc_address("glGetHistogramParameterfvEXT\0"): *fp_glGetHistogramParameterfvEXT;
	glGetHistogramParameterivEXT = get_proc_address("glGetHistogramParameterivEXT\0"): *fp_glGetHistogramParameterivEXT;
	glGetHistogramParameterxvOES = get_proc_address("glGetHistogramParameterxvOES\0"): *fp_glGetHistogramParameterxvOES;
	glGetImageHandleARB = get_proc_address("glGetImageHandleARB\0"): *fp_glGetImageHandleARB;
	glGetImageHandleNV = get_proc_address("glGetImageHandleNV\0"): *fp_glGetImageHandleNV;
	glGetImageTransformParameterfvHP = get_proc_address("glGetImageTransformParameterfvHP\0"): *fp_glGetImageTransformParameterfvHP;
	glGetImageTransformParameterivHP = get_proc_address("glGetImageTransformParameterivHP\0"): *fp_glGetImageTransformParameterivHP;
	glGetInfoLogARB = get_proc_address("glGetInfoLogARB\0"): *fp_glGetInfoLogARB;
	glGetInstrumentsSGIX = get_proc_address("glGetInstrumentsSGIX\0"): *fp_glGetInstrumentsSGIX;
	glGetInteger64i_v = get_proc_address("glGetInteger64i_v\0"): *fp_glGetInteger64i_v;
	glGetInteger64v = get_proc_address("glGetInteger64v\0"): *fp_glGetInteger64v;
	glGetIntegerIndexedvEXT = get_proc_address("glGetIntegerIndexedvEXT\0"): *fp_glGetIntegerIndexedvEXT;
	glGetIntegeri_v = get_proc_address("glGetIntegeri_v\0"): *fp_glGetIntegeri_v;
	glGetIntegerui64i_vNV = get_proc_address("glGetIntegerui64i_vNV\0"): *fp_glGetIntegerui64i_vNV;
	glGetIntegerui64vNV = get_proc_address("glGetIntegerui64vNV\0"): *fp_glGetIntegerui64vNV;
	glGetIntegerv = get_proc_address("glGetIntegerv\0"): *fp_glGetIntegerv;
	glGetInternalformatSampleivNV = get_proc_address("glGetInternalformatSampleivNV\0"): *fp_glGetInternalformatSampleivNV;
	glGetInternalformati64v = get_proc_address("glGetInternalformati64v\0"): *fp_glGetInternalformati64v;
	glGetInternalformativ = get_proc_address("glGetInternalformativ\0"): *fp_glGetInternalformativ;
	glGetInvariantBooleanvEXT = get_proc_address("glGetInvariantBooleanvEXT\0"): *fp_glGetInvariantBooleanvEXT;
	glGetInvariantFloatvEXT = get_proc_address("glGetInvariantFloatvEXT\0"): *fp_glGetInvariantFloatvEXT;
	glGetInvariantIntegervEXT = get_proc_address("glGetInvariantIntegervEXT\0"): *fp_glGetInvariantIntegervEXT;
	glGetLightxOES = get_proc_address("glGetLightxOES\0"): *fp_glGetLightxOES;
	glGetListParameterfvSGIX = get_proc_address("glGetListParameterfvSGIX\0"): *fp_glGetListParameterfvSGIX;
	glGetListParameterivSGIX = get_proc_address("glGetListParameterivSGIX\0"): *fp_glGetListParameterivSGIX;
	glGetLocalConstantBooleanvEXT = get_proc_address("glGetLocalConstantBooleanvEXT\0"): *fp_glGetLocalConstantBooleanvEXT;
	glGetLocalConstantFloatvEXT = get_proc_address("glGetLocalConstantFloatvEXT\0"): *fp_glGetLocalConstantFloatvEXT;
	glGetLocalConstantIntegervEXT = get_proc_address("glGetLocalConstantIntegervEXT\0"): *fp_glGetLocalConstantIntegervEXT;
	glGetMapAttribParameterfvNV = get_proc_address("glGetMapAttribParameterfvNV\0"): *fp_glGetMapAttribParameterfvNV;
	glGetMapAttribParameterivNV = get_proc_address("glGetMapAttribParameterivNV\0"): *fp_glGetMapAttribParameterivNV;
	glGetMapControlPointsNV = get_proc_address("glGetMapControlPointsNV\0"): *fp_glGetMapControlPointsNV;
	glGetMapParameterfvNV = get_proc_address("glGetMapParameterfvNV\0"): *fp_glGetMapParameterfvNV;
	glGetMapParameterivNV = get_proc_address("glGetMapParameterivNV\0"): *fp_glGetMapParameterivNV;
	glGetMapxvOES = get_proc_address("glGetMapxvOES\0"): *fp_glGetMapxvOES;
	glGetMaterialxOES = get_proc_address("glGetMaterialxOES\0"): *fp_glGetMaterialxOES;
	glGetMemoryObjectDetachedResourcesuivNV = get_proc_address("glGetMemoryObjectDetachedResourcesuivNV\0"): *fp_glGetMemoryObjectDetachedResourcesuivNV;
	glGetMemoryObjectParameterivEXT = get_proc_address("glGetMemoryObjectParameterivEXT\0"): *fp_glGetMemoryObjectParameterivEXT;
	glGetMinmaxEXT = get_proc_address("glGetMinmaxEXT\0"): *fp_glGetMinmaxEXT;
	glGetMinmaxParameterfvEXT = get_proc_address("glGetMinmaxParameterfvEXT\0"): *fp_glGetMinmaxParameterfvEXT;
	glGetMinmaxParameterivEXT = get_proc_address("glGetMinmaxParameterivEXT\0"): *fp_glGetMinmaxParameterivEXT;
	glGetMultiTexEnvfvEXT = get_proc_address("glGetMultiTexEnvfvEXT\0"): *fp_glGetMultiTexEnvfvEXT;
	glGetMultiTexEnvivEXT = get_proc_address("glGetMultiTexEnvivEXT\0"): *fp_glGetMultiTexEnvivEXT;
	glGetMultiTexGendvEXT = get_proc_address("glGetMultiTexGendvEXT\0"): *fp_glGetMultiTexGendvEXT;
	glGetMultiTexGenfvEXT = get_proc_address("glGetMultiTexGenfvEXT\0"): *fp_glGetMultiTexGenfvEXT;
	glGetMultiTexGenivEXT = get_proc_address("glGetMultiTexGenivEXT\0"): *fp_glGetMultiTexGenivEXT;
	glGetMultiTexImageEXT = get_proc_address("glGetMultiTexImageEXT\0"): *fp_glGetMultiTexImageEXT;
	glGetMultiTexLevelParameterfvEXT = get_proc_address("glGetMultiTexLevelParameterfvEXT\0"): *fp_glGetMultiTexLevelParameterfvEXT;
	glGetMultiTexLevelParameterivEXT = get_proc_address("glGetMultiTexLevelParameterivEXT\0"): *fp_glGetMultiTexLevelParameterivEXT;
	glGetMultiTexParameterIivEXT = get_proc_address("glGetMultiTexParameterIivEXT\0"): *fp_glGetMultiTexParameterIivEXT;
	glGetMultiTexParameterIuivEXT = get_proc_address("glGetMultiTexParameterIuivEXT\0"): *fp_glGetMultiTexParameterIuivEXT;
	glGetMultiTexParameterfvEXT = get_proc_address("glGetMultiTexParameterfvEXT\0"): *fp_glGetMultiTexParameterfvEXT;
	glGetMultiTexParameterivEXT = get_proc_address("glGetMultiTexParameterivEXT\0"): *fp_glGetMultiTexParameterivEXT;
	glGetMultisamplefv = get_proc_address("glGetMultisamplefv\0"): *fp_glGetMultisamplefv;
	glGetMultisamplefvNV = get_proc_address("glGetMultisamplefvNV\0"): *fp_glGetMultisamplefvNV;
	glGetNamedBufferParameteri64v = get_proc_address("glGetNamedBufferParameteri64v\0"): *fp_glGetNamedBufferParameteri64v;
	glGetNamedBufferParameteriv = get_proc_address("glGetNamedBufferParameteriv\0"): *fp_glGetNamedBufferParameteriv;
	glGetNamedBufferParameterivEXT = get_proc_address("glGetNamedBufferParameterivEXT\0"): *fp_glGetNamedBufferParameterivEXT;
	glGetNamedBufferParameterui64vNV = get_proc_address("glGetNamedBufferParameterui64vNV\0"): *fp_glGetNamedBufferParameterui64vNV;
	glGetNamedBufferPointerv = get_proc_address("glGetNamedBufferPointerv\0"): *fp_glGetNamedBufferPointerv;
	glGetNamedBufferPointervEXT = get_proc_address("glGetNamedBufferPointervEXT\0"): *fp_glGetNamedBufferPointervEXT;
	glGetNamedBufferSubData = get_proc_address("glGetNamedBufferSubData\0"): *fp_glGetNamedBufferSubData;
	glGetNamedBufferSubDataEXT = get_proc_address("glGetNamedBufferSubDataEXT\0"): *fp_glGetNamedBufferSubDataEXT;
	glGetNamedFramebufferAttachmentParameteriv = get_proc_address("glGetNamedFramebufferAttachmentParameteriv\0"): *fp_glGetNamedFramebufferAttachmentParameteriv;
	glGetNamedFramebufferAttachmentParameterivEXT = get_proc_address("glGetNamedFramebufferAttachmentParameterivEXT\0"): *fp_glGetNamedFramebufferAttachmentParameterivEXT;
	glGetNamedFramebufferParameterfvAMD = get_proc_address("glGetNamedFramebufferParameterfvAMD\0"): *fp_glGetNamedFramebufferParameterfvAMD;
	glGetNamedFramebufferParameteriv = get_proc_address("glGetNamedFramebufferParameteriv\0"): *fp_glGetNamedFramebufferParameteriv;
	glGetNamedFramebufferParameterivEXT = get_proc_address("glGetNamedFramebufferParameterivEXT\0"): *fp_glGetNamedFramebufferParameterivEXT;
	glGetNamedProgramLocalParameterIivEXT = get_proc_address("glGetNamedProgramLocalParameterIivEXT\0"): *fp_glGetNamedProgramLocalParameterIivEXT;
	glGetNamedProgramLocalParameterIuivEXT = get_proc_address("glGetNamedProgramLocalParameterIuivEXT\0"): *fp_glGetNamedProgramLocalParameterIuivEXT;
	glGetNamedProgramLocalParameterdvEXT = get_proc_address("glGetNamedProgramLocalParameterdvEXT\0"): *fp_glGetNamedProgramLocalParameterdvEXT;
	glGetNamedProgramLocalParameterfvEXT = get_proc_address("glGetNamedProgramLocalParameterfvEXT\0"): *fp_glGetNamedProgramLocalParameterfvEXT;
	glGetNamedProgramStringEXT = get_proc_address("glGetNamedProgramStringEXT\0"): *fp_glGetNamedProgramStringEXT;
	glGetNamedProgramivEXT = get_proc_address("glGetNamedProgramivEXT\0"): *fp_glGetNamedProgramivEXT;
	glGetNamedRenderbufferParameteriv = get_proc_address("glGetNamedRenderbufferParameteriv\0"): *fp_glGetNamedRenderbufferParameteriv;
	glGetNamedRenderbufferParameterivEXT = get_proc_address("glGetNamedRenderbufferParameterivEXT\0"): *fp_glGetNamedRenderbufferParameterivEXT;
	glGetNamedStringARB = get_proc_address("glGetNamedStringARB\0"): *fp_glGetNamedStringARB;
	glGetNamedStringivARB = get_proc_address("glGetNamedStringivARB\0"): *fp_glGetNamedStringivARB;
	glGetNextPerfQueryIdINTEL = get_proc_address("glGetNextPerfQueryIdINTEL\0"): *fp_glGetNextPerfQueryIdINTEL;
	glGetObjectBufferfvATI = get_proc_address("glGetObjectBufferfvATI\0"): *fp_glGetObjectBufferfvATI;
	glGetObjectBufferivATI = get_proc_address("glGetObjectBufferivATI\0"): *fp_glGetObjectBufferivATI;
	glGetObjectLabel = get_proc_address("glGetObjectLabel\0"): *fp_glGetObjectLabel;
	glGetObjectLabelEXT = get_proc_address("glGetObjectLabelEXT\0"): *fp_glGetObjectLabelEXT;
	glGetObjectParameterfvARB = get_proc_address("glGetObjectParameterfvARB\0"): *fp_glGetObjectParameterfvARB;
	glGetObjectParameterivAPPLE = get_proc_address("glGetObjectParameterivAPPLE\0"): *fp_glGetObjectParameterivAPPLE;
	glGetObjectParameterivARB = get_proc_address("glGetObjectParameterivARB\0"): *fp_glGetObjectParameterivARB;
	glGetObjectPtrLabel = get_proc_address("glGetObjectPtrLabel\0"): *fp_glGetObjectPtrLabel;
	glGetOcclusionQueryivNV = get_proc_address("glGetOcclusionQueryivNV\0"): *fp_glGetOcclusionQueryivNV;
	glGetOcclusionQueryuivNV = get_proc_address("glGetOcclusionQueryuivNV\0"): *fp_glGetOcclusionQueryuivNV;
	glGetPathCommandsNV = get_proc_address("glGetPathCommandsNV\0"): *fp_glGetPathCommandsNV;
	glGetPathCoordsNV = get_proc_address("glGetPathCoordsNV\0"): *fp_glGetPathCoordsNV;
	glGetPathDashArrayNV = get_proc_address("glGetPathDashArrayNV\0"): *fp_glGetPathDashArrayNV;
	glGetPathLengthNV = get_proc_address("glGetPathLengthNV\0"): *fp_glGetPathLengthNV;
	glGetPathMetricRangeNV = get_proc_address("glGetPathMetricRangeNV\0"): *fp_glGetPathMetricRangeNV;
	glGetPathMetricsNV = get_proc_address("glGetPathMetricsNV\0"): *fp_glGetPathMetricsNV;
	glGetPathParameterfvNV = get_proc_address("glGetPathParameterfvNV\0"): *fp_glGetPathParameterfvNV;
	glGetPathParameterivNV = get_proc_address("glGetPathParameterivNV\0"): *fp_glGetPathParameterivNV;
	glGetPathSpacingNV = get_proc_address("glGetPathSpacingNV\0"): *fp_glGetPathSpacingNV;
	glGetPerfCounterInfoINTEL = get_proc_address("glGetPerfCounterInfoINTEL\0"): *fp_glGetPerfCounterInfoINTEL;
	glGetPerfMonitorCounterDataAMD = get_proc_address("glGetPerfMonitorCounterDataAMD\0"): *fp_glGetPerfMonitorCounterDataAMD;
	glGetPerfMonitorCounterInfoAMD = get_proc_address("glGetPerfMonitorCounterInfoAMD\0"): *fp_glGetPerfMonitorCounterInfoAMD;
	glGetPerfMonitorCounterStringAMD = get_proc_address("glGetPerfMonitorCounterStringAMD\0"): *fp_glGetPerfMonitorCounterStringAMD;
	glGetPerfMonitorCountersAMD = get_proc_address("glGetPerfMonitorCountersAMD\0"): *fp_glGetPerfMonitorCountersAMD;
	glGetPerfMonitorGroupStringAMD = get_proc_address("glGetPerfMonitorGroupStringAMD\0"): *fp_glGetPerfMonitorGroupStringAMD;
	glGetPerfMonitorGroupsAMD = get_proc_address("glGetPerfMonitorGroupsAMD\0"): *fp_glGetPerfMonitorGroupsAMD;
	glGetPerfQueryDataINTEL = get_proc_address("glGetPerfQueryDataINTEL\0"): *fp_glGetPerfQueryDataINTEL;
	glGetPerfQueryIdByNameINTEL = get_proc_address("glGetPerfQueryIdByNameINTEL\0"): *fp_glGetPerfQueryIdByNameINTEL;
	glGetPerfQueryInfoINTEL = get_proc_address("glGetPerfQueryInfoINTEL\0"): *fp_glGetPerfQueryInfoINTEL;
	glGetPixelMapxv = get_proc_address("glGetPixelMapxv\0"): *fp_glGetPixelMapxv;
	glGetPixelTexGenParameterfvSGIS = get_proc_address("glGetPixelTexGenParameterfvSGIS\0"): *fp_glGetPixelTexGenParameterfvSGIS;
	glGetPixelTexGenParameterivSGIS = get_proc_address("glGetPixelTexGenParameterivSGIS\0"): *fp_glGetPixelTexGenParameterivSGIS;
	glGetPixelTransformParameterfvEXT = get_proc_address("glGetPixelTransformParameterfvEXT\0"): *fp_glGetPixelTransformParameterfvEXT;
	glGetPixelTransformParameterivEXT = get_proc_address("glGetPixelTransformParameterivEXT\0"): *fp_glGetPixelTransformParameterivEXT;
	glGetPointerIndexedvEXT = get_proc_address("glGetPointerIndexedvEXT\0"): *fp_glGetPointerIndexedvEXT;
	glGetPointeri_vEXT = get_proc_address("glGetPointeri_vEXT\0"): *fp_glGetPointeri_vEXT;
	glGetPointerv = get_proc_address("glGetPointerv\0"): *fp_glGetPointerv;
	glGetPointervEXT = get_proc_address("glGetPointervEXT\0"): *fp_glGetPointervEXT;
	glGetProgramBinary = get_proc_address("glGetProgramBinary\0"): *fp_glGetProgramBinary;
	glGetProgramEnvParameterIivNV = get_proc_address("glGetProgramEnvParameterIivNV\0"): *fp_glGetProgramEnvParameterIivNV;
	glGetProgramEnvParameterIuivNV = get_proc_address("glGetProgramEnvParameterIuivNV\0"): *fp_glGetProgramEnvParameterIuivNV;
	glGetProgramEnvParameterdvARB = get_proc_address("glGetProgramEnvParameterdvARB\0"): *fp_glGetProgramEnvParameterdvARB;
	glGetProgramEnvParameterfvARB = get_proc_address("glGetProgramEnvParameterfvARB\0"): *fp_glGetProgramEnvParameterfvARB;
	glGetProgramInfoLog = get_proc_address("glGetProgramInfoLog\0"): *fp_glGetProgramInfoLog;
	glGetProgramInterfaceiv = get_proc_address("glGetProgramInterfaceiv\0"): *fp_glGetProgramInterfaceiv;
	glGetProgramLocalParameterIivNV = get_proc_address("glGetProgramLocalParameterIivNV\0"): *fp_glGetProgramLocalParameterIivNV;
	glGetProgramLocalParameterIuivNV = get_proc_address("glGetProgramLocalParameterIuivNV\0"): *fp_glGetProgramLocalParameterIuivNV;
	glGetProgramLocalParameterdvARB = get_proc_address("glGetProgramLocalParameterdvARB\0"): *fp_glGetProgramLocalParameterdvARB;
	glGetProgramLocalParameterfvARB = get_proc_address("glGetProgramLocalParameterfvARB\0"): *fp_glGetProgramLocalParameterfvARB;
	glGetProgramNamedParameterdvNV = get_proc_address("glGetProgramNamedParameterdvNV\0"): *fp_glGetProgramNamedParameterdvNV;
	glGetProgramNamedParameterfvNV = get_proc_address("glGetProgramNamedParameterfvNV\0"): *fp_glGetProgramNamedParameterfvNV;
	glGetProgramParameterdvNV = get_proc_address("glGetProgramParameterdvNV\0"): *fp_glGetProgramParameterdvNV;
	glGetProgramParameterfvNV = get_proc_address("glGetProgramParameterfvNV\0"): *fp_glGetProgramParameterfvNV;
	glGetProgramPipelineInfoLog = get_proc_address("glGetProgramPipelineInfoLog\0"): *fp_glGetProgramPipelineInfoLog;
	glGetProgramPipelineiv = get_proc_address("glGetProgramPipelineiv\0"): *fp_glGetProgramPipelineiv;
	glGetProgramResourceIndex = get_proc_address("glGetProgramResourceIndex\0"): *fp_glGetProgramResourceIndex;
	glGetProgramResourceLocation = get_proc_address("glGetProgramResourceLocation\0"): *fp_glGetProgramResourceLocation;
	glGetProgramResourceLocationIndex = get_proc_address("glGetProgramResourceLocationIndex\0"): *fp_glGetProgramResourceLocationIndex;
	glGetProgramResourceName = get_proc_address("glGetProgramResourceName\0"): *fp_glGetProgramResourceName;
	glGetProgramResourcefvNV = get_proc_address("glGetProgramResourcefvNV\0"): *fp_glGetProgramResourcefvNV;
	glGetProgramResourceiv = get_proc_address("glGetProgramResourceiv\0"): *fp_glGetProgramResourceiv;
	glGetProgramStageiv = get_proc_address("glGetProgramStageiv\0"): *fp_glGetProgramStageiv;
	glGetProgramStringARB = get_proc_address("glGetProgramStringARB\0"): *fp_glGetProgramStringARB;
	glGetProgramStringNV = get_proc_address("glGetProgramStringNV\0"): *fp_glGetProgramStringNV;
	glGetProgramSubroutineParameteruivNV = get_proc_address("glGetProgramSubroutineParameteruivNV\0"): *fp_glGetProgramSubroutineParameteruivNV;
	glGetProgramiv = get_proc_address("glGetProgramiv\0"): *fp_glGetProgramiv;
	glGetProgramivARB = get_proc_address("glGetProgramivARB\0"): *fp_glGetProgramivARB;
	glGetProgramivNV = get_proc_address("glGetProgramivNV\0"): *fp_glGetProgramivNV;
	glGetQueryBufferObjecti64v = get_proc_address("glGetQueryBufferObjecti64v\0"): *fp_glGetQueryBufferObjecti64v;
	glGetQueryBufferObjectiv = get_proc_address("glGetQueryBufferObjectiv\0"): *fp_glGetQueryBufferObjectiv;
	glGetQueryBufferObjectui64v = get_proc_address("glGetQueryBufferObjectui64v\0"): *fp_glGetQueryBufferObjectui64v;
	glGetQueryBufferObjectuiv = get_proc_address("glGetQueryBufferObjectuiv\0"): *fp_glGetQueryBufferObjectuiv;
	glGetQueryIndexediv = get_proc_address("glGetQueryIndexediv\0"): *fp_glGetQueryIndexediv;
	glGetQueryObjecti64v = get_proc_address("glGetQueryObjecti64v\0"): *fp_glGetQueryObjecti64v;
	glGetQueryObjecti64vEXT = get_proc_address("glGetQueryObjecti64vEXT\0"): *fp_glGetQueryObjecti64vEXT;
	glGetQueryObjectiv = get_proc_address("glGetQueryObjectiv\0"): *fp_glGetQueryObjectiv;
	glGetQueryObjectivARB = get_proc_address("glGetQueryObjectivARB\0"): *fp_glGetQueryObjectivARB;
	glGetQueryObjectui64v = get_proc_address("glGetQueryObjectui64v\0"): *fp_glGetQueryObjectui64v;
	glGetQueryObjectui64vEXT = get_proc_address("glGetQueryObjectui64vEXT\0"): *fp_glGetQueryObjectui64vEXT;
	glGetQueryObjectuiv = get_proc_address("glGetQueryObjectuiv\0"): *fp_glGetQueryObjectuiv;
	glGetQueryObjectuivARB = get_proc_address("glGetQueryObjectuivARB\0"): *fp_glGetQueryObjectuivARB;
	glGetQueryiv = get_proc_address("glGetQueryiv\0"): *fp_glGetQueryiv;
	glGetQueryivARB = get_proc_address("glGetQueryivARB\0"): *fp_glGetQueryivARB;
	glGetRenderbufferParameteriv = get_proc_address("glGetRenderbufferParameteriv\0"): *fp_glGetRenderbufferParameteriv;
	glGetRenderbufferParameterivEXT = get_proc_address("glGetRenderbufferParameterivEXT\0"): *fp_glGetRenderbufferParameterivEXT;
	glGetSamplerParameterIiv = get_proc_address("glGetSamplerParameterIiv\0"): *fp_glGetSamplerParameterIiv;
	glGetSamplerParameterIuiv = get_proc_address("glGetSamplerParameterIuiv\0"): *fp_glGetSamplerParameterIuiv;
	glGetSamplerParameterfv = get_proc_address("glGetSamplerParameterfv\0"): *fp_glGetSamplerParameterfv;
	glGetSamplerParameteriv = get_proc_address("glGetSamplerParameteriv\0"): *fp_glGetSamplerParameteriv;
	glGetSemaphoreParameterivNV = get_proc_address("glGetSemaphoreParameterivNV\0"): *fp_glGetSemaphoreParameterivNV;
	glGetSemaphoreParameterui64vEXT = get_proc_address("glGetSemaphoreParameterui64vEXT\0"): *fp_glGetSemaphoreParameterui64vEXT;
	glGetSeparableFilterEXT = get_proc_address("glGetSeparableFilterEXT\0"): *fp_glGetSeparableFilterEXT;
	glGetShaderInfoLog = get_proc_address("glGetShaderInfoLog\0"): *fp_glGetShaderInfoLog;
	glGetShaderPrecisionFormat = get_proc_address("glGetShaderPrecisionFormat\0"): *fp_glGetShaderPrecisionFormat;
	glGetShaderSource = get_proc_address("glGetShaderSource\0"): *fp_glGetShaderSource;
	glGetShaderSourceARB = get_proc_address("glGetShaderSourceARB\0"): *fp_glGetShaderSourceARB;
	glGetShaderiv = get_proc_address("glGetShaderiv\0"): *fp_glGetShaderiv;
	glGetShadingRateImagePaletteNV = get_proc_address("glGetShadingRateImagePaletteNV\0"): *fp_glGetShadingRateImagePaletteNV;
	glGetShadingRateSampleLocationivNV = get_proc_address("glGetShadingRateSampleLocationivNV\0"): *fp_glGetShadingRateSampleLocationivNV;
	glGetSharpenTexFuncSGIS = get_proc_address("glGetSharpenTexFuncSGIS\0"): *fp_glGetSharpenTexFuncSGIS;
	glGetStageIndexNV = get_proc_address("glGetStageIndexNV\0"): *fp_glGetStageIndexNV;
	glGetString = get_proc_address("glGetString\0"): *fp_glGetString;
	glGetStringi = get_proc_address("glGetStringi\0"): *fp_glGetStringi;
	glGetSubroutineIndex = get_proc_address("glGetSubroutineIndex\0"): *fp_glGetSubroutineIndex;
	glGetSubroutineUniformLocation = get_proc_address("glGetSubroutineUniformLocation\0"): *fp_glGetSubroutineUniformLocation;
	glGetSynciv = get_proc_address("glGetSynciv\0"): *fp_glGetSynciv;
	glGetTexBumpParameterfvATI = get_proc_address("glGetTexBumpParameterfvATI\0"): *fp_glGetTexBumpParameterfvATI;
	glGetTexBumpParameterivATI = get_proc_address("glGetTexBumpParameterivATI\0"): *fp_glGetTexBumpParameterivATI;
	glGetTexEnvxvOES = get_proc_address("glGetTexEnvxvOES\0"): *fp_glGetTexEnvxvOES;
	glGetTexFilterFuncSGIS = get_proc_address("glGetTexFilterFuncSGIS\0"): *fp_glGetTexFilterFuncSGIS;
	glGetTexGenxvOES = get_proc_address("glGetTexGenxvOES\0"): *fp_glGetTexGenxvOES;
	glGetTexImage = get_proc_address("glGetTexImage\0"): *fp_glGetTexImage;
	glGetTexLevelParameterfv = get_proc_address("glGetTexLevelParameterfv\0"): *fp_glGetTexLevelParameterfv;
	glGetTexLevelParameteriv = get_proc_address("glGetTexLevelParameteriv\0"): *fp_glGetTexLevelParameteriv;
	glGetTexLevelParameterxvOES = get_proc_address("glGetTexLevelParameterxvOES\0"): *fp_glGetTexLevelParameterxvOES;
	glGetTexParameterIiv = get_proc_address("glGetTexParameterIiv\0"): *fp_glGetTexParameterIiv;
	glGetTexParameterIivEXT = get_proc_address("glGetTexParameterIivEXT\0"): *fp_glGetTexParameterIivEXT;
	glGetTexParameterIuiv = get_proc_address("glGetTexParameterIuiv\0"): *fp_glGetTexParameterIuiv;
	glGetTexParameterIuivEXT = get_proc_address("glGetTexParameterIuivEXT\0"): *fp_glGetTexParameterIuivEXT;
	glGetTexParameterPointervAPPLE = get_proc_address("glGetTexParameterPointervAPPLE\0"): *fp_glGetTexParameterPointervAPPLE;
	glGetTexParameterfv = get_proc_address("glGetTexParameterfv\0"): *fp_glGetTexParameterfv;
	glGetTexParameteriv = get_proc_address("glGetTexParameteriv\0"): *fp_glGetTexParameteriv;
	glGetTexParameterxvOES = get_proc_address("glGetTexParameterxvOES\0"): *fp_glGetTexParameterxvOES;
	glGetTextureHandleARB = get_proc_address("glGetTextureHandleARB\0"): *fp_glGetTextureHandleARB;
	glGetTextureHandleNV = get_proc_address("glGetTextureHandleNV\0"): *fp_glGetTextureHandleNV;
	glGetTextureImage = get_proc_address("glGetTextureImage\0"): *fp_glGetTextureImage;
	glGetTextureImageEXT = get_proc_address("glGetTextureImageEXT\0"): *fp_glGetTextureImageEXT;
	glGetTextureLevelParameterfv = get_proc_address("glGetTextureLevelParameterfv\0"): *fp_glGetTextureLevelParameterfv;
	glGetTextureLevelParameterfvEXT = get_proc_address("glGetTextureLevelParameterfvEXT\0"): *fp_glGetTextureLevelParameterfvEXT;
	glGetTextureLevelParameteriv = get_proc_address("glGetTextureLevelParameteriv\0"): *fp_glGetTextureLevelParameteriv;
	glGetTextureLevelParameterivEXT = get_proc_address("glGetTextureLevelParameterivEXT\0"): *fp_glGetTextureLevelParameterivEXT;
	glGetTextureParameterIiv = get_proc_address("glGetTextureParameterIiv\0"): *fp_glGetTextureParameterIiv;
	glGetTextureParameterIivEXT = get_proc_address("glGetTextureParameterIivEXT\0"): *fp_glGetTextureParameterIivEXT;
	glGetTextureParameterIuiv = get_proc_address("glGetTextureParameterIuiv\0"): *fp_glGetTextureParameterIuiv;
	glGetTextureParameterIuivEXT = get_proc_address("glGetTextureParameterIuivEXT\0"): *fp_glGetTextureParameterIuivEXT;
	glGetTextureParameterfv = get_proc_address("glGetTextureParameterfv\0"): *fp_glGetTextureParameterfv;
	glGetTextureParameterfvEXT = get_proc_address("glGetTextureParameterfvEXT\0"): *fp_glGetTextureParameterfvEXT;
	glGetTextureParameteriv = get_proc_address("glGetTextureParameteriv\0"): *fp_glGetTextureParameteriv;
	glGetTextureParameterivEXT = get_proc_address("glGetTextureParameterivEXT\0"): *fp_glGetTextureParameterivEXT;
	glGetTextureSamplerHandleARB = get_proc_address("glGetTextureSamplerHandleARB\0"): *fp_glGetTextureSamplerHandleARB;
	glGetTextureSamplerHandleNV = get_proc_address("glGetTextureSamplerHandleNV\0"): *fp_glGetTextureSamplerHandleNV;
	glGetTextureSubImage = get_proc_address("glGetTextureSubImage\0"): *fp_glGetTextureSubImage;
	glGetTrackMatrixivNV = get_proc_address("glGetTrackMatrixivNV\0"): *fp_glGetTrackMatrixivNV;
	glGetTransformFeedbackVarying = get_proc_address("glGetTransformFeedbackVarying\0"): *fp_glGetTransformFeedbackVarying;
	glGetTransformFeedbackVaryingEXT = get_proc_address("glGetTransformFeedbackVaryingEXT\0"): *fp_glGetTransformFeedbackVaryingEXT;
	glGetTransformFeedbackVaryingNV = get_proc_address("glGetTransformFeedbackVaryingNV\0"): *fp_glGetTransformFeedbackVaryingNV;
	glGetTransformFeedbacki64_v = get_proc_address("glGetTransformFeedbacki64_v\0"): *fp_glGetTransformFeedbacki64_v;
	glGetTransformFeedbacki_v = get_proc_address("glGetTransformFeedbacki_v\0"): *fp_glGetTransformFeedbacki_v;
	glGetTransformFeedbackiv = get_proc_address("glGetTransformFeedbackiv\0"): *fp_glGetTransformFeedbackiv;
	glGetUniformBlockIndex = get_proc_address("glGetUniformBlockIndex\0"): *fp_glGetUniformBlockIndex;
	glGetUniformBufferSizeEXT = get_proc_address("glGetUniformBufferSizeEXT\0"): *fp_glGetUniformBufferSizeEXT;
	glGetUniformIndices = get_proc_address("glGetUniformIndices\0"): *fp_glGetUniformIndices;
	glGetUniformLocation = get_proc_address("glGetUniformLocation\0"): *fp_glGetUniformLocation;
	glGetUniformLocationARB = get_proc_address("glGetUniformLocationARB\0"): *fp_glGetUniformLocationARB;
	glGetUniformOffsetEXT = get_proc_address("glGetUniformOffsetEXT\0"): *fp_glGetUniformOffsetEXT;
	glGetUniformSubroutineuiv = get_proc_address("glGetUniformSubroutineuiv\0"): *fp_glGetUniformSubroutineuiv;
	glGetUniformdv = get_proc_address("glGetUniformdv\0"): *fp_glGetUniformdv;
	glGetUniformfv = get_proc_address("glGetUniformfv\0"): *fp_glGetUniformfv;
	glGetUniformfvARB = get_proc_address("glGetUniformfvARB\0"): *fp_glGetUniformfvARB;
	glGetUniformi64vARB = get_proc_address("glGetUniformi64vARB\0"): *fp_glGetUniformi64vARB;
	glGetUniformi64vNV = get_proc_address("glGetUniformi64vNV\0"): *fp_glGetUniformi64vNV;
	glGetUniformiv = get_proc_address("glGetUniformiv\0"): *fp_glGetUniformiv;
	glGetUniformivARB = get_proc_address("glGetUniformivARB\0"): *fp_glGetUniformivARB;
	glGetUniformui64vARB = get_proc_address("glGetUniformui64vARB\0"): *fp_glGetUniformui64vARB;
	glGetUniformui64vNV = get_proc_address("glGetUniformui64vNV\0"): *fp_glGetUniformui64vNV;
	glGetUniformuiv = get_proc_address("glGetUniformuiv\0"): *fp_glGetUniformuiv;
	glGetUniformuivEXT = get_proc_address("glGetUniformuivEXT\0"): *fp_glGetUniformuivEXT;
	glGetUnsignedBytei_vEXT = get_proc_address("glGetUnsignedBytei_vEXT\0"): *fp_glGetUnsignedBytei_vEXT;
	glGetUnsignedBytevEXT = get_proc_address("glGetUnsignedBytevEXT\0"): *fp_glGetUnsignedBytevEXT;
	glGetVariantArrayObjectfvATI = get_proc_address("glGetVariantArrayObjectfvATI\0"): *fp_glGetVariantArrayObjectfvATI;
	glGetVariantArrayObjectivATI = get_proc_address("glGetVariantArrayObjectivATI\0"): *fp_glGetVariantArrayObjectivATI;
	glGetVariantBooleanvEXT = get_proc_address("glGetVariantBooleanvEXT\0"): *fp_glGetVariantBooleanvEXT;
	glGetVariantFloatvEXT = get_proc_address("glGetVariantFloatvEXT\0"): *fp_glGetVariantFloatvEXT;
	glGetVariantIntegervEXT = get_proc_address("glGetVariantIntegervEXT\0"): *fp_glGetVariantIntegervEXT;
	glGetVariantPointervEXT = get_proc_address("glGetVariantPointervEXT\0"): *fp_glGetVariantPointervEXT;
	glGetVaryingLocationNV = get_proc_address("glGetVaryingLocationNV\0"): *fp_glGetVaryingLocationNV;
	glGetVertexArrayIndexed64iv = get_proc_address("glGetVertexArrayIndexed64iv\0"): *fp_glGetVertexArrayIndexed64iv;
	glGetVertexArrayIndexediv = get_proc_address("glGetVertexArrayIndexediv\0"): *fp_glGetVertexArrayIndexediv;
	glGetVertexArrayIntegeri_vEXT = get_proc_address("glGetVertexArrayIntegeri_vEXT\0"): *fp_glGetVertexArrayIntegeri_vEXT;
	glGetVertexArrayIntegervEXT = get_proc_address("glGetVertexArrayIntegervEXT\0"): *fp_glGetVertexArrayIntegervEXT;
	glGetVertexArrayPointeri_vEXT = get_proc_address("glGetVertexArrayPointeri_vEXT\0"): *fp_glGetVertexArrayPointeri_vEXT;
	glGetVertexArrayPointervEXT = get_proc_address("glGetVertexArrayPointervEXT\0"): *fp_glGetVertexArrayPointervEXT;
	glGetVertexArrayiv = get_proc_address("glGetVertexArrayiv\0"): *fp_glGetVertexArrayiv;
	glGetVertexAttribArrayObjectfvATI = get_proc_address("glGetVertexAttribArrayObjectfvATI\0"): *fp_glGetVertexAttribArrayObjectfvATI;
	glGetVertexAttribArrayObjectivATI = get_proc_address("glGetVertexAttribArrayObjectivATI\0"): *fp_glGetVertexAttribArrayObjectivATI;
	glGetVertexAttribIiv = get_proc_address("glGetVertexAttribIiv\0"): *fp_glGetVertexAttribIiv;
	glGetVertexAttribIivEXT = get_proc_address("glGetVertexAttribIivEXT\0"): *fp_glGetVertexAttribIivEXT;
	glGetVertexAttribIuiv = get_proc_address("glGetVertexAttribIuiv\0"): *fp_glGetVertexAttribIuiv;
	glGetVertexAttribIuivEXT = get_proc_address("glGetVertexAttribIuivEXT\0"): *fp_glGetVertexAttribIuivEXT;
	glGetVertexAttribLdv = get_proc_address("glGetVertexAttribLdv\0"): *fp_glGetVertexAttribLdv;
	glGetVertexAttribLdvEXT = get_proc_address("glGetVertexAttribLdvEXT\0"): *fp_glGetVertexAttribLdvEXT;
	glGetVertexAttribLi64vNV = get_proc_address("glGetVertexAttribLi64vNV\0"): *fp_glGetVertexAttribLi64vNV;
	glGetVertexAttribLui64vARB = get_proc_address("glGetVertexAttribLui64vARB\0"): *fp_glGetVertexAttribLui64vARB;
	glGetVertexAttribLui64vNV = get_proc_address("glGetVertexAttribLui64vNV\0"): *fp_glGetVertexAttribLui64vNV;
	glGetVertexAttribPointerv = get_proc_address("glGetVertexAttribPointerv\0"): *fp_glGetVertexAttribPointerv;
	glGetVertexAttribPointervARB = get_proc_address("glGetVertexAttribPointervARB\0"): *fp_glGetVertexAttribPointervARB;
	glGetVertexAttribPointervNV = get_proc_address("glGetVertexAttribPointervNV\0"): *fp_glGetVertexAttribPointervNV;
	glGetVertexAttribdv = get_proc_address("glGetVertexAttribdv\0"): *fp_glGetVertexAttribdv;
	glGetVertexAttribdvARB = get_proc_address("glGetVertexAttribdvARB\0"): *fp_glGetVertexAttribdvARB;
	glGetVertexAttribdvNV = get_proc_address("glGetVertexAttribdvNV\0"): *fp_glGetVertexAttribdvNV;
	glGetVertexAttribfv = get_proc_address("glGetVertexAttribfv\0"): *fp_glGetVertexAttribfv;
	glGetVertexAttribfvARB = get_proc_address("glGetVertexAttribfvARB\0"): *fp_glGetVertexAttribfvARB;
	glGetVertexAttribfvNV = get_proc_address("glGetVertexAttribfvNV\0"): *fp_glGetVertexAttribfvNV;
	glGetVertexAttribiv = get_proc_address("glGetVertexAttribiv\0"): *fp_glGetVertexAttribiv;
	glGetVertexAttribivARB = get_proc_address("glGetVertexAttribivARB\0"): *fp_glGetVertexAttribivARB;
	glGetVertexAttribivNV = get_proc_address("glGetVertexAttribivNV\0"): *fp_glGetVertexAttribivNV;
	glGetVideoCaptureStreamdvNV = get_proc_address("glGetVideoCaptureStreamdvNV\0"): *fp_glGetVideoCaptureStreamdvNV;
	glGetVideoCaptureStreamfvNV = get_proc_address("glGetVideoCaptureStreamfvNV\0"): *fp_glGetVideoCaptureStreamfvNV;
	glGetVideoCaptureStreamivNV = get_proc_address("glGetVideoCaptureStreamivNV\0"): *fp_glGetVideoCaptureStreamivNV;
	glGetVideoCaptureivNV = get_proc_address("glGetVideoCaptureivNV\0"): *fp_glGetVideoCaptureivNV;
	glGetVideoi64vNV = get_proc_address("glGetVideoi64vNV\0"): *fp_glGetVideoi64vNV;
	glGetVideoivNV = get_proc_address("glGetVideoivNV\0"): *fp_glGetVideoivNV;
	glGetVideoui64vNV = get_proc_address("glGetVideoui64vNV\0"): *fp_glGetVideoui64vNV;
	glGetVideouivNV = get_proc_address("glGetVideouivNV\0"): *fp_glGetVideouivNV;
	glGetVkProcAddrNV = get_proc_address("glGetVkProcAddrNV\0"): *fp_glGetVkProcAddrNV;
	glGetnCompressedTexImageARB = get_proc_address("glGetnCompressedTexImageARB\0"): *fp_glGetnCompressedTexImageARB;
	glGetnTexImageARB = get_proc_address("glGetnTexImageARB\0"): *fp_glGetnTexImageARB;
	glGetnUniformdvARB = get_proc_address("glGetnUniformdvARB\0"): *fp_glGetnUniformdvARB;
	glGetnUniformfv = get_proc_address("glGetnUniformfv\0"): *fp_glGetnUniformfv;
	glGetnUniformfvARB = get_proc_address("glGetnUniformfvARB\0"): *fp_glGetnUniformfvARB;
	glGetnUniformi64vARB = get_proc_address("glGetnUniformi64vARB\0"): *fp_glGetnUniformi64vARB;
	glGetnUniformiv = get_proc_address("glGetnUniformiv\0"): *fp_glGetnUniformiv;
	glGetnUniformivARB = get_proc_address("glGetnUniformivARB\0"): *fp_glGetnUniformivARB;
	glGetnUniformui64vARB = get_proc_address("glGetnUniformui64vARB\0"): *fp_glGetnUniformui64vARB;
	glGetnUniformuiv = get_proc_address("glGetnUniformuiv\0"): *fp_glGetnUniformuiv;
	glGetnUniformuivARB = get_proc_address("glGetnUniformuivARB\0"): *fp_glGetnUniformuivARB;
	glGlobalAlphaFactorbSUN = get_proc_address("glGlobalAlphaFactorbSUN\0"): *fp_glGlobalAlphaFactorbSUN;
	glGlobalAlphaFactordSUN = get_proc_address("glGlobalAlphaFactordSUN\0"): *fp_glGlobalAlphaFactordSUN;
	glGlobalAlphaFactorfSUN = get_proc_address("glGlobalAlphaFactorfSUN\0"): *fp_glGlobalAlphaFactorfSUN;
	glGlobalAlphaFactoriSUN = get_proc_address("glGlobalAlphaFactoriSUN\0"): *fp_glGlobalAlphaFactoriSUN;
	glGlobalAlphaFactorsSUN = get_proc_address("glGlobalAlphaFactorsSUN\0"): *fp_glGlobalAlphaFactorsSUN;
	glGlobalAlphaFactorubSUN = get_proc_address("glGlobalAlphaFactorubSUN\0"): *fp_glGlobalAlphaFactorubSUN;
	glGlobalAlphaFactoruiSUN = get_proc_address("glGlobalAlphaFactoruiSUN\0"): *fp_glGlobalAlphaFactoruiSUN;
	glGlobalAlphaFactorusSUN = get_proc_address("glGlobalAlphaFactorusSUN\0"): *fp_glGlobalAlphaFactorusSUN;
	glHint = get_proc_address("glHint\0"): *fp_glHint;
	glHintPGI = get_proc_address("glHintPGI\0"): *fp_glHintPGI;
	glHistogramEXT = get_proc_address("glHistogramEXT\0"): *fp_glHistogramEXT;
	glIglooInterfaceSGIX = get_proc_address("glIglooInterfaceSGIX\0"): *fp_glIglooInterfaceSGIX;
	glImageTransformParameterfHP = get_proc_address("glImageTransformParameterfHP\0"): *fp_glImageTransformParameterfHP;
	glImageTransformParameterfvHP = get_proc_address("glImageTransformParameterfvHP\0"): *fp_glImageTransformParameterfvHP;
	glImageTransformParameteriHP = get_proc_address("glImageTransformParameteriHP\0"): *fp_glImageTransformParameteriHP;
	glImageTransformParameterivHP = get_proc_address("glImageTransformParameterivHP\0"): *fp_glImageTransformParameterivHP;
	glImportMemoryFdEXT = get_proc_address("glImportMemoryFdEXT\0"): *fp_glImportMemoryFdEXT;
	glImportMemoryWin32HandleEXT = get_proc_address("glImportMemoryWin32HandleEXT\0"): *fp_glImportMemoryWin32HandleEXT;
	glImportMemoryWin32NameEXT = get_proc_address("glImportMemoryWin32NameEXT\0"): *fp_glImportMemoryWin32NameEXT;
	glImportSemaphoreFdEXT = get_proc_address("glImportSemaphoreFdEXT\0"): *fp_glImportSemaphoreFdEXT;
	glImportSemaphoreWin32HandleEXT = get_proc_address("glImportSemaphoreWin32HandleEXT\0"): *fp_glImportSemaphoreWin32HandleEXT;
	glImportSemaphoreWin32NameEXT = get_proc_address("glImportSemaphoreWin32NameEXT\0"): *fp_glImportSemaphoreWin32NameEXT;
	glImportSyncEXT = get_proc_address("glImportSyncEXT\0"): *fp_glImportSyncEXT;
	glIndexFormatNV = get_proc_address("glIndexFormatNV\0"): *fp_glIndexFormatNV;
	glIndexFuncEXT = get_proc_address("glIndexFuncEXT\0"): *fp_glIndexFuncEXT;
	glIndexMaterialEXT = get_proc_address("glIndexMaterialEXT\0"): *fp_glIndexMaterialEXT;
	glIndexPointerEXT = get_proc_address("glIndexPointerEXT\0"): *fp_glIndexPointerEXT;
	glIndexPointerListIBM = get_proc_address("glIndexPointerListIBM\0"): *fp_glIndexPointerListIBM;
	glIndexxOES = get_proc_address("glIndexxOES\0"): *fp_glIndexxOES;
	glIndexxvOES = get_proc_address("glIndexxvOES\0"): *fp_glIndexxvOES;
	glInsertComponentEXT = get_proc_address("glInsertComponentEXT\0"): *fp_glInsertComponentEXT;
	glInsertEventMarkerEXT = get_proc_address("glInsertEventMarkerEXT\0"): *fp_glInsertEventMarkerEXT;
	glInstrumentsBufferSGIX = get_proc_address("glInstrumentsBufferSGIX\0"): *fp_glInstrumentsBufferSGIX;
	glInterpolatePathsNV = get_proc_address("glInterpolatePathsNV\0"): *fp_glInterpolatePathsNV;
	glInvalidateBufferData = get_proc_address("glInvalidateBufferData\0"): *fp_glInvalidateBufferData;
	glInvalidateBufferSubData = get_proc_address("glInvalidateBufferSubData\0"): *fp_glInvalidateBufferSubData;
	glInvalidateFramebuffer = get_proc_address("glInvalidateFramebuffer\0"): *fp_glInvalidateFramebuffer;
	glInvalidateNamedFramebufferData = get_proc_address("glInvalidateNamedFramebufferData\0"): *fp_glInvalidateNamedFramebufferData;
	glInvalidateNamedFramebufferSubData = get_proc_address("glInvalidateNamedFramebufferSubData\0"): *fp_glInvalidateNamedFramebufferSubData;
	glInvalidateSubFramebuffer = get_proc_address("glInvalidateSubFramebuffer\0"): *fp_glInvalidateSubFramebuffer;
	glInvalidateTexImage = get_proc_address("glInvalidateTexImage\0"): *fp_glInvalidateTexImage;
	glInvalidateTexSubImage = get_proc_address("glInvalidateTexSubImage\0"): *fp_glInvalidateTexSubImage;
	glIsAsyncMarkerSGIX = get_proc_address("glIsAsyncMarkerSGIX\0"): *fp_glIsAsyncMarkerSGIX;
	glIsBuffer = get_proc_address("glIsBuffer\0"): *fp_glIsBuffer;
	glIsBufferARB = get_proc_address("glIsBufferARB\0"): *fp_glIsBufferARB;
	glIsBufferResidentNV = get_proc_address("glIsBufferResidentNV\0"): *fp_glIsBufferResidentNV;
	glIsCommandListNV = get_proc_address("glIsCommandListNV\0"): *fp_glIsCommandListNV;
	glIsEnabled = get_proc_address("glIsEnabled\0"): *fp_glIsEnabled;
	glIsEnabledIndexedEXT = get_proc_address("glIsEnabledIndexedEXT\0"): *fp_glIsEnabledIndexedEXT;
	glIsEnabledi = get_proc_address("glIsEnabledi\0"): *fp_glIsEnabledi;
	glIsFenceAPPLE = get_proc_address("glIsFenceAPPLE\0"): *fp_glIsFenceAPPLE;
	glIsFenceNV = get_proc_address("glIsFenceNV\0"): *fp_glIsFenceNV;
	glIsFramebuffer = get_proc_address("glIsFramebuffer\0"): *fp_glIsFramebuffer;
	glIsFramebufferEXT = get_proc_address("glIsFramebufferEXT\0"): *fp_glIsFramebufferEXT;
	glIsImageHandleResidentARB = get_proc_address("glIsImageHandleResidentARB\0"): *fp_glIsImageHandleResidentARB;
	glIsImageHandleResidentNV = get_proc_address("glIsImageHandleResidentNV\0"): *fp_glIsImageHandleResidentNV;
	glIsMemoryObjectEXT = get_proc_address("glIsMemoryObjectEXT\0"): *fp_glIsMemoryObjectEXT;
	glIsNameAMD = get_proc_address("glIsNameAMD\0"): *fp_glIsNameAMD;
	glIsNamedBufferResidentNV = get_proc_address("glIsNamedBufferResidentNV\0"): *fp_glIsNamedBufferResidentNV;
	glIsNamedStringARB = get_proc_address("glIsNamedStringARB\0"): *fp_glIsNamedStringARB;
	glIsObjectBufferATI = get_proc_address("glIsObjectBufferATI\0"): *fp_glIsObjectBufferATI;
	glIsOcclusionQueryNV = get_proc_address("glIsOcclusionQueryNV\0"): *fp_glIsOcclusionQueryNV;
	glIsPathNV = get_proc_address("glIsPathNV\0"): *fp_glIsPathNV;
	glIsPointInFillPathNV = get_proc_address("glIsPointInFillPathNV\0"): *fp_glIsPointInFillPathNV;
	glIsPointInStrokePathNV = get_proc_address("glIsPointInStrokePathNV\0"): *fp_glIsPointInStrokePathNV;
	glIsProgram = get_proc_address("glIsProgram\0"): *fp_glIsProgram;
	glIsProgramARB = get_proc_address("glIsProgramARB\0"): *fp_glIsProgramARB;
	glIsProgramNV = get_proc_address("glIsProgramNV\0"): *fp_glIsProgramNV;
	glIsProgramPipeline = get_proc_address("glIsProgramPipeline\0"): *fp_glIsProgramPipeline;
	glIsQuery = get_proc_address("glIsQuery\0"): *fp_glIsQuery;
	glIsQueryARB = get_proc_address("glIsQueryARB\0"): *fp_glIsQueryARB;
	glIsRenderbuffer = get_proc_address("glIsRenderbuffer\0"): *fp_glIsRenderbuffer;
	glIsRenderbufferEXT = get_proc_address("glIsRenderbufferEXT\0"): *fp_glIsRenderbufferEXT;
	glIsSampler = get_proc_address("glIsSampler\0"): *fp_glIsSampler;
	glIsSemaphoreEXT = get_proc_address("glIsSemaphoreEXT\0"): *fp_glIsSemaphoreEXT;
	glIsShader = get_proc_address("glIsShader\0"): *fp_glIsShader;
	glIsStateNV = get_proc_address("glIsStateNV\0"): *fp_glIsStateNV;
	glIsSync = get_proc_address("glIsSync\0"): *fp_glIsSync;
	glIsTexture = get_proc_address("glIsTexture\0"): *fp_glIsTexture;
	glIsTextureEXT = get_proc_address("glIsTextureEXT\0"): *fp_glIsTextureEXT;
	glIsTextureHandleResidentARB = get_proc_address("glIsTextureHandleResidentARB\0"): *fp_glIsTextureHandleResidentARB;
	glIsTextureHandleResidentNV = get_proc_address("glIsTextureHandleResidentNV\0"): *fp_glIsTextureHandleResidentNV;
	glIsTransformFeedback = get_proc_address("glIsTransformFeedback\0"): *fp_glIsTransformFeedback;
	glIsTransformFeedbackNV = get_proc_address("glIsTransformFeedbackNV\0"): *fp_glIsTransformFeedbackNV;
	glIsVariantEnabledEXT = get_proc_address("glIsVariantEnabledEXT\0"): *fp_glIsVariantEnabledEXT;
	glIsVertexArray = get_proc_address("glIsVertexArray\0"): *fp_glIsVertexArray;
	glIsVertexArrayAPPLE = get_proc_address("glIsVertexArrayAPPLE\0"): *fp_glIsVertexArrayAPPLE;
	glIsVertexAttribEnabledAPPLE = get_proc_address("glIsVertexAttribEnabledAPPLE\0"): *fp_glIsVertexAttribEnabledAPPLE;
	glLGPUCopyImageSubDataNVX = get_proc_address("glLGPUCopyImageSubDataNVX\0"): *fp_glLGPUCopyImageSubDataNVX;
	glLGPUInterlockNVX = get_proc_address("glLGPUInterlockNVX\0"): *fp_glLGPUInterlockNVX;
	glLGPUNamedBufferSubDataNVX = get_proc_address("glLGPUNamedBufferSubDataNVX\0"): *fp_glLGPUNamedBufferSubDataNVX;
	glLabelObjectEXT = get_proc_address("glLabelObjectEXT\0"): *fp_glLabelObjectEXT;
	glLightEnviSGIX = get_proc_address("glLightEnviSGIX\0"): *fp_glLightEnviSGIX;
	glLightModelxOES = get_proc_address("glLightModelxOES\0"): *fp_glLightModelxOES;
	glLightModelxvOES = get_proc_address("glLightModelxvOES\0"): *fp_glLightModelxvOES;
	glLightxOES = get_proc_address("glLightxOES\0"): *fp_glLightxOES;
	glLightxvOES = get_proc_address("glLightxvOES\0"): *fp_glLightxvOES;
	glLineWidth = get_proc_address("glLineWidth\0"): *fp_glLineWidth;
	glLineWidthxOES = get_proc_address("glLineWidthxOES\0"): *fp_glLineWidthxOES;
	glLinkProgram = get_proc_address("glLinkProgram\0"): *fp_glLinkProgram;
	glLinkProgramARB = get_proc_address("glLinkProgramARB\0"): *fp_glLinkProgramARB;
	glListDrawCommandsStatesClientNV = get_proc_address("glListDrawCommandsStatesClientNV\0"): *fp_glListDrawCommandsStatesClientNV;
	glListParameterfSGIX = get_proc_address("glListParameterfSGIX\0"): *fp_glListParameterfSGIX;
	glListParameterfvSGIX = get_proc_address("glListParameterfvSGIX\0"): *fp_glListParameterfvSGIX;
	glListParameteriSGIX = get_proc_address("glListParameteriSGIX\0"): *fp_glListParameteriSGIX;
	glListParameterivSGIX = get_proc_address("glListParameterivSGIX\0"): *fp_glListParameterivSGIX;
	glLoadIdentityDeformationMapSGIX = get_proc_address("glLoadIdentityDeformationMapSGIX\0"): *fp_glLoadIdentityDeformationMapSGIX;
	glLoadMatrixxOES = get_proc_address("glLoadMatrixxOES\0"): *fp_glLoadMatrixxOES;
	glLoadProgramNV = get_proc_address("glLoadProgramNV\0"): *fp_glLoadProgramNV;
	glLoadTransposeMatrixdARB = get_proc_address("glLoadTransposeMatrixdARB\0"): *fp_glLoadTransposeMatrixdARB;
	glLoadTransposeMatrixfARB = get_proc_address("glLoadTransposeMatrixfARB\0"): *fp_glLoadTransposeMatrixfARB;
	glLoadTransposeMatrixxOES = get_proc_address("glLoadTransposeMatrixxOES\0"): *fp_glLoadTransposeMatrixxOES;
	glLockArraysEXT = get_proc_address("glLockArraysEXT\0"): *fp_glLockArraysEXT;
	glLogicOp = get_proc_address("glLogicOp\0"): *fp_glLogicOp;
	glMakeBufferNonResidentNV = get_proc_address("glMakeBufferNonResidentNV\0"): *fp_glMakeBufferNonResidentNV;
	glMakeBufferResidentNV = get_proc_address("glMakeBufferResidentNV\0"): *fp_glMakeBufferResidentNV;
	glMakeImageHandleNonResidentARB = get_proc_address("glMakeImageHandleNonResidentARB\0"): *fp_glMakeImageHandleNonResidentARB;
	glMakeImageHandleNonResidentNV = get_proc_address("glMakeImageHandleNonResidentNV\0"): *fp_glMakeImageHandleNonResidentNV;
	glMakeImageHandleResidentARB = get_proc_address("glMakeImageHandleResidentARB\0"): *fp_glMakeImageHandleResidentARB;
	glMakeImageHandleResidentNV = get_proc_address("glMakeImageHandleResidentNV\0"): *fp_glMakeImageHandleResidentNV;
	glMakeNamedBufferNonResidentNV = get_proc_address("glMakeNamedBufferNonResidentNV\0"): *fp_glMakeNamedBufferNonResidentNV;
	glMakeNamedBufferResidentNV = get_proc_address("glMakeNamedBufferResidentNV\0"): *fp_glMakeNamedBufferResidentNV;
	glMakeTextureHandleNonResidentARB = get_proc_address("glMakeTextureHandleNonResidentARB\0"): *fp_glMakeTextureHandleNonResidentARB;
	glMakeTextureHandleNonResidentNV = get_proc_address("glMakeTextureHandleNonResidentNV\0"): *fp_glMakeTextureHandleNonResidentNV;
	glMakeTextureHandleResidentARB = get_proc_address("glMakeTextureHandleResidentARB\0"): *fp_glMakeTextureHandleResidentARB;
	glMakeTextureHandleResidentNV = get_proc_address("glMakeTextureHandleResidentNV\0"): *fp_glMakeTextureHandleResidentNV;
	glMap1xOES = get_proc_address("glMap1xOES\0"): *fp_glMap1xOES;
	glMap2xOES = get_proc_address("glMap2xOES\0"): *fp_glMap2xOES;
	glMapBuffer = get_proc_address("glMapBuffer\0"): *fp_glMapBuffer;
	glMapBufferARB = get_proc_address("glMapBufferARB\0"): *fp_glMapBufferARB;
	glMapBufferRange = get_proc_address("glMapBufferRange\0"): *fp_glMapBufferRange;
	glMapControlPointsNV = get_proc_address("glMapControlPointsNV\0"): *fp_glMapControlPointsNV;
	glMapGrid1xOES = get_proc_address("glMapGrid1xOES\0"): *fp_glMapGrid1xOES;
	glMapGrid2xOES = get_proc_address("glMapGrid2xOES\0"): *fp_glMapGrid2xOES;
	glMapNamedBuffer = get_proc_address("glMapNamedBuffer\0"): *fp_glMapNamedBuffer;
	glMapNamedBufferEXT = get_proc_address("glMapNamedBufferEXT\0"): *fp_glMapNamedBufferEXT;
	glMapNamedBufferRange = get_proc_address("glMapNamedBufferRange\0"): *fp_glMapNamedBufferRange;
	glMapNamedBufferRangeEXT = get_proc_address("glMapNamedBufferRangeEXT\0"): *fp_glMapNamedBufferRangeEXT;
	glMapObjectBufferATI = get_proc_address("glMapObjectBufferATI\0"): *fp_glMapObjectBufferATI;
	glMapParameterfvNV = get_proc_address("glMapParameterfvNV\0"): *fp_glMapParameterfvNV;
	glMapParameterivNV = get_proc_address("glMapParameterivNV\0"): *fp_glMapParameterivNV;
	glMapTexture2DINTEL = get_proc_address("glMapTexture2DINTEL\0"): *fp_glMapTexture2DINTEL;
	glMapVertexAttrib1dAPPLE = get_proc_address("glMapVertexAttrib1dAPPLE\0"): *fp_glMapVertexAttrib1dAPPLE;
	glMapVertexAttrib1fAPPLE = get_proc_address("glMapVertexAttrib1fAPPLE\0"): *fp_glMapVertexAttrib1fAPPLE;
	glMapVertexAttrib2dAPPLE = get_proc_address("glMapVertexAttrib2dAPPLE\0"): *fp_glMapVertexAttrib2dAPPLE;
	glMapVertexAttrib2fAPPLE = get_proc_address("glMapVertexAttrib2fAPPLE\0"): *fp_glMapVertexAttrib2fAPPLE;
	glMaterialxOES = get_proc_address("glMaterialxOES\0"): *fp_glMaterialxOES;
	glMaterialxvOES = get_proc_address("glMaterialxvOES\0"): *fp_glMaterialxvOES;
	glMatrixFrustumEXT = get_proc_address("glMatrixFrustumEXT\0"): *fp_glMatrixFrustumEXT;
	glMatrixIndexPointerARB = get_proc_address("glMatrixIndexPointerARB\0"): *fp_glMatrixIndexPointerARB;
	glMatrixIndexubvARB = get_proc_address("glMatrixIndexubvARB\0"): *fp_glMatrixIndexubvARB;
	glMatrixIndexuivARB = get_proc_address("glMatrixIndexuivARB\0"): *fp_glMatrixIndexuivARB;
	glMatrixIndexusvARB = get_proc_address("glMatrixIndexusvARB\0"): *fp_glMatrixIndexusvARB;
	glMatrixLoad3x2fNV = get_proc_address("glMatrixLoad3x2fNV\0"): *fp_glMatrixLoad3x2fNV;
	glMatrixLoad3x3fNV = get_proc_address("glMatrixLoad3x3fNV\0"): *fp_glMatrixLoad3x3fNV;
	glMatrixLoadIdentityEXT = get_proc_address("glMatrixLoadIdentityEXT\0"): *fp_glMatrixLoadIdentityEXT;
	glMatrixLoadTranspose3x3fNV = get_proc_address("glMatrixLoadTranspose3x3fNV\0"): *fp_glMatrixLoadTranspose3x3fNV;
	glMatrixLoadTransposedEXT = get_proc_address("glMatrixLoadTransposedEXT\0"): *fp_glMatrixLoadTransposedEXT;
	glMatrixLoadTransposefEXT = get_proc_address("glMatrixLoadTransposefEXT\0"): *fp_glMatrixLoadTransposefEXT;
	glMatrixLoaddEXT = get_proc_address("glMatrixLoaddEXT\0"): *fp_glMatrixLoaddEXT;
	glMatrixLoadfEXT = get_proc_address("glMatrixLoadfEXT\0"): *fp_glMatrixLoadfEXT;
	glMatrixMult3x2fNV = get_proc_address("glMatrixMult3x2fNV\0"): *fp_glMatrixMult3x2fNV;
	glMatrixMult3x3fNV = get_proc_address("glMatrixMult3x3fNV\0"): *fp_glMatrixMult3x3fNV;
	glMatrixMultTranspose3x3fNV = get_proc_address("glMatrixMultTranspose3x3fNV\0"): *fp_glMatrixMultTranspose3x3fNV;
	glMatrixMultTransposedEXT = get_proc_address("glMatrixMultTransposedEXT\0"): *fp_glMatrixMultTransposedEXT;
	glMatrixMultTransposefEXT = get_proc_address("glMatrixMultTransposefEXT\0"): *fp_glMatrixMultTransposefEXT;
	glMatrixMultdEXT = get_proc_address("glMatrixMultdEXT\0"): *fp_glMatrixMultdEXT;
	glMatrixMultfEXT = get_proc_address("glMatrixMultfEXT\0"): *fp_glMatrixMultfEXT;
	glMatrixOrthoEXT = get_proc_address("glMatrixOrthoEXT\0"): *fp_glMatrixOrthoEXT;
	glMatrixPopEXT = get_proc_address("glMatrixPopEXT\0"): *fp_glMatrixPopEXT;
	glMatrixPushEXT = get_proc_address("glMatrixPushEXT\0"): *fp_glMatrixPushEXT;
	glMatrixRotatedEXT = get_proc_address("glMatrixRotatedEXT\0"): *fp_glMatrixRotatedEXT;
	glMatrixRotatefEXT = get_proc_address("glMatrixRotatefEXT\0"): *fp_glMatrixRotatefEXT;
	glMatrixScaledEXT = get_proc_address("glMatrixScaledEXT\0"): *fp_glMatrixScaledEXT;
	glMatrixScalefEXT = get_proc_address("glMatrixScalefEXT\0"): *fp_glMatrixScalefEXT;
	glMatrixTranslatedEXT = get_proc_address("glMatrixTranslatedEXT\0"): *fp_glMatrixTranslatedEXT;
	glMatrixTranslatefEXT = get_proc_address("glMatrixTranslatefEXT\0"): *fp_glMatrixTranslatefEXT;
	glMaxShaderCompilerThreadsARB = get_proc_address("glMaxShaderCompilerThreadsARB\0"): *fp_glMaxShaderCompilerThreadsARB;
	glMaxShaderCompilerThreadsKHR = get_proc_address("glMaxShaderCompilerThreadsKHR\0"): *fp_glMaxShaderCompilerThreadsKHR;
	glMemoryBarrier = get_proc_address("glMemoryBarrier\0"): *fp_glMemoryBarrier;
	glMemoryBarrierByRegion = get_proc_address("glMemoryBarrierByRegion\0"): *fp_glMemoryBarrierByRegion;
	glMemoryBarrierEXT = get_proc_address("glMemoryBarrierEXT\0"): *fp_glMemoryBarrierEXT;
	glMemoryObjectParameterivEXT = get_proc_address("glMemoryObjectParameterivEXT\0"): *fp_glMemoryObjectParameterivEXT;
	glMinSampleShadingARB = get_proc_address("glMinSampleShadingARB\0"): *fp_glMinSampleShadingARB;
	glMinmaxEXT = get_proc_address("glMinmaxEXT\0"): *fp_glMinmaxEXT;
	glMultMatrixxOES = get_proc_address("glMultMatrixxOES\0"): *fp_glMultMatrixxOES;
	glMultTransposeMatrixdARB = get_proc_address("glMultTransposeMatrixdARB\0"): *fp_glMultTransposeMatrixdARB;
	glMultTransposeMatrixfARB = get_proc_address("glMultTransposeMatrixfARB\0"): *fp_glMultTransposeMatrixfARB;
	glMultTransposeMatrixxOES = get_proc_address("glMultTransposeMatrixxOES\0"): *fp_glMultTransposeMatrixxOES;
	glMultiDrawArrays = get_proc_address("glMultiDrawArrays\0"): *fp_glMultiDrawArrays;
	glMultiDrawArraysEXT = get_proc_address("glMultiDrawArraysEXT\0"): *fp_glMultiDrawArraysEXT;
	glMultiDrawArraysIndirect = get_proc_address("glMultiDrawArraysIndirect\0"): *fp_glMultiDrawArraysIndirect;
	glMultiDrawArraysIndirectAMD = get_proc_address("glMultiDrawArraysIndirectAMD\0"): *fp_glMultiDrawArraysIndirectAMD;
	glMultiDrawArraysIndirectBindlessCountNV = get_proc_address("glMultiDrawArraysIndirectBindlessCountNV\0"): *fp_glMultiDrawArraysIndirectBindlessCountNV;
	glMultiDrawArraysIndirectBindlessNV = get_proc_address("glMultiDrawArraysIndirectBindlessNV\0"): *fp_glMultiDrawArraysIndirectBindlessNV;
	glMultiDrawArraysIndirectCountARB = get_proc_address("glMultiDrawArraysIndirectCountARB\0"): *fp_glMultiDrawArraysIndirectCountARB;
	glMultiDrawElementArrayAPPLE = get_proc_address("glMultiDrawElementArrayAPPLE\0"): *fp_glMultiDrawElementArrayAPPLE;
	glMultiDrawElements = get_proc_address("glMultiDrawElements\0"): *fp_glMultiDrawElements;
	glMultiDrawElementsBaseVertex = get_proc_address("glMultiDrawElementsBaseVertex\0"): *fp_glMultiDrawElementsBaseVertex;
	glMultiDrawElementsEXT = get_proc_address("glMultiDrawElementsEXT\0"): *fp_glMultiDrawElementsEXT;
	glMultiDrawElementsIndirect = get_proc_address("glMultiDrawElementsIndirect\0"): *fp_glMultiDrawElementsIndirect;
	glMultiDrawElementsIndirectAMD = get_proc_address("glMultiDrawElementsIndirectAMD\0"): *fp_glMultiDrawElementsIndirectAMD;
	glMultiDrawElementsIndirectBindlessCountNV = get_proc_address("glMultiDrawElementsIndirectBindlessCountNV\0"): *fp_glMultiDrawElementsIndirectBindlessCountNV;
	glMultiDrawElementsIndirectBindlessNV = get_proc_address("glMultiDrawElementsIndirectBindlessNV\0"): *fp_glMultiDrawElementsIndirectBindlessNV;
	glMultiDrawElementsIndirectCountARB = get_proc_address("glMultiDrawElementsIndirectCountARB\0"): *fp_glMultiDrawElementsIndirectCountARB;
	glMultiDrawMeshTasksIndirectCountNV = get_proc_address("glMultiDrawMeshTasksIndirectCountNV\0"): *fp_glMultiDrawMeshTasksIndirectCountNV;
	glMultiDrawMeshTasksIndirectNV = get_proc_address("glMultiDrawMeshTasksIndirectNV\0"): *fp_glMultiDrawMeshTasksIndirectNV;
	glMultiDrawRangeElementArrayAPPLE = get_proc_address("glMultiDrawRangeElementArrayAPPLE\0"): *fp_glMultiDrawRangeElementArrayAPPLE;
	glMultiModeDrawArraysIBM = get_proc_address("glMultiModeDrawArraysIBM\0"): *fp_glMultiModeDrawArraysIBM;
	glMultiModeDrawElementsIBM = get_proc_address("glMultiModeDrawElementsIBM\0"): *fp_glMultiModeDrawElementsIBM;
	glMultiTexBufferEXT = get_proc_address("glMultiTexBufferEXT\0"): *fp_glMultiTexBufferEXT;
	glMultiTexCoord1bOES = get_proc_address("glMultiTexCoord1bOES\0"): *fp_glMultiTexCoord1bOES;
	glMultiTexCoord1bvOES = get_proc_address("glMultiTexCoord1bvOES\0"): *fp_glMultiTexCoord1bvOES;
	glMultiTexCoord1dARB = get_proc_address("glMultiTexCoord1dARB\0"): *fp_glMultiTexCoord1dARB;
	glMultiTexCoord1dvARB = get_proc_address("glMultiTexCoord1dvARB\0"): *fp_glMultiTexCoord1dvARB;
	glMultiTexCoord1fARB = get_proc_address("glMultiTexCoord1fARB\0"): *fp_glMultiTexCoord1fARB;
	glMultiTexCoord1fvARB = get_proc_address("glMultiTexCoord1fvARB\0"): *fp_glMultiTexCoord1fvARB;
	glMultiTexCoord1hNV = get_proc_address("glMultiTexCoord1hNV\0"): *fp_glMultiTexCoord1hNV;
	glMultiTexCoord1hvNV = get_proc_address("glMultiTexCoord1hvNV\0"): *fp_glMultiTexCoord1hvNV;
	glMultiTexCoord1iARB = get_proc_address("glMultiTexCoord1iARB\0"): *fp_glMultiTexCoord1iARB;
	glMultiTexCoord1ivARB = get_proc_address("glMultiTexCoord1ivARB\0"): *fp_glMultiTexCoord1ivARB;
	glMultiTexCoord1sARB = get_proc_address("glMultiTexCoord1sARB\0"): *fp_glMultiTexCoord1sARB;
	glMultiTexCoord1svARB = get_proc_address("glMultiTexCoord1svARB\0"): *fp_glMultiTexCoord1svARB;
	glMultiTexCoord1xOES = get_proc_address("glMultiTexCoord1xOES\0"): *fp_glMultiTexCoord1xOES;
	glMultiTexCoord1xvOES = get_proc_address("glMultiTexCoord1xvOES\0"): *fp_glMultiTexCoord1xvOES;
	glMultiTexCoord2bOES = get_proc_address("glMultiTexCoord2bOES\0"): *fp_glMultiTexCoord2bOES;
	glMultiTexCoord2bvOES = get_proc_address("glMultiTexCoord2bvOES\0"): *fp_glMultiTexCoord2bvOES;
	glMultiTexCoord2dARB = get_proc_address("glMultiTexCoord2dARB\0"): *fp_glMultiTexCoord2dARB;
	glMultiTexCoord2dvARB = get_proc_address("glMultiTexCoord2dvARB\0"): *fp_glMultiTexCoord2dvARB;
	glMultiTexCoord2fARB = get_proc_address("glMultiTexCoord2fARB\0"): *fp_glMultiTexCoord2fARB;
	glMultiTexCoord2fvARB = get_proc_address("glMultiTexCoord2fvARB\0"): *fp_glMultiTexCoord2fvARB;
	glMultiTexCoord2hNV = get_proc_address("glMultiTexCoord2hNV\0"): *fp_glMultiTexCoord2hNV;
	glMultiTexCoord2hvNV = get_proc_address("glMultiTexCoord2hvNV\0"): *fp_glMultiTexCoord2hvNV;
	glMultiTexCoord2iARB = get_proc_address("glMultiTexCoord2iARB\0"): *fp_glMultiTexCoord2iARB;
	glMultiTexCoord2ivARB = get_proc_address("glMultiTexCoord2ivARB\0"): *fp_glMultiTexCoord2ivARB;
	glMultiTexCoord2sARB = get_proc_address("glMultiTexCoord2sARB\0"): *fp_glMultiTexCoord2sARB;
	glMultiTexCoord2svARB = get_proc_address("glMultiTexCoord2svARB\0"): *fp_glMultiTexCoord2svARB;
	glMultiTexCoord2xOES = get_proc_address("glMultiTexCoord2xOES\0"): *fp_glMultiTexCoord2xOES;
	glMultiTexCoord2xvOES = get_proc_address("glMultiTexCoord2xvOES\0"): *fp_glMultiTexCoord2xvOES;
	glMultiTexCoord3bOES = get_proc_address("glMultiTexCoord3bOES\0"): *fp_glMultiTexCoord3bOES;
	glMultiTexCoord3bvOES = get_proc_address("glMultiTexCoord3bvOES\0"): *fp_glMultiTexCoord3bvOES;
	glMultiTexCoord3dARB = get_proc_address("glMultiTexCoord3dARB\0"): *fp_glMultiTexCoord3dARB;
	glMultiTexCoord3dvARB = get_proc_address("glMultiTexCoord3dvARB\0"): *fp_glMultiTexCoord3dvARB;
	glMultiTexCoord3fARB = get_proc_address("glMultiTexCoord3fARB\0"): *fp_glMultiTexCoord3fARB;
	glMultiTexCoord3fvARB = get_proc_address("glMultiTexCoord3fvARB\0"): *fp_glMultiTexCoord3fvARB;
	glMultiTexCoord3hNV = get_proc_address("glMultiTexCoord3hNV\0"): *fp_glMultiTexCoord3hNV;
	glMultiTexCoord3hvNV = get_proc_address("glMultiTexCoord3hvNV\0"): *fp_glMultiTexCoord3hvNV;
	glMultiTexCoord3iARB = get_proc_address("glMultiTexCoord3iARB\0"): *fp_glMultiTexCoord3iARB;
	glMultiTexCoord3ivARB = get_proc_address("glMultiTexCoord3ivARB\0"): *fp_glMultiTexCoord3ivARB;
	glMultiTexCoord3sARB = get_proc_address("glMultiTexCoord3sARB\0"): *fp_glMultiTexCoord3sARB;
	glMultiTexCoord3svARB = get_proc_address("glMultiTexCoord3svARB\0"): *fp_glMultiTexCoord3svARB;
	glMultiTexCoord3xOES = get_proc_address("glMultiTexCoord3xOES\0"): *fp_glMultiTexCoord3xOES;
	glMultiTexCoord3xvOES = get_proc_address("glMultiTexCoord3xvOES\0"): *fp_glMultiTexCoord3xvOES;
	glMultiTexCoord4bOES = get_proc_address("glMultiTexCoord4bOES\0"): *fp_glMultiTexCoord4bOES;
	glMultiTexCoord4bvOES = get_proc_address("glMultiTexCoord4bvOES\0"): *fp_glMultiTexCoord4bvOES;
	glMultiTexCoord4dARB = get_proc_address("glMultiTexCoord4dARB\0"): *fp_glMultiTexCoord4dARB;
	glMultiTexCoord4dvARB = get_proc_address("glMultiTexCoord4dvARB\0"): *fp_glMultiTexCoord4dvARB;
	glMultiTexCoord4fARB = get_proc_address("glMultiTexCoord4fARB\0"): *fp_glMultiTexCoord4fARB;
	glMultiTexCoord4fvARB = get_proc_address("glMultiTexCoord4fvARB\0"): *fp_glMultiTexCoord4fvARB;
	glMultiTexCoord4hNV = get_proc_address("glMultiTexCoord4hNV\0"): *fp_glMultiTexCoord4hNV;
	glMultiTexCoord4hvNV = get_proc_address("glMultiTexCoord4hvNV\0"): *fp_glMultiTexCoord4hvNV;
	glMultiTexCoord4iARB = get_proc_address("glMultiTexCoord4iARB\0"): *fp_glMultiTexCoord4iARB;
	glMultiTexCoord4ivARB = get_proc_address("glMultiTexCoord4ivARB\0"): *fp_glMultiTexCoord4ivARB;
	glMultiTexCoord4sARB = get_proc_address("glMultiTexCoord4sARB\0"): *fp_glMultiTexCoord4sARB;
	glMultiTexCoord4svARB = get_proc_address("glMultiTexCoord4svARB\0"): *fp_glMultiTexCoord4svARB;
	glMultiTexCoord4xOES = get_proc_address("glMultiTexCoord4xOES\0"): *fp_glMultiTexCoord4xOES;
	glMultiTexCoord4xvOES = get_proc_address("glMultiTexCoord4xvOES\0"): *fp_glMultiTexCoord4xvOES;
	glMultiTexCoordPointerEXT = get_proc_address("glMultiTexCoordPointerEXT\0"): *fp_glMultiTexCoordPointerEXT;
	glMultiTexEnvfEXT = get_proc_address("glMultiTexEnvfEXT\0"): *fp_glMultiTexEnvfEXT;
	glMultiTexEnvfvEXT = get_proc_address("glMultiTexEnvfvEXT\0"): *fp_glMultiTexEnvfvEXT;
	glMultiTexEnviEXT = get_proc_address("glMultiTexEnviEXT\0"): *fp_glMultiTexEnviEXT;
	glMultiTexEnvivEXT = get_proc_address("glMultiTexEnvivEXT\0"): *fp_glMultiTexEnvivEXT;
	glMultiTexGendEXT = get_proc_address("glMultiTexGendEXT\0"): *fp_glMultiTexGendEXT;
	glMultiTexGendvEXT = get_proc_address("glMultiTexGendvEXT\0"): *fp_glMultiTexGendvEXT;
	glMultiTexGenfEXT = get_proc_address("glMultiTexGenfEXT\0"): *fp_glMultiTexGenfEXT;
	glMultiTexGenfvEXT = get_proc_address("glMultiTexGenfvEXT\0"): *fp_glMultiTexGenfvEXT;
	glMultiTexGeniEXT = get_proc_address("glMultiTexGeniEXT\0"): *fp_glMultiTexGeniEXT;
	glMultiTexGenivEXT = get_proc_address("glMultiTexGenivEXT\0"): *fp_glMultiTexGenivEXT;
	glMultiTexImage1DEXT = get_proc_address("glMultiTexImage1DEXT\0"): *fp_glMultiTexImage1DEXT;
	glMultiTexImage2DEXT = get_proc_address("glMultiTexImage2DEXT\0"): *fp_glMultiTexImage2DEXT;
	glMultiTexImage3DEXT = get_proc_address("glMultiTexImage3DEXT\0"): *fp_glMultiTexImage3DEXT;
	glMultiTexParameterIivEXT = get_proc_address("glMultiTexParameterIivEXT\0"): *fp_glMultiTexParameterIivEXT;
	glMultiTexParameterIuivEXT = get_proc_address("glMultiTexParameterIuivEXT\0"): *fp_glMultiTexParameterIuivEXT;
	glMultiTexParameterfEXT = get_proc_address("glMultiTexParameterfEXT\0"): *fp_glMultiTexParameterfEXT;
	glMultiTexParameterfvEXT = get_proc_address("glMultiTexParameterfvEXT\0"): *fp_glMultiTexParameterfvEXT;
	glMultiTexParameteriEXT = get_proc_address("glMultiTexParameteriEXT\0"): *fp_glMultiTexParameteriEXT;
	glMultiTexParameterivEXT = get_proc_address("glMultiTexParameterivEXT\0"): *fp_glMultiTexParameterivEXT;
	glMultiTexRenderbufferEXT = get_proc_address("glMultiTexRenderbufferEXT\0"): *fp_glMultiTexRenderbufferEXT;
	glMultiTexSubImage1DEXT = get_proc_address("glMultiTexSubImage1DEXT\0"): *fp_glMultiTexSubImage1DEXT;
	glMultiTexSubImage2DEXT = get_proc_address("glMultiTexSubImage2DEXT\0"): *fp_glMultiTexSubImage2DEXT;
	glMultiTexSubImage3DEXT = get_proc_address("glMultiTexSubImage3DEXT\0"): *fp_glMultiTexSubImage3DEXT;
	glMulticastBarrierNV = get_proc_address("glMulticastBarrierNV\0"): *fp_glMulticastBarrierNV;
	glMulticastBlitFramebufferNV = get_proc_address("glMulticastBlitFramebufferNV\0"): *fp_glMulticastBlitFramebufferNV;
	glMulticastBufferSubDataNV = get_proc_address("glMulticastBufferSubDataNV\0"): *fp_glMulticastBufferSubDataNV;
	glMulticastCopyBufferSubDataNV = get_proc_address("glMulticastCopyBufferSubDataNV\0"): *fp_glMulticastCopyBufferSubDataNV;
	glMulticastCopyImageSubDataNV = get_proc_address("glMulticastCopyImageSubDataNV\0"): *fp_glMulticastCopyImageSubDataNV;
	glMulticastFramebufferSampleLocationsfvNV = get_proc_address("glMulticastFramebufferSampleLocationsfvNV\0"): *fp_glMulticastFramebufferSampleLocationsfvNV;
	glMulticastGetQueryObjecti64vNV = get_proc_address("glMulticastGetQueryObjecti64vNV\0"): *fp_glMulticastGetQueryObjecti64vNV;
	glMulticastGetQueryObjectivNV = get_proc_address("glMulticastGetQueryObjectivNV\0"): *fp_glMulticastGetQueryObjectivNV;
	glMulticastGetQueryObjectui64vNV = get_proc_address("glMulticastGetQueryObjectui64vNV\0"): *fp_glMulticastGetQueryObjectui64vNV;
	glMulticastGetQueryObjectuivNV = get_proc_address("glMulticastGetQueryObjectuivNV\0"): *fp_glMulticastGetQueryObjectuivNV;
	glMulticastScissorArrayvNVX = get_proc_address("glMulticastScissorArrayvNVX\0"): *fp_glMulticastScissorArrayvNVX;
	glMulticastViewportArrayvNVX = get_proc_address("glMulticastViewportArrayvNVX\0"): *fp_glMulticastViewportArrayvNVX;
	glMulticastViewportPositionWScaleNVX = get_proc_address("glMulticastViewportPositionWScaleNVX\0"): *fp_glMulticastViewportPositionWScaleNVX;
	glMulticastWaitSyncNV = get_proc_address("glMulticastWaitSyncNV\0"): *fp_glMulticastWaitSyncNV;
	glNamedBufferAttachMemoryNV = get_proc_address("glNamedBufferAttachMemoryNV\0"): *fp_glNamedBufferAttachMemoryNV;
	glNamedBufferData = get_proc_address("glNamedBufferData\0"): *fp_glNamedBufferData;
	glNamedBufferDataEXT = get_proc_address("glNamedBufferDataEXT\0"): *fp_glNamedBufferDataEXT;
	glNamedBufferPageCommitmentARB = get_proc_address("glNamedBufferPageCommitmentARB\0"): *fp_glNamedBufferPageCommitmentARB;
	glNamedBufferPageCommitmentEXT = get_proc_address("glNamedBufferPageCommitmentEXT\0"): *fp_glNamedBufferPageCommitmentEXT;
	glNamedBufferPageCommitmentMemNV = get_proc_address("glNamedBufferPageCommitmentMemNV\0"): *fp_glNamedBufferPageCommitmentMemNV;
	glNamedBufferStorage = get_proc_address("glNamedBufferStorage\0"): *fp_glNamedBufferStorage;
	glNamedBufferStorageEXT = get_proc_address("glNamedBufferStorageEXT\0"): *fp_glNamedBufferStorageEXT;
	glNamedBufferStorageExternalEXT = get_proc_address("glNamedBufferStorageExternalEXT\0"): *fp_glNamedBufferStorageExternalEXT;
	glNamedBufferStorageMemEXT = get_proc_address("glNamedBufferStorageMemEXT\0"): *fp_glNamedBufferStorageMemEXT;
	glNamedBufferSubData = get_proc_address("glNamedBufferSubData\0"): *fp_glNamedBufferSubData;
	glNamedBufferSubDataEXT = get_proc_address("glNamedBufferSubDataEXT\0"): *fp_glNamedBufferSubDataEXT;
	glNamedCopyBufferSubDataEXT = get_proc_address("glNamedCopyBufferSubDataEXT\0"): *fp_glNamedCopyBufferSubDataEXT;
	glNamedFramebufferDrawBuffer = get_proc_address("glNamedFramebufferDrawBuffer\0"): *fp_glNamedFramebufferDrawBuffer;
	glNamedFramebufferDrawBuffers = get_proc_address("glNamedFramebufferDrawBuffers\0"): *fp_glNamedFramebufferDrawBuffers;
	glNamedFramebufferParameteri = get_proc_address("glNamedFramebufferParameteri\0"): *fp_glNamedFramebufferParameteri;
	glNamedFramebufferParameteriEXT = get_proc_address("glNamedFramebufferParameteriEXT\0"): *fp_glNamedFramebufferParameteriEXT;
	glNamedFramebufferReadBuffer = get_proc_address("glNamedFramebufferReadBuffer\0"): *fp_glNamedFramebufferReadBuffer;
	glNamedFramebufferRenderbuffer = get_proc_address("glNamedFramebufferRenderbuffer\0"): *fp_glNamedFramebufferRenderbuffer;
	glNamedFramebufferRenderbufferEXT = get_proc_address("glNamedFramebufferRenderbufferEXT\0"): *fp_glNamedFramebufferRenderbufferEXT;
	glNamedFramebufferSampleLocationsfvARB = get_proc_address("glNamedFramebufferSampleLocationsfvARB\0"): *fp_glNamedFramebufferSampleLocationsfvARB;
	glNamedFramebufferSampleLocationsfvNV = get_proc_address("glNamedFramebufferSampleLocationsfvNV\0"): *fp_glNamedFramebufferSampleLocationsfvNV;
	glNamedFramebufferSamplePositionsfvAMD = get_proc_address("glNamedFramebufferSamplePositionsfvAMD\0"): *fp_glNamedFramebufferSamplePositionsfvAMD;
	glNamedFramebufferTexture = get_proc_address("glNamedFramebufferTexture\0"): *fp_glNamedFramebufferTexture;
	glNamedFramebufferTexture1DEXT = get_proc_address("glNamedFramebufferTexture1DEXT\0"): *fp_glNamedFramebufferTexture1DEXT;
	glNamedFramebufferTexture2DEXT = get_proc_address("glNamedFramebufferTexture2DEXT\0"): *fp_glNamedFramebufferTexture2DEXT;
	glNamedFramebufferTexture3DEXT = get_proc_address("glNamedFramebufferTexture3DEXT\0"): *fp_glNamedFramebufferTexture3DEXT;
	glNamedFramebufferTextureEXT = get_proc_address("glNamedFramebufferTextureEXT\0"): *fp_glNamedFramebufferTextureEXT;
	glNamedFramebufferTextureFaceEXT = get_proc_address("glNamedFramebufferTextureFaceEXT\0"): *fp_glNamedFramebufferTextureFaceEXT;
	glNamedFramebufferTextureLayer = get_proc_address("glNamedFramebufferTextureLayer\0"): *fp_glNamedFramebufferTextureLayer;
	glNamedFramebufferTextureLayerEXT = get_proc_address("glNamedFramebufferTextureLayerEXT\0"): *fp_glNamedFramebufferTextureLayerEXT;
	glNamedProgramLocalParameter4dEXT = get_proc_address("glNamedProgramLocalParameter4dEXT\0"): *fp_glNamedProgramLocalParameter4dEXT;
	glNamedProgramLocalParameter4dvEXT = get_proc_address("glNamedProgramLocalParameter4dvEXT\0"): *fp_glNamedProgramLocalParameter4dvEXT;
	glNamedProgramLocalParameter4fEXT = get_proc_address("glNamedProgramLocalParameter4fEXT\0"): *fp_glNamedProgramLocalParameter4fEXT;
	glNamedProgramLocalParameter4fvEXT = get_proc_address("glNamedProgramLocalParameter4fvEXT\0"): *fp_glNamedProgramLocalParameter4fvEXT;
	glNamedProgramLocalParameterI4iEXT = get_proc_address("glNamedProgramLocalParameterI4iEXT\0"): *fp_glNamedProgramLocalParameterI4iEXT;
	glNamedProgramLocalParameterI4ivEXT = get_proc_address("glNamedProgramLocalParameterI4ivEXT\0"): *fp_glNamedProgramLocalParameterI4ivEXT;
	glNamedProgramLocalParameterI4uiEXT = get_proc_address("glNamedProgramLocalParameterI4uiEXT\0"): *fp_glNamedProgramLocalParameterI4uiEXT;
	glNamedProgramLocalParameterI4uivEXT = get_proc_address("glNamedProgramLocalParameterI4uivEXT\0"): *fp_glNamedProgramLocalParameterI4uivEXT;
	glNamedProgramLocalParameters4fvEXT = get_proc_address("glNamedProgramLocalParameters4fvEXT\0"): *fp_glNamedProgramLocalParameters4fvEXT;
	glNamedProgramLocalParametersI4ivEXT = get_proc_address("glNamedProgramLocalParametersI4ivEXT\0"): *fp_glNamedProgramLocalParametersI4ivEXT;
	glNamedProgramLocalParametersI4uivEXT = get_proc_address("glNamedProgramLocalParametersI4uivEXT\0"): *fp_glNamedProgramLocalParametersI4uivEXT;
	glNamedProgramStringEXT = get_proc_address("glNamedProgramStringEXT\0"): *fp_glNamedProgramStringEXT;
	glNamedRenderbufferStorage = get_proc_address("glNamedRenderbufferStorage\0"): *fp_glNamedRenderbufferStorage;
	glNamedRenderbufferStorageEXT = get_proc_address("glNamedRenderbufferStorageEXT\0"): *fp_glNamedRenderbufferStorageEXT;
	glNamedRenderbufferStorageMultisample = get_proc_address("glNamedRenderbufferStorageMultisample\0"): *fp_glNamedRenderbufferStorageMultisample;
	glNamedRenderbufferStorageMultisampleAdvancedAMD = get_proc_address("glNamedRenderbufferStorageMultisampleAdvancedAMD\0"): *fp_glNamedRenderbufferStorageMultisampleAdvancedAMD;
	glNamedRenderbufferStorageMultisampleCoverageEXT = get_proc_address("glNamedRenderbufferStorageMultisampleCoverageEXT\0"): *fp_glNamedRenderbufferStorageMultisampleCoverageEXT;
	glNamedRenderbufferStorageMultisampleEXT = get_proc_address("glNamedRenderbufferStorageMultisampleEXT\0"): *fp_glNamedRenderbufferStorageMultisampleEXT;
	glNamedStringARB = get_proc_address("glNamedStringARB\0"): *fp_glNamedStringARB;
	glNewObjectBufferATI = get_proc_address("glNewObjectBufferATI\0"): *fp_glNewObjectBufferATI;
	glNormal3fVertex3fSUN = get_proc_address("glNormal3fVertex3fSUN\0"): *fp_glNormal3fVertex3fSUN;
	glNormal3fVertex3fvSUN = get_proc_address("glNormal3fVertex3fvSUN\0"): *fp_glNormal3fVertex3fvSUN;
	glNormal3hNV = get_proc_address("glNormal3hNV\0"): *fp_glNormal3hNV;
	glNormal3hvNV = get_proc_address("glNormal3hvNV\0"): *fp_glNormal3hvNV;
	glNormal3xOES = get_proc_address("glNormal3xOES\0"): *fp_glNormal3xOES;
	glNormal3xvOES = get_proc_address("glNormal3xvOES\0"): *fp_glNormal3xvOES;
	glNormalFormatNV = get_proc_address("glNormalFormatNV\0"): *fp_glNormalFormatNV;
	glNormalPointerEXT = get_proc_address("glNormalPointerEXT\0"): *fp_glNormalPointerEXT;
	glNormalPointerListIBM = get_proc_address("glNormalPointerListIBM\0"): *fp_glNormalPointerListIBM;
	glNormalPointervINTEL = get_proc_address("glNormalPointervINTEL\0"): *fp_glNormalPointervINTEL;
	glNormalStream3bATI = get_proc_address("glNormalStream3bATI\0"): *fp_glNormalStream3bATI;
	glNormalStream3bvATI = get_proc_address("glNormalStream3bvATI\0"): *fp_glNormalStream3bvATI;
	glNormalStream3dATI = get_proc_address("glNormalStream3dATI\0"): *fp_glNormalStream3dATI;
	glNormalStream3dvATI = get_proc_address("glNormalStream3dvATI\0"): *fp_glNormalStream3dvATI;
	glNormalStream3fATI = get_proc_address("glNormalStream3fATI\0"): *fp_glNormalStream3fATI;
	glNormalStream3fvATI = get_proc_address("glNormalStream3fvATI\0"): *fp_glNormalStream3fvATI;
	glNormalStream3iATI = get_proc_address("glNormalStream3iATI\0"): *fp_glNormalStream3iATI;
	glNormalStream3ivATI = get_proc_address("glNormalStream3ivATI\0"): *fp_glNormalStream3ivATI;
	glNormalStream3sATI = get_proc_address("glNormalStream3sATI\0"): *fp_glNormalStream3sATI;
	glNormalStream3svATI = get_proc_address("glNormalStream3svATI\0"): *fp_glNormalStream3svATI;
	glObjectLabel = get_proc_address("glObjectLabel\0"): *fp_glObjectLabel;
	glObjectPtrLabel = get_proc_address("glObjectPtrLabel\0"): *fp_glObjectPtrLabel;
	glObjectPurgeableAPPLE = get_proc_address("glObjectPurgeableAPPLE\0"): *fp_glObjectPurgeableAPPLE;
	glObjectUnpurgeableAPPLE = get_proc_address("glObjectUnpurgeableAPPLE\0"): *fp_glObjectUnpurgeableAPPLE;
	glOrthofOES = get_proc_address("glOrthofOES\0"): *fp_glOrthofOES;
	glOrthoxOES = get_proc_address("glOrthoxOES\0"): *fp_glOrthoxOES;
	glPNTrianglesfATI = get_proc_address("glPNTrianglesfATI\0"): *fp_glPNTrianglesfATI;
	glPNTrianglesiATI = get_proc_address("glPNTrianglesiATI\0"): *fp_glPNTrianglesiATI;
	glPassTexCoordATI = get_proc_address("glPassTexCoordATI\0"): *fp_glPassTexCoordATI;
	glPassThroughxOES = get_proc_address("glPassThroughxOES\0"): *fp_glPassThroughxOES;
	glPatchParameterfv = get_proc_address("glPatchParameterfv\0"): *fp_glPatchParameterfv;
	glPatchParameteri = get_proc_address("glPatchParameteri\0"): *fp_glPatchParameteri;
	glPathCommandsNV = get_proc_address("glPathCommandsNV\0"): *fp_glPathCommandsNV;
	glPathCoordsNV = get_proc_address("glPathCoordsNV\0"): *fp_glPathCoordsNV;
	glPathCoverDepthFuncNV = get_proc_address("glPathCoverDepthFuncNV\0"): *fp_glPathCoverDepthFuncNV;
	glPathDashArrayNV = get_proc_address("glPathDashArrayNV\0"): *fp_glPathDashArrayNV;
	glPathGlyphIndexArrayNV = get_proc_address("glPathGlyphIndexArrayNV\0"): *fp_glPathGlyphIndexArrayNV;
	glPathGlyphIndexRangeNV = get_proc_address("glPathGlyphIndexRangeNV\0"): *fp_glPathGlyphIndexRangeNV;
	glPathGlyphRangeNV = get_proc_address("glPathGlyphRangeNV\0"): *fp_glPathGlyphRangeNV;
	glPathGlyphsNV = get_proc_address("glPathGlyphsNV\0"): *fp_glPathGlyphsNV;
	glPathMemoryGlyphIndexArrayNV = get_proc_address("glPathMemoryGlyphIndexArrayNV\0"): *fp_glPathMemoryGlyphIndexArrayNV;
	glPathParameterfNV = get_proc_address("glPathParameterfNV\0"): *fp_glPathParameterfNV;
	glPathParameterfvNV = get_proc_address("glPathParameterfvNV\0"): *fp_glPathParameterfvNV;
	glPathParameteriNV = get_proc_address("glPathParameteriNV\0"): *fp_glPathParameteriNV;
	glPathParameterivNV = get_proc_address("glPathParameterivNV\0"): *fp_glPathParameterivNV;
	glPathStencilDepthOffsetNV = get_proc_address("glPathStencilDepthOffsetNV\0"): *fp_glPathStencilDepthOffsetNV;
	glPathStencilFuncNV = get_proc_address("glPathStencilFuncNV\0"): *fp_glPathStencilFuncNV;
	glPathStringNV = get_proc_address("glPathStringNV\0"): *fp_glPathStringNV;
	glPathSubCommandsNV = get_proc_address("glPathSubCommandsNV\0"): *fp_glPathSubCommandsNV;
	glPathSubCoordsNV = get_proc_address("glPathSubCoordsNV\0"): *fp_glPathSubCoordsNV;
	glPauseTransformFeedback = get_proc_address("glPauseTransformFeedback\0"): *fp_glPauseTransformFeedback;
	glPauseTransformFeedbackNV = get_proc_address("glPauseTransformFeedbackNV\0"): *fp_glPauseTransformFeedbackNV;
	glPixelDataRangeNV = get_proc_address("glPixelDataRangeNV\0"): *fp_glPixelDataRangeNV;
	glPixelMapx = get_proc_address("glPixelMapx\0"): *fp_glPixelMapx;
	glPixelStoref = get_proc_address("glPixelStoref\0"): *fp_glPixelStoref;
	glPixelStorei = get_proc_address("glPixelStorei\0"): *fp_glPixelStorei;
	glPixelStorex = get_proc_address("glPixelStorex\0"): *fp_glPixelStorex;
	glPixelTexGenParameterfSGIS = get_proc_address("glPixelTexGenParameterfSGIS\0"): *fp_glPixelTexGenParameterfSGIS;
	glPixelTexGenParameterfvSGIS = get_proc_address("glPixelTexGenParameterfvSGIS\0"): *fp_glPixelTexGenParameterfvSGIS;
	glPixelTexGenParameteriSGIS = get_proc_address("glPixelTexGenParameteriSGIS\0"): *fp_glPixelTexGenParameteriSGIS;
	glPixelTexGenParameterivSGIS = get_proc_address("glPixelTexGenParameterivSGIS\0"): *fp_glPixelTexGenParameterivSGIS;
	glPixelTexGenSGIX = get_proc_address("glPixelTexGenSGIX\0"): *fp_glPixelTexGenSGIX;
	glPixelTransferxOES = get_proc_address("glPixelTransferxOES\0"): *fp_glPixelTransferxOES;
	glPixelTransformParameterfEXT = get_proc_address("glPixelTransformParameterfEXT\0"): *fp_glPixelTransformParameterfEXT;
	glPixelTransformParameterfvEXT = get_proc_address("glPixelTransformParameterfvEXT\0"): *fp_glPixelTransformParameterfvEXT;
	glPixelTransformParameteriEXT = get_proc_address("glPixelTransformParameteriEXT\0"): *fp_glPixelTransformParameteriEXT;
	glPixelTransformParameterivEXT = get_proc_address("glPixelTransformParameterivEXT\0"): *fp_glPixelTransformParameterivEXT;
	glPixelZoomxOES = get_proc_address("glPixelZoomxOES\0"): *fp_glPixelZoomxOES;
	glPointAlongPathNV = get_proc_address("glPointAlongPathNV\0"): *fp_glPointAlongPathNV;
	glPointParameterf = get_proc_address("glPointParameterf\0"): *fp_glPointParameterf;
	glPointParameterfARB = get_proc_address("glPointParameterfARB\0"): *fp_glPointParameterfARB;
	glPointParameterfEXT = get_proc_address("glPointParameterfEXT\0"): *fp_glPointParameterfEXT;
	glPointParameterfSGIS = get_proc_address("glPointParameterfSGIS\0"): *fp_glPointParameterfSGIS;
	glPointParameterfv = get_proc_address("glPointParameterfv\0"): *fp_glPointParameterfv;
	glPointParameterfvARB = get_proc_address("glPointParameterfvARB\0"): *fp_glPointParameterfvARB;
	glPointParameterfvEXT = get_proc_address("glPointParameterfvEXT\0"): *fp_glPointParameterfvEXT;
	glPointParameterfvSGIS = get_proc_address("glPointParameterfvSGIS\0"): *fp_glPointParameterfvSGIS;
	glPointParameteri = get_proc_address("glPointParameteri\0"): *fp_glPointParameteri;
	glPointParameteriNV = get_proc_address("glPointParameteriNV\0"): *fp_glPointParameteriNV;
	glPointParameteriv = get_proc_address("glPointParameteriv\0"): *fp_glPointParameteriv;
	glPointParameterivNV = get_proc_address("glPointParameterivNV\0"): *fp_glPointParameterivNV;
	glPointParameterxvOES = get_proc_address("glPointParameterxvOES\0"): *fp_glPointParameterxvOES;
	glPointSize = get_proc_address("glPointSize\0"): *fp_glPointSize;
	glPointSizexOES = get_proc_address("glPointSizexOES\0"): *fp_glPointSizexOES;
	glPollAsyncSGIX = get_proc_address("glPollAsyncSGIX\0"): *fp_glPollAsyncSGIX;
	glPollInstrumentsSGIX = get_proc_address("glPollInstrumentsSGIX\0"): *fp_glPollInstrumentsSGIX;
	glPolygonMode = get_proc_address("glPolygonMode\0"): *fp_glPolygonMode;
	glPolygonOffset = get_proc_address("glPolygonOffset\0"): *fp_glPolygonOffset;
	glPolygonOffsetClamp = get_proc_address("glPolygonOffsetClamp\0"): *fp_glPolygonOffsetClamp;
	glPolygonOffsetClampEXT = get_proc_address("glPolygonOffsetClampEXT\0"): *fp_glPolygonOffsetClampEXT;
	glPolygonOffsetEXT = get_proc_address("glPolygonOffsetEXT\0"): *fp_glPolygonOffsetEXT;
	glPolygonOffsetxOES = get_proc_address("glPolygonOffsetxOES\0"): *fp_glPolygonOffsetxOES;
	glPopDebugGroup = get_proc_address("glPopDebugGroup\0"): *fp_glPopDebugGroup;
	glPopGroupMarkerEXT = get_proc_address("glPopGroupMarkerEXT\0"): *fp_glPopGroupMarkerEXT;
	glPresentFrameDualFillNV = get_proc_address("glPresentFrameDualFillNV\0"): *fp_glPresentFrameDualFillNV;
	glPresentFrameKeyedNV = get_proc_address("glPresentFrameKeyedNV\0"): *fp_glPresentFrameKeyedNV;
	glPrimitiveBoundingBoxARB = get_proc_address("glPrimitiveBoundingBoxARB\0"): *fp_glPrimitiveBoundingBoxARB;
	glPrimitiveRestartIndex = get_proc_address("glPrimitiveRestartIndex\0"): *fp_glPrimitiveRestartIndex;
	glPrimitiveRestartIndexNV = get_proc_address("glPrimitiveRestartIndexNV\0"): *fp_glPrimitiveRestartIndexNV;
	glPrimitiveRestartNV = get_proc_address("glPrimitiveRestartNV\0"): *fp_glPrimitiveRestartNV;
	glPrioritizeTexturesEXT = get_proc_address("glPrioritizeTexturesEXT\0"): *fp_glPrioritizeTexturesEXT;
	glPrioritizeTexturesxOES = get_proc_address("glPrioritizeTexturesxOES\0"): *fp_glPrioritizeTexturesxOES;
	glProgramBinary = get_proc_address("glProgramBinary\0"): *fp_glProgramBinary;
	glProgramBufferParametersIivNV = get_proc_address("glProgramBufferParametersIivNV\0"): *fp_glProgramBufferParametersIivNV;
	glProgramBufferParametersIuivNV = get_proc_address("glProgramBufferParametersIuivNV\0"): *fp_glProgramBufferParametersIuivNV;
	glProgramBufferParametersfvNV = get_proc_address("glProgramBufferParametersfvNV\0"): *fp_glProgramBufferParametersfvNV;
	glProgramEnvParameter4dARB = get_proc_address("glProgramEnvParameter4dARB\0"): *fp_glProgramEnvParameter4dARB;
	glProgramEnvParameter4dvARB = get_proc_address("glProgramEnvParameter4dvARB\0"): *fp_glProgramEnvParameter4dvARB;
	glProgramEnvParameter4fARB = get_proc_address("glProgramEnvParameter4fARB\0"): *fp_glProgramEnvParameter4fARB;
	glProgramEnvParameter4fvARB = get_proc_address("glProgramEnvParameter4fvARB\0"): *fp_glProgramEnvParameter4fvARB;
	glProgramEnvParameterI4iNV = get_proc_address("glProgramEnvParameterI4iNV\0"): *fp_glProgramEnvParameterI4iNV;
	glProgramEnvParameterI4ivNV = get_proc_address("glProgramEnvParameterI4ivNV\0"): *fp_glProgramEnvParameterI4ivNV;
	glProgramEnvParameterI4uiNV = get_proc_address("glProgramEnvParameterI4uiNV\0"): *fp_glProgramEnvParameterI4uiNV;
	glProgramEnvParameterI4uivNV = get_proc_address("glProgramEnvParameterI4uivNV\0"): *fp_glProgramEnvParameterI4uivNV;
	glProgramEnvParameters4fvEXT = get_proc_address("glProgramEnvParameters4fvEXT\0"): *fp_glProgramEnvParameters4fvEXT;
	glProgramEnvParametersI4ivNV = get_proc_address("glProgramEnvParametersI4ivNV\0"): *fp_glProgramEnvParametersI4ivNV;
	glProgramEnvParametersI4uivNV = get_proc_address("glProgramEnvParametersI4uivNV\0"): *fp_glProgramEnvParametersI4uivNV;
	glProgramLocalParameter4dARB = get_proc_address("glProgramLocalParameter4dARB\0"): *fp_glProgramLocalParameter4dARB;
	glProgramLocalParameter4dvARB = get_proc_address("glProgramLocalParameter4dvARB\0"): *fp_glProgramLocalParameter4dvARB;
	glProgramLocalParameter4fARB = get_proc_address("glProgramLocalParameter4fARB\0"): *fp_glProgramLocalParameter4fARB;
	glProgramLocalParameter4fvARB = get_proc_address("glProgramLocalParameter4fvARB\0"): *fp_glProgramLocalParameter4fvARB;
	glProgramLocalParameterI4iNV = get_proc_address("glProgramLocalParameterI4iNV\0"): *fp_glProgramLocalParameterI4iNV;
	glProgramLocalParameterI4ivNV = get_proc_address("glProgramLocalParameterI4ivNV\0"): *fp_glProgramLocalParameterI4ivNV;
	glProgramLocalParameterI4uiNV = get_proc_address("glProgramLocalParameterI4uiNV\0"): *fp_glProgramLocalParameterI4uiNV;
	glProgramLocalParameterI4uivNV = get_proc_address("glProgramLocalParameterI4uivNV\0"): *fp_glProgramLocalParameterI4uivNV;
	glProgramLocalParameters4fvEXT = get_proc_address("glProgramLocalParameters4fvEXT\0"): *fp_glProgramLocalParameters4fvEXT;
	glProgramLocalParametersI4ivNV = get_proc_address("glProgramLocalParametersI4ivNV\0"): *fp_glProgramLocalParametersI4ivNV;
	glProgramLocalParametersI4uivNV = get_proc_address("glProgramLocalParametersI4uivNV\0"): *fp_glProgramLocalParametersI4uivNV;
	glProgramNamedParameter4dNV = get_proc_address("glProgramNamedParameter4dNV\0"): *fp_glProgramNamedParameter4dNV;
	glProgramNamedParameter4dvNV = get_proc_address("glProgramNamedParameter4dvNV\0"): *fp_glProgramNamedParameter4dvNV;
	glProgramNamedParameter4fNV = get_proc_address("glProgramNamedParameter4fNV\0"): *fp_glProgramNamedParameter4fNV;
	glProgramNamedParameter4fvNV = get_proc_address("glProgramNamedParameter4fvNV\0"): *fp_glProgramNamedParameter4fvNV;
	glProgramParameter4dNV = get_proc_address("glProgramParameter4dNV\0"): *fp_glProgramParameter4dNV;
	glProgramParameter4dvNV = get_proc_address("glProgramParameter4dvNV\0"): *fp_glProgramParameter4dvNV;
	glProgramParameter4fNV = get_proc_address("glProgramParameter4fNV\0"): *fp_glProgramParameter4fNV;
	glProgramParameter4fvNV = get_proc_address("glProgramParameter4fvNV\0"): *fp_glProgramParameter4fvNV;
	glProgramParameteri = get_proc_address("glProgramParameteri\0"): *fp_glProgramParameteri;
	glProgramParameteriARB = get_proc_address("glProgramParameteriARB\0"): *fp_glProgramParameteriARB;
	glProgramParameteriEXT = get_proc_address("glProgramParameteriEXT\0"): *fp_glProgramParameteriEXT;
	glProgramParameters4dvNV = get_proc_address("glProgramParameters4dvNV\0"): *fp_glProgramParameters4dvNV;
	glProgramParameters4fvNV = get_proc_address("glProgramParameters4fvNV\0"): *fp_glProgramParameters4fvNV;
	glProgramPathFragmentInputGenNV = get_proc_address("glProgramPathFragmentInputGenNV\0"): *fp_glProgramPathFragmentInputGenNV;
	glProgramStringARB = get_proc_address("glProgramStringARB\0"): *fp_glProgramStringARB;
	glProgramSubroutineParametersuivNV = get_proc_address("glProgramSubroutineParametersuivNV\0"): *fp_glProgramSubroutineParametersuivNV;
	glProgramUniform1d = get_proc_address("glProgramUniform1d\0"): *fp_glProgramUniform1d;
	glProgramUniform1dEXT = get_proc_address("glProgramUniform1dEXT\0"): *fp_glProgramUniform1dEXT;
	glProgramUniform1dv = get_proc_address("glProgramUniform1dv\0"): *fp_glProgramUniform1dv;
	glProgramUniform1dvEXT = get_proc_address("glProgramUniform1dvEXT\0"): *fp_glProgramUniform1dvEXT;
	glProgramUniform1f = get_proc_address("glProgramUniform1f\0"): *fp_glProgramUniform1f;
	glProgramUniform1fEXT = get_proc_address("glProgramUniform1fEXT\0"): *fp_glProgramUniform1fEXT;
	glProgramUniform1fv = get_proc_address("glProgramUniform1fv\0"): *fp_glProgramUniform1fv;
	glProgramUniform1fvEXT = get_proc_address("glProgramUniform1fvEXT\0"): *fp_glProgramUniform1fvEXT;
	glProgramUniform1i = get_proc_address("glProgramUniform1i\0"): *fp_glProgramUniform1i;
	glProgramUniform1i64ARB = get_proc_address("glProgramUniform1i64ARB\0"): *fp_glProgramUniform1i64ARB;
	glProgramUniform1i64NV = get_proc_address("glProgramUniform1i64NV\0"): *fp_glProgramUniform1i64NV;
	glProgramUniform1i64vARB = get_proc_address("glProgramUniform1i64vARB\0"): *fp_glProgramUniform1i64vARB;
	glProgramUniform1i64vNV = get_proc_address("glProgramUniform1i64vNV\0"): *fp_glProgramUniform1i64vNV;
	glProgramUniform1iEXT = get_proc_address("glProgramUniform1iEXT\0"): *fp_glProgramUniform1iEXT;
	glProgramUniform1iv = get_proc_address("glProgramUniform1iv\0"): *fp_glProgramUniform1iv;
	glProgramUniform1ivEXT = get_proc_address("glProgramUniform1ivEXT\0"): *fp_glProgramUniform1ivEXT;
	glProgramUniform1ui = get_proc_address("glProgramUniform1ui\0"): *fp_glProgramUniform1ui;
	glProgramUniform1ui64ARB = get_proc_address("glProgramUniform1ui64ARB\0"): *fp_glProgramUniform1ui64ARB;
	glProgramUniform1ui64NV = get_proc_address("glProgramUniform1ui64NV\0"): *fp_glProgramUniform1ui64NV;
	glProgramUniform1ui64vARB = get_proc_address("glProgramUniform1ui64vARB\0"): *fp_glProgramUniform1ui64vARB;
	glProgramUniform1ui64vNV = get_proc_address("glProgramUniform1ui64vNV\0"): *fp_glProgramUniform1ui64vNV;
	glProgramUniform1uiEXT = get_proc_address("glProgramUniform1uiEXT\0"): *fp_glProgramUniform1uiEXT;
	glProgramUniform1uiv = get_proc_address("glProgramUniform1uiv\0"): *fp_glProgramUniform1uiv;
	glProgramUniform1uivEXT = get_proc_address("glProgramUniform1uivEXT\0"): *fp_glProgramUniform1uivEXT;
	glProgramUniform2d = get_proc_address("glProgramUniform2d\0"): *fp_glProgramUniform2d;
	glProgramUniform2dEXT = get_proc_address("glProgramUniform2dEXT\0"): *fp_glProgramUniform2dEXT;
	glProgramUniform2dv = get_proc_address("glProgramUniform2dv\0"): *fp_glProgramUniform2dv;
	glProgramUniform2dvEXT = get_proc_address("glProgramUniform2dvEXT\0"): *fp_glProgramUniform2dvEXT;
	glProgramUniform2f = get_proc_address("glProgramUniform2f\0"): *fp_glProgramUniform2f;
	glProgramUniform2fEXT = get_proc_address("glProgramUniform2fEXT\0"): *fp_glProgramUniform2fEXT;
	glProgramUniform2fv = get_proc_address("glProgramUniform2fv\0"): *fp_glProgramUniform2fv;
	glProgramUniform2fvEXT = get_proc_address("glProgramUniform2fvEXT\0"): *fp_glProgramUniform2fvEXT;
	glProgramUniform2i = get_proc_address("glProgramUniform2i\0"): *fp_glProgramUniform2i;
	glProgramUniform2i64ARB = get_proc_address("glProgramUniform2i64ARB\0"): *fp_glProgramUniform2i64ARB;
	glProgramUniform2i64NV = get_proc_address("glProgramUniform2i64NV\0"): *fp_glProgramUniform2i64NV;
	glProgramUniform2i64vARB = get_proc_address("glProgramUniform2i64vARB\0"): *fp_glProgramUniform2i64vARB;
	glProgramUniform2i64vNV = get_proc_address("glProgramUniform2i64vNV\0"): *fp_glProgramUniform2i64vNV;
	glProgramUniform2iEXT = get_proc_address("glProgramUniform2iEXT\0"): *fp_glProgramUniform2iEXT;
	glProgramUniform2iv = get_proc_address("glProgramUniform2iv\0"): *fp_glProgramUniform2iv;
	glProgramUniform2ivEXT = get_proc_address("glProgramUniform2ivEXT\0"): *fp_glProgramUniform2ivEXT;
	glProgramUniform2ui = get_proc_address("glProgramUniform2ui\0"): *fp_glProgramUniform2ui;
	glProgramUniform2ui64ARB = get_proc_address("glProgramUniform2ui64ARB\0"): *fp_glProgramUniform2ui64ARB;
	glProgramUniform2ui64NV = get_proc_address("glProgramUniform2ui64NV\0"): *fp_glProgramUniform2ui64NV;
	glProgramUniform2ui64vARB = get_proc_address("glProgramUniform2ui64vARB\0"): *fp_glProgramUniform2ui64vARB;
	glProgramUniform2ui64vNV = get_proc_address("glProgramUniform2ui64vNV\0"): *fp_glProgramUniform2ui64vNV;
	glProgramUniform2uiEXT = get_proc_address("glProgramUniform2uiEXT\0"): *fp_glProgramUniform2uiEXT;
	glProgramUniform2uiv = get_proc_address("glProgramUniform2uiv\0"): *fp_glProgramUniform2uiv;
	glProgramUniform2uivEXT = get_proc_address("glProgramUniform2uivEXT\0"): *fp_glProgramUniform2uivEXT;
	glProgramUniform3d = get_proc_address("glProgramUniform3d\0"): *fp_glProgramUniform3d;
	glProgramUniform3dEXT = get_proc_address("glProgramUniform3dEXT\0"): *fp_glProgramUniform3dEXT;
	glProgramUniform3dv = get_proc_address("glProgramUniform3dv\0"): *fp_glProgramUniform3dv;
	glProgramUniform3dvEXT = get_proc_address("glProgramUniform3dvEXT\0"): *fp_glProgramUniform3dvEXT;
	glProgramUniform3f = get_proc_address("glProgramUniform3f\0"): *fp_glProgramUniform3f;
	glProgramUniform3fEXT = get_proc_address("glProgramUniform3fEXT\0"): *fp_glProgramUniform3fEXT;
	glProgramUniform3fv = get_proc_address("glProgramUniform3fv\0"): *fp_glProgramUniform3fv;
	glProgramUniform3fvEXT = get_proc_address("glProgramUniform3fvEXT\0"): *fp_glProgramUniform3fvEXT;
	glProgramUniform3i = get_proc_address("glProgramUniform3i\0"): *fp_glProgramUniform3i;
	glProgramUniform3i64ARB = get_proc_address("glProgramUniform3i64ARB\0"): *fp_glProgramUniform3i64ARB;
	glProgramUniform3i64NV = get_proc_address("glProgramUniform3i64NV\0"): *fp_glProgramUniform3i64NV;
	glProgramUniform3i64vARB = get_proc_address("glProgramUniform3i64vARB\0"): *fp_glProgramUniform3i64vARB;
	glProgramUniform3i64vNV = get_proc_address("glProgramUniform3i64vNV\0"): *fp_glProgramUniform3i64vNV;
	glProgramUniform3iEXT = get_proc_address("glProgramUniform3iEXT\0"): *fp_glProgramUniform3iEXT;
	glProgramUniform3iv = get_proc_address("glProgramUniform3iv\0"): *fp_glProgramUniform3iv;
	glProgramUniform3ivEXT = get_proc_address("glProgramUniform3ivEXT\0"): *fp_glProgramUniform3ivEXT;
	glProgramUniform3ui = get_proc_address("glProgramUniform3ui\0"): *fp_glProgramUniform3ui;
	glProgramUniform3ui64ARB = get_proc_address("glProgramUniform3ui64ARB\0"): *fp_glProgramUniform3ui64ARB;
	glProgramUniform3ui64NV = get_proc_address("glProgramUniform3ui64NV\0"): *fp_glProgramUniform3ui64NV;
	glProgramUniform3ui64vARB = get_proc_address("glProgramUniform3ui64vARB\0"): *fp_glProgramUniform3ui64vARB;
	glProgramUniform3ui64vNV = get_proc_address("glProgramUniform3ui64vNV\0"): *fp_glProgramUniform3ui64vNV;
	glProgramUniform3uiEXT = get_proc_address("glProgramUniform3uiEXT\0"): *fp_glProgramUniform3uiEXT;
	glProgramUniform3uiv = get_proc_address("glProgramUniform3uiv\0"): *fp_glProgramUniform3uiv;
	glProgramUniform3uivEXT = get_proc_address("glProgramUniform3uivEXT\0"): *fp_glProgramUniform3uivEXT;
	glProgramUniform4d = get_proc_address("glProgramUniform4d\0"): *fp_glProgramUniform4d;
	glProgramUniform4dEXT = get_proc_address("glProgramUniform4dEXT\0"): *fp_glProgramUniform4dEXT;
	glProgramUniform4dv = get_proc_address("glProgramUniform4dv\0"): *fp_glProgramUniform4dv;
	glProgramUniform4dvEXT = get_proc_address("glProgramUniform4dvEXT\0"): *fp_glProgramUniform4dvEXT;
	glProgramUniform4f = get_proc_address("glProgramUniform4f\0"): *fp_glProgramUniform4f;
	glProgramUniform4fEXT = get_proc_address("glProgramUniform4fEXT\0"): *fp_glProgramUniform4fEXT;
	glProgramUniform4fv = get_proc_address("glProgramUniform4fv\0"): *fp_glProgramUniform4fv;
	glProgramUniform4fvEXT = get_proc_address("glProgramUniform4fvEXT\0"): *fp_glProgramUniform4fvEXT;
	glProgramUniform4i = get_proc_address("glProgramUniform4i\0"): *fp_glProgramUniform4i;
	glProgramUniform4i64ARB = get_proc_address("glProgramUniform4i64ARB\0"): *fp_glProgramUniform4i64ARB;
	glProgramUniform4i64NV = get_proc_address("glProgramUniform4i64NV\0"): *fp_glProgramUniform4i64NV;
	glProgramUniform4i64vARB = get_proc_address("glProgramUniform4i64vARB\0"): *fp_glProgramUniform4i64vARB;
	glProgramUniform4i64vNV = get_proc_address("glProgramUniform4i64vNV\0"): *fp_glProgramUniform4i64vNV;
	glProgramUniform4iEXT = get_proc_address("glProgramUniform4iEXT\0"): *fp_glProgramUniform4iEXT;
	glProgramUniform4iv = get_proc_address("glProgramUniform4iv\0"): *fp_glProgramUniform4iv;
	glProgramUniform4ivEXT = get_proc_address("glProgramUniform4ivEXT\0"): *fp_glProgramUniform4ivEXT;
	glProgramUniform4ui = get_proc_address("glProgramUniform4ui\0"): *fp_glProgramUniform4ui;
	glProgramUniform4ui64ARB = get_proc_address("glProgramUniform4ui64ARB\0"): *fp_glProgramUniform4ui64ARB;
	glProgramUniform4ui64NV = get_proc_address("glProgramUniform4ui64NV\0"): *fp_glProgramUniform4ui64NV;
	glProgramUniform4ui64vARB = get_proc_address("glProgramUniform4ui64vARB\0"): *fp_glProgramUniform4ui64vARB;
	glProgramUniform4ui64vNV = get_proc_address("glProgramUniform4ui64vNV\0"): *fp_glProgramUniform4ui64vNV;
	glProgramUniform4uiEXT = get_proc_address("glProgramUniform4uiEXT\0"): *fp_glProgramUniform4uiEXT;
	glProgramUniform4uiv = get_proc_address("glProgramUniform4uiv\0"): *fp_glProgramUniform4uiv;
	glProgramUniform4uivEXT = get_proc_address("glProgramUniform4uivEXT\0"): *fp_glProgramUniform4uivEXT;
	glProgramUniformHandleui64ARB = get_proc_address("glProgramUniformHandleui64ARB\0"): *fp_glProgramUniformHandleui64ARB;
	glProgramUniformHandleui64NV = get_proc_address("glProgramUniformHandleui64NV\0"): *fp_glProgramUniformHandleui64NV;
	glProgramUniformHandleui64vARB = get_proc_address("glProgramUniformHandleui64vARB\0"): *fp_glProgramUniformHandleui64vARB;
	glProgramUniformHandleui64vNV = get_proc_address("glProgramUniformHandleui64vNV\0"): *fp_glProgramUniformHandleui64vNV;
	glProgramUniformMatrix2dv = get_proc_address("glProgramUniformMatrix2dv\0"): *fp_glProgramUniformMatrix2dv;
	glProgramUniformMatrix2dvEXT = get_proc_address("glProgramUniformMatrix2dvEXT\0"): *fp_glProgramUniformMatrix2dvEXT;
	glProgramUniformMatrix2fv = get_proc_address("glProgramUniformMatrix2fv\0"): *fp_glProgramUniformMatrix2fv;
	glProgramUniformMatrix2fvEXT = get_proc_address("glProgramUniformMatrix2fvEXT\0"): *fp_glProgramUniformMatrix2fvEXT;
	glProgramUniformMatrix2x3dv = get_proc_address("glProgramUniformMatrix2x3dv\0"): *fp_glProgramUniformMatrix2x3dv;
	glProgramUniformMatrix2x3dvEXT = get_proc_address("glProgramUniformMatrix2x3dvEXT\0"): *fp_glProgramUniformMatrix2x3dvEXT;
	glProgramUniformMatrix2x3fv = get_proc_address("glProgramUniformMatrix2x3fv\0"): *fp_glProgramUniformMatrix2x3fv;
	glProgramUniformMatrix2x3fvEXT = get_proc_address("glProgramUniformMatrix2x3fvEXT\0"): *fp_glProgramUniformMatrix2x3fvEXT;
	glProgramUniformMatrix2x4dv = get_proc_address("glProgramUniformMatrix2x4dv\0"): *fp_glProgramUniformMatrix2x4dv;
	glProgramUniformMatrix2x4dvEXT = get_proc_address("glProgramUniformMatrix2x4dvEXT\0"): *fp_glProgramUniformMatrix2x4dvEXT;
	glProgramUniformMatrix2x4fv = get_proc_address("glProgramUniformMatrix2x4fv\0"): *fp_glProgramUniformMatrix2x4fv;
	glProgramUniformMatrix2x4fvEXT = get_proc_address("glProgramUniformMatrix2x4fvEXT\0"): *fp_glProgramUniformMatrix2x4fvEXT;
	glProgramUniformMatrix3dv = get_proc_address("glProgramUniformMatrix3dv\0"): *fp_glProgramUniformMatrix3dv;
	glProgramUniformMatrix3dvEXT = get_proc_address("glProgramUniformMatrix3dvEXT\0"): *fp_glProgramUniformMatrix3dvEXT;
	glProgramUniformMatrix3fv = get_proc_address("glProgramUniformMatrix3fv\0"): *fp_glProgramUniformMatrix3fv;
	glProgramUniformMatrix3fvEXT = get_proc_address("glProgramUniformMatrix3fvEXT\0"): *fp_glProgramUniformMatrix3fvEXT;
	glProgramUniformMatrix3x2dv = get_proc_address("glProgramUniformMatrix3x2dv\0"): *fp_glProgramUniformMatrix3x2dv;
	glProgramUniformMatrix3x2dvEXT = get_proc_address("glProgramUniformMatrix3x2dvEXT\0"): *fp_glProgramUniformMatrix3x2dvEXT;
	glProgramUniformMatrix3x2fv = get_proc_address("glProgramUniformMatrix3x2fv\0"): *fp_glProgramUniformMatrix3x2fv;
	glProgramUniformMatrix3x2fvEXT = get_proc_address("glProgramUniformMatrix3x2fvEXT\0"): *fp_glProgramUniformMatrix3x2fvEXT;
	glProgramUniformMatrix3x4dv = get_proc_address("glProgramUniformMatrix3x4dv\0"): *fp_glProgramUniformMatrix3x4dv;
	glProgramUniformMatrix3x4dvEXT = get_proc_address("glProgramUniformMatrix3x4dvEXT\0"): *fp_glProgramUniformMatrix3x4dvEXT;
	glProgramUniformMatrix3x4fv = get_proc_address("glProgramUniformMatrix3x4fv\0"): *fp_glProgramUniformMatrix3x4fv;
	glProgramUniformMatrix3x4fvEXT = get_proc_address("glProgramUniformMatrix3x4fvEXT\0"): *fp_glProgramUniformMatrix3x4fvEXT;
	glProgramUniformMatrix4dv = get_proc_address("glProgramUniformMatrix4dv\0"): *fp_glProgramUniformMatrix4dv;
	glProgramUniformMatrix4dvEXT = get_proc_address("glProgramUniformMatrix4dvEXT\0"): *fp_glProgramUniformMatrix4dvEXT;
	glProgramUniformMatrix4fv = get_proc_address("glProgramUniformMatrix4fv\0"): *fp_glProgramUniformMatrix4fv;
	glProgramUniformMatrix4fvEXT = get_proc_address("glProgramUniformMatrix4fvEXT\0"): *fp_glProgramUniformMatrix4fvEXT;
	glProgramUniformMatrix4x2dv = get_proc_address("glProgramUniformMatrix4x2dv\0"): *fp_glProgramUniformMatrix4x2dv;
	glProgramUniformMatrix4x2dvEXT = get_proc_address("glProgramUniformMatrix4x2dvEXT\0"): *fp_glProgramUniformMatrix4x2dvEXT;
	glProgramUniformMatrix4x2fv = get_proc_address("glProgramUniformMatrix4x2fv\0"): *fp_glProgramUniformMatrix4x2fv;
	glProgramUniformMatrix4x2fvEXT = get_proc_address("glProgramUniformMatrix4x2fvEXT\0"): *fp_glProgramUniformMatrix4x2fvEXT;
	glProgramUniformMatrix4x3dv = get_proc_address("glProgramUniformMatrix4x3dv\0"): *fp_glProgramUniformMatrix4x3dv;
	glProgramUniformMatrix4x3dvEXT = get_proc_address("glProgramUniformMatrix4x3dvEXT\0"): *fp_glProgramUniformMatrix4x3dvEXT;
	glProgramUniformMatrix4x3fv = get_proc_address("glProgramUniformMatrix4x3fv\0"): *fp_glProgramUniformMatrix4x3fv;
	glProgramUniformMatrix4x3fvEXT = get_proc_address("glProgramUniformMatrix4x3fvEXT\0"): *fp_glProgramUniformMatrix4x3fvEXT;
	glProgramUniformui64NV = get_proc_address("glProgramUniformui64NV\0"): *fp_glProgramUniformui64NV;
	glProgramUniformui64vNV = get_proc_address("glProgramUniformui64vNV\0"): *fp_glProgramUniformui64vNV;
	glProgramVertexLimitNV = get_proc_address("glProgramVertexLimitNV\0"): *fp_glProgramVertexLimitNV;
	glProvokingVertex = get_proc_address("glProvokingVertex\0"): *fp_glProvokingVertex;
	glProvokingVertexEXT = get_proc_address("glProvokingVertexEXT\0"): *fp_glProvokingVertexEXT;
	glPushClientAttribDefaultEXT = get_proc_address("glPushClientAttribDefaultEXT\0"): *fp_glPushClientAttribDefaultEXT;
	glPushDebugGroup = get_proc_address("glPushDebugGroup\0"): *fp_glPushDebugGroup;
	glPushGroupMarkerEXT = get_proc_address("glPushGroupMarkerEXT\0"): *fp_glPushGroupMarkerEXT;
	glQueryCounter = get_proc_address("glQueryCounter\0"): *fp_glQueryCounter;
	glQueryMatrixxOES = get_proc_address("glQueryMatrixxOES\0"): *fp_glQueryMatrixxOES;
	glQueryObjectParameteruiAMD = get_proc_address("glQueryObjectParameteruiAMD\0"): *fp_glQueryObjectParameteruiAMD;
	glQueryResourceNV = get_proc_address("glQueryResourceNV\0"): *fp_glQueryResourceNV;
	glQueryResourceTagNV = get_proc_address("glQueryResourceTagNV\0"): *fp_glQueryResourceTagNV;
	glRasterPos2xOES = get_proc_address("glRasterPos2xOES\0"): *fp_glRasterPos2xOES;
	glRasterPos2xvOES = get_proc_address("glRasterPos2xvOES\0"): *fp_glRasterPos2xvOES;
	glRasterPos3xOES = get_proc_address("glRasterPos3xOES\0"): *fp_glRasterPos3xOES;
	glRasterPos3xvOES = get_proc_address("glRasterPos3xvOES\0"): *fp_glRasterPos3xvOES;
	glRasterPos4xOES = get_proc_address("glRasterPos4xOES\0"): *fp_glRasterPos4xOES;
	glRasterPos4xvOES = get_proc_address("glRasterPos4xvOES\0"): *fp_glRasterPos4xvOES;
	glRasterSamplesEXT = get_proc_address("glRasterSamplesEXT\0"): *fp_glRasterSamplesEXT;
	glReadBuffer = get_proc_address("glReadBuffer\0"): *fp_glReadBuffer;
	glReadInstrumentsSGIX = get_proc_address("glReadInstrumentsSGIX\0"): *fp_glReadInstrumentsSGIX;
	glReadPixels = get_proc_address("glReadPixels\0"): *fp_glReadPixels;
	glReadnPixels = get_proc_address("glReadnPixels\0"): *fp_glReadnPixels;
	glReadnPixelsARB = get_proc_address("glReadnPixelsARB\0"): *fp_glReadnPixelsARB;
	glRectxOES = get_proc_address("glRectxOES\0"): *fp_glRectxOES;
	glRectxvOES = get_proc_address("glRectxvOES\0"): *fp_glRectxvOES;
	glReferencePlaneSGIX = get_proc_address("glReferencePlaneSGIX\0"): *fp_glReferencePlaneSGIX;
	glReleaseKeyedMutexWin32EXT = get_proc_address("glReleaseKeyedMutexWin32EXT\0"): *fp_glReleaseKeyedMutexWin32EXT;
	glReleaseShaderCompiler = get_proc_address("glReleaseShaderCompiler\0"): *fp_glReleaseShaderCompiler;
	glRenderGpuMaskNV = get_proc_address("glRenderGpuMaskNV\0"): *fp_glRenderGpuMaskNV;
	glRenderbufferStorage = get_proc_address("glRenderbufferStorage\0"): *fp_glRenderbufferStorage;
	glRenderbufferStorageEXT = get_proc_address("glRenderbufferStorageEXT\0"): *fp_glRenderbufferStorageEXT;
	glRenderbufferStorageMultisample = get_proc_address("glRenderbufferStorageMultisample\0"): *fp_glRenderbufferStorageMultisample;
	glRenderbufferStorageMultisampleAdvancedAMD = get_proc_address("glRenderbufferStorageMultisampleAdvancedAMD\0"): *fp_glRenderbufferStorageMultisampleAdvancedAMD;
	glRenderbufferStorageMultisampleCoverageNV = get_proc_address("glRenderbufferStorageMultisampleCoverageNV\0"): *fp_glRenderbufferStorageMultisampleCoverageNV;
	glRenderbufferStorageMultisampleEXT = get_proc_address("glRenderbufferStorageMultisampleEXT\0"): *fp_glRenderbufferStorageMultisampleEXT;
	glReplacementCodePointerSUN = get_proc_address("glReplacementCodePointerSUN\0"): *fp_glReplacementCodePointerSUN;
	glReplacementCodeubSUN = get_proc_address("glReplacementCodeubSUN\0"): *fp_glReplacementCodeubSUN;
	glReplacementCodeubvSUN = get_proc_address("glReplacementCodeubvSUN\0"): *fp_glReplacementCodeubvSUN;
	glReplacementCodeuiColor3fVertex3fSUN = get_proc_address("glReplacementCodeuiColor3fVertex3fSUN\0"): *fp_glReplacementCodeuiColor3fVertex3fSUN;
	glReplacementCodeuiColor3fVertex3fvSUN = get_proc_address("glReplacementCodeuiColor3fVertex3fvSUN\0"): *fp_glReplacementCodeuiColor3fVertex3fvSUN;
	glReplacementCodeuiColor4fNormal3fVertex3fSUN = get_proc_address("glReplacementCodeuiColor4fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
	glReplacementCodeuiColor4fNormal3fVertex3fvSUN = get_proc_address("glReplacementCodeuiColor4fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
	glReplacementCodeuiColor4ubVertex3fSUN = get_proc_address("glReplacementCodeuiColor4ubVertex3fSUN\0"): *fp_glReplacementCodeuiColor4ubVertex3fSUN;
	glReplacementCodeuiColor4ubVertex3fvSUN = get_proc_address("glReplacementCodeuiColor4ubVertex3fvSUN\0"): *fp_glReplacementCodeuiColor4ubVertex3fvSUN;
	glReplacementCodeuiNormal3fVertex3fSUN = get_proc_address("glReplacementCodeuiNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiNormal3fVertex3fSUN;
	glReplacementCodeuiNormal3fVertex3fvSUN = get_proc_address("glReplacementCodeuiNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiNormal3fVertex3fvSUN;
	glReplacementCodeuiSUN = get_proc_address("glReplacementCodeuiSUN\0"): *fp_glReplacementCodeuiSUN;
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = get_proc_address("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = get_proc_address("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
	glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = get_proc_address("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
	glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = get_proc_address("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
	glReplacementCodeuiTexCoord2fVertex3fSUN = get_proc_address("glReplacementCodeuiTexCoord2fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fVertex3fSUN;
	glReplacementCodeuiTexCoord2fVertex3fvSUN = get_proc_address("glReplacementCodeuiTexCoord2fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fVertex3fvSUN;
	glReplacementCodeuiVertex3fSUN = get_proc_address("glReplacementCodeuiVertex3fSUN\0"): *fp_glReplacementCodeuiVertex3fSUN;
	glReplacementCodeuiVertex3fvSUN = get_proc_address("glReplacementCodeuiVertex3fvSUN\0"): *fp_glReplacementCodeuiVertex3fvSUN;
	glReplacementCodeuivSUN = get_proc_address("glReplacementCodeuivSUN\0"): *fp_glReplacementCodeuivSUN;
	glReplacementCodeusSUN = get_proc_address("glReplacementCodeusSUN\0"): *fp_glReplacementCodeusSUN;
	glReplacementCodeusvSUN = get_proc_address("glReplacementCodeusvSUN\0"): *fp_glReplacementCodeusvSUN;
	glRequestResidentProgramsNV = get_proc_address("glRequestResidentProgramsNV\0"): *fp_glRequestResidentProgramsNV;
	glResetHistogramEXT = get_proc_address("glResetHistogramEXT\0"): *fp_glResetHistogramEXT;
	glResetMemoryObjectParameterNV = get_proc_address("glResetMemoryObjectParameterNV\0"): *fp_glResetMemoryObjectParameterNV;
	glResetMinmaxEXT = get_proc_address("glResetMinmaxEXT\0"): *fp_glResetMinmaxEXT;
	glResizeBuffersMESA = get_proc_address("glResizeBuffersMESA\0"): *fp_glResizeBuffersMESA;
	glResolveDepthValuesNV = get_proc_address("glResolveDepthValuesNV\0"): *fp_glResolveDepthValuesNV;
	glResumeTransformFeedback = get_proc_address("glResumeTransformFeedback\0"): *fp_glResumeTransformFeedback;
	glResumeTransformFeedbackNV = get_proc_address("glResumeTransformFeedbackNV\0"): *fp_glResumeTransformFeedbackNV;
	glRotatexOES = get_proc_address("glRotatexOES\0"): *fp_glRotatexOES;
	glSampleCoverage = get_proc_address("glSampleCoverage\0"): *fp_glSampleCoverage;
	glSampleCoverageARB = get_proc_address("glSampleCoverageARB\0"): *fp_glSampleCoverageARB;
	glSampleMapATI = get_proc_address("glSampleMapATI\0"): *fp_glSampleMapATI;
	glSampleMaskEXT = get_proc_address("glSampleMaskEXT\0"): *fp_glSampleMaskEXT;
	glSampleMaskIndexedNV = get_proc_address("glSampleMaskIndexedNV\0"): *fp_glSampleMaskIndexedNV;
	glSampleMaskSGIS = get_proc_address("glSampleMaskSGIS\0"): *fp_glSampleMaskSGIS;
	glSampleMaski = get_proc_address("glSampleMaski\0"): *fp_glSampleMaski;
	glSamplePatternEXT = get_proc_address("glSamplePatternEXT\0"): *fp_glSamplePatternEXT;
	glSamplePatternSGIS = get_proc_address("glSamplePatternSGIS\0"): *fp_glSamplePatternSGIS;
	glSamplerParameterIiv = get_proc_address("glSamplerParameterIiv\0"): *fp_glSamplerParameterIiv;
	glSamplerParameterIuiv = get_proc_address("glSamplerParameterIuiv\0"): *fp_glSamplerParameterIuiv;
	glSamplerParameterf = get_proc_address("glSamplerParameterf\0"): *fp_glSamplerParameterf;
	glSamplerParameterfv = get_proc_address("glSamplerParameterfv\0"): *fp_glSamplerParameterfv;
	glSamplerParameteri = get_proc_address("glSamplerParameteri\0"): *fp_glSamplerParameteri;
	glSamplerParameteriv = get_proc_address("glSamplerParameteriv\0"): *fp_glSamplerParameteriv;
	glScalexOES = get_proc_address("glScalexOES\0"): *fp_glScalexOES;
	glScissor = get_proc_address("glScissor\0"): *fp_glScissor;
	glScissorArrayv = get_proc_address("glScissorArrayv\0"): *fp_glScissorArrayv;
	glScissorExclusiveArrayvNV = get_proc_address("glScissorExclusiveArrayvNV\0"): *fp_glScissorExclusiveArrayvNV;
	glScissorExclusiveNV = get_proc_address("glScissorExclusiveNV\0"): *fp_glScissorExclusiveNV;
	glScissorIndexed = get_proc_address("glScissorIndexed\0"): *fp_glScissorIndexed;
	glScissorIndexedv = get_proc_address("glScissorIndexedv\0"): *fp_glScissorIndexedv;
	glSecondaryColor3bEXT = get_proc_address("glSecondaryColor3bEXT\0"): *fp_glSecondaryColor3bEXT;
	glSecondaryColor3bvEXT = get_proc_address("glSecondaryColor3bvEXT\0"): *fp_glSecondaryColor3bvEXT;
	glSecondaryColor3dEXT = get_proc_address("glSecondaryColor3dEXT\0"): *fp_glSecondaryColor3dEXT;
	glSecondaryColor3dvEXT = get_proc_address("glSecondaryColor3dvEXT\0"): *fp_glSecondaryColor3dvEXT;
	glSecondaryColor3fEXT = get_proc_address("glSecondaryColor3fEXT\0"): *fp_glSecondaryColor3fEXT;
	glSecondaryColor3fvEXT = get_proc_address("glSecondaryColor3fvEXT\0"): *fp_glSecondaryColor3fvEXT;
	glSecondaryColor3hNV = get_proc_address("glSecondaryColor3hNV\0"): *fp_glSecondaryColor3hNV;
	glSecondaryColor3hvNV = get_proc_address("glSecondaryColor3hvNV\0"): *fp_glSecondaryColor3hvNV;
	glSecondaryColor3iEXT = get_proc_address("glSecondaryColor3iEXT\0"): *fp_glSecondaryColor3iEXT;
	glSecondaryColor3ivEXT = get_proc_address("glSecondaryColor3ivEXT\0"): *fp_glSecondaryColor3ivEXT;
	glSecondaryColor3sEXT = get_proc_address("glSecondaryColor3sEXT\0"): *fp_glSecondaryColor3sEXT;
	glSecondaryColor3svEXT = get_proc_address("glSecondaryColor3svEXT\0"): *fp_glSecondaryColor3svEXT;
	glSecondaryColor3ubEXT = get_proc_address("glSecondaryColor3ubEXT\0"): *fp_glSecondaryColor3ubEXT;
	glSecondaryColor3ubvEXT = get_proc_address("glSecondaryColor3ubvEXT\0"): *fp_glSecondaryColor3ubvEXT;
	glSecondaryColor3uiEXT = get_proc_address("glSecondaryColor3uiEXT\0"): *fp_glSecondaryColor3uiEXT;
	glSecondaryColor3uivEXT = get_proc_address("glSecondaryColor3uivEXT\0"): *fp_glSecondaryColor3uivEXT;
	glSecondaryColor3usEXT = get_proc_address("glSecondaryColor3usEXT\0"): *fp_glSecondaryColor3usEXT;
	glSecondaryColor3usvEXT = get_proc_address("glSecondaryColor3usvEXT\0"): *fp_glSecondaryColor3usvEXT;
	glSecondaryColorFormatNV = get_proc_address("glSecondaryColorFormatNV\0"): *fp_glSecondaryColorFormatNV;
	glSecondaryColorPointerEXT = get_proc_address("glSecondaryColorPointerEXT\0"): *fp_glSecondaryColorPointerEXT;
	glSecondaryColorPointerListIBM = get_proc_address("glSecondaryColorPointerListIBM\0"): *fp_glSecondaryColorPointerListIBM;
	glSelectPerfMonitorCountersAMD = get_proc_address("glSelectPerfMonitorCountersAMD\0"): *fp_glSelectPerfMonitorCountersAMD;
	glSemaphoreParameterivNV = get_proc_address("glSemaphoreParameterivNV\0"): *fp_glSemaphoreParameterivNV;
	glSemaphoreParameterui64vEXT = get_proc_address("glSemaphoreParameterui64vEXT\0"): *fp_glSemaphoreParameterui64vEXT;
	glSeparableFilter2DEXT = get_proc_address("glSeparableFilter2DEXT\0"): *fp_glSeparableFilter2DEXT;
	glSetFenceAPPLE = get_proc_address("glSetFenceAPPLE\0"): *fp_glSetFenceAPPLE;
	glSetFenceNV = get_proc_address("glSetFenceNV\0"): *fp_glSetFenceNV;
	glSetFragmentShaderConstantATI = get_proc_address("glSetFragmentShaderConstantATI\0"): *fp_glSetFragmentShaderConstantATI;
	glSetInvariantEXT = get_proc_address("glSetInvariantEXT\0"): *fp_glSetInvariantEXT;
	glSetLocalConstantEXT = get_proc_address("glSetLocalConstantEXT\0"): *fp_glSetLocalConstantEXT;
	glSetMultisamplefvAMD = get_proc_address("glSetMultisamplefvAMD\0"): *fp_glSetMultisamplefvAMD;
	glShaderBinary = get_proc_address("glShaderBinary\0"): *fp_glShaderBinary;
	glShaderOp1EXT = get_proc_address("glShaderOp1EXT\0"): *fp_glShaderOp1EXT;
	glShaderOp2EXT = get_proc_address("glShaderOp2EXT\0"): *fp_glShaderOp2EXT;
	glShaderOp3EXT = get_proc_address("glShaderOp3EXT\0"): *fp_glShaderOp3EXT;
	glShaderSource = get_proc_address("glShaderSource\0"): *fp_glShaderSource;
	glShaderSourceARB = get_proc_address("glShaderSourceARB\0"): *fp_glShaderSourceARB;
	glShaderStorageBlockBinding = get_proc_address("glShaderStorageBlockBinding\0"): *fp_glShaderStorageBlockBinding;
	glShadingRateImageBarrierNV = get_proc_address("glShadingRateImageBarrierNV\0"): *fp_glShadingRateImageBarrierNV;
	glShadingRateImagePaletteNV = get_proc_address("glShadingRateImagePaletteNV\0"): *fp_glShadingRateImagePaletteNV;
	glShadingRateSampleOrderCustomNV = get_proc_address("glShadingRateSampleOrderCustomNV\0"): *fp_glShadingRateSampleOrderCustomNV;
	glShadingRateSampleOrderNV = get_proc_address("glShadingRateSampleOrderNV\0"): *fp_glShadingRateSampleOrderNV;
	glSharpenTexFuncSGIS = get_proc_address("glSharpenTexFuncSGIS\0"): *fp_glSharpenTexFuncSGIS;
	glSignalSemaphoreEXT = get_proc_address("glSignalSemaphoreEXT\0"): *fp_glSignalSemaphoreEXT;
	glSignalSemaphoreui64NVX = get_proc_address("glSignalSemaphoreui64NVX\0"): *fp_glSignalSemaphoreui64NVX;
	glSignalVkFenceNV = get_proc_address("glSignalVkFenceNV\0"): *fp_glSignalVkFenceNV;
	glSignalVkSemaphoreNV = get_proc_address("glSignalVkSemaphoreNV\0"): *fp_glSignalVkSemaphoreNV;
	glSpecializeShaderARB = get_proc_address("glSpecializeShaderARB\0"): *fp_glSpecializeShaderARB;
	glSpriteParameterfSGIX = get_proc_address("glSpriteParameterfSGIX\0"): *fp_glSpriteParameterfSGIX;
	glSpriteParameterfvSGIX = get_proc_address("glSpriteParameterfvSGIX\0"): *fp_glSpriteParameterfvSGIX;
	glSpriteParameteriSGIX = get_proc_address("glSpriteParameteriSGIX\0"): *fp_glSpriteParameteriSGIX;
	glSpriteParameterivSGIX = get_proc_address("glSpriteParameterivSGIX\0"): *fp_glSpriteParameterivSGIX;
	glStartInstrumentsSGIX = get_proc_address("glStartInstrumentsSGIX\0"): *fp_glStartInstrumentsSGIX;
	glStateCaptureNV = get_proc_address("glStateCaptureNV\0"): *fp_glStateCaptureNV;
	glStencilClearTagEXT = get_proc_address("glStencilClearTagEXT\0"): *fp_glStencilClearTagEXT;
	glStencilFillPathInstancedNV = get_proc_address("glStencilFillPathInstancedNV\0"): *fp_glStencilFillPathInstancedNV;
	glStencilFillPathNV = get_proc_address("glStencilFillPathNV\0"): *fp_glStencilFillPathNV;
	glStencilFunc = get_proc_address("glStencilFunc\0"): *fp_glStencilFunc;
	glStencilFuncSeparate = get_proc_address("glStencilFuncSeparate\0"): *fp_glStencilFuncSeparate;
	glStencilFuncSeparateATI = get_proc_address("glStencilFuncSeparateATI\0"): *fp_glStencilFuncSeparateATI;
	glStencilMask = get_proc_address("glStencilMask\0"): *fp_glStencilMask;
	glStencilMaskSeparate = get_proc_address("glStencilMaskSeparate\0"): *fp_glStencilMaskSeparate;
	glStencilOp = get_proc_address("glStencilOp\0"): *fp_glStencilOp;
	glStencilOpSeparate = get_proc_address("glStencilOpSeparate\0"): *fp_glStencilOpSeparate;
	glStencilOpSeparateATI = get_proc_address("glStencilOpSeparateATI\0"): *fp_glStencilOpSeparateATI;
	glStencilOpValueAMD = get_proc_address("glStencilOpValueAMD\0"): *fp_glStencilOpValueAMD;
	glStencilStrokePathInstancedNV = get_proc_address("glStencilStrokePathInstancedNV\0"): *fp_glStencilStrokePathInstancedNV;
	glStencilStrokePathNV = get_proc_address("glStencilStrokePathNV\0"): *fp_glStencilStrokePathNV;
	glStencilThenCoverFillPathInstancedNV = get_proc_address("glStencilThenCoverFillPathInstancedNV\0"): *fp_glStencilThenCoverFillPathInstancedNV;
	glStencilThenCoverFillPathNV = get_proc_address("glStencilThenCoverFillPathNV\0"): *fp_glStencilThenCoverFillPathNV;
	glStencilThenCoverStrokePathInstancedNV = get_proc_address("glStencilThenCoverStrokePathInstancedNV\0"): *fp_glStencilThenCoverStrokePathInstancedNV;
	glStencilThenCoverStrokePathNV = get_proc_address("glStencilThenCoverStrokePathNV\0"): *fp_glStencilThenCoverStrokePathNV;
	glStopInstrumentsSGIX = get_proc_address("glStopInstrumentsSGIX\0"): *fp_glStopInstrumentsSGIX;
	glStringMarkerGREMEDY = get_proc_address("glStringMarkerGREMEDY\0"): *fp_glStringMarkerGREMEDY;
	glSubpixelPrecisionBiasNV = get_proc_address("glSubpixelPrecisionBiasNV\0"): *fp_glSubpixelPrecisionBiasNV;
	glSwizzleEXT = get_proc_address("glSwizzleEXT\0"): *fp_glSwizzleEXT;
	glSyncTextureINTEL = get_proc_address("glSyncTextureINTEL\0"): *fp_glSyncTextureINTEL;
	glTagSampleBufferSGIX = get_proc_address("glTagSampleBufferSGIX\0"): *fp_glTagSampleBufferSGIX;
	glTangent3bEXT = get_proc_address("glTangent3bEXT\0"): *fp_glTangent3bEXT;
	glTangent3bvEXT = get_proc_address("glTangent3bvEXT\0"): *fp_glTangent3bvEXT;
	glTangent3dEXT = get_proc_address("glTangent3dEXT\0"): *fp_glTangent3dEXT;
	glTangent3dvEXT = get_proc_address("glTangent3dvEXT\0"): *fp_glTangent3dvEXT;
	glTangent3fEXT = get_proc_address("glTangent3fEXT\0"): *fp_glTangent3fEXT;
	glTangent3fvEXT = get_proc_address("glTangent3fvEXT\0"): *fp_glTangent3fvEXT;
	glTangent3iEXT = get_proc_address("glTangent3iEXT\0"): *fp_glTangent3iEXT;
	glTangent3ivEXT = get_proc_address("glTangent3ivEXT\0"): *fp_glTangent3ivEXT;
	glTangent3sEXT = get_proc_address("glTangent3sEXT\0"): *fp_glTangent3sEXT;
	glTangent3svEXT = get_proc_address("glTangent3svEXT\0"): *fp_glTangent3svEXT;
	glTangentPointerEXT = get_proc_address("glTangentPointerEXT\0"): *fp_glTangentPointerEXT;
	glTbufferMask3DFX = get_proc_address("glTbufferMask3DFX\0"): *fp_glTbufferMask3DFX;
	glTessellationFactorAMD = get_proc_address("glTessellationFactorAMD\0"): *fp_glTessellationFactorAMD;
	glTessellationModeAMD = get_proc_address("glTessellationModeAMD\0"): *fp_glTessellationModeAMD;
	glTestFenceAPPLE = get_proc_address("glTestFenceAPPLE\0"): *fp_glTestFenceAPPLE;
	glTestFenceNV = get_proc_address("glTestFenceNV\0"): *fp_glTestFenceNV;
	glTestObjectAPPLE = get_proc_address("glTestObjectAPPLE\0"): *fp_glTestObjectAPPLE;
	glTexAttachMemoryNV = get_proc_address("glTexAttachMemoryNV\0"): *fp_glTexAttachMemoryNV;
	glTexBuffer = get_proc_address("glTexBuffer\0"): *fp_glTexBuffer;
	glTexBufferARB = get_proc_address("glTexBufferARB\0"): *fp_glTexBufferARB;
	glTexBufferEXT = get_proc_address("glTexBufferEXT\0"): *fp_glTexBufferEXT;
	glTexBufferRange = get_proc_address("glTexBufferRange\0"): *fp_glTexBufferRange;
	glTexBumpParameterfvATI = get_proc_address("glTexBumpParameterfvATI\0"): *fp_glTexBumpParameterfvATI;
	glTexBumpParameterivATI = get_proc_address("glTexBumpParameterivATI\0"): *fp_glTexBumpParameterivATI;
	glTexCoord1bOES = get_proc_address("glTexCoord1bOES\0"): *fp_glTexCoord1bOES;
	glTexCoord1bvOES = get_proc_address("glTexCoord1bvOES\0"): *fp_glTexCoord1bvOES;
	glTexCoord1hNV = get_proc_address("glTexCoord1hNV\0"): *fp_glTexCoord1hNV;
	glTexCoord1hvNV = get_proc_address("glTexCoord1hvNV\0"): *fp_glTexCoord1hvNV;
	glTexCoord1xOES = get_proc_address("glTexCoord1xOES\0"): *fp_glTexCoord1xOES;
	glTexCoord1xvOES = get_proc_address("glTexCoord1xvOES\0"): *fp_glTexCoord1xvOES;
	glTexCoord2bOES = get_proc_address("glTexCoord2bOES\0"): *fp_glTexCoord2bOES;
	glTexCoord2bvOES = get_proc_address("glTexCoord2bvOES\0"): *fp_glTexCoord2bvOES;
	glTexCoord2fColor3fVertex3fSUN = get_proc_address("glTexCoord2fColor3fVertex3fSUN\0"): *fp_glTexCoord2fColor3fVertex3fSUN;
	glTexCoord2fColor3fVertex3fvSUN = get_proc_address("glTexCoord2fColor3fVertex3fvSUN\0"): *fp_glTexCoord2fColor3fVertex3fvSUN;
	glTexCoord2fColor4fNormal3fVertex3fSUN = get_proc_address("glTexCoord2fColor4fNormal3fVertex3fSUN\0"): *fp_glTexCoord2fColor4fNormal3fVertex3fSUN;
	glTexCoord2fColor4fNormal3fVertex3fvSUN = get_proc_address("glTexCoord2fColor4fNormal3fVertex3fvSUN\0"): *fp_glTexCoord2fColor4fNormal3fVertex3fvSUN;
	glTexCoord2fColor4ubVertex3fSUN = get_proc_address("glTexCoord2fColor4ubVertex3fSUN\0"): *fp_glTexCoord2fColor4ubVertex3fSUN;
	glTexCoord2fColor4ubVertex3fvSUN = get_proc_address("glTexCoord2fColor4ubVertex3fvSUN\0"): *fp_glTexCoord2fColor4ubVertex3fvSUN;
	glTexCoord2fNormal3fVertex3fSUN = get_proc_address("glTexCoord2fNormal3fVertex3fSUN\0"): *fp_glTexCoord2fNormal3fVertex3fSUN;
	glTexCoord2fNormal3fVertex3fvSUN = get_proc_address("glTexCoord2fNormal3fVertex3fvSUN\0"): *fp_glTexCoord2fNormal3fVertex3fvSUN;
	glTexCoord2fVertex3fSUN = get_proc_address("glTexCoord2fVertex3fSUN\0"): *fp_glTexCoord2fVertex3fSUN;
	glTexCoord2fVertex3fvSUN = get_proc_address("glTexCoord2fVertex3fvSUN\0"): *fp_glTexCoord2fVertex3fvSUN;
	glTexCoord2hNV = get_proc_address("glTexCoord2hNV\0"): *fp_glTexCoord2hNV;
	glTexCoord2hvNV = get_proc_address("glTexCoord2hvNV\0"): *fp_glTexCoord2hvNV;
	glTexCoord2xOES = get_proc_address("glTexCoord2xOES\0"): *fp_glTexCoord2xOES;
	glTexCoord2xvOES = get_proc_address("glTexCoord2xvOES\0"): *fp_glTexCoord2xvOES;
	glTexCoord3bOES = get_proc_address("glTexCoord3bOES\0"): *fp_glTexCoord3bOES;
	glTexCoord3bvOES = get_proc_address("glTexCoord3bvOES\0"): *fp_glTexCoord3bvOES;
	glTexCoord3hNV = get_proc_address("glTexCoord3hNV\0"): *fp_glTexCoord3hNV;
	glTexCoord3hvNV = get_proc_address("glTexCoord3hvNV\0"): *fp_glTexCoord3hvNV;
	glTexCoord3xOES = get_proc_address("glTexCoord3xOES\0"): *fp_glTexCoord3xOES;
	glTexCoord3xvOES = get_proc_address("glTexCoord3xvOES\0"): *fp_glTexCoord3xvOES;
	glTexCoord4bOES = get_proc_address("glTexCoord4bOES\0"): *fp_glTexCoord4bOES;
	glTexCoord4bvOES = get_proc_address("glTexCoord4bvOES\0"): *fp_glTexCoord4bvOES;
	glTexCoord4fColor4fNormal3fVertex4fSUN = get_proc_address("glTexCoord4fColor4fNormal3fVertex4fSUN\0"): *fp_glTexCoord4fColor4fNormal3fVertex4fSUN;
	glTexCoord4fColor4fNormal3fVertex4fvSUN = get_proc_address("glTexCoord4fColor4fNormal3fVertex4fvSUN\0"): *fp_glTexCoord4fColor4fNormal3fVertex4fvSUN;
	glTexCoord4fVertex4fSUN = get_proc_address("glTexCoord4fVertex4fSUN\0"): *fp_glTexCoord4fVertex4fSUN;
	glTexCoord4fVertex4fvSUN = get_proc_address("glTexCoord4fVertex4fvSUN\0"): *fp_glTexCoord4fVertex4fvSUN;
	glTexCoord4hNV = get_proc_address("glTexCoord4hNV\0"): *fp_glTexCoord4hNV;
	glTexCoord4hvNV = get_proc_address("glTexCoord4hvNV\0"): *fp_glTexCoord4hvNV;
	glTexCoord4xOES = get_proc_address("glTexCoord4xOES\0"): *fp_glTexCoord4xOES;
	glTexCoord4xvOES = get_proc_address("glTexCoord4xvOES\0"): *fp_glTexCoord4xvOES;
	glTexCoordFormatNV = get_proc_address("glTexCoordFormatNV\0"): *fp_glTexCoordFormatNV;
	glTexCoordPointerEXT = get_proc_address("glTexCoordPointerEXT\0"): *fp_glTexCoordPointerEXT;
	glTexCoordPointerListIBM = get_proc_address("glTexCoordPointerListIBM\0"): *fp_glTexCoordPointerListIBM;
	glTexCoordPointervINTEL = get_proc_address("glTexCoordPointervINTEL\0"): *fp_glTexCoordPointervINTEL;
	glTexEnvxOES = get_proc_address("glTexEnvxOES\0"): *fp_glTexEnvxOES;
	glTexEnvxvOES = get_proc_address("glTexEnvxvOES\0"): *fp_glTexEnvxvOES;
	glTexFilterFuncSGIS = get_proc_address("glTexFilterFuncSGIS\0"): *fp_glTexFilterFuncSGIS;
	glTexGenxOES = get_proc_address("glTexGenxOES\0"): *fp_glTexGenxOES;
	glTexGenxvOES = get_proc_address("glTexGenxvOES\0"): *fp_glTexGenxvOES;
	glTexImage1D = get_proc_address("glTexImage1D\0"): *fp_glTexImage1D;
	glTexImage2D = get_proc_address("glTexImage2D\0"): *fp_glTexImage2D;
	glTexImage2DMultisample = get_proc_address("glTexImage2DMultisample\0"): *fp_glTexImage2DMultisample;
	glTexImage2DMultisampleCoverageNV = get_proc_address("glTexImage2DMultisampleCoverageNV\0"): *fp_glTexImage2DMultisampleCoverageNV;
	glTexImage3D = get_proc_address("glTexImage3D\0"): *fp_glTexImage3D;
	glTexImage3DEXT = get_proc_address("glTexImage3DEXT\0"): *fp_glTexImage3DEXT;
	glTexImage3DMultisample = get_proc_address("glTexImage3DMultisample\0"): *fp_glTexImage3DMultisample;
	glTexImage3DMultisampleCoverageNV = get_proc_address("glTexImage3DMultisampleCoverageNV\0"): *fp_glTexImage3DMultisampleCoverageNV;
	glTexImage4DSGIS = get_proc_address("glTexImage4DSGIS\0"): *fp_glTexImage4DSGIS;
	glTexPageCommitmentARB = get_proc_address("glTexPageCommitmentARB\0"): *fp_glTexPageCommitmentARB;
	glTexPageCommitmentMemNV = get_proc_address("glTexPageCommitmentMemNV\0"): *fp_glTexPageCommitmentMemNV;
	glTexParameterIiv = get_proc_address("glTexParameterIiv\0"): *fp_glTexParameterIiv;
	glTexParameterIivEXT = get_proc_address("glTexParameterIivEXT\0"): *fp_glTexParameterIivEXT;
	glTexParameterIuiv = get_proc_address("glTexParameterIuiv\0"): *fp_glTexParameterIuiv;
	glTexParameterIuivEXT = get_proc_address("glTexParameterIuivEXT\0"): *fp_glTexParameterIuivEXT;
	glTexParameterf = get_proc_address("glTexParameterf\0"): *fp_glTexParameterf;
	glTexParameterfv = get_proc_address("glTexParameterfv\0"): *fp_glTexParameterfv;
	glTexParameteri = get_proc_address("glTexParameteri\0"): *fp_glTexParameteri;
	glTexParameteriv = get_proc_address("glTexParameteriv\0"): *fp_glTexParameteriv;
	glTexParameterxOES = get_proc_address("glTexParameterxOES\0"): *fp_glTexParameterxOES;
	glTexParameterxvOES = get_proc_address("glTexParameterxvOES\0"): *fp_glTexParameterxvOES;
	glTexRenderbufferNV = get_proc_address("glTexRenderbufferNV\0"): *fp_glTexRenderbufferNV;
	glTexStorage1D = get_proc_address("glTexStorage1D\0"): *fp_glTexStorage1D;
	glTexStorage1DEXT = get_proc_address("glTexStorage1DEXT\0"): *fp_glTexStorage1DEXT;
	glTexStorage2D = get_proc_address("glTexStorage2D\0"): *fp_glTexStorage2D;
	glTexStorage2DEXT = get_proc_address("glTexStorage2DEXT\0"): *fp_glTexStorage2DEXT;
	glTexStorage2DMultisample = get_proc_address("glTexStorage2DMultisample\0"): *fp_glTexStorage2DMultisample;
	glTexStorage3D = get_proc_address("glTexStorage3D\0"): *fp_glTexStorage3D;
	glTexStorage3DEXT = get_proc_address("glTexStorage3DEXT\0"): *fp_glTexStorage3DEXT;
	glTexStorage3DMultisample = get_proc_address("glTexStorage3DMultisample\0"): *fp_glTexStorage3DMultisample;
	glTexStorageMem1DEXT = get_proc_address("glTexStorageMem1DEXT\0"): *fp_glTexStorageMem1DEXT;
	glTexStorageMem2DEXT = get_proc_address("glTexStorageMem2DEXT\0"): *fp_glTexStorageMem2DEXT;
	glTexStorageMem2DMultisampleEXT = get_proc_address("glTexStorageMem2DMultisampleEXT\0"): *fp_glTexStorageMem2DMultisampleEXT;
	glTexStorageMem3DEXT = get_proc_address("glTexStorageMem3DEXT\0"): *fp_glTexStorageMem3DEXT;
	glTexStorageMem3DMultisampleEXT = get_proc_address("glTexStorageMem3DMultisampleEXT\0"): *fp_glTexStorageMem3DMultisampleEXT;
	glTexStorageSparseAMD = get_proc_address("glTexStorageSparseAMD\0"): *fp_glTexStorageSparseAMD;
	glTexSubImage1D = get_proc_address("glTexSubImage1D\0"): *fp_glTexSubImage1D;
	glTexSubImage1DEXT = get_proc_address("glTexSubImage1DEXT\0"): *fp_glTexSubImage1DEXT;
	glTexSubImage2D = get_proc_address("glTexSubImage2D\0"): *fp_glTexSubImage2D;
	glTexSubImage2DEXT = get_proc_address("glTexSubImage2DEXT\0"): *fp_glTexSubImage2DEXT;
	glTexSubImage3D = get_proc_address("glTexSubImage3D\0"): *fp_glTexSubImage3D;
	glTexSubImage3DEXT = get_proc_address("glTexSubImage3DEXT\0"): *fp_glTexSubImage3DEXT;
	glTexSubImage4DSGIS = get_proc_address("glTexSubImage4DSGIS\0"): *fp_glTexSubImage4DSGIS;
	glTextureAttachMemoryNV = get_proc_address("glTextureAttachMemoryNV\0"): *fp_glTextureAttachMemoryNV;
	glTextureBarrier = get_proc_address("glTextureBarrier\0"): *fp_glTextureBarrier;
	glTextureBarrierNV = get_proc_address("glTextureBarrierNV\0"): *fp_glTextureBarrierNV;
	glTextureBuffer = get_proc_address("glTextureBuffer\0"): *fp_glTextureBuffer;
	glTextureBufferEXT = get_proc_address("glTextureBufferEXT\0"): *fp_glTextureBufferEXT;
	glTextureBufferRange = get_proc_address("glTextureBufferRange\0"): *fp_glTextureBufferRange;
	glTextureBufferRangeEXT = get_proc_address("glTextureBufferRangeEXT\0"): *fp_glTextureBufferRangeEXT;
	glTextureColorMaskSGIS = get_proc_address("glTextureColorMaskSGIS\0"): *fp_glTextureColorMaskSGIS;
	glTextureImage1DEXT = get_proc_address("glTextureImage1DEXT\0"): *fp_glTextureImage1DEXT;
	glTextureImage2DEXT = get_proc_address("glTextureImage2DEXT\0"): *fp_glTextureImage2DEXT;
	glTextureImage2DMultisampleCoverageNV = get_proc_address("glTextureImage2DMultisampleCoverageNV\0"): *fp_glTextureImage2DMultisampleCoverageNV;
	glTextureImage2DMultisampleNV = get_proc_address("glTextureImage2DMultisampleNV\0"): *fp_glTextureImage2DMultisampleNV;
	glTextureImage3DEXT = get_proc_address("glTextureImage3DEXT\0"): *fp_glTextureImage3DEXT;
	glTextureImage3DMultisampleCoverageNV = get_proc_address("glTextureImage3DMultisampleCoverageNV\0"): *fp_glTextureImage3DMultisampleCoverageNV;
	glTextureImage3DMultisampleNV = get_proc_address("glTextureImage3DMultisampleNV\0"): *fp_glTextureImage3DMultisampleNV;
	glTextureLightEXT = get_proc_address("glTextureLightEXT\0"): *fp_glTextureLightEXT;
	glTextureMaterialEXT = get_proc_address("glTextureMaterialEXT\0"): *fp_glTextureMaterialEXT;
	glTextureNormalEXT = get_proc_address("glTextureNormalEXT\0"): *fp_glTextureNormalEXT;
	glTexturePageCommitmentEXT = get_proc_address("glTexturePageCommitmentEXT\0"): *fp_glTexturePageCommitmentEXT;
	glTexturePageCommitmentMemNV = get_proc_address("glTexturePageCommitmentMemNV\0"): *fp_glTexturePageCommitmentMemNV;
	glTextureParameterIiv = get_proc_address("glTextureParameterIiv\0"): *fp_glTextureParameterIiv;
	glTextureParameterIivEXT = get_proc_address("glTextureParameterIivEXT\0"): *fp_glTextureParameterIivEXT;
	glTextureParameterIuiv = get_proc_address("glTextureParameterIuiv\0"): *fp_glTextureParameterIuiv;
	glTextureParameterIuivEXT = get_proc_address("glTextureParameterIuivEXT\0"): *fp_glTextureParameterIuivEXT;
	glTextureParameterf = get_proc_address("glTextureParameterf\0"): *fp_glTextureParameterf;
	glTextureParameterfEXT = get_proc_address("glTextureParameterfEXT\0"): *fp_glTextureParameterfEXT;
	glTextureParameterfv = get_proc_address("glTextureParameterfv\0"): *fp_glTextureParameterfv;
	glTextureParameterfvEXT = get_proc_address("glTextureParameterfvEXT\0"): *fp_glTextureParameterfvEXT;
	glTextureParameteri = get_proc_address("glTextureParameteri\0"): *fp_glTextureParameteri;
	glTextureParameteriEXT = get_proc_address("glTextureParameteriEXT\0"): *fp_glTextureParameteriEXT;
	glTextureParameteriv = get_proc_address("glTextureParameteriv\0"): *fp_glTextureParameteriv;
	glTextureParameterivEXT = get_proc_address("glTextureParameterivEXT\0"): *fp_glTextureParameterivEXT;
	glTextureRangeAPPLE = get_proc_address("glTextureRangeAPPLE\0"): *fp_glTextureRangeAPPLE;
	glTextureRenderbufferEXT = get_proc_address("glTextureRenderbufferEXT\0"): *fp_glTextureRenderbufferEXT;
	glTextureStorage1D = get_proc_address("glTextureStorage1D\0"): *fp_glTextureStorage1D;
	glTextureStorage1DEXT = get_proc_address("glTextureStorage1DEXT\0"): *fp_glTextureStorage1DEXT;
	glTextureStorage2D = get_proc_address("glTextureStorage2D\0"): *fp_glTextureStorage2D;
	glTextureStorage2DEXT = get_proc_address("glTextureStorage2DEXT\0"): *fp_glTextureStorage2DEXT;
	glTextureStorage2DMultisample = get_proc_address("glTextureStorage2DMultisample\0"): *fp_glTextureStorage2DMultisample;
	glTextureStorage2DMultisampleEXT = get_proc_address("glTextureStorage2DMultisampleEXT\0"): *fp_glTextureStorage2DMultisampleEXT;
	glTextureStorage3D = get_proc_address("glTextureStorage3D\0"): *fp_glTextureStorage3D;
	glTextureStorage3DEXT = get_proc_address("glTextureStorage3DEXT\0"): *fp_glTextureStorage3DEXT;
	glTextureStorage3DMultisample = get_proc_address("glTextureStorage3DMultisample\0"): *fp_glTextureStorage3DMultisample;
	glTextureStorage3DMultisampleEXT = get_proc_address("glTextureStorage3DMultisampleEXT\0"): *fp_glTextureStorage3DMultisampleEXT;
	glTextureStorageMem1DEXT = get_proc_address("glTextureStorageMem1DEXT\0"): *fp_glTextureStorageMem1DEXT;
	glTextureStorageMem2DEXT = get_proc_address("glTextureStorageMem2DEXT\0"): *fp_glTextureStorageMem2DEXT;
	glTextureStorageMem2DMultisampleEXT = get_proc_address("glTextureStorageMem2DMultisampleEXT\0"): *fp_glTextureStorageMem2DMultisampleEXT;
	glTextureStorageMem3DEXT = get_proc_address("glTextureStorageMem3DEXT\0"): *fp_glTextureStorageMem3DEXT;
	glTextureStorageMem3DMultisampleEXT = get_proc_address("glTextureStorageMem3DMultisampleEXT\0"): *fp_glTextureStorageMem3DMultisampleEXT;
	glTextureStorageSparseAMD = get_proc_address("glTextureStorageSparseAMD\0"): *fp_glTextureStorageSparseAMD;
	glTextureSubImage1D = get_proc_address("glTextureSubImage1D\0"): *fp_glTextureSubImage1D;
	glTextureSubImage1DEXT = get_proc_address("glTextureSubImage1DEXT\0"): *fp_glTextureSubImage1DEXT;
	glTextureSubImage2D = get_proc_address("glTextureSubImage2D\0"): *fp_glTextureSubImage2D;
	glTextureSubImage2DEXT = get_proc_address("glTextureSubImage2DEXT\0"): *fp_glTextureSubImage2DEXT;
	glTextureSubImage3D = get_proc_address("glTextureSubImage3D\0"): *fp_glTextureSubImage3D;
	glTextureSubImage3DEXT = get_proc_address("glTextureSubImage3DEXT\0"): *fp_glTextureSubImage3DEXT;
	glTextureView = get_proc_address("glTextureView\0"): *fp_glTextureView;
	glTrackMatrixNV = get_proc_address("glTrackMatrixNV\0"): *fp_glTrackMatrixNV;
	glTransformFeedbackAttribsNV = get_proc_address("glTransformFeedbackAttribsNV\0"): *fp_glTransformFeedbackAttribsNV;
	glTransformFeedbackBufferBase = get_proc_address("glTransformFeedbackBufferBase\0"): *fp_glTransformFeedbackBufferBase;
	glTransformFeedbackBufferRange = get_proc_address("glTransformFeedbackBufferRange\0"): *fp_glTransformFeedbackBufferRange;
	glTransformFeedbackStreamAttribsNV = get_proc_address("glTransformFeedbackStreamAttribsNV\0"): *fp_glTransformFeedbackStreamAttribsNV;
	glTransformFeedbackVaryings = get_proc_address("glTransformFeedbackVaryings\0"): *fp_glTransformFeedbackVaryings;
	glTransformFeedbackVaryingsEXT = get_proc_address("glTransformFeedbackVaryingsEXT\0"): *fp_glTransformFeedbackVaryingsEXT;
	glTransformFeedbackVaryingsNV = get_proc_address("glTransformFeedbackVaryingsNV\0"): *fp_glTransformFeedbackVaryingsNV;
	glTransformPathNV = get_proc_address("glTransformPathNV\0"): *fp_glTransformPathNV;
	glTranslatexOES = get_proc_address("glTranslatexOES\0"): *fp_glTranslatexOES;
	glUniform1d = get_proc_address("glUniform1d\0"): *fp_glUniform1d;
	glUniform1dv = get_proc_address("glUniform1dv\0"): *fp_glUniform1dv;
	glUniform1f = get_proc_address("glUniform1f\0"): *fp_glUniform1f;
	glUniform1fARB = get_proc_address("glUniform1fARB\0"): *fp_glUniform1fARB;
	glUniform1fv = get_proc_address("glUniform1fv\0"): *fp_glUniform1fv;
	glUniform1fvARB = get_proc_address("glUniform1fvARB\0"): *fp_glUniform1fvARB;
	glUniform1i = get_proc_address("glUniform1i\0"): *fp_glUniform1i;
	glUniform1i64ARB = get_proc_address("glUniform1i64ARB\0"): *fp_glUniform1i64ARB;
	glUniform1i64NV = get_proc_address("glUniform1i64NV\0"): *fp_glUniform1i64NV;
	glUniform1i64vARB = get_proc_address("glUniform1i64vARB\0"): *fp_glUniform1i64vARB;
	glUniform1i64vNV = get_proc_address("glUniform1i64vNV\0"): *fp_glUniform1i64vNV;
	glUniform1iARB = get_proc_address("glUniform1iARB\0"): *fp_glUniform1iARB;
	glUniform1iv = get_proc_address("glUniform1iv\0"): *fp_glUniform1iv;
	glUniform1ivARB = get_proc_address("glUniform1ivARB\0"): *fp_glUniform1ivARB;
	glUniform1ui = get_proc_address("glUniform1ui\0"): *fp_glUniform1ui;
	glUniform1ui64ARB = get_proc_address("glUniform1ui64ARB\0"): *fp_glUniform1ui64ARB;
	glUniform1ui64NV = get_proc_address("glUniform1ui64NV\0"): *fp_glUniform1ui64NV;
	glUniform1ui64vARB = get_proc_address("glUniform1ui64vARB\0"): *fp_glUniform1ui64vARB;
	glUniform1ui64vNV = get_proc_address("glUniform1ui64vNV\0"): *fp_glUniform1ui64vNV;
	glUniform1uiEXT = get_proc_address("glUniform1uiEXT\0"): *fp_glUniform1uiEXT;
	glUniform1uiv = get_proc_address("glUniform1uiv\0"): *fp_glUniform1uiv;
	glUniform1uivEXT = get_proc_address("glUniform1uivEXT\0"): *fp_glUniform1uivEXT;
	glUniform2d = get_proc_address("glUniform2d\0"): *fp_glUniform2d;
	glUniform2dv = get_proc_address("glUniform2dv\0"): *fp_glUniform2dv;
	glUniform2f = get_proc_address("glUniform2f\0"): *fp_glUniform2f;
	glUniform2fARB = get_proc_address("glUniform2fARB\0"): *fp_glUniform2fARB;
	glUniform2fv = get_proc_address("glUniform2fv\0"): *fp_glUniform2fv;
	glUniform2fvARB = get_proc_address("glUniform2fvARB\0"): *fp_glUniform2fvARB;
	glUniform2i = get_proc_address("glUniform2i\0"): *fp_glUniform2i;
	glUniform2i64ARB = get_proc_address("glUniform2i64ARB\0"): *fp_glUniform2i64ARB;
	glUniform2i64NV = get_proc_address("glUniform2i64NV\0"): *fp_glUniform2i64NV;
	glUniform2i64vARB = get_proc_address("glUniform2i64vARB\0"): *fp_glUniform2i64vARB;
	glUniform2i64vNV = get_proc_address("glUniform2i64vNV\0"): *fp_glUniform2i64vNV;
	glUniform2iARB = get_proc_address("glUniform2iARB\0"): *fp_glUniform2iARB;
	glUniform2iv = get_proc_address("glUniform2iv\0"): *fp_glUniform2iv;
	glUniform2ivARB = get_proc_address("glUniform2ivARB\0"): *fp_glUniform2ivARB;
	glUniform2ui = get_proc_address("glUniform2ui\0"): *fp_glUniform2ui;
	glUniform2ui64ARB = get_proc_address("glUniform2ui64ARB\0"): *fp_glUniform2ui64ARB;
	glUniform2ui64NV = get_proc_address("glUniform2ui64NV\0"): *fp_glUniform2ui64NV;
	glUniform2ui64vARB = get_proc_address("glUniform2ui64vARB\0"): *fp_glUniform2ui64vARB;
	glUniform2ui64vNV = get_proc_address("glUniform2ui64vNV\0"): *fp_glUniform2ui64vNV;
	glUniform2uiEXT = get_proc_address("glUniform2uiEXT\0"): *fp_glUniform2uiEXT;
	glUniform2uiv = get_proc_address("glUniform2uiv\0"): *fp_glUniform2uiv;
	glUniform2uivEXT = get_proc_address("glUniform2uivEXT\0"): *fp_glUniform2uivEXT;
	glUniform3d = get_proc_address("glUniform3d\0"): *fp_glUniform3d;
	glUniform3dv = get_proc_address("glUniform3dv\0"): *fp_glUniform3dv;
	glUniform3f = get_proc_address("glUniform3f\0"): *fp_glUniform3f;
	glUniform3fARB = get_proc_address("glUniform3fARB\0"): *fp_glUniform3fARB;
	glUniform3fv = get_proc_address("glUniform3fv\0"): *fp_glUniform3fv;
	glUniform3fvARB = get_proc_address("glUniform3fvARB\0"): *fp_glUniform3fvARB;
	glUniform3i = get_proc_address("glUniform3i\0"): *fp_glUniform3i;
	glUniform3i64ARB = get_proc_address("glUniform3i64ARB\0"): *fp_glUniform3i64ARB;
	glUniform3i64NV = get_proc_address("glUniform3i64NV\0"): *fp_glUniform3i64NV;
	glUniform3i64vARB = get_proc_address("glUniform3i64vARB\0"): *fp_glUniform3i64vARB;
	glUniform3i64vNV = get_proc_address("glUniform3i64vNV\0"): *fp_glUniform3i64vNV;
	glUniform3iARB = get_proc_address("glUniform3iARB\0"): *fp_glUniform3iARB;
	glUniform3iv = get_proc_address("glUniform3iv\0"): *fp_glUniform3iv;
	glUniform3ivARB = get_proc_address("glUniform3ivARB\0"): *fp_glUniform3ivARB;
	glUniform3ui = get_proc_address("glUniform3ui\0"): *fp_glUniform3ui;
	glUniform3ui64ARB = get_proc_address("glUniform3ui64ARB\0"): *fp_glUniform3ui64ARB;
	glUniform3ui64NV = get_proc_address("glUniform3ui64NV\0"): *fp_glUniform3ui64NV;
	glUniform3ui64vARB = get_proc_address("glUniform3ui64vARB\0"): *fp_glUniform3ui64vARB;
	glUniform3ui64vNV = get_proc_address("glUniform3ui64vNV\0"): *fp_glUniform3ui64vNV;
	glUniform3uiEXT = get_proc_address("glUniform3uiEXT\0"): *fp_glUniform3uiEXT;
	glUniform3uiv = get_proc_address("glUniform3uiv\0"): *fp_glUniform3uiv;
	glUniform3uivEXT = get_proc_address("glUniform3uivEXT\0"): *fp_glUniform3uivEXT;
	glUniform4d = get_proc_address("glUniform4d\0"): *fp_glUniform4d;
	glUniform4dv = get_proc_address("glUniform4dv\0"): *fp_glUniform4dv;
	glUniform4f = get_proc_address("glUniform4f\0"): *fp_glUniform4f;
	glUniform4fARB = get_proc_address("glUniform4fARB\0"): *fp_glUniform4fARB;
	glUniform4fv = get_proc_address("glUniform4fv\0"): *fp_glUniform4fv;
	glUniform4fvARB = get_proc_address("glUniform4fvARB\0"): *fp_glUniform4fvARB;
	glUniform4i = get_proc_address("glUniform4i\0"): *fp_glUniform4i;
	glUniform4i64ARB = get_proc_address("glUniform4i64ARB\0"): *fp_glUniform4i64ARB;
	glUniform4i64NV = get_proc_address("glUniform4i64NV\0"): *fp_glUniform4i64NV;
	glUniform4i64vARB = get_proc_address("glUniform4i64vARB\0"): *fp_glUniform4i64vARB;
	glUniform4i64vNV = get_proc_address("glUniform4i64vNV\0"): *fp_glUniform4i64vNV;
	glUniform4iARB = get_proc_address("glUniform4iARB\0"): *fp_glUniform4iARB;
	glUniform4iv = get_proc_address("glUniform4iv\0"): *fp_glUniform4iv;
	glUniform4ivARB = get_proc_address("glUniform4ivARB\0"): *fp_glUniform4ivARB;
	glUniform4ui = get_proc_address("glUniform4ui\0"): *fp_glUniform4ui;
	glUniform4ui64ARB = get_proc_address("glUniform4ui64ARB\0"): *fp_glUniform4ui64ARB;
	glUniform4ui64NV = get_proc_address("glUniform4ui64NV\0"): *fp_glUniform4ui64NV;
	glUniform4ui64vARB = get_proc_address("glUniform4ui64vARB\0"): *fp_glUniform4ui64vARB;
	glUniform4ui64vNV = get_proc_address("glUniform4ui64vNV\0"): *fp_glUniform4ui64vNV;
	glUniform4uiEXT = get_proc_address("glUniform4uiEXT\0"): *fp_glUniform4uiEXT;
	glUniform4uiv = get_proc_address("glUniform4uiv\0"): *fp_glUniform4uiv;
	glUniform4uivEXT = get_proc_address("glUniform4uivEXT\0"): *fp_glUniform4uivEXT;
	glUniformBlockBinding = get_proc_address("glUniformBlockBinding\0"): *fp_glUniformBlockBinding;
	glUniformBufferEXT = get_proc_address("glUniformBufferEXT\0"): *fp_glUniformBufferEXT;
	glUniformHandleui64ARB = get_proc_address("glUniformHandleui64ARB\0"): *fp_glUniformHandleui64ARB;
	glUniformHandleui64NV = get_proc_address("glUniformHandleui64NV\0"): *fp_glUniformHandleui64NV;
	glUniformHandleui64vARB = get_proc_address("glUniformHandleui64vARB\0"): *fp_glUniformHandleui64vARB;
	glUniformHandleui64vNV = get_proc_address("glUniformHandleui64vNV\0"): *fp_glUniformHandleui64vNV;
	glUniformMatrix2dv = get_proc_address("glUniformMatrix2dv\0"): *fp_glUniformMatrix2dv;
	glUniformMatrix2fv = get_proc_address("glUniformMatrix2fv\0"): *fp_glUniformMatrix2fv;
	glUniformMatrix2fvARB = get_proc_address("glUniformMatrix2fvARB\0"): *fp_glUniformMatrix2fvARB;
	glUniformMatrix2x3dv = get_proc_address("glUniformMatrix2x3dv\0"): *fp_glUniformMatrix2x3dv;
	glUniformMatrix2x3fv = get_proc_address("glUniformMatrix2x3fv\0"): *fp_glUniformMatrix2x3fv;
	glUniformMatrix2x4dv = get_proc_address("glUniformMatrix2x4dv\0"): *fp_glUniformMatrix2x4dv;
	glUniformMatrix2x4fv = get_proc_address("glUniformMatrix2x4fv\0"): *fp_glUniformMatrix2x4fv;
	glUniformMatrix3dv = get_proc_address("glUniformMatrix3dv\0"): *fp_glUniformMatrix3dv;
	glUniformMatrix3fv = get_proc_address("glUniformMatrix3fv\0"): *fp_glUniformMatrix3fv;
	glUniformMatrix3fvARB = get_proc_address("glUniformMatrix3fvARB\0"): *fp_glUniformMatrix3fvARB;
	glUniformMatrix3x2dv = get_proc_address("glUniformMatrix3x2dv\0"): *fp_glUniformMatrix3x2dv;
	glUniformMatrix3x2fv = get_proc_address("glUniformMatrix3x2fv\0"): *fp_glUniformMatrix3x2fv;
	glUniformMatrix3x4dv = get_proc_address("glUniformMatrix3x4dv\0"): *fp_glUniformMatrix3x4dv;
	glUniformMatrix3x4fv = get_proc_address("glUniformMatrix3x4fv\0"): *fp_glUniformMatrix3x4fv;
	glUniformMatrix4dv = get_proc_address("glUniformMatrix4dv\0"): *fp_glUniformMatrix4dv;
	glUniformMatrix4fv = get_proc_address("glUniformMatrix4fv\0"): *fp_glUniformMatrix4fv;
	glUniformMatrix4fvARB = get_proc_address("glUniformMatrix4fvARB\0"): *fp_glUniformMatrix4fvARB;
	glUniformMatrix4x2dv = get_proc_address("glUniformMatrix4x2dv\0"): *fp_glUniformMatrix4x2dv;
	glUniformMatrix4x2fv = get_proc_address("glUniformMatrix4x2fv\0"): *fp_glUniformMatrix4x2fv;
	glUniformMatrix4x3dv = get_proc_address("glUniformMatrix4x3dv\0"): *fp_glUniformMatrix4x3dv;
	glUniformMatrix4x3fv = get_proc_address("glUniformMatrix4x3fv\0"): *fp_glUniformMatrix4x3fv;
	glUniformSubroutinesuiv = get_proc_address("glUniformSubroutinesuiv\0"): *fp_glUniformSubroutinesuiv;
	glUniformui64NV = get_proc_address("glUniformui64NV\0"): *fp_glUniformui64NV;
	glUniformui64vNV = get_proc_address("glUniformui64vNV\0"): *fp_glUniformui64vNV;
	glUnlockArraysEXT = get_proc_address("glUnlockArraysEXT\0"): *fp_glUnlockArraysEXT;
	glUnmapBuffer = get_proc_address("glUnmapBuffer\0"): *fp_glUnmapBuffer;
	glUnmapBufferARB = get_proc_address("glUnmapBufferARB\0"): *fp_glUnmapBufferARB;
	glUnmapNamedBuffer = get_proc_address("glUnmapNamedBuffer\0"): *fp_glUnmapNamedBuffer;
	glUnmapNamedBufferEXT = get_proc_address("glUnmapNamedBufferEXT\0"): *fp_glUnmapNamedBufferEXT;
	glUnmapObjectBufferATI = get_proc_address("glUnmapObjectBufferATI\0"): *fp_glUnmapObjectBufferATI;
	glUnmapTexture2DINTEL = get_proc_address("glUnmapTexture2DINTEL\0"): *fp_glUnmapTexture2DINTEL;
	glUpdateObjectBufferATI = get_proc_address("glUpdateObjectBufferATI\0"): *fp_glUpdateObjectBufferATI;
	glUploadGpuMaskNVX = get_proc_address("glUploadGpuMaskNVX\0"): *fp_glUploadGpuMaskNVX;
	glUseProgram = get_proc_address("glUseProgram\0"): *fp_glUseProgram;
	glUseProgramObjectARB = get_proc_address("glUseProgramObjectARB\0"): *fp_glUseProgramObjectARB;
	glUseProgramStages = get_proc_address("glUseProgramStages\0"): *fp_glUseProgramStages;
	glUseShaderProgramEXT = get_proc_address("glUseShaderProgramEXT\0"): *fp_glUseShaderProgramEXT;
	glVDPAUFiniNV = get_proc_address("glVDPAUFiniNV\0"): *fp_glVDPAUFiniNV;
	glVDPAUGetSurfaceivNV = get_proc_address("glVDPAUGetSurfaceivNV\0"): *fp_glVDPAUGetSurfaceivNV;
	glVDPAUInitNV = get_proc_address("glVDPAUInitNV\0"): *fp_glVDPAUInitNV;
	glVDPAUIsSurfaceNV = get_proc_address("glVDPAUIsSurfaceNV\0"): *fp_glVDPAUIsSurfaceNV;
	glVDPAUMapSurfacesNV = get_proc_address("glVDPAUMapSurfacesNV\0"): *fp_glVDPAUMapSurfacesNV;
	glVDPAURegisterOutputSurfaceNV = get_proc_address("glVDPAURegisterOutputSurfaceNV\0"): *fp_glVDPAURegisterOutputSurfaceNV;
	glVDPAURegisterVideoSurfaceNV = get_proc_address("glVDPAURegisterVideoSurfaceNV\0"): *fp_glVDPAURegisterVideoSurfaceNV;
	glVDPAURegisterVideoSurfaceWithPictureStructureNV = get_proc_address("glVDPAURegisterVideoSurfaceWithPictureStructureNV\0"): *fp_glVDPAURegisterVideoSurfaceWithPictureStructureNV;
	glVDPAUSurfaceAccessNV = get_proc_address("glVDPAUSurfaceAccessNV\0"): *fp_glVDPAUSurfaceAccessNV;
	glVDPAUUnmapSurfacesNV = get_proc_address("glVDPAUUnmapSurfacesNV\0"): *fp_glVDPAUUnmapSurfacesNV;
	glVDPAUUnregisterSurfaceNV = get_proc_address("glVDPAUUnregisterSurfaceNV\0"): *fp_glVDPAUUnregisterSurfaceNV;
	glValidateProgram = get_proc_address("glValidateProgram\0"): *fp_glValidateProgram;
	glValidateProgramARB = get_proc_address("glValidateProgramARB\0"): *fp_glValidateProgramARB;
	glValidateProgramPipeline = get_proc_address("glValidateProgramPipeline\0"): *fp_glValidateProgramPipeline;
	glVariantArrayObjectATI = get_proc_address("glVariantArrayObjectATI\0"): *fp_glVariantArrayObjectATI;
	glVariantPointerEXT = get_proc_address("glVariantPointerEXT\0"): *fp_glVariantPointerEXT;
	glVariantbvEXT = get_proc_address("glVariantbvEXT\0"): *fp_glVariantbvEXT;
	glVariantdvEXT = get_proc_address("glVariantdvEXT\0"): *fp_glVariantdvEXT;
	glVariantfvEXT = get_proc_address("glVariantfvEXT\0"): *fp_glVariantfvEXT;
	glVariantivEXT = get_proc_address("glVariantivEXT\0"): *fp_glVariantivEXT;
	glVariantsvEXT = get_proc_address("glVariantsvEXT\0"): *fp_glVariantsvEXT;
	glVariantubvEXT = get_proc_address("glVariantubvEXT\0"): *fp_glVariantubvEXT;
	glVariantuivEXT = get_proc_address("glVariantuivEXT\0"): *fp_glVariantuivEXT;
	glVariantusvEXT = get_proc_address("glVariantusvEXT\0"): *fp_glVariantusvEXT;
	glVertex2bOES = get_proc_address("glVertex2bOES\0"): *fp_glVertex2bOES;
	glVertex2bvOES = get_proc_address("glVertex2bvOES\0"): *fp_glVertex2bvOES;
	glVertex2hNV = get_proc_address("glVertex2hNV\0"): *fp_glVertex2hNV;
	glVertex2hvNV = get_proc_address("glVertex2hvNV\0"): *fp_glVertex2hvNV;
	glVertex2xOES = get_proc_address("glVertex2xOES\0"): *fp_glVertex2xOES;
	glVertex2xvOES = get_proc_address("glVertex2xvOES\0"): *fp_glVertex2xvOES;
	glVertex3bOES = get_proc_address("glVertex3bOES\0"): *fp_glVertex3bOES;
	glVertex3bvOES = get_proc_address("glVertex3bvOES\0"): *fp_glVertex3bvOES;
	glVertex3hNV = get_proc_address("glVertex3hNV\0"): *fp_glVertex3hNV;
	glVertex3hvNV = get_proc_address("glVertex3hvNV\0"): *fp_glVertex3hvNV;
	glVertex3xOES = get_proc_address("glVertex3xOES\0"): *fp_glVertex3xOES;
	glVertex3xvOES = get_proc_address("glVertex3xvOES\0"): *fp_glVertex3xvOES;
	glVertex4bOES = get_proc_address("glVertex4bOES\0"): *fp_glVertex4bOES;
	glVertex4bvOES = get_proc_address("glVertex4bvOES\0"): *fp_glVertex4bvOES;
	glVertex4hNV = get_proc_address("glVertex4hNV\0"): *fp_glVertex4hNV;
	glVertex4hvNV = get_proc_address("glVertex4hvNV\0"): *fp_glVertex4hvNV;
	glVertex4xOES = get_proc_address("glVertex4xOES\0"): *fp_glVertex4xOES;
	glVertex4xvOES = get_proc_address("glVertex4xvOES\0"): *fp_glVertex4xvOES;
	glVertexArrayAttribBinding = get_proc_address("glVertexArrayAttribBinding\0"): *fp_glVertexArrayAttribBinding;
	glVertexArrayAttribFormat = get_proc_address("glVertexArrayAttribFormat\0"): *fp_glVertexArrayAttribFormat;
	glVertexArrayAttribIFormat = get_proc_address("glVertexArrayAttribIFormat\0"): *fp_glVertexArrayAttribIFormat;
	glVertexArrayAttribLFormat = get_proc_address("glVertexArrayAttribLFormat\0"): *fp_glVertexArrayAttribLFormat;
	glVertexArrayBindVertexBufferEXT = get_proc_address("glVertexArrayBindVertexBufferEXT\0"): *fp_glVertexArrayBindVertexBufferEXT;
	glVertexArrayBindingDivisor = get_proc_address("glVertexArrayBindingDivisor\0"): *fp_glVertexArrayBindingDivisor;
	glVertexArrayColorOffsetEXT = get_proc_address("glVertexArrayColorOffsetEXT\0"): *fp_glVertexArrayColorOffsetEXT;
	glVertexArrayEdgeFlagOffsetEXT = get_proc_address("glVertexArrayEdgeFlagOffsetEXT\0"): *fp_glVertexArrayEdgeFlagOffsetEXT;
	glVertexArrayElementBuffer = get_proc_address("glVertexArrayElementBuffer\0"): *fp_glVertexArrayElementBuffer;
	glVertexArrayFogCoordOffsetEXT = get_proc_address("glVertexArrayFogCoordOffsetEXT\0"): *fp_glVertexArrayFogCoordOffsetEXT;
	glVertexArrayIndexOffsetEXT = get_proc_address("glVertexArrayIndexOffsetEXT\0"): *fp_glVertexArrayIndexOffsetEXT;
	glVertexArrayMultiTexCoordOffsetEXT = get_proc_address("glVertexArrayMultiTexCoordOffsetEXT\0"): *fp_glVertexArrayMultiTexCoordOffsetEXT;
	glVertexArrayNormalOffsetEXT = get_proc_address("glVertexArrayNormalOffsetEXT\0"): *fp_glVertexArrayNormalOffsetEXT;
	glVertexArrayParameteriAPPLE = get_proc_address("glVertexArrayParameteriAPPLE\0"): *fp_glVertexArrayParameteriAPPLE;
	glVertexArrayRangeAPPLE = get_proc_address("glVertexArrayRangeAPPLE\0"): *fp_glVertexArrayRangeAPPLE;
	glVertexArrayRangeNV = get_proc_address("glVertexArrayRangeNV\0"): *fp_glVertexArrayRangeNV;
	glVertexArraySecondaryColorOffsetEXT = get_proc_address("glVertexArraySecondaryColorOffsetEXT\0"): *fp_glVertexArraySecondaryColorOffsetEXT;
	glVertexArrayTexCoordOffsetEXT = get_proc_address("glVertexArrayTexCoordOffsetEXT\0"): *fp_glVertexArrayTexCoordOffsetEXT;
	glVertexArrayVertexAttribBindingEXT = get_proc_address("glVertexArrayVertexAttribBindingEXT\0"): *fp_glVertexArrayVertexAttribBindingEXT;
	glVertexArrayVertexAttribDivisorEXT = get_proc_address("glVertexArrayVertexAttribDivisorEXT\0"): *fp_glVertexArrayVertexAttribDivisorEXT;
	glVertexArrayVertexAttribFormatEXT = get_proc_address("glVertexArrayVertexAttribFormatEXT\0"): *fp_glVertexArrayVertexAttribFormatEXT;
	glVertexArrayVertexAttribIFormatEXT = get_proc_address("glVertexArrayVertexAttribIFormatEXT\0"): *fp_glVertexArrayVertexAttribIFormatEXT;
	glVertexArrayVertexAttribIOffsetEXT = get_proc_address("glVertexArrayVertexAttribIOffsetEXT\0"): *fp_glVertexArrayVertexAttribIOffsetEXT;
	glVertexArrayVertexAttribLFormatEXT = get_proc_address("glVertexArrayVertexAttribLFormatEXT\0"): *fp_glVertexArrayVertexAttribLFormatEXT;
	glVertexArrayVertexAttribLOffsetEXT = get_proc_address("glVertexArrayVertexAttribLOffsetEXT\0"): *fp_glVertexArrayVertexAttribLOffsetEXT;
	glVertexArrayVertexAttribOffsetEXT = get_proc_address("glVertexArrayVertexAttribOffsetEXT\0"): *fp_glVertexArrayVertexAttribOffsetEXT;
	glVertexArrayVertexBindingDivisorEXT = get_proc_address("glVertexArrayVertexBindingDivisorEXT\0"): *fp_glVertexArrayVertexBindingDivisorEXT;
	glVertexArrayVertexBuffer = get_proc_address("glVertexArrayVertexBuffer\0"): *fp_glVertexArrayVertexBuffer;
	glVertexArrayVertexBuffers = get_proc_address("glVertexArrayVertexBuffers\0"): *fp_glVertexArrayVertexBuffers;
	glVertexArrayVertexOffsetEXT = get_proc_address("glVertexArrayVertexOffsetEXT\0"): *fp_glVertexArrayVertexOffsetEXT;
	glVertexAttrib1d = get_proc_address("glVertexAttrib1d\0"): *fp_glVertexAttrib1d;
	glVertexAttrib1dARB = get_proc_address("glVertexAttrib1dARB\0"): *fp_glVertexAttrib1dARB;
	glVertexAttrib1dNV = get_proc_address("glVertexAttrib1dNV\0"): *fp_glVertexAttrib1dNV;
	glVertexAttrib1dv = get_proc_address("glVertexAttrib1dv\0"): *fp_glVertexAttrib1dv;
	glVertexAttrib1dvARB = get_proc_address("glVertexAttrib1dvARB\0"): *fp_glVertexAttrib1dvARB;
	glVertexAttrib1dvNV = get_proc_address("glVertexAttrib1dvNV\0"): *fp_glVertexAttrib1dvNV;
	glVertexAttrib1f = get_proc_address("glVertexAttrib1f\0"): *fp_glVertexAttrib1f;
	glVertexAttrib1fARB = get_proc_address("glVertexAttrib1fARB\0"): *fp_glVertexAttrib1fARB;
	glVertexAttrib1fNV = get_proc_address("glVertexAttrib1fNV\0"): *fp_glVertexAttrib1fNV;
	glVertexAttrib1fv = get_proc_address("glVertexAttrib1fv\0"): *fp_glVertexAttrib1fv;
	glVertexAttrib1fvARB = get_proc_address("glVertexAttrib1fvARB\0"): *fp_glVertexAttrib1fvARB;
	glVertexAttrib1fvNV = get_proc_address("glVertexAttrib1fvNV\0"): *fp_glVertexAttrib1fvNV;
	glVertexAttrib1hNV = get_proc_address("glVertexAttrib1hNV\0"): *fp_glVertexAttrib1hNV;
	glVertexAttrib1hvNV = get_proc_address("glVertexAttrib1hvNV\0"): *fp_glVertexAttrib1hvNV;
	glVertexAttrib1s = get_proc_address("glVertexAttrib1s\0"): *fp_glVertexAttrib1s;
	glVertexAttrib1sARB = get_proc_address("glVertexAttrib1sARB\0"): *fp_glVertexAttrib1sARB;
	glVertexAttrib1sNV = get_proc_address("glVertexAttrib1sNV\0"): *fp_glVertexAttrib1sNV;
	glVertexAttrib1sv = get_proc_address("glVertexAttrib1sv\0"): *fp_glVertexAttrib1sv;
	glVertexAttrib1svARB = get_proc_address("glVertexAttrib1svARB\0"): *fp_glVertexAttrib1svARB;
	glVertexAttrib1svNV = get_proc_address("glVertexAttrib1svNV\0"): *fp_glVertexAttrib1svNV;
	glVertexAttrib2d = get_proc_address("glVertexAttrib2d\0"): *fp_glVertexAttrib2d;
	glVertexAttrib2dARB = get_proc_address("glVertexAttrib2dARB\0"): *fp_glVertexAttrib2dARB;
	glVertexAttrib2dNV = get_proc_address("glVertexAttrib2dNV\0"): *fp_glVertexAttrib2dNV;
	glVertexAttrib2dv = get_proc_address("glVertexAttrib2dv\0"): *fp_glVertexAttrib2dv;
	glVertexAttrib2dvARB = get_proc_address("glVertexAttrib2dvARB\0"): *fp_glVertexAttrib2dvARB;
	glVertexAttrib2dvNV = get_proc_address("glVertexAttrib2dvNV\0"): *fp_glVertexAttrib2dvNV;
	glVertexAttrib2f = get_proc_address("glVertexAttrib2f\0"): *fp_glVertexAttrib2f;
	glVertexAttrib2fARB = get_proc_address("glVertexAttrib2fARB\0"): *fp_glVertexAttrib2fARB;
	glVertexAttrib2fNV = get_proc_address("glVertexAttrib2fNV\0"): *fp_glVertexAttrib2fNV;
	glVertexAttrib2fv = get_proc_address("glVertexAttrib2fv\0"): *fp_glVertexAttrib2fv;
	glVertexAttrib2fvARB = get_proc_address("glVertexAttrib2fvARB\0"): *fp_glVertexAttrib2fvARB;
	glVertexAttrib2fvNV = get_proc_address("glVertexAttrib2fvNV\0"): *fp_glVertexAttrib2fvNV;
	glVertexAttrib2hNV = get_proc_address("glVertexAttrib2hNV\0"): *fp_glVertexAttrib2hNV;
	glVertexAttrib2hvNV = get_proc_address("glVertexAttrib2hvNV\0"): *fp_glVertexAttrib2hvNV;
	glVertexAttrib2s = get_proc_address("glVertexAttrib2s\0"): *fp_glVertexAttrib2s;
	glVertexAttrib2sARB = get_proc_address("glVertexAttrib2sARB\0"): *fp_glVertexAttrib2sARB;
	glVertexAttrib2sNV = get_proc_address("glVertexAttrib2sNV\0"): *fp_glVertexAttrib2sNV;
	glVertexAttrib2sv = get_proc_address("glVertexAttrib2sv\0"): *fp_glVertexAttrib2sv;
	glVertexAttrib2svARB = get_proc_address("glVertexAttrib2svARB\0"): *fp_glVertexAttrib2svARB;
	glVertexAttrib2svNV = get_proc_address("glVertexAttrib2svNV\0"): *fp_glVertexAttrib2svNV;
	glVertexAttrib3d = get_proc_address("glVertexAttrib3d\0"): *fp_glVertexAttrib3d;
	glVertexAttrib3dARB = get_proc_address("glVertexAttrib3dARB\0"): *fp_glVertexAttrib3dARB;
	glVertexAttrib3dNV = get_proc_address("glVertexAttrib3dNV\0"): *fp_glVertexAttrib3dNV;
	glVertexAttrib3dv = get_proc_address("glVertexAttrib3dv\0"): *fp_glVertexAttrib3dv;
	glVertexAttrib3dvARB = get_proc_address("glVertexAttrib3dvARB\0"): *fp_glVertexAttrib3dvARB;
	glVertexAttrib3dvNV = get_proc_address("glVertexAttrib3dvNV\0"): *fp_glVertexAttrib3dvNV;
	glVertexAttrib3f = get_proc_address("glVertexAttrib3f\0"): *fp_glVertexAttrib3f;
	glVertexAttrib3fARB = get_proc_address("glVertexAttrib3fARB\0"): *fp_glVertexAttrib3fARB;
	glVertexAttrib3fNV = get_proc_address("glVertexAttrib3fNV\0"): *fp_glVertexAttrib3fNV;
	glVertexAttrib3fv = get_proc_address("glVertexAttrib3fv\0"): *fp_glVertexAttrib3fv;
	glVertexAttrib3fvARB = get_proc_address("glVertexAttrib3fvARB\0"): *fp_glVertexAttrib3fvARB;
	glVertexAttrib3fvNV = get_proc_address("glVertexAttrib3fvNV\0"): *fp_glVertexAttrib3fvNV;
	glVertexAttrib3hNV = get_proc_address("glVertexAttrib3hNV\0"): *fp_glVertexAttrib3hNV;
	glVertexAttrib3hvNV = get_proc_address("glVertexAttrib3hvNV\0"): *fp_glVertexAttrib3hvNV;
	glVertexAttrib3s = get_proc_address("glVertexAttrib3s\0"): *fp_glVertexAttrib3s;
	glVertexAttrib3sARB = get_proc_address("glVertexAttrib3sARB\0"): *fp_glVertexAttrib3sARB;
	glVertexAttrib3sNV = get_proc_address("glVertexAttrib3sNV\0"): *fp_glVertexAttrib3sNV;
	glVertexAttrib3sv = get_proc_address("glVertexAttrib3sv\0"): *fp_glVertexAttrib3sv;
	glVertexAttrib3svARB = get_proc_address("glVertexAttrib3svARB\0"): *fp_glVertexAttrib3svARB;
	glVertexAttrib3svNV = get_proc_address("glVertexAttrib3svNV\0"): *fp_glVertexAttrib3svNV;
	glVertexAttrib4Nbv = get_proc_address("glVertexAttrib4Nbv\0"): *fp_glVertexAttrib4Nbv;
	glVertexAttrib4NbvARB = get_proc_address("glVertexAttrib4NbvARB\0"): *fp_glVertexAttrib4NbvARB;
	glVertexAttrib4Niv = get_proc_address("glVertexAttrib4Niv\0"): *fp_glVertexAttrib4Niv;
	glVertexAttrib4NivARB = get_proc_address("glVertexAttrib4NivARB\0"): *fp_glVertexAttrib4NivARB;
	glVertexAttrib4Nsv = get_proc_address("glVertexAttrib4Nsv\0"): *fp_glVertexAttrib4Nsv;
	glVertexAttrib4NsvARB = get_proc_address("glVertexAttrib4NsvARB\0"): *fp_glVertexAttrib4NsvARB;
	glVertexAttrib4Nub = get_proc_address("glVertexAttrib4Nub\0"): *fp_glVertexAttrib4Nub;
	glVertexAttrib4NubARB = get_proc_address("glVertexAttrib4NubARB\0"): *fp_glVertexAttrib4NubARB;
	glVertexAttrib4Nubv = get_proc_address("glVertexAttrib4Nubv\0"): *fp_glVertexAttrib4Nubv;
	glVertexAttrib4NubvARB = get_proc_address("glVertexAttrib4NubvARB\0"): *fp_glVertexAttrib4NubvARB;
	glVertexAttrib4Nuiv = get_proc_address("glVertexAttrib4Nuiv\0"): *fp_glVertexAttrib4Nuiv;
	glVertexAttrib4NuivARB = get_proc_address("glVertexAttrib4NuivARB\0"): *fp_glVertexAttrib4NuivARB;
	glVertexAttrib4Nusv = get_proc_address("glVertexAttrib4Nusv\0"): *fp_glVertexAttrib4Nusv;
	glVertexAttrib4NusvARB = get_proc_address("glVertexAttrib4NusvARB\0"): *fp_glVertexAttrib4NusvARB;
	glVertexAttrib4bv = get_proc_address("glVertexAttrib4bv\0"): *fp_glVertexAttrib4bv;
	glVertexAttrib4bvARB = get_proc_address("glVertexAttrib4bvARB\0"): *fp_glVertexAttrib4bvARB;
	glVertexAttrib4d = get_proc_address("glVertexAttrib4d\0"): *fp_glVertexAttrib4d;
	glVertexAttrib4dARB = get_proc_address("glVertexAttrib4dARB\0"): *fp_glVertexAttrib4dARB;
	glVertexAttrib4dNV = get_proc_address("glVertexAttrib4dNV\0"): *fp_glVertexAttrib4dNV;
	glVertexAttrib4dv = get_proc_address("glVertexAttrib4dv\0"): *fp_glVertexAttrib4dv;
	glVertexAttrib4dvARB = get_proc_address("glVertexAttrib4dvARB\0"): *fp_glVertexAttrib4dvARB;
	glVertexAttrib4dvNV = get_proc_address("glVertexAttrib4dvNV\0"): *fp_glVertexAttrib4dvNV;
	glVertexAttrib4f = get_proc_address("glVertexAttrib4f\0"): *fp_glVertexAttrib4f;
	glVertexAttrib4fARB = get_proc_address("glVertexAttrib4fARB\0"): *fp_glVertexAttrib4fARB;
	glVertexAttrib4fNV = get_proc_address("glVertexAttrib4fNV\0"): *fp_glVertexAttrib4fNV;
	glVertexAttrib4fv = get_proc_address("glVertexAttrib4fv\0"): *fp_glVertexAttrib4fv;
	glVertexAttrib4fvARB = get_proc_address("glVertexAttrib4fvARB\0"): *fp_glVertexAttrib4fvARB;
	glVertexAttrib4fvNV = get_proc_address("glVertexAttrib4fvNV\0"): *fp_glVertexAttrib4fvNV;
	glVertexAttrib4hNV = get_proc_address("glVertexAttrib4hNV\0"): *fp_glVertexAttrib4hNV;
	glVertexAttrib4hvNV = get_proc_address("glVertexAttrib4hvNV\0"): *fp_glVertexAttrib4hvNV;
	glVertexAttrib4iv = get_proc_address("glVertexAttrib4iv\0"): *fp_glVertexAttrib4iv;
	glVertexAttrib4ivARB = get_proc_address("glVertexAttrib4ivARB\0"): *fp_glVertexAttrib4ivARB;
	glVertexAttrib4s = get_proc_address("glVertexAttrib4s\0"): *fp_glVertexAttrib4s;
	glVertexAttrib4sARB = get_proc_address("glVertexAttrib4sARB\0"): *fp_glVertexAttrib4sARB;
	glVertexAttrib4sNV = get_proc_address("glVertexAttrib4sNV\0"): *fp_glVertexAttrib4sNV;
	glVertexAttrib4sv = get_proc_address("glVertexAttrib4sv\0"): *fp_glVertexAttrib4sv;
	glVertexAttrib4svARB = get_proc_address("glVertexAttrib4svARB\0"): *fp_glVertexAttrib4svARB;
	glVertexAttrib4svNV = get_proc_address("glVertexAttrib4svNV\0"): *fp_glVertexAttrib4svNV;
	glVertexAttrib4ubNV = get_proc_address("glVertexAttrib4ubNV\0"): *fp_glVertexAttrib4ubNV;
	glVertexAttrib4ubv = get_proc_address("glVertexAttrib4ubv\0"): *fp_glVertexAttrib4ubv;
	glVertexAttrib4ubvARB = get_proc_address("glVertexAttrib4ubvARB\0"): *fp_glVertexAttrib4ubvARB;
	glVertexAttrib4ubvNV = get_proc_address("glVertexAttrib4ubvNV\0"): *fp_glVertexAttrib4ubvNV;
	glVertexAttrib4uiv = get_proc_address("glVertexAttrib4uiv\0"): *fp_glVertexAttrib4uiv;
	glVertexAttrib4uivARB = get_proc_address("glVertexAttrib4uivARB\0"): *fp_glVertexAttrib4uivARB;
	glVertexAttrib4usv = get_proc_address("glVertexAttrib4usv\0"): *fp_glVertexAttrib4usv;
	glVertexAttrib4usvARB = get_proc_address("glVertexAttrib4usvARB\0"): *fp_glVertexAttrib4usvARB;
	glVertexAttribArrayObjectATI = get_proc_address("glVertexAttribArrayObjectATI\0"): *fp_glVertexAttribArrayObjectATI;
	glVertexAttribBinding = get_proc_address("glVertexAttribBinding\0"): *fp_glVertexAttribBinding;
	glVertexAttribDivisor = get_proc_address("glVertexAttribDivisor\0"): *fp_glVertexAttribDivisor;
	glVertexAttribDivisorARB = get_proc_address("glVertexAttribDivisorARB\0"): *fp_glVertexAttribDivisorARB;
	glVertexAttribFormat = get_proc_address("glVertexAttribFormat\0"): *fp_glVertexAttribFormat;
	glVertexAttribFormatNV = get_proc_address("glVertexAttribFormatNV\0"): *fp_glVertexAttribFormatNV;
	glVertexAttribI1i = get_proc_address("glVertexAttribI1i\0"): *fp_glVertexAttribI1i;
	glVertexAttribI1iEXT = get_proc_address("glVertexAttribI1iEXT\0"): *fp_glVertexAttribI1iEXT;
	glVertexAttribI1iv = get_proc_address("glVertexAttribI1iv\0"): *fp_glVertexAttribI1iv;
	glVertexAttribI1ivEXT = get_proc_address("glVertexAttribI1ivEXT\0"): *fp_glVertexAttribI1ivEXT;
	glVertexAttribI1ui = get_proc_address("glVertexAttribI1ui\0"): *fp_glVertexAttribI1ui;
	glVertexAttribI1uiEXT = get_proc_address("glVertexAttribI1uiEXT\0"): *fp_glVertexAttribI1uiEXT;
	glVertexAttribI1uiv = get_proc_address("glVertexAttribI1uiv\0"): *fp_glVertexAttribI1uiv;
	glVertexAttribI1uivEXT = get_proc_address("glVertexAttribI1uivEXT\0"): *fp_glVertexAttribI1uivEXT;
	glVertexAttribI2i = get_proc_address("glVertexAttribI2i\0"): *fp_glVertexAttribI2i;
	glVertexAttribI2iEXT = get_proc_address("glVertexAttribI2iEXT\0"): *fp_glVertexAttribI2iEXT;
	glVertexAttribI2iv = get_proc_address("glVertexAttribI2iv\0"): *fp_glVertexAttribI2iv;
	glVertexAttribI2ivEXT = get_proc_address("glVertexAttribI2ivEXT\0"): *fp_glVertexAttribI2ivEXT;
	glVertexAttribI2ui = get_proc_address("glVertexAttribI2ui\0"): *fp_glVertexAttribI2ui;
	glVertexAttribI2uiEXT = get_proc_address("glVertexAttribI2uiEXT\0"): *fp_glVertexAttribI2uiEXT;
	glVertexAttribI2uiv = get_proc_address("glVertexAttribI2uiv\0"): *fp_glVertexAttribI2uiv;
	glVertexAttribI2uivEXT = get_proc_address("glVertexAttribI2uivEXT\0"): *fp_glVertexAttribI2uivEXT;
	glVertexAttribI3i = get_proc_address("glVertexAttribI3i\0"): *fp_glVertexAttribI3i;
	glVertexAttribI3iEXT = get_proc_address("glVertexAttribI3iEXT\0"): *fp_glVertexAttribI3iEXT;
	glVertexAttribI3iv = get_proc_address("glVertexAttribI3iv\0"): *fp_glVertexAttribI3iv;
	glVertexAttribI3ivEXT = get_proc_address("glVertexAttribI3ivEXT\0"): *fp_glVertexAttribI3ivEXT;
	glVertexAttribI3ui = get_proc_address("glVertexAttribI3ui\0"): *fp_glVertexAttribI3ui;
	glVertexAttribI3uiEXT = get_proc_address("glVertexAttribI3uiEXT\0"): *fp_glVertexAttribI3uiEXT;
	glVertexAttribI3uiv = get_proc_address("glVertexAttribI3uiv\0"): *fp_glVertexAttribI3uiv;
	glVertexAttribI3uivEXT = get_proc_address("glVertexAttribI3uivEXT\0"): *fp_glVertexAttribI3uivEXT;
	glVertexAttribI4bv = get_proc_address("glVertexAttribI4bv\0"): *fp_glVertexAttribI4bv;
	glVertexAttribI4bvEXT = get_proc_address("glVertexAttribI4bvEXT\0"): *fp_glVertexAttribI4bvEXT;
	glVertexAttribI4i = get_proc_address("glVertexAttribI4i\0"): *fp_glVertexAttribI4i;
	glVertexAttribI4iEXT = get_proc_address("glVertexAttribI4iEXT\0"): *fp_glVertexAttribI4iEXT;
	glVertexAttribI4iv = get_proc_address("glVertexAttribI4iv\0"): *fp_glVertexAttribI4iv;
	glVertexAttribI4ivEXT = get_proc_address("glVertexAttribI4ivEXT\0"): *fp_glVertexAttribI4ivEXT;
	glVertexAttribI4sv = get_proc_address("glVertexAttribI4sv\0"): *fp_glVertexAttribI4sv;
	glVertexAttribI4svEXT = get_proc_address("glVertexAttribI4svEXT\0"): *fp_glVertexAttribI4svEXT;
	glVertexAttribI4ubv = get_proc_address("glVertexAttribI4ubv\0"): *fp_glVertexAttribI4ubv;
	glVertexAttribI4ubvEXT = get_proc_address("glVertexAttribI4ubvEXT\0"): *fp_glVertexAttribI4ubvEXT;
	glVertexAttribI4ui = get_proc_address("glVertexAttribI4ui\0"): *fp_glVertexAttribI4ui;
	glVertexAttribI4uiEXT = get_proc_address("glVertexAttribI4uiEXT\0"): *fp_glVertexAttribI4uiEXT;
	glVertexAttribI4uiv = get_proc_address("glVertexAttribI4uiv\0"): *fp_glVertexAttribI4uiv;
	glVertexAttribI4uivEXT = get_proc_address("glVertexAttribI4uivEXT\0"): *fp_glVertexAttribI4uivEXT;
	glVertexAttribI4usv = get_proc_address("glVertexAttribI4usv\0"): *fp_glVertexAttribI4usv;
	glVertexAttribI4usvEXT = get_proc_address("glVertexAttribI4usvEXT\0"): *fp_glVertexAttribI4usvEXT;
	glVertexAttribIFormat = get_proc_address("glVertexAttribIFormat\0"): *fp_glVertexAttribIFormat;
	glVertexAttribIFormatNV = get_proc_address("glVertexAttribIFormatNV\0"): *fp_glVertexAttribIFormatNV;
	glVertexAttribIPointer = get_proc_address("glVertexAttribIPointer\0"): *fp_glVertexAttribIPointer;
	glVertexAttribIPointerEXT = get_proc_address("glVertexAttribIPointerEXT\0"): *fp_glVertexAttribIPointerEXT;
	glVertexAttribL1d = get_proc_address("glVertexAttribL1d\0"): *fp_glVertexAttribL1d;
	glVertexAttribL1dEXT = get_proc_address("glVertexAttribL1dEXT\0"): *fp_glVertexAttribL1dEXT;
	glVertexAttribL1dv = get_proc_address("glVertexAttribL1dv\0"): *fp_glVertexAttribL1dv;
	glVertexAttribL1dvEXT = get_proc_address("glVertexAttribL1dvEXT\0"): *fp_glVertexAttribL1dvEXT;
	glVertexAttribL1i64NV = get_proc_address("glVertexAttribL1i64NV\0"): *fp_glVertexAttribL1i64NV;
	glVertexAttribL1i64vNV = get_proc_address("glVertexAttribL1i64vNV\0"): *fp_glVertexAttribL1i64vNV;
	glVertexAttribL1ui64ARB = get_proc_address("glVertexAttribL1ui64ARB\0"): *fp_glVertexAttribL1ui64ARB;
	glVertexAttribL1ui64NV = get_proc_address("glVertexAttribL1ui64NV\0"): *fp_glVertexAttribL1ui64NV;
	glVertexAttribL1ui64vARB = get_proc_address("glVertexAttribL1ui64vARB\0"): *fp_glVertexAttribL1ui64vARB;
	glVertexAttribL1ui64vNV = get_proc_address("glVertexAttribL1ui64vNV\0"): *fp_glVertexAttribL1ui64vNV;
	glVertexAttribL2d = get_proc_address("glVertexAttribL2d\0"): *fp_glVertexAttribL2d;
	glVertexAttribL2dEXT = get_proc_address("glVertexAttribL2dEXT\0"): *fp_glVertexAttribL2dEXT;
	glVertexAttribL2dv = get_proc_address("glVertexAttribL2dv\0"): *fp_glVertexAttribL2dv;
	glVertexAttribL2dvEXT = get_proc_address("glVertexAttribL2dvEXT\0"): *fp_glVertexAttribL2dvEXT;
	glVertexAttribL2i64NV = get_proc_address("glVertexAttribL2i64NV\0"): *fp_glVertexAttribL2i64NV;
	glVertexAttribL2i64vNV = get_proc_address("glVertexAttribL2i64vNV\0"): *fp_glVertexAttribL2i64vNV;
	glVertexAttribL2ui64NV = get_proc_address("glVertexAttribL2ui64NV\0"): *fp_glVertexAttribL2ui64NV;
	glVertexAttribL2ui64vNV = get_proc_address("glVertexAttribL2ui64vNV\0"): *fp_glVertexAttribL2ui64vNV;
	glVertexAttribL3d = get_proc_address("glVertexAttribL3d\0"): *fp_glVertexAttribL3d;
	glVertexAttribL3dEXT = get_proc_address("glVertexAttribL3dEXT\0"): *fp_glVertexAttribL3dEXT;
	glVertexAttribL3dv = get_proc_address("glVertexAttribL3dv\0"): *fp_glVertexAttribL3dv;
	glVertexAttribL3dvEXT = get_proc_address("glVertexAttribL3dvEXT\0"): *fp_glVertexAttribL3dvEXT;
	glVertexAttribL3i64NV = get_proc_address("glVertexAttribL3i64NV\0"): *fp_glVertexAttribL3i64NV;
	glVertexAttribL3i64vNV = get_proc_address("glVertexAttribL3i64vNV\0"): *fp_glVertexAttribL3i64vNV;
	glVertexAttribL3ui64NV = get_proc_address("glVertexAttribL3ui64NV\0"): *fp_glVertexAttribL3ui64NV;
	glVertexAttribL3ui64vNV = get_proc_address("glVertexAttribL3ui64vNV\0"): *fp_glVertexAttribL3ui64vNV;
	glVertexAttribL4d = get_proc_address("glVertexAttribL4d\0"): *fp_glVertexAttribL4d;
	glVertexAttribL4dEXT = get_proc_address("glVertexAttribL4dEXT\0"): *fp_glVertexAttribL4dEXT;
	glVertexAttribL4dv = get_proc_address("glVertexAttribL4dv\0"): *fp_glVertexAttribL4dv;
	glVertexAttribL4dvEXT = get_proc_address("glVertexAttribL4dvEXT\0"): *fp_glVertexAttribL4dvEXT;
	glVertexAttribL4i64NV = get_proc_address("glVertexAttribL4i64NV\0"): *fp_glVertexAttribL4i64NV;
	glVertexAttribL4i64vNV = get_proc_address("glVertexAttribL4i64vNV\0"): *fp_glVertexAttribL4i64vNV;
	glVertexAttribL4ui64NV = get_proc_address("glVertexAttribL4ui64NV\0"): *fp_glVertexAttribL4ui64NV;
	glVertexAttribL4ui64vNV = get_proc_address("glVertexAttribL4ui64vNV\0"): *fp_glVertexAttribL4ui64vNV;
	glVertexAttribLFormat = get_proc_address("glVertexAttribLFormat\0"): *fp_glVertexAttribLFormat;
	glVertexAttribLFormatNV = get_proc_address("glVertexAttribLFormatNV\0"): *fp_glVertexAttribLFormatNV;
	glVertexAttribLPointer = get_proc_address("glVertexAttribLPointer\0"): *fp_glVertexAttribLPointer;
	glVertexAttribLPointerEXT = get_proc_address("glVertexAttribLPointerEXT\0"): *fp_glVertexAttribLPointerEXT;
	glVertexAttribP1ui = get_proc_address("glVertexAttribP1ui\0"): *fp_glVertexAttribP1ui;
	glVertexAttribP1uiv = get_proc_address("glVertexAttribP1uiv\0"): *fp_glVertexAttribP1uiv;
	glVertexAttribP2ui = get_proc_address("glVertexAttribP2ui\0"): *fp_glVertexAttribP2ui;
	glVertexAttribP2uiv = get_proc_address("glVertexAttribP2uiv\0"): *fp_glVertexAttribP2uiv;
	glVertexAttribP3ui = get_proc_address("glVertexAttribP3ui\0"): *fp_glVertexAttribP3ui;
	glVertexAttribP3uiv = get_proc_address("glVertexAttribP3uiv\0"): *fp_glVertexAttribP3uiv;
	glVertexAttribP4ui = get_proc_address("glVertexAttribP4ui\0"): *fp_glVertexAttribP4ui;
	glVertexAttribP4uiv = get_proc_address("glVertexAttribP4uiv\0"): *fp_glVertexAttribP4uiv;
	glVertexAttribParameteriAMD = get_proc_address("glVertexAttribParameteriAMD\0"): *fp_glVertexAttribParameteriAMD;
	glVertexAttribPointer = get_proc_address("glVertexAttribPointer\0"): *fp_glVertexAttribPointer;
	glVertexAttribPointerARB = get_proc_address("glVertexAttribPointerARB\0"): *fp_glVertexAttribPointerARB;
	glVertexAttribPointerNV = get_proc_address("glVertexAttribPointerNV\0"): *fp_glVertexAttribPointerNV;
	glVertexAttribs1dvNV = get_proc_address("glVertexAttribs1dvNV\0"): *fp_glVertexAttribs1dvNV;
	glVertexAttribs1fvNV = get_proc_address("glVertexAttribs1fvNV\0"): *fp_glVertexAttribs1fvNV;
	glVertexAttribs1hvNV = get_proc_address("glVertexAttribs1hvNV\0"): *fp_glVertexAttribs1hvNV;
	glVertexAttribs1svNV = get_proc_address("glVertexAttribs1svNV\0"): *fp_glVertexAttribs1svNV;
	glVertexAttribs2dvNV = get_proc_address("glVertexAttribs2dvNV\0"): *fp_glVertexAttribs2dvNV;
	glVertexAttribs2fvNV = get_proc_address("glVertexAttribs2fvNV\0"): *fp_glVertexAttribs2fvNV;
	glVertexAttribs2hvNV = get_proc_address("glVertexAttribs2hvNV\0"): *fp_glVertexAttribs2hvNV;
	glVertexAttribs2svNV = get_proc_address("glVertexAttribs2svNV\0"): *fp_glVertexAttribs2svNV;
	glVertexAttribs3dvNV = get_proc_address("glVertexAttribs3dvNV\0"): *fp_glVertexAttribs3dvNV;
	glVertexAttribs3fvNV = get_proc_address("glVertexAttribs3fvNV\0"): *fp_glVertexAttribs3fvNV;
	glVertexAttribs3hvNV = get_proc_address("glVertexAttribs3hvNV\0"): *fp_glVertexAttribs3hvNV;
	glVertexAttribs3svNV = get_proc_address("glVertexAttribs3svNV\0"): *fp_glVertexAttribs3svNV;
	glVertexAttribs4dvNV = get_proc_address("glVertexAttribs4dvNV\0"): *fp_glVertexAttribs4dvNV;
	glVertexAttribs4fvNV = get_proc_address("glVertexAttribs4fvNV\0"): *fp_glVertexAttribs4fvNV;
	glVertexAttribs4hvNV = get_proc_address("glVertexAttribs4hvNV\0"): *fp_glVertexAttribs4hvNV;
	glVertexAttribs4svNV = get_proc_address("glVertexAttribs4svNV\0"): *fp_glVertexAttribs4svNV;
	glVertexAttribs4ubvNV = get_proc_address("glVertexAttribs4ubvNV\0"): *fp_glVertexAttribs4ubvNV;
	glVertexBindingDivisor = get_proc_address("glVertexBindingDivisor\0"): *fp_glVertexBindingDivisor;
	glVertexBlendARB = get_proc_address("glVertexBlendARB\0"): *fp_glVertexBlendARB;
	glVertexBlendEnvfATI = get_proc_address("glVertexBlendEnvfATI\0"): *fp_glVertexBlendEnvfATI;
	glVertexBlendEnviATI = get_proc_address("glVertexBlendEnviATI\0"): *fp_glVertexBlendEnviATI;
	glVertexFormatNV = get_proc_address("glVertexFormatNV\0"): *fp_glVertexFormatNV;
	glVertexPointerEXT = get_proc_address("glVertexPointerEXT\0"): *fp_glVertexPointerEXT;
	glVertexPointerListIBM = get_proc_address("glVertexPointerListIBM\0"): *fp_glVertexPointerListIBM;
	glVertexPointervINTEL = get_proc_address("glVertexPointervINTEL\0"): *fp_glVertexPointervINTEL;
	glVertexStream1dATI = get_proc_address("glVertexStream1dATI\0"): *fp_glVertexStream1dATI;
	glVertexStream1dvATI = get_proc_address("glVertexStream1dvATI\0"): *fp_glVertexStream1dvATI;
	glVertexStream1fATI = get_proc_address("glVertexStream1fATI\0"): *fp_glVertexStream1fATI;
	glVertexStream1fvATI = get_proc_address("glVertexStream1fvATI\0"): *fp_glVertexStream1fvATI;
	glVertexStream1iATI = get_proc_address("glVertexStream1iATI\0"): *fp_glVertexStream1iATI;
	glVertexStream1ivATI = get_proc_address("glVertexStream1ivATI\0"): *fp_glVertexStream1ivATI;
	glVertexStream1sATI = get_proc_address("glVertexStream1sATI\0"): *fp_glVertexStream1sATI;
	glVertexStream1svATI = get_proc_address("glVertexStream1svATI\0"): *fp_glVertexStream1svATI;
	glVertexStream2dATI = get_proc_address("glVertexStream2dATI\0"): *fp_glVertexStream2dATI;
	glVertexStream2dvATI = get_proc_address("glVertexStream2dvATI\0"): *fp_glVertexStream2dvATI;
	glVertexStream2fATI = get_proc_address("glVertexStream2fATI\0"): *fp_glVertexStream2fATI;
	glVertexStream2fvATI = get_proc_address("glVertexStream2fvATI\0"): *fp_glVertexStream2fvATI;
	glVertexStream2iATI = get_proc_address("glVertexStream2iATI\0"): *fp_glVertexStream2iATI;
	glVertexStream2ivATI = get_proc_address("glVertexStream2ivATI\0"): *fp_glVertexStream2ivATI;
	glVertexStream2sATI = get_proc_address("glVertexStream2sATI\0"): *fp_glVertexStream2sATI;
	glVertexStream2svATI = get_proc_address("glVertexStream2svATI\0"): *fp_glVertexStream2svATI;
	glVertexStream3dATI = get_proc_address("glVertexStream3dATI\0"): *fp_glVertexStream3dATI;
	glVertexStream3dvATI = get_proc_address("glVertexStream3dvATI\0"): *fp_glVertexStream3dvATI;
	glVertexStream3fATI = get_proc_address("glVertexStream3fATI\0"): *fp_glVertexStream3fATI;
	glVertexStream3fvATI = get_proc_address("glVertexStream3fvATI\0"): *fp_glVertexStream3fvATI;
	glVertexStream3iATI = get_proc_address("glVertexStream3iATI\0"): *fp_glVertexStream3iATI;
	glVertexStream3ivATI = get_proc_address("glVertexStream3ivATI\0"): *fp_glVertexStream3ivATI;
	glVertexStream3sATI = get_proc_address("glVertexStream3sATI\0"): *fp_glVertexStream3sATI;
	glVertexStream3svATI = get_proc_address("glVertexStream3svATI\0"): *fp_glVertexStream3svATI;
	glVertexStream4dATI = get_proc_address("glVertexStream4dATI\0"): *fp_glVertexStream4dATI;
	glVertexStream4dvATI = get_proc_address("glVertexStream4dvATI\0"): *fp_glVertexStream4dvATI;
	glVertexStream4fATI = get_proc_address("glVertexStream4fATI\0"): *fp_glVertexStream4fATI;
	glVertexStream4fvATI = get_proc_address("glVertexStream4fvATI\0"): *fp_glVertexStream4fvATI;
	glVertexStream4iATI = get_proc_address("glVertexStream4iATI\0"): *fp_glVertexStream4iATI;
	glVertexStream4ivATI = get_proc_address("glVertexStream4ivATI\0"): *fp_glVertexStream4ivATI;
	glVertexStream4sATI = get_proc_address("glVertexStream4sATI\0"): *fp_glVertexStream4sATI;
	glVertexStream4svATI = get_proc_address("glVertexStream4svATI\0"): *fp_glVertexStream4svATI;
	glVertexWeightPointerEXT = get_proc_address("glVertexWeightPointerEXT\0"): *fp_glVertexWeightPointerEXT;
	glVertexWeightfEXT = get_proc_address("glVertexWeightfEXT\0"): *fp_glVertexWeightfEXT;
	glVertexWeightfvEXT = get_proc_address("glVertexWeightfvEXT\0"): *fp_glVertexWeightfvEXT;
	glVertexWeighthNV = get_proc_address("glVertexWeighthNV\0"): *fp_glVertexWeighthNV;
	glVertexWeighthvNV = get_proc_address("glVertexWeighthvNV\0"): *fp_glVertexWeighthvNV;
	glVideoCaptureNV = get_proc_address("glVideoCaptureNV\0"): *fp_glVideoCaptureNV;
	glVideoCaptureStreamParameterdvNV = get_proc_address("glVideoCaptureStreamParameterdvNV\0"): *fp_glVideoCaptureStreamParameterdvNV;
	glVideoCaptureStreamParameterfvNV = get_proc_address("glVideoCaptureStreamParameterfvNV\0"): *fp_glVideoCaptureStreamParameterfvNV;
	glVideoCaptureStreamParameterivNV = get_proc_address("glVideoCaptureStreamParameterivNV\0"): *fp_glVideoCaptureStreamParameterivNV;
	glViewport = get_proc_address("glViewport\0"): *fp_glViewport;
	glViewportArrayv = get_proc_address("glViewportArrayv\0"): *fp_glViewportArrayv;
	glViewportIndexedf = get_proc_address("glViewportIndexedf\0"): *fp_glViewportIndexedf;
	glViewportIndexedfv = get_proc_address("glViewportIndexedfv\0"): *fp_glViewportIndexedfv;
	glViewportPositionWScaleNV = get_proc_address("glViewportPositionWScaleNV\0"): *fp_glViewportPositionWScaleNV;
	glViewportSwizzleNV = get_proc_address("glViewportSwizzleNV\0"): *fp_glViewportSwizzleNV;
	glWaitSemaphoreEXT = get_proc_address("glWaitSemaphoreEXT\0"): *fp_glWaitSemaphoreEXT;
	glWaitSemaphoreui64NVX = get_proc_address("glWaitSemaphoreui64NVX\0"): *fp_glWaitSemaphoreui64NVX;
	glWaitSync = get_proc_address("glWaitSync\0"): *fp_glWaitSync;
	glWaitVkSemaphoreNV = get_proc_address("glWaitVkSemaphoreNV\0"): *fp_glWaitVkSemaphoreNV;
	glWeightPathsNV = get_proc_address("glWeightPathsNV\0"): *fp_glWeightPathsNV;
	glWeightPointerARB = get_proc_address("glWeightPointerARB\0"): *fp_glWeightPointerARB;
	glWeightbvARB = get_proc_address("glWeightbvARB\0"): *fp_glWeightbvARB;
	glWeightdvARB = get_proc_address("glWeightdvARB\0"): *fp_glWeightdvARB;
	glWeightfvARB = get_proc_address("glWeightfvARB\0"): *fp_glWeightfvARB;
	glWeightivARB = get_proc_address("glWeightivARB\0"): *fp_glWeightivARB;
	glWeightsvARB = get_proc_address("glWeightsvARB\0"): *fp_glWeightsvARB;
	glWeightubvARB = get_proc_address("glWeightubvARB\0"): *fp_glWeightubvARB;
	glWeightuivARB = get_proc_address("glWeightuivARB\0"): *fp_glWeightuivARB;
	glWeightusvARB = get_proc_address("glWeightusvARB\0"): *fp_glWeightusvARB;
	glWindowPos2dARB = get_proc_address("glWindowPos2dARB\0"): *fp_glWindowPos2dARB;
	glWindowPos2dMESA = get_proc_address("glWindowPos2dMESA\0"): *fp_glWindowPos2dMESA;
	glWindowPos2dvARB = get_proc_address("glWindowPos2dvARB\0"): *fp_glWindowPos2dvARB;
	glWindowPos2dvMESA = get_proc_address("glWindowPos2dvMESA\0"): *fp_glWindowPos2dvMESA;
	glWindowPos2fARB = get_proc_address("glWindowPos2fARB\0"): *fp_glWindowPos2fARB;
	glWindowPos2fMESA = get_proc_address("glWindowPos2fMESA\0"): *fp_glWindowPos2fMESA;
	glWindowPos2fvARB = get_proc_address("glWindowPos2fvARB\0"): *fp_glWindowPos2fvARB;
	glWindowPos2fvMESA = get_proc_address("glWindowPos2fvMESA\0"): *fp_glWindowPos2fvMESA;
	glWindowPos2iARB = get_proc_address("glWindowPos2iARB\0"): *fp_glWindowPos2iARB;
	glWindowPos2iMESA = get_proc_address("glWindowPos2iMESA\0"): *fp_glWindowPos2iMESA;
	glWindowPos2ivARB = get_proc_address("glWindowPos2ivARB\0"): *fp_glWindowPos2ivARB;
	glWindowPos2ivMESA = get_proc_address("glWindowPos2ivMESA\0"): *fp_glWindowPos2ivMESA;
	glWindowPos2sARB = get_proc_address("glWindowPos2sARB\0"): *fp_glWindowPos2sARB;
	glWindowPos2sMESA = get_proc_address("glWindowPos2sMESA\0"): *fp_glWindowPos2sMESA;
	glWindowPos2svARB = get_proc_address("glWindowPos2svARB\0"): *fp_glWindowPos2svARB;
	glWindowPos2svMESA = get_proc_address("glWindowPos2svMESA\0"): *fp_glWindowPos2svMESA;
	glWindowPos3dARB = get_proc_address("glWindowPos3dARB\0"): *fp_glWindowPos3dARB;
	glWindowPos3dMESA = get_proc_address("glWindowPos3dMESA\0"): *fp_glWindowPos3dMESA;
	glWindowPos3dvARB = get_proc_address("glWindowPos3dvARB\0"): *fp_glWindowPos3dvARB;
	glWindowPos3dvMESA = get_proc_address("glWindowPos3dvMESA\0"): *fp_glWindowPos3dvMESA;
	glWindowPos3fARB = get_proc_address("glWindowPos3fARB\0"): *fp_glWindowPos3fARB;
	glWindowPos3fMESA = get_proc_address("glWindowPos3fMESA\0"): *fp_glWindowPos3fMESA;
	glWindowPos3fvARB = get_proc_address("glWindowPos3fvARB\0"): *fp_glWindowPos3fvARB;
	glWindowPos3fvMESA = get_proc_address("glWindowPos3fvMESA\0"): *fp_glWindowPos3fvMESA;
	glWindowPos3iARB = get_proc_address("glWindowPos3iARB\0"): *fp_glWindowPos3iARB;
	glWindowPos3iMESA = get_proc_address("glWindowPos3iMESA\0"): *fp_glWindowPos3iMESA;
	glWindowPos3ivARB = get_proc_address("glWindowPos3ivARB\0"): *fp_glWindowPos3ivARB;
	glWindowPos3ivMESA = get_proc_address("glWindowPos3ivMESA\0"): *fp_glWindowPos3ivMESA;
	glWindowPos3sARB = get_proc_address("glWindowPos3sARB\0"): *fp_glWindowPos3sARB;
	glWindowPos3sMESA = get_proc_address("glWindowPos3sMESA\0"): *fp_glWindowPos3sMESA;
	glWindowPos3svARB = get_proc_address("glWindowPos3svARB\0"): *fp_glWindowPos3svARB;
	glWindowPos3svMESA = get_proc_address("glWindowPos3svMESA\0"): *fp_glWindowPos3svMESA;
	glWindowPos4dMESA = get_proc_address("glWindowPos4dMESA\0"): *fp_glWindowPos4dMESA;
	glWindowPos4dvMESA = get_proc_address("glWindowPos4dvMESA\0"): *fp_glWindowPos4dvMESA;
	glWindowPos4fMESA = get_proc_address("glWindowPos4fMESA\0"): *fp_glWindowPos4fMESA;
	glWindowPos4fvMESA = get_proc_address("glWindowPos4fvMESA\0"): *fp_glWindowPos4fvMESA;
	glWindowPos4iMESA = get_proc_address("glWindowPos4iMESA\0"): *fp_glWindowPos4iMESA;
	glWindowPos4ivMESA = get_proc_address("glWindowPos4ivMESA\0"): *fp_glWindowPos4ivMESA;
	glWindowPos4sMESA = get_proc_address("glWindowPos4sMESA\0"): *fp_glWindowPos4sMESA;
	glWindowPos4svMESA = get_proc_address("glWindowPos4svMESA\0"): *fp_glWindowPos4svMESA;
	glWindowRectanglesEXT = get_proc_address("glWindowRectanglesEXT\0"): *fp_glWindowRectanglesEXT;
	glWriteMaskEXT = get_proc_address("glWriteMaskEXT\0"): *fp_glWriteMaskEXT;
};

// Function loading with user loader
export type fp_get_proc_address = fn(procName: *c::char) *opaque;

fn call_user_get_proc_address(user_get_proc_address: *fp_get_proc_address, proc_name: str) *opaque = {
	let cstr = ((&proc_name): *types::string).data: *c::char;
	return user_get_proc_address(cstr);
};

export fn load_with_fn(user_get_proc_address: *fp_get_proc_address) void = {
	glAccumxOES = call_user_get_proc_address(user_get_proc_address, "glAccumxOES\0"): *fp_glAccumxOES;
	glAcquireKeyedMutexWin32EXT = call_user_get_proc_address(user_get_proc_address, "glAcquireKeyedMutexWin32EXT\0"): *fp_glAcquireKeyedMutexWin32EXT;
	glActiveProgramEXT = call_user_get_proc_address(user_get_proc_address, "glActiveProgramEXT\0"): *fp_glActiveProgramEXT;
	glActiveShaderProgram = call_user_get_proc_address(user_get_proc_address, "glActiveShaderProgram\0"): *fp_glActiveShaderProgram;
	glActiveStencilFaceEXT = call_user_get_proc_address(user_get_proc_address, "glActiveStencilFaceEXT\0"): *fp_glActiveStencilFaceEXT;
	glActiveTexture = call_user_get_proc_address(user_get_proc_address, "glActiveTexture\0"): *fp_glActiveTexture;
	glActiveTextureARB = call_user_get_proc_address(user_get_proc_address, "glActiveTextureARB\0"): *fp_glActiveTextureARB;
	glActiveVaryingNV = call_user_get_proc_address(user_get_proc_address, "glActiveVaryingNV\0"): *fp_glActiveVaryingNV;
	glAlphaFragmentOp1ATI = call_user_get_proc_address(user_get_proc_address, "glAlphaFragmentOp1ATI\0"): *fp_glAlphaFragmentOp1ATI;
	glAlphaFragmentOp2ATI = call_user_get_proc_address(user_get_proc_address, "glAlphaFragmentOp2ATI\0"): *fp_glAlphaFragmentOp2ATI;
	glAlphaFragmentOp3ATI = call_user_get_proc_address(user_get_proc_address, "glAlphaFragmentOp3ATI\0"): *fp_glAlphaFragmentOp3ATI;
	glAlphaFuncxOES = call_user_get_proc_address(user_get_proc_address, "glAlphaFuncxOES\0"): *fp_glAlphaFuncxOES;
	glAlphaToCoverageDitherControlNV = call_user_get_proc_address(user_get_proc_address, "glAlphaToCoverageDitherControlNV\0"): *fp_glAlphaToCoverageDitherControlNV;
	glApplyFramebufferAttachmentCMAAINTEL = call_user_get_proc_address(user_get_proc_address, "glApplyFramebufferAttachmentCMAAINTEL\0"): *fp_glApplyFramebufferAttachmentCMAAINTEL;
	glApplyTextureEXT = call_user_get_proc_address(user_get_proc_address, "glApplyTextureEXT\0"): *fp_glApplyTextureEXT;
	glAreProgramsResidentNV = call_user_get_proc_address(user_get_proc_address, "glAreProgramsResidentNV\0"): *fp_glAreProgramsResidentNV;
	glAreTexturesResidentEXT = call_user_get_proc_address(user_get_proc_address, "glAreTexturesResidentEXT\0"): *fp_glAreTexturesResidentEXT;
	glArrayElementEXT = call_user_get_proc_address(user_get_proc_address, "glArrayElementEXT\0"): *fp_glArrayElementEXT;
	glArrayObjectATI = call_user_get_proc_address(user_get_proc_address, "glArrayObjectATI\0"): *fp_glArrayObjectATI;
	glAsyncCopyBufferSubDataNVX = call_user_get_proc_address(user_get_proc_address, "glAsyncCopyBufferSubDataNVX\0"): *fp_glAsyncCopyBufferSubDataNVX;
	glAsyncCopyImageSubDataNVX = call_user_get_proc_address(user_get_proc_address, "glAsyncCopyImageSubDataNVX\0"): *fp_glAsyncCopyImageSubDataNVX;
	glAsyncMarkerSGIX = call_user_get_proc_address(user_get_proc_address, "glAsyncMarkerSGIX\0"): *fp_glAsyncMarkerSGIX;
	glAttachObjectARB = call_user_get_proc_address(user_get_proc_address, "glAttachObjectARB\0"): *fp_glAttachObjectARB;
	glAttachShader = call_user_get_proc_address(user_get_proc_address, "glAttachShader\0"): *fp_glAttachShader;
	glBeginConditionalRender = call_user_get_proc_address(user_get_proc_address, "glBeginConditionalRender\0"): *fp_glBeginConditionalRender;
	glBeginConditionalRenderNV = call_user_get_proc_address(user_get_proc_address, "glBeginConditionalRenderNV\0"): *fp_glBeginConditionalRenderNV;
	glBeginConditionalRenderNVX = call_user_get_proc_address(user_get_proc_address, "glBeginConditionalRenderNVX\0"): *fp_glBeginConditionalRenderNVX;
	glBeginFragmentShaderATI = call_user_get_proc_address(user_get_proc_address, "glBeginFragmentShaderATI\0"): *fp_glBeginFragmentShaderATI;
	glBeginOcclusionQueryNV = call_user_get_proc_address(user_get_proc_address, "glBeginOcclusionQueryNV\0"): *fp_glBeginOcclusionQueryNV;
	glBeginPerfMonitorAMD = call_user_get_proc_address(user_get_proc_address, "glBeginPerfMonitorAMD\0"): *fp_glBeginPerfMonitorAMD;
	glBeginPerfQueryINTEL = call_user_get_proc_address(user_get_proc_address, "glBeginPerfQueryINTEL\0"): *fp_glBeginPerfQueryINTEL;
	glBeginQuery = call_user_get_proc_address(user_get_proc_address, "glBeginQuery\0"): *fp_glBeginQuery;
	glBeginQueryARB = call_user_get_proc_address(user_get_proc_address, "glBeginQueryARB\0"): *fp_glBeginQueryARB;
	glBeginQueryIndexed = call_user_get_proc_address(user_get_proc_address, "glBeginQueryIndexed\0"): *fp_glBeginQueryIndexed;
	glBeginTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glBeginTransformFeedback\0"): *fp_glBeginTransformFeedback;
	glBeginTransformFeedbackEXT = call_user_get_proc_address(user_get_proc_address, "glBeginTransformFeedbackEXT\0"): *fp_glBeginTransformFeedbackEXT;
	glBeginTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glBeginTransformFeedbackNV\0"): *fp_glBeginTransformFeedbackNV;
	glBeginVertexShaderEXT = call_user_get_proc_address(user_get_proc_address, "glBeginVertexShaderEXT\0"): *fp_glBeginVertexShaderEXT;
	glBeginVideoCaptureNV = call_user_get_proc_address(user_get_proc_address, "glBeginVideoCaptureNV\0"): *fp_glBeginVideoCaptureNV;
	glBindAttribLocation = call_user_get_proc_address(user_get_proc_address, "glBindAttribLocation\0"): *fp_glBindAttribLocation;
	glBindAttribLocationARB = call_user_get_proc_address(user_get_proc_address, "glBindAttribLocationARB\0"): *fp_glBindAttribLocationARB;
	glBindBuffer = call_user_get_proc_address(user_get_proc_address, "glBindBuffer\0"): *fp_glBindBuffer;
	glBindBufferARB = call_user_get_proc_address(user_get_proc_address, "glBindBufferARB\0"): *fp_glBindBufferARB;
	glBindBufferBase = call_user_get_proc_address(user_get_proc_address, "glBindBufferBase\0"): *fp_glBindBufferBase;
	glBindBufferBaseEXT = call_user_get_proc_address(user_get_proc_address, "glBindBufferBaseEXT\0"): *fp_glBindBufferBaseEXT;
	glBindBufferBaseNV = call_user_get_proc_address(user_get_proc_address, "glBindBufferBaseNV\0"): *fp_glBindBufferBaseNV;
	glBindBufferOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glBindBufferOffsetEXT\0"): *fp_glBindBufferOffsetEXT;
	glBindBufferOffsetNV = call_user_get_proc_address(user_get_proc_address, "glBindBufferOffsetNV\0"): *fp_glBindBufferOffsetNV;
	glBindBufferRange = call_user_get_proc_address(user_get_proc_address, "glBindBufferRange\0"): *fp_glBindBufferRange;
	glBindBufferRangeEXT = call_user_get_proc_address(user_get_proc_address, "glBindBufferRangeEXT\0"): *fp_glBindBufferRangeEXT;
	glBindBufferRangeNV = call_user_get_proc_address(user_get_proc_address, "glBindBufferRangeNV\0"): *fp_glBindBufferRangeNV;
	glBindBuffersBase = call_user_get_proc_address(user_get_proc_address, "glBindBuffersBase\0"): *fp_glBindBuffersBase;
	glBindBuffersRange = call_user_get_proc_address(user_get_proc_address, "glBindBuffersRange\0"): *fp_glBindBuffersRange;
	glBindFragDataLocation = call_user_get_proc_address(user_get_proc_address, "glBindFragDataLocation\0"): *fp_glBindFragDataLocation;
	glBindFragDataLocationEXT = call_user_get_proc_address(user_get_proc_address, "glBindFragDataLocationEXT\0"): *fp_glBindFragDataLocationEXT;
	glBindFragDataLocationIndexed = call_user_get_proc_address(user_get_proc_address, "glBindFragDataLocationIndexed\0"): *fp_glBindFragDataLocationIndexed;
	glBindFragmentShaderATI = call_user_get_proc_address(user_get_proc_address, "glBindFragmentShaderATI\0"): *fp_glBindFragmentShaderATI;
	glBindFramebuffer = call_user_get_proc_address(user_get_proc_address, "glBindFramebuffer\0"): *fp_glBindFramebuffer;
	glBindFramebufferEXT = call_user_get_proc_address(user_get_proc_address, "glBindFramebufferEXT\0"): *fp_glBindFramebufferEXT;
	glBindImageTexture = call_user_get_proc_address(user_get_proc_address, "glBindImageTexture\0"): *fp_glBindImageTexture;
	glBindImageTextureEXT = call_user_get_proc_address(user_get_proc_address, "glBindImageTextureEXT\0"): *fp_glBindImageTextureEXT;
	glBindImageTextures = call_user_get_proc_address(user_get_proc_address, "glBindImageTextures\0"): *fp_glBindImageTextures;
	glBindLightParameterEXT = call_user_get_proc_address(user_get_proc_address, "glBindLightParameterEXT\0"): *fp_glBindLightParameterEXT;
	glBindMaterialParameterEXT = call_user_get_proc_address(user_get_proc_address, "glBindMaterialParameterEXT\0"): *fp_glBindMaterialParameterEXT;
	glBindMultiTextureEXT = call_user_get_proc_address(user_get_proc_address, "glBindMultiTextureEXT\0"): *fp_glBindMultiTextureEXT;
	glBindParameterEXT = call_user_get_proc_address(user_get_proc_address, "glBindParameterEXT\0"): *fp_glBindParameterEXT;
	glBindProgramARB = call_user_get_proc_address(user_get_proc_address, "glBindProgramARB\0"): *fp_glBindProgramARB;
	glBindProgramNV = call_user_get_proc_address(user_get_proc_address, "glBindProgramNV\0"): *fp_glBindProgramNV;
	glBindProgramPipeline = call_user_get_proc_address(user_get_proc_address, "glBindProgramPipeline\0"): *fp_glBindProgramPipeline;
	glBindRenderbuffer = call_user_get_proc_address(user_get_proc_address, "glBindRenderbuffer\0"): *fp_glBindRenderbuffer;
	glBindRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glBindRenderbufferEXT\0"): *fp_glBindRenderbufferEXT;
	glBindSampler = call_user_get_proc_address(user_get_proc_address, "glBindSampler\0"): *fp_glBindSampler;
	glBindSamplers = call_user_get_proc_address(user_get_proc_address, "glBindSamplers\0"): *fp_glBindSamplers;
	glBindShadingRateImageNV = call_user_get_proc_address(user_get_proc_address, "glBindShadingRateImageNV\0"): *fp_glBindShadingRateImageNV;
	glBindTexGenParameterEXT = call_user_get_proc_address(user_get_proc_address, "glBindTexGenParameterEXT\0"): *fp_glBindTexGenParameterEXT;
	glBindTexture = call_user_get_proc_address(user_get_proc_address, "glBindTexture\0"): *fp_glBindTexture;
	glBindTextureEXT = call_user_get_proc_address(user_get_proc_address, "glBindTextureEXT\0"): *fp_glBindTextureEXT;
	glBindTextureUnit = call_user_get_proc_address(user_get_proc_address, "glBindTextureUnit\0"): *fp_glBindTextureUnit;
	glBindTextureUnitParameterEXT = call_user_get_proc_address(user_get_proc_address, "glBindTextureUnitParameterEXT\0"): *fp_glBindTextureUnitParameterEXT;
	glBindTextures = call_user_get_proc_address(user_get_proc_address, "glBindTextures\0"): *fp_glBindTextures;
	glBindTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glBindTransformFeedback\0"): *fp_glBindTransformFeedback;
	glBindTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glBindTransformFeedbackNV\0"): *fp_glBindTransformFeedbackNV;
	glBindVertexArray = call_user_get_proc_address(user_get_proc_address, "glBindVertexArray\0"): *fp_glBindVertexArray;
	glBindVertexArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glBindVertexArrayAPPLE\0"): *fp_glBindVertexArrayAPPLE;
	glBindVertexBuffer = call_user_get_proc_address(user_get_proc_address, "glBindVertexBuffer\0"): *fp_glBindVertexBuffer;
	glBindVertexBuffers = call_user_get_proc_address(user_get_proc_address, "glBindVertexBuffers\0"): *fp_glBindVertexBuffers;
	glBindVertexShaderEXT = call_user_get_proc_address(user_get_proc_address, "glBindVertexShaderEXT\0"): *fp_glBindVertexShaderEXT;
	glBindVideoCaptureStreamBufferNV = call_user_get_proc_address(user_get_proc_address, "glBindVideoCaptureStreamBufferNV\0"): *fp_glBindVideoCaptureStreamBufferNV;
	glBindVideoCaptureStreamTextureNV = call_user_get_proc_address(user_get_proc_address, "glBindVideoCaptureStreamTextureNV\0"): *fp_glBindVideoCaptureStreamTextureNV;
	glBinormal3bEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3bEXT\0"): *fp_glBinormal3bEXT;
	glBinormal3bvEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3bvEXT\0"): *fp_glBinormal3bvEXT;
	glBinormal3dEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3dEXT\0"): *fp_glBinormal3dEXT;
	glBinormal3dvEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3dvEXT\0"): *fp_glBinormal3dvEXT;
	glBinormal3fEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3fEXT\0"): *fp_glBinormal3fEXT;
	glBinormal3fvEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3fvEXT\0"): *fp_glBinormal3fvEXT;
	glBinormal3iEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3iEXT\0"): *fp_glBinormal3iEXT;
	glBinormal3ivEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3ivEXT\0"): *fp_glBinormal3ivEXT;
	glBinormal3sEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3sEXT\0"): *fp_glBinormal3sEXT;
	glBinormal3svEXT = call_user_get_proc_address(user_get_proc_address, "glBinormal3svEXT\0"): *fp_glBinormal3svEXT;
	glBinormalPointerEXT = call_user_get_proc_address(user_get_proc_address, "glBinormalPointerEXT\0"): *fp_glBinormalPointerEXT;
	glBitmapxOES = call_user_get_proc_address(user_get_proc_address, "glBitmapxOES\0"): *fp_glBitmapxOES;
	glBlendBarrierKHR = call_user_get_proc_address(user_get_proc_address, "glBlendBarrierKHR\0"): *fp_glBlendBarrierKHR;
	glBlendBarrierNV = call_user_get_proc_address(user_get_proc_address, "glBlendBarrierNV\0"): *fp_glBlendBarrierNV;
	glBlendColor = call_user_get_proc_address(user_get_proc_address, "glBlendColor\0"): *fp_glBlendColor;
	glBlendColorEXT = call_user_get_proc_address(user_get_proc_address, "glBlendColorEXT\0"): *fp_glBlendColorEXT;
	glBlendColorxOES = call_user_get_proc_address(user_get_proc_address, "glBlendColorxOES\0"): *fp_glBlendColorxOES;
	glBlendEquation = call_user_get_proc_address(user_get_proc_address, "glBlendEquation\0"): *fp_glBlendEquation;
	glBlendEquationEXT = call_user_get_proc_address(user_get_proc_address, "glBlendEquationEXT\0"): *fp_glBlendEquationEXT;
	glBlendEquationIndexedAMD = call_user_get_proc_address(user_get_proc_address, "glBlendEquationIndexedAMD\0"): *fp_glBlendEquationIndexedAMD;
	glBlendEquationSeparate = call_user_get_proc_address(user_get_proc_address, "glBlendEquationSeparate\0"): *fp_glBlendEquationSeparate;
	glBlendEquationSeparateEXT = call_user_get_proc_address(user_get_proc_address, "glBlendEquationSeparateEXT\0"): *fp_glBlendEquationSeparateEXT;
	glBlendEquationSeparateIndexedAMD = call_user_get_proc_address(user_get_proc_address, "glBlendEquationSeparateIndexedAMD\0"): *fp_glBlendEquationSeparateIndexedAMD;
	glBlendEquationSeparateiARB = call_user_get_proc_address(user_get_proc_address, "glBlendEquationSeparateiARB\0"): *fp_glBlendEquationSeparateiARB;
	glBlendEquationiARB = call_user_get_proc_address(user_get_proc_address, "glBlendEquationiARB\0"): *fp_glBlendEquationiARB;
	glBlendFunc = call_user_get_proc_address(user_get_proc_address, "glBlendFunc\0"): *fp_glBlendFunc;
	glBlendFuncIndexedAMD = call_user_get_proc_address(user_get_proc_address, "glBlendFuncIndexedAMD\0"): *fp_glBlendFuncIndexedAMD;
	glBlendFuncSeparate = call_user_get_proc_address(user_get_proc_address, "glBlendFuncSeparate\0"): *fp_glBlendFuncSeparate;
	glBlendFuncSeparateEXT = call_user_get_proc_address(user_get_proc_address, "glBlendFuncSeparateEXT\0"): *fp_glBlendFuncSeparateEXT;
	glBlendFuncSeparateINGR = call_user_get_proc_address(user_get_proc_address, "glBlendFuncSeparateINGR\0"): *fp_glBlendFuncSeparateINGR;
	glBlendFuncSeparateIndexedAMD = call_user_get_proc_address(user_get_proc_address, "glBlendFuncSeparateIndexedAMD\0"): *fp_glBlendFuncSeparateIndexedAMD;
	glBlendFuncSeparateiARB = call_user_get_proc_address(user_get_proc_address, "glBlendFuncSeparateiARB\0"): *fp_glBlendFuncSeparateiARB;
	glBlendFunciARB = call_user_get_proc_address(user_get_proc_address, "glBlendFunciARB\0"): *fp_glBlendFunciARB;
	glBlendParameteriNV = call_user_get_proc_address(user_get_proc_address, "glBlendParameteriNV\0"): *fp_glBlendParameteriNV;
	glBlitFramebuffer = call_user_get_proc_address(user_get_proc_address, "glBlitFramebuffer\0"): *fp_glBlitFramebuffer;
	glBlitFramebufferEXT = call_user_get_proc_address(user_get_proc_address, "glBlitFramebufferEXT\0"): *fp_glBlitFramebufferEXT;
	glBlitNamedFramebuffer = call_user_get_proc_address(user_get_proc_address, "glBlitNamedFramebuffer\0"): *fp_glBlitNamedFramebuffer;
	glBufferAddressRangeNV = call_user_get_proc_address(user_get_proc_address, "glBufferAddressRangeNV\0"): *fp_glBufferAddressRangeNV;
	glBufferAttachMemoryNV = call_user_get_proc_address(user_get_proc_address, "glBufferAttachMemoryNV\0"): *fp_glBufferAttachMemoryNV;
	glBufferData = call_user_get_proc_address(user_get_proc_address, "glBufferData\0"): *fp_glBufferData;
	glBufferDataARB = call_user_get_proc_address(user_get_proc_address, "glBufferDataARB\0"): *fp_glBufferDataARB;
	glBufferPageCommitmentARB = call_user_get_proc_address(user_get_proc_address, "glBufferPageCommitmentARB\0"): *fp_glBufferPageCommitmentARB;
	glBufferPageCommitmentMemNV = call_user_get_proc_address(user_get_proc_address, "glBufferPageCommitmentMemNV\0"): *fp_glBufferPageCommitmentMemNV;
	glBufferParameteriAPPLE = call_user_get_proc_address(user_get_proc_address, "glBufferParameteriAPPLE\0"): *fp_glBufferParameteriAPPLE;
	glBufferStorage = call_user_get_proc_address(user_get_proc_address, "glBufferStorage\0"): *fp_glBufferStorage;
	glBufferStorageExternalEXT = call_user_get_proc_address(user_get_proc_address, "glBufferStorageExternalEXT\0"): *fp_glBufferStorageExternalEXT;
	glBufferStorageMemEXT = call_user_get_proc_address(user_get_proc_address, "glBufferStorageMemEXT\0"): *fp_glBufferStorageMemEXT;
	glBufferSubData = call_user_get_proc_address(user_get_proc_address, "glBufferSubData\0"): *fp_glBufferSubData;
	glBufferSubDataARB = call_user_get_proc_address(user_get_proc_address, "glBufferSubDataARB\0"): *fp_glBufferSubDataARB;
	glCallCommandListNV = call_user_get_proc_address(user_get_proc_address, "glCallCommandListNV\0"): *fp_glCallCommandListNV;
	glCheckFramebufferStatus = call_user_get_proc_address(user_get_proc_address, "glCheckFramebufferStatus\0"): *fp_glCheckFramebufferStatus;
	glCheckFramebufferStatusEXT = call_user_get_proc_address(user_get_proc_address, "glCheckFramebufferStatusEXT\0"): *fp_glCheckFramebufferStatusEXT;
	glCheckNamedFramebufferStatus = call_user_get_proc_address(user_get_proc_address, "glCheckNamedFramebufferStatus\0"): *fp_glCheckNamedFramebufferStatus;
	glCheckNamedFramebufferStatusEXT = call_user_get_proc_address(user_get_proc_address, "glCheckNamedFramebufferStatusEXT\0"): *fp_glCheckNamedFramebufferStatusEXT;
	glClampColor = call_user_get_proc_address(user_get_proc_address, "glClampColor\0"): *fp_glClampColor;
	glClampColorARB = call_user_get_proc_address(user_get_proc_address, "glClampColorARB\0"): *fp_glClampColorARB;
	glClear = call_user_get_proc_address(user_get_proc_address, "glClear\0"): *fp_glClear;
	glClearAccumxOES = call_user_get_proc_address(user_get_proc_address, "glClearAccumxOES\0"): *fp_glClearAccumxOES;
	glClearBufferData = call_user_get_proc_address(user_get_proc_address, "glClearBufferData\0"): *fp_glClearBufferData;
	glClearBufferSubData = call_user_get_proc_address(user_get_proc_address, "glClearBufferSubData\0"): *fp_glClearBufferSubData;
	glClearBufferfi = call_user_get_proc_address(user_get_proc_address, "glClearBufferfi\0"): *fp_glClearBufferfi;
	glClearBufferfv = call_user_get_proc_address(user_get_proc_address, "glClearBufferfv\0"): *fp_glClearBufferfv;
	glClearBufferiv = call_user_get_proc_address(user_get_proc_address, "glClearBufferiv\0"): *fp_glClearBufferiv;
	glClearBufferuiv = call_user_get_proc_address(user_get_proc_address, "glClearBufferuiv\0"): *fp_glClearBufferuiv;
	glClearColor = call_user_get_proc_address(user_get_proc_address, "glClearColor\0"): *fp_glClearColor;
	glClearColorIiEXT = call_user_get_proc_address(user_get_proc_address, "glClearColorIiEXT\0"): *fp_glClearColorIiEXT;
	glClearColorIuiEXT = call_user_get_proc_address(user_get_proc_address, "glClearColorIuiEXT\0"): *fp_glClearColorIuiEXT;
	glClearColorxOES = call_user_get_proc_address(user_get_proc_address, "glClearColorxOES\0"): *fp_glClearColorxOES;
	glClearDepth = call_user_get_proc_address(user_get_proc_address, "glClearDepth\0"): *fp_glClearDepth;
	glClearDepthdNV = call_user_get_proc_address(user_get_proc_address, "glClearDepthdNV\0"): *fp_glClearDepthdNV;
	glClearDepthf = call_user_get_proc_address(user_get_proc_address, "glClearDepthf\0"): *fp_glClearDepthf;
	glClearDepthfOES = call_user_get_proc_address(user_get_proc_address, "glClearDepthfOES\0"): *fp_glClearDepthfOES;
	glClearDepthxOES = call_user_get_proc_address(user_get_proc_address, "glClearDepthxOES\0"): *fp_glClearDepthxOES;
	glClearNamedBufferData = call_user_get_proc_address(user_get_proc_address, "glClearNamedBufferData\0"): *fp_glClearNamedBufferData;
	glClearNamedBufferDataEXT = call_user_get_proc_address(user_get_proc_address, "glClearNamedBufferDataEXT\0"): *fp_glClearNamedBufferDataEXT;
	glClearNamedBufferSubData = call_user_get_proc_address(user_get_proc_address, "glClearNamedBufferSubData\0"): *fp_glClearNamedBufferSubData;
	glClearNamedBufferSubDataEXT = call_user_get_proc_address(user_get_proc_address, "glClearNamedBufferSubDataEXT\0"): *fp_glClearNamedBufferSubDataEXT;
	glClearNamedFramebufferfi = call_user_get_proc_address(user_get_proc_address, "glClearNamedFramebufferfi\0"): *fp_glClearNamedFramebufferfi;
	glClearNamedFramebufferfv = call_user_get_proc_address(user_get_proc_address, "glClearNamedFramebufferfv\0"): *fp_glClearNamedFramebufferfv;
	glClearNamedFramebufferiv = call_user_get_proc_address(user_get_proc_address, "glClearNamedFramebufferiv\0"): *fp_glClearNamedFramebufferiv;
	glClearNamedFramebufferuiv = call_user_get_proc_address(user_get_proc_address, "glClearNamedFramebufferuiv\0"): *fp_glClearNamedFramebufferuiv;
	glClearStencil = call_user_get_proc_address(user_get_proc_address, "glClearStencil\0"): *fp_glClearStencil;
	glClearTexImage = call_user_get_proc_address(user_get_proc_address, "glClearTexImage\0"): *fp_glClearTexImage;
	glClearTexSubImage = call_user_get_proc_address(user_get_proc_address, "glClearTexSubImage\0"): *fp_glClearTexSubImage;
	glClientActiveTextureARB = call_user_get_proc_address(user_get_proc_address, "glClientActiveTextureARB\0"): *fp_glClientActiveTextureARB;
	glClientActiveVertexStreamATI = call_user_get_proc_address(user_get_proc_address, "glClientActiveVertexStreamATI\0"): *fp_glClientActiveVertexStreamATI;
	glClientAttribDefaultEXT = call_user_get_proc_address(user_get_proc_address, "glClientAttribDefaultEXT\0"): *fp_glClientAttribDefaultEXT;
	glClientWaitSemaphoreui64NVX = call_user_get_proc_address(user_get_proc_address, "glClientWaitSemaphoreui64NVX\0"): *fp_glClientWaitSemaphoreui64NVX;
	glClientWaitSync = call_user_get_proc_address(user_get_proc_address, "glClientWaitSync\0"): *fp_glClientWaitSync;
	glClipControl = call_user_get_proc_address(user_get_proc_address, "glClipControl\0"): *fp_glClipControl;
	glClipPlanefOES = call_user_get_proc_address(user_get_proc_address, "glClipPlanefOES\0"): *fp_glClipPlanefOES;
	glClipPlanexOES = call_user_get_proc_address(user_get_proc_address, "glClipPlanexOES\0"): *fp_glClipPlanexOES;
	glColor3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glColor3fVertex3fSUN\0"): *fp_glColor3fVertex3fSUN;
	glColor3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glColor3fVertex3fvSUN\0"): *fp_glColor3fVertex3fvSUN;
	glColor3hNV = call_user_get_proc_address(user_get_proc_address, "glColor3hNV\0"): *fp_glColor3hNV;
	glColor3hvNV = call_user_get_proc_address(user_get_proc_address, "glColor3hvNV\0"): *fp_glColor3hvNV;
	glColor3xOES = call_user_get_proc_address(user_get_proc_address, "glColor3xOES\0"): *fp_glColor3xOES;
	glColor3xvOES = call_user_get_proc_address(user_get_proc_address, "glColor3xvOES\0"): *fp_glColor3xvOES;
	glColor4fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glColor4fNormal3fVertex3fSUN\0"): *fp_glColor4fNormal3fVertex3fSUN;
	glColor4fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glColor4fNormal3fVertex3fvSUN\0"): *fp_glColor4fNormal3fVertex3fvSUN;
	glColor4hNV = call_user_get_proc_address(user_get_proc_address, "glColor4hNV\0"): *fp_glColor4hNV;
	glColor4hvNV = call_user_get_proc_address(user_get_proc_address, "glColor4hvNV\0"): *fp_glColor4hvNV;
	glColor4ubVertex2fSUN = call_user_get_proc_address(user_get_proc_address, "glColor4ubVertex2fSUN\0"): *fp_glColor4ubVertex2fSUN;
	glColor4ubVertex2fvSUN = call_user_get_proc_address(user_get_proc_address, "glColor4ubVertex2fvSUN\0"): *fp_glColor4ubVertex2fvSUN;
	glColor4ubVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glColor4ubVertex3fSUN\0"): *fp_glColor4ubVertex3fSUN;
	glColor4ubVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glColor4ubVertex3fvSUN\0"): *fp_glColor4ubVertex3fvSUN;
	glColor4xOES = call_user_get_proc_address(user_get_proc_address, "glColor4xOES\0"): *fp_glColor4xOES;
	glColor4xvOES = call_user_get_proc_address(user_get_proc_address, "glColor4xvOES\0"): *fp_glColor4xvOES;
	glColorFormatNV = call_user_get_proc_address(user_get_proc_address, "glColorFormatNV\0"): *fp_glColorFormatNV;
	glColorFragmentOp1ATI = call_user_get_proc_address(user_get_proc_address, "glColorFragmentOp1ATI\0"): *fp_glColorFragmentOp1ATI;
	glColorFragmentOp2ATI = call_user_get_proc_address(user_get_proc_address, "glColorFragmentOp2ATI\0"): *fp_glColorFragmentOp2ATI;
	glColorFragmentOp3ATI = call_user_get_proc_address(user_get_proc_address, "glColorFragmentOp3ATI\0"): *fp_glColorFragmentOp3ATI;
	glColorMask = call_user_get_proc_address(user_get_proc_address, "glColorMask\0"): *fp_glColorMask;
	glColorMaskIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glColorMaskIndexedEXT\0"): *fp_glColorMaskIndexedEXT;
	glColorMaski = call_user_get_proc_address(user_get_proc_address, "glColorMaski\0"): *fp_glColorMaski;
	glColorPointerEXT = call_user_get_proc_address(user_get_proc_address, "glColorPointerEXT\0"): *fp_glColorPointerEXT;
	glColorPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glColorPointerListIBM\0"): *fp_glColorPointerListIBM;
	glColorPointervINTEL = call_user_get_proc_address(user_get_proc_address, "glColorPointervINTEL\0"): *fp_glColorPointervINTEL;
	glColorSubTableEXT = call_user_get_proc_address(user_get_proc_address, "glColorSubTableEXT\0"): *fp_glColorSubTableEXT;
	glColorTableEXT = call_user_get_proc_address(user_get_proc_address, "glColorTableEXT\0"): *fp_glColorTableEXT;
	glColorTableParameterfvSGI = call_user_get_proc_address(user_get_proc_address, "glColorTableParameterfvSGI\0"): *fp_glColorTableParameterfvSGI;
	glColorTableParameterivSGI = call_user_get_proc_address(user_get_proc_address, "glColorTableParameterivSGI\0"): *fp_glColorTableParameterivSGI;
	glColorTableSGI = call_user_get_proc_address(user_get_proc_address, "glColorTableSGI\0"): *fp_glColorTableSGI;
	glCombinerInputNV = call_user_get_proc_address(user_get_proc_address, "glCombinerInputNV\0"): *fp_glCombinerInputNV;
	glCombinerOutputNV = call_user_get_proc_address(user_get_proc_address, "glCombinerOutputNV\0"): *fp_glCombinerOutputNV;
	glCombinerParameterfNV = call_user_get_proc_address(user_get_proc_address, "glCombinerParameterfNV\0"): *fp_glCombinerParameterfNV;
	glCombinerParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glCombinerParameterfvNV\0"): *fp_glCombinerParameterfvNV;
	glCombinerParameteriNV = call_user_get_proc_address(user_get_proc_address, "glCombinerParameteriNV\0"): *fp_glCombinerParameteriNV;
	glCombinerParameterivNV = call_user_get_proc_address(user_get_proc_address, "glCombinerParameterivNV\0"): *fp_glCombinerParameterivNV;
	glCombinerStageParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glCombinerStageParameterfvNV\0"): *fp_glCombinerStageParameterfvNV;
	glCommandListSegmentsNV = call_user_get_proc_address(user_get_proc_address, "glCommandListSegmentsNV\0"): *fp_glCommandListSegmentsNV;
	glCompileCommandListNV = call_user_get_proc_address(user_get_proc_address, "glCompileCommandListNV\0"): *fp_glCompileCommandListNV;
	glCompileShader = call_user_get_proc_address(user_get_proc_address, "glCompileShader\0"): *fp_glCompileShader;
	glCompileShaderARB = call_user_get_proc_address(user_get_proc_address, "glCompileShaderARB\0"): *fp_glCompileShaderARB;
	glCompileShaderIncludeARB = call_user_get_proc_address(user_get_proc_address, "glCompileShaderIncludeARB\0"): *fp_glCompileShaderIncludeARB;
	glCompressedMultiTexImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexImage1DEXT\0"): *fp_glCompressedMultiTexImage1DEXT;
	glCompressedMultiTexImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexImage2DEXT\0"): *fp_glCompressedMultiTexImage2DEXT;
	glCompressedMultiTexImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexImage3DEXT\0"): *fp_glCompressedMultiTexImage3DEXT;
	glCompressedMultiTexSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexSubImage1DEXT\0"): *fp_glCompressedMultiTexSubImage1DEXT;
	glCompressedMultiTexSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexSubImage2DEXT\0"): *fp_glCompressedMultiTexSubImage2DEXT;
	glCompressedMultiTexSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedMultiTexSubImage3DEXT\0"): *fp_glCompressedMultiTexSubImage3DEXT;
	glCompressedTexImage1D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage1D\0"): *fp_glCompressedTexImage1D;
	glCompressedTexImage1DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage1DARB\0"): *fp_glCompressedTexImage1DARB;
	glCompressedTexImage2D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage2D\0"): *fp_glCompressedTexImage2D;
	glCompressedTexImage2DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage2DARB\0"): *fp_glCompressedTexImage2DARB;
	glCompressedTexImage3D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage3D\0"): *fp_glCompressedTexImage3D;
	glCompressedTexImage3DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexImage3DARB\0"): *fp_glCompressedTexImage3DARB;
	glCompressedTexSubImage1D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage1D\0"): *fp_glCompressedTexSubImage1D;
	glCompressedTexSubImage1DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage1DARB\0"): *fp_glCompressedTexSubImage1DARB;
	glCompressedTexSubImage2D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage2D\0"): *fp_glCompressedTexSubImage2D;
	glCompressedTexSubImage2DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage2DARB\0"): *fp_glCompressedTexSubImage2DARB;
	glCompressedTexSubImage3D = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage3D\0"): *fp_glCompressedTexSubImage3D;
	glCompressedTexSubImage3DARB = call_user_get_proc_address(user_get_proc_address, "glCompressedTexSubImage3DARB\0"): *fp_glCompressedTexSubImage3DARB;
	glCompressedTextureImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureImage1DEXT\0"): *fp_glCompressedTextureImage1DEXT;
	glCompressedTextureImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureImage2DEXT\0"): *fp_glCompressedTextureImage2DEXT;
	glCompressedTextureImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureImage3DEXT\0"): *fp_glCompressedTextureImage3DEXT;
	glCompressedTextureSubImage1D = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage1D\0"): *fp_glCompressedTextureSubImage1D;
	glCompressedTextureSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage1DEXT\0"): *fp_glCompressedTextureSubImage1DEXT;
	glCompressedTextureSubImage2D = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage2D\0"): *fp_glCompressedTextureSubImage2D;
	glCompressedTextureSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage2DEXT\0"): *fp_glCompressedTextureSubImage2DEXT;
	glCompressedTextureSubImage3D = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage3D\0"): *fp_glCompressedTextureSubImage3D;
	glCompressedTextureSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCompressedTextureSubImage3DEXT\0"): *fp_glCompressedTextureSubImage3DEXT;
	glConservativeRasterParameterfNV = call_user_get_proc_address(user_get_proc_address, "glConservativeRasterParameterfNV\0"): *fp_glConservativeRasterParameterfNV;
	glConservativeRasterParameteriNV = call_user_get_proc_address(user_get_proc_address, "glConservativeRasterParameteriNV\0"): *fp_glConservativeRasterParameteriNV;
	glConvolutionFilter1DEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionFilter1DEXT\0"): *fp_glConvolutionFilter1DEXT;
	glConvolutionFilter2DEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionFilter2DEXT\0"): *fp_glConvolutionFilter2DEXT;
	glConvolutionParameterfEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameterfEXT\0"): *fp_glConvolutionParameterfEXT;
	glConvolutionParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameterfvEXT\0"): *fp_glConvolutionParameterfvEXT;
	glConvolutionParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameteriEXT\0"): *fp_glConvolutionParameteriEXT;
	glConvolutionParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameterivEXT\0"): *fp_glConvolutionParameterivEXT;
	glConvolutionParameterxOES = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameterxOES\0"): *fp_glConvolutionParameterxOES;
	glConvolutionParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glConvolutionParameterxvOES\0"): *fp_glConvolutionParameterxvOES;
	glCopyBufferSubData = call_user_get_proc_address(user_get_proc_address, "glCopyBufferSubData\0"): *fp_glCopyBufferSubData;
	glCopyColorSubTableEXT = call_user_get_proc_address(user_get_proc_address, "glCopyColorSubTableEXT\0"): *fp_glCopyColorSubTableEXT;
	glCopyColorTableSGI = call_user_get_proc_address(user_get_proc_address, "glCopyColorTableSGI\0"): *fp_glCopyColorTableSGI;
	glCopyConvolutionFilter1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyConvolutionFilter1DEXT\0"): *fp_glCopyConvolutionFilter1DEXT;
	glCopyConvolutionFilter2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyConvolutionFilter2DEXT\0"): *fp_glCopyConvolutionFilter2DEXT;
	glCopyImageSubData = call_user_get_proc_address(user_get_proc_address, "glCopyImageSubData\0"): *fp_glCopyImageSubData;
	glCopyImageSubDataNV = call_user_get_proc_address(user_get_proc_address, "glCopyImageSubDataNV\0"): *fp_glCopyImageSubDataNV;
	glCopyMultiTexImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyMultiTexImage1DEXT\0"): *fp_glCopyMultiTexImage1DEXT;
	glCopyMultiTexImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyMultiTexImage2DEXT\0"): *fp_glCopyMultiTexImage2DEXT;
	glCopyMultiTexSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyMultiTexSubImage1DEXT\0"): *fp_glCopyMultiTexSubImage1DEXT;
	glCopyMultiTexSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyMultiTexSubImage2DEXT\0"): *fp_glCopyMultiTexSubImage2DEXT;
	glCopyMultiTexSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyMultiTexSubImage3DEXT\0"): *fp_glCopyMultiTexSubImage3DEXT;
	glCopyNamedBufferSubData = call_user_get_proc_address(user_get_proc_address, "glCopyNamedBufferSubData\0"): *fp_glCopyNamedBufferSubData;
	glCopyPathNV = call_user_get_proc_address(user_get_proc_address, "glCopyPathNV\0"): *fp_glCopyPathNV;
	glCopyTexImage1D = call_user_get_proc_address(user_get_proc_address, "glCopyTexImage1D\0"): *fp_glCopyTexImage1D;
	glCopyTexImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTexImage1DEXT\0"): *fp_glCopyTexImage1DEXT;
	glCopyTexImage2D = call_user_get_proc_address(user_get_proc_address, "glCopyTexImage2D\0"): *fp_glCopyTexImage2D;
	glCopyTexImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTexImage2DEXT\0"): *fp_glCopyTexImage2DEXT;
	glCopyTexSubImage1D = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage1D\0"): *fp_glCopyTexSubImage1D;
	glCopyTexSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage1DEXT\0"): *fp_glCopyTexSubImage1DEXT;
	glCopyTexSubImage2D = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage2D\0"): *fp_glCopyTexSubImage2D;
	glCopyTexSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage2DEXT\0"): *fp_glCopyTexSubImage2DEXT;
	glCopyTexSubImage3D = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage3D\0"): *fp_glCopyTexSubImage3D;
	glCopyTexSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTexSubImage3DEXT\0"): *fp_glCopyTexSubImage3DEXT;
	glCopyTextureImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTextureImage1DEXT\0"): *fp_glCopyTextureImage1DEXT;
	glCopyTextureImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTextureImage2DEXT\0"): *fp_glCopyTextureImage2DEXT;
	glCopyTextureSubImage1D = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage1D\0"): *fp_glCopyTextureSubImage1D;
	glCopyTextureSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage1DEXT\0"): *fp_glCopyTextureSubImage1DEXT;
	glCopyTextureSubImage2D = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage2D\0"): *fp_glCopyTextureSubImage2D;
	glCopyTextureSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage2DEXT\0"): *fp_glCopyTextureSubImage2DEXT;
	glCopyTextureSubImage3D = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage3D\0"): *fp_glCopyTextureSubImage3D;
	glCopyTextureSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glCopyTextureSubImage3DEXT\0"): *fp_glCopyTextureSubImage3DEXT;
	glCoverFillPathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glCoverFillPathInstancedNV\0"): *fp_glCoverFillPathInstancedNV;
	glCoverFillPathNV = call_user_get_proc_address(user_get_proc_address, "glCoverFillPathNV\0"): *fp_glCoverFillPathNV;
	glCoverStrokePathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glCoverStrokePathInstancedNV\0"): *fp_glCoverStrokePathInstancedNV;
	glCoverStrokePathNV = call_user_get_proc_address(user_get_proc_address, "glCoverStrokePathNV\0"): *fp_glCoverStrokePathNV;
	glCoverageModulationNV = call_user_get_proc_address(user_get_proc_address, "glCoverageModulationNV\0"): *fp_glCoverageModulationNV;
	glCoverageModulationTableNV = call_user_get_proc_address(user_get_proc_address, "glCoverageModulationTableNV\0"): *fp_glCoverageModulationTableNV;
	glCreateBuffers = call_user_get_proc_address(user_get_proc_address, "glCreateBuffers\0"): *fp_glCreateBuffers;
	glCreateCommandListsNV = call_user_get_proc_address(user_get_proc_address, "glCreateCommandListsNV\0"): *fp_glCreateCommandListsNV;
	glCreateFramebuffers = call_user_get_proc_address(user_get_proc_address, "glCreateFramebuffers\0"): *fp_glCreateFramebuffers;
	glCreateMemoryObjectsEXT = call_user_get_proc_address(user_get_proc_address, "glCreateMemoryObjectsEXT\0"): *fp_glCreateMemoryObjectsEXT;
	glCreatePerfQueryINTEL = call_user_get_proc_address(user_get_proc_address, "glCreatePerfQueryINTEL\0"): *fp_glCreatePerfQueryINTEL;
	glCreateProgram = call_user_get_proc_address(user_get_proc_address, "glCreateProgram\0"): *fp_glCreateProgram;
	glCreateProgramObjectARB = call_user_get_proc_address(user_get_proc_address, "glCreateProgramObjectARB\0"): *fp_glCreateProgramObjectARB;
	glCreateProgramPipelines = call_user_get_proc_address(user_get_proc_address, "glCreateProgramPipelines\0"): *fp_glCreateProgramPipelines;
	glCreateProgressFenceNVX = call_user_get_proc_address(user_get_proc_address, "glCreateProgressFenceNVX\0"): *fp_glCreateProgressFenceNVX;
	glCreateQueries = call_user_get_proc_address(user_get_proc_address, "glCreateQueries\0"): *fp_glCreateQueries;
	glCreateRenderbuffers = call_user_get_proc_address(user_get_proc_address, "glCreateRenderbuffers\0"): *fp_glCreateRenderbuffers;
	glCreateSamplers = call_user_get_proc_address(user_get_proc_address, "glCreateSamplers\0"): *fp_glCreateSamplers;
	glCreateSemaphoresNV = call_user_get_proc_address(user_get_proc_address, "glCreateSemaphoresNV\0"): *fp_glCreateSemaphoresNV;
	glCreateShader = call_user_get_proc_address(user_get_proc_address, "glCreateShader\0"): *fp_glCreateShader;
	glCreateShaderObjectARB = call_user_get_proc_address(user_get_proc_address, "glCreateShaderObjectARB\0"): *fp_glCreateShaderObjectARB;
	glCreateShaderProgramEXT = call_user_get_proc_address(user_get_proc_address, "glCreateShaderProgramEXT\0"): *fp_glCreateShaderProgramEXT;
	glCreateShaderProgramv = call_user_get_proc_address(user_get_proc_address, "glCreateShaderProgramv\0"): *fp_glCreateShaderProgramv;
	glCreateStatesNV = call_user_get_proc_address(user_get_proc_address, "glCreateStatesNV\0"): *fp_glCreateStatesNV;
	glCreateSyncFromCLeventARB = call_user_get_proc_address(user_get_proc_address, "glCreateSyncFromCLeventARB\0"): *fp_glCreateSyncFromCLeventARB;
	glCreateTextures = call_user_get_proc_address(user_get_proc_address, "glCreateTextures\0"): *fp_glCreateTextures;
	glCreateTransformFeedbacks = call_user_get_proc_address(user_get_proc_address, "glCreateTransformFeedbacks\0"): *fp_glCreateTransformFeedbacks;
	glCreateVertexArrays = call_user_get_proc_address(user_get_proc_address, "glCreateVertexArrays\0"): *fp_glCreateVertexArrays;
	glCullFace = call_user_get_proc_address(user_get_proc_address, "glCullFace\0"): *fp_glCullFace;
	glCullParameterdvEXT = call_user_get_proc_address(user_get_proc_address, "glCullParameterdvEXT\0"): *fp_glCullParameterdvEXT;
	glCullParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glCullParameterfvEXT\0"): *fp_glCullParameterfvEXT;
	glCurrentPaletteMatrixARB = call_user_get_proc_address(user_get_proc_address, "glCurrentPaletteMatrixARB\0"): *fp_glCurrentPaletteMatrixARB;
	glDebugMessageCallback = call_user_get_proc_address(user_get_proc_address, "glDebugMessageCallback\0"): *fp_glDebugMessageCallback;
	glDebugMessageCallbackAMD = call_user_get_proc_address(user_get_proc_address, "glDebugMessageCallbackAMD\0"): *fp_glDebugMessageCallbackAMD;
	glDebugMessageCallbackARB = call_user_get_proc_address(user_get_proc_address, "glDebugMessageCallbackARB\0"): *fp_glDebugMessageCallbackARB;
	glDebugMessageControl = call_user_get_proc_address(user_get_proc_address, "glDebugMessageControl\0"): *fp_glDebugMessageControl;
	glDebugMessageControlARB = call_user_get_proc_address(user_get_proc_address, "glDebugMessageControlARB\0"): *fp_glDebugMessageControlARB;
	glDebugMessageEnableAMD = call_user_get_proc_address(user_get_proc_address, "glDebugMessageEnableAMD\0"): *fp_glDebugMessageEnableAMD;
	glDebugMessageInsert = call_user_get_proc_address(user_get_proc_address, "glDebugMessageInsert\0"): *fp_glDebugMessageInsert;
	glDebugMessageInsertAMD = call_user_get_proc_address(user_get_proc_address, "glDebugMessageInsertAMD\0"): *fp_glDebugMessageInsertAMD;
	glDebugMessageInsertARB = call_user_get_proc_address(user_get_proc_address, "glDebugMessageInsertARB\0"): *fp_glDebugMessageInsertARB;
	glDeformSGIX = call_user_get_proc_address(user_get_proc_address, "glDeformSGIX\0"): *fp_glDeformSGIX;
	glDeformationMap3dSGIX = call_user_get_proc_address(user_get_proc_address, "glDeformationMap3dSGIX\0"): *fp_glDeformationMap3dSGIX;
	glDeformationMap3fSGIX = call_user_get_proc_address(user_get_proc_address, "glDeformationMap3fSGIX\0"): *fp_glDeformationMap3fSGIX;
	glDeleteAsyncMarkersSGIX = call_user_get_proc_address(user_get_proc_address, "glDeleteAsyncMarkersSGIX\0"): *fp_glDeleteAsyncMarkersSGIX;
	glDeleteBuffers = call_user_get_proc_address(user_get_proc_address, "glDeleteBuffers\0"): *fp_glDeleteBuffers;
	glDeleteBuffersARB = call_user_get_proc_address(user_get_proc_address, "glDeleteBuffersARB\0"): *fp_glDeleteBuffersARB;
	glDeleteCommandListsNV = call_user_get_proc_address(user_get_proc_address, "glDeleteCommandListsNV\0"): *fp_glDeleteCommandListsNV;
	glDeleteFencesAPPLE = call_user_get_proc_address(user_get_proc_address, "glDeleteFencesAPPLE\0"): *fp_glDeleteFencesAPPLE;
	glDeleteFencesNV = call_user_get_proc_address(user_get_proc_address, "glDeleteFencesNV\0"): *fp_glDeleteFencesNV;
	glDeleteFragmentShaderATI = call_user_get_proc_address(user_get_proc_address, "glDeleteFragmentShaderATI\0"): *fp_glDeleteFragmentShaderATI;
	glDeleteFramebuffers = call_user_get_proc_address(user_get_proc_address, "glDeleteFramebuffers\0"): *fp_glDeleteFramebuffers;
	glDeleteFramebuffersEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteFramebuffersEXT\0"): *fp_glDeleteFramebuffersEXT;
	glDeleteMemoryObjectsEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteMemoryObjectsEXT\0"): *fp_glDeleteMemoryObjectsEXT;
	glDeleteNamedStringARB = call_user_get_proc_address(user_get_proc_address, "glDeleteNamedStringARB\0"): *fp_glDeleteNamedStringARB;
	glDeleteNamesAMD = call_user_get_proc_address(user_get_proc_address, "glDeleteNamesAMD\0"): *fp_glDeleteNamesAMD;
	glDeleteObjectARB = call_user_get_proc_address(user_get_proc_address, "glDeleteObjectARB\0"): *fp_glDeleteObjectARB;
	glDeleteOcclusionQueriesNV = call_user_get_proc_address(user_get_proc_address, "glDeleteOcclusionQueriesNV\0"): *fp_glDeleteOcclusionQueriesNV;
	glDeletePathsNV = call_user_get_proc_address(user_get_proc_address, "glDeletePathsNV\0"): *fp_glDeletePathsNV;
	glDeletePerfMonitorsAMD = call_user_get_proc_address(user_get_proc_address, "glDeletePerfMonitorsAMD\0"): *fp_glDeletePerfMonitorsAMD;
	glDeletePerfQueryINTEL = call_user_get_proc_address(user_get_proc_address, "glDeletePerfQueryINTEL\0"): *fp_glDeletePerfQueryINTEL;
	glDeleteProgram = call_user_get_proc_address(user_get_proc_address, "glDeleteProgram\0"): *fp_glDeleteProgram;
	glDeleteProgramPipelines = call_user_get_proc_address(user_get_proc_address, "glDeleteProgramPipelines\0"): *fp_glDeleteProgramPipelines;
	glDeleteProgramsARB = call_user_get_proc_address(user_get_proc_address, "glDeleteProgramsARB\0"): *fp_glDeleteProgramsARB;
	glDeleteProgramsNV = call_user_get_proc_address(user_get_proc_address, "glDeleteProgramsNV\0"): *fp_glDeleteProgramsNV;
	glDeleteQueries = call_user_get_proc_address(user_get_proc_address, "glDeleteQueries\0"): *fp_glDeleteQueries;
	glDeleteQueriesARB = call_user_get_proc_address(user_get_proc_address, "glDeleteQueriesARB\0"): *fp_glDeleteQueriesARB;
	glDeleteQueryResourceTagNV = call_user_get_proc_address(user_get_proc_address, "glDeleteQueryResourceTagNV\0"): *fp_glDeleteQueryResourceTagNV;
	glDeleteRenderbuffers = call_user_get_proc_address(user_get_proc_address, "glDeleteRenderbuffers\0"): *fp_glDeleteRenderbuffers;
	glDeleteRenderbuffersEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteRenderbuffersEXT\0"): *fp_glDeleteRenderbuffersEXT;
	glDeleteSamplers = call_user_get_proc_address(user_get_proc_address, "glDeleteSamplers\0"): *fp_glDeleteSamplers;
	glDeleteSemaphoresEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteSemaphoresEXT\0"): *fp_glDeleteSemaphoresEXT;
	glDeleteShader = call_user_get_proc_address(user_get_proc_address, "glDeleteShader\0"): *fp_glDeleteShader;
	glDeleteStatesNV = call_user_get_proc_address(user_get_proc_address, "glDeleteStatesNV\0"): *fp_glDeleteStatesNV;
	glDeleteSync = call_user_get_proc_address(user_get_proc_address, "glDeleteSync\0"): *fp_glDeleteSync;
	glDeleteTextures = call_user_get_proc_address(user_get_proc_address, "glDeleteTextures\0"): *fp_glDeleteTextures;
	glDeleteTexturesEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteTexturesEXT\0"): *fp_glDeleteTexturesEXT;
	glDeleteTransformFeedbacks = call_user_get_proc_address(user_get_proc_address, "glDeleteTransformFeedbacks\0"): *fp_glDeleteTransformFeedbacks;
	glDeleteTransformFeedbacksNV = call_user_get_proc_address(user_get_proc_address, "glDeleteTransformFeedbacksNV\0"): *fp_glDeleteTransformFeedbacksNV;
	glDeleteVertexArrays = call_user_get_proc_address(user_get_proc_address, "glDeleteVertexArrays\0"): *fp_glDeleteVertexArrays;
	glDeleteVertexArraysAPPLE = call_user_get_proc_address(user_get_proc_address, "glDeleteVertexArraysAPPLE\0"): *fp_glDeleteVertexArraysAPPLE;
	glDeleteVertexShaderEXT = call_user_get_proc_address(user_get_proc_address, "glDeleteVertexShaderEXT\0"): *fp_glDeleteVertexShaderEXT;
	glDepthBoundsEXT = call_user_get_proc_address(user_get_proc_address, "glDepthBoundsEXT\0"): *fp_glDepthBoundsEXT;
	glDepthBoundsdNV = call_user_get_proc_address(user_get_proc_address, "glDepthBoundsdNV\0"): *fp_glDepthBoundsdNV;
	glDepthFunc = call_user_get_proc_address(user_get_proc_address, "glDepthFunc\0"): *fp_glDepthFunc;
	glDepthMask = call_user_get_proc_address(user_get_proc_address, "glDepthMask\0"): *fp_glDepthMask;
	glDepthRange = call_user_get_proc_address(user_get_proc_address, "glDepthRange\0"): *fp_glDepthRange;
	glDepthRangeArraydvNV = call_user_get_proc_address(user_get_proc_address, "glDepthRangeArraydvNV\0"): *fp_glDepthRangeArraydvNV;
	glDepthRangeArrayv = call_user_get_proc_address(user_get_proc_address, "glDepthRangeArrayv\0"): *fp_glDepthRangeArrayv;
	glDepthRangeIndexed = call_user_get_proc_address(user_get_proc_address, "glDepthRangeIndexed\0"): *fp_glDepthRangeIndexed;
	glDepthRangeIndexeddNV = call_user_get_proc_address(user_get_proc_address, "glDepthRangeIndexeddNV\0"): *fp_glDepthRangeIndexeddNV;
	glDepthRangedNV = call_user_get_proc_address(user_get_proc_address, "glDepthRangedNV\0"): *fp_glDepthRangedNV;
	glDepthRangef = call_user_get_proc_address(user_get_proc_address, "glDepthRangef\0"): *fp_glDepthRangef;
	glDepthRangefOES = call_user_get_proc_address(user_get_proc_address, "glDepthRangefOES\0"): *fp_glDepthRangefOES;
	glDepthRangexOES = call_user_get_proc_address(user_get_proc_address, "glDepthRangexOES\0"): *fp_glDepthRangexOES;
	glDetachObjectARB = call_user_get_proc_address(user_get_proc_address, "glDetachObjectARB\0"): *fp_glDetachObjectARB;
	glDetachShader = call_user_get_proc_address(user_get_proc_address, "glDetachShader\0"): *fp_glDetachShader;
	glDetailTexFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glDetailTexFuncSGIS\0"): *fp_glDetailTexFuncSGIS;
	glDisable = call_user_get_proc_address(user_get_proc_address, "glDisable\0"): *fp_glDisable;
	glDisableClientStateIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glDisableClientStateIndexedEXT\0"): *fp_glDisableClientStateIndexedEXT;
	glDisableClientStateiEXT = call_user_get_proc_address(user_get_proc_address, "glDisableClientStateiEXT\0"): *fp_glDisableClientStateiEXT;
	glDisableIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glDisableIndexedEXT\0"): *fp_glDisableIndexedEXT;
	glDisableVariantClientStateEXT = call_user_get_proc_address(user_get_proc_address, "glDisableVariantClientStateEXT\0"): *fp_glDisableVariantClientStateEXT;
	glDisableVertexArrayAttrib = call_user_get_proc_address(user_get_proc_address, "glDisableVertexArrayAttrib\0"): *fp_glDisableVertexArrayAttrib;
	glDisableVertexArrayAttribEXT = call_user_get_proc_address(user_get_proc_address, "glDisableVertexArrayAttribEXT\0"): *fp_glDisableVertexArrayAttribEXT;
	glDisableVertexArrayEXT = call_user_get_proc_address(user_get_proc_address, "glDisableVertexArrayEXT\0"): *fp_glDisableVertexArrayEXT;
	glDisableVertexAttribAPPLE = call_user_get_proc_address(user_get_proc_address, "glDisableVertexAttribAPPLE\0"): *fp_glDisableVertexAttribAPPLE;
	glDisableVertexAttribArray = call_user_get_proc_address(user_get_proc_address, "glDisableVertexAttribArray\0"): *fp_glDisableVertexAttribArray;
	glDisableVertexAttribArrayARB = call_user_get_proc_address(user_get_proc_address, "glDisableVertexAttribArrayARB\0"): *fp_glDisableVertexAttribArrayARB;
	glDisablei = call_user_get_proc_address(user_get_proc_address, "glDisablei\0"): *fp_glDisablei;
	glDispatchCompute = call_user_get_proc_address(user_get_proc_address, "glDispatchCompute\0"): *fp_glDispatchCompute;
	glDispatchComputeGroupSizeARB = call_user_get_proc_address(user_get_proc_address, "glDispatchComputeGroupSizeARB\0"): *fp_glDispatchComputeGroupSizeARB;
	glDispatchComputeIndirect = call_user_get_proc_address(user_get_proc_address, "glDispatchComputeIndirect\0"): *fp_glDispatchComputeIndirect;
	glDrawArrays = call_user_get_proc_address(user_get_proc_address, "glDrawArrays\0"): *fp_glDrawArrays;
	glDrawArraysEXT = call_user_get_proc_address(user_get_proc_address, "glDrawArraysEXT\0"): *fp_glDrawArraysEXT;
	glDrawArraysIndirect = call_user_get_proc_address(user_get_proc_address, "glDrawArraysIndirect\0"): *fp_glDrawArraysIndirect;
	glDrawArraysInstanced = call_user_get_proc_address(user_get_proc_address, "glDrawArraysInstanced\0"): *fp_glDrawArraysInstanced;
	glDrawArraysInstancedARB = call_user_get_proc_address(user_get_proc_address, "glDrawArraysInstancedARB\0"): *fp_glDrawArraysInstancedARB;
	glDrawArraysInstancedBaseInstance = call_user_get_proc_address(user_get_proc_address, "glDrawArraysInstancedBaseInstance\0"): *fp_glDrawArraysInstancedBaseInstance;
	glDrawArraysInstancedEXT = call_user_get_proc_address(user_get_proc_address, "glDrawArraysInstancedEXT\0"): *fp_glDrawArraysInstancedEXT;
	glDrawBuffer = call_user_get_proc_address(user_get_proc_address, "glDrawBuffer\0"): *fp_glDrawBuffer;
	glDrawBuffers = call_user_get_proc_address(user_get_proc_address, "glDrawBuffers\0"): *fp_glDrawBuffers;
	glDrawBuffersARB = call_user_get_proc_address(user_get_proc_address, "glDrawBuffersARB\0"): *fp_glDrawBuffersARB;
	glDrawBuffersATI = call_user_get_proc_address(user_get_proc_address, "glDrawBuffersATI\0"): *fp_glDrawBuffersATI;
	glDrawCommandsAddressNV = call_user_get_proc_address(user_get_proc_address, "glDrawCommandsAddressNV\0"): *fp_glDrawCommandsAddressNV;
	glDrawCommandsNV = call_user_get_proc_address(user_get_proc_address, "glDrawCommandsNV\0"): *fp_glDrawCommandsNV;
	glDrawCommandsStatesAddressNV = call_user_get_proc_address(user_get_proc_address, "glDrawCommandsStatesAddressNV\0"): *fp_glDrawCommandsStatesAddressNV;
	glDrawCommandsStatesNV = call_user_get_proc_address(user_get_proc_address, "glDrawCommandsStatesNV\0"): *fp_glDrawCommandsStatesNV;
	glDrawElementArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glDrawElementArrayAPPLE\0"): *fp_glDrawElementArrayAPPLE;
	glDrawElementArrayATI = call_user_get_proc_address(user_get_proc_address, "glDrawElementArrayATI\0"): *fp_glDrawElementArrayATI;
	glDrawElements = call_user_get_proc_address(user_get_proc_address, "glDrawElements\0"): *fp_glDrawElements;
	glDrawElementsBaseVertex = call_user_get_proc_address(user_get_proc_address, "glDrawElementsBaseVertex\0"): *fp_glDrawElementsBaseVertex;
	glDrawElementsIndirect = call_user_get_proc_address(user_get_proc_address, "glDrawElementsIndirect\0"): *fp_glDrawElementsIndirect;
	glDrawElementsInstanced = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstanced\0"): *fp_glDrawElementsInstanced;
	glDrawElementsInstancedARB = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstancedARB\0"): *fp_glDrawElementsInstancedARB;
	glDrawElementsInstancedBaseInstance = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstancedBaseInstance\0"): *fp_glDrawElementsInstancedBaseInstance;
	glDrawElementsInstancedBaseVertex = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstancedBaseVertex\0"): *fp_glDrawElementsInstancedBaseVertex;
	glDrawElementsInstancedBaseVertexBaseInstance = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstancedBaseVertexBaseInstance\0"): *fp_glDrawElementsInstancedBaseVertexBaseInstance;
	glDrawElementsInstancedEXT = call_user_get_proc_address(user_get_proc_address, "glDrawElementsInstancedEXT\0"): *fp_glDrawElementsInstancedEXT;
	glDrawMeshArraysSUN = call_user_get_proc_address(user_get_proc_address, "glDrawMeshArraysSUN\0"): *fp_glDrawMeshArraysSUN;
	glDrawMeshTasksIndirectNV = call_user_get_proc_address(user_get_proc_address, "glDrawMeshTasksIndirectNV\0"): *fp_glDrawMeshTasksIndirectNV;
	glDrawMeshTasksNV = call_user_get_proc_address(user_get_proc_address, "glDrawMeshTasksNV\0"): *fp_glDrawMeshTasksNV;
	glDrawRangeElementArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glDrawRangeElementArrayAPPLE\0"): *fp_glDrawRangeElementArrayAPPLE;
	glDrawRangeElementArrayATI = call_user_get_proc_address(user_get_proc_address, "glDrawRangeElementArrayATI\0"): *fp_glDrawRangeElementArrayATI;
	glDrawRangeElements = call_user_get_proc_address(user_get_proc_address, "glDrawRangeElements\0"): *fp_glDrawRangeElements;
	glDrawRangeElementsBaseVertex = call_user_get_proc_address(user_get_proc_address, "glDrawRangeElementsBaseVertex\0"): *fp_glDrawRangeElementsBaseVertex;
	glDrawRangeElementsEXT = call_user_get_proc_address(user_get_proc_address, "glDrawRangeElementsEXT\0"): *fp_glDrawRangeElementsEXT;
	glDrawTextureNV = call_user_get_proc_address(user_get_proc_address, "glDrawTextureNV\0"): *fp_glDrawTextureNV;
	glDrawTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glDrawTransformFeedback\0"): *fp_glDrawTransformFeedback;
	glDrawTransformFeedbackInstanced = call_user_get_proc_address(user_get_proc_address, "glDrawTransformFeedbackInstanced\0"): *fp_glDrawTransformFeedbackInstanced;
	glDrawTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glDrawTransformFeedbackNV\0"): *fp_glDrawTransformFeedbackNV;
	glDrawTransformFeedbackStream = call_user_get_proc_address(user_get_proc_address, "glDrawTransformFeedbackStream\0"): *fp_glDrawTransformFeedbackStream;
	glDrawTransformFeedbackStreamInstanced = call_user_get_proc_address(user_get_proc_address, "glDrawTransformFeedbackStreamInstanced\0"): *fp_glDrawTransformFeedbackStreamInstanced;
	glDrawVkImageNV = call_user_get_proc_address(user_get_proc_address, "glDrawVkImageNV\0"): *fp_glDrawVkImageNV;
	glEGLImageTargetTexStorageEXT = call_user_get_proc_address(user_get_proc_address, "glEGLImageTargetTexStorageEXT\0"): *fp_glEGLImageTargetTexStorageEXT;
	glEGLImageTargetTextureStorageEXT = call_user_get_proc_address(user_get_proc_address, "glEGLImageTargetTextureStorageEXT\0"): *fp_glEGLImageTargetTextureStorageEXT;
	glEdgeFlagFormatNV = call_user_get_proc_address(user_get_proc_address, "glEdgeFlagFormatNV\0"): *fp_glEdgeFlagFormatNV;
	glEdgeFlagPointerEXT = call_user_get_proc_address(user_get_proc_address, "glEdgeFlagPointerEXT\0"): *fp_glEdgeFlagPointerEXT;
	glEdgeFlagPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glEdgeFlagPointerListIBM\0"): *fp_glEdgeFlagPointerListIBM;
	glElementPointerAPPLE = call_user_get_proc_address(user_get_proc_address, "glElementPointerAPPLE\0"): *fp_glElementPointerAPPLE;
	glElementPointerATI = call_user_get_proc_address(user_get_proc_address, "glElementPointerATI\0"): *fp_glElementPointerATI;
	glEnable = call_user_get_proc_address(user_get_proc_address, "glEnable\0"): *fp_glEnable;
	glEnableClientStateIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glEnableClientStateIndexedEXT\0"): *fp_glEnableClientStateIndexedEXT;
	glEnableClientStateiEXT = call_user_get_proc_address(user_get_proc_address, "glEnableClientStateiEXT\0"): *fp_glEnableClientStateiEXT;
	glEnableIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glEnableIndexedEXT\0"): *fp_glEnableIndexedEXT;
	glEnableVariantClientStateEXT = call_user_get_proc_address(user_get_proc_address, "glEnableVariantClientStateEXT\0"): *fp_glEnableVariantClientStateEXT;
	glEnableVertexArrayAttrib = call_user_get_proc_address(user_get_proc_address, "glEnableVertexArrayAttrib\0"): *fp_glEnableVertexArrayAttrib;
	glEnableVertexArrayAttribEXT = call_user_get_proc_address(user_get_proc_address, "glEnableVertexArrayAttribEXT\0"): *fp_glEnableVertexArrayAttribEXT;
	glEnableVertexArrayEXT = call_user_get_proc_address(user_get_proc_address, "glEnableVertexArrayEXT\0"): *fp_glEnableVertexArrayEXT;
	glEnableVertexAttribAPPLE = call_user_get_proc_address(user_get_proc_address, "glEnableVertexAttribAPPLE\0"): *fp_glEnableVertexAttribAPPLE;
	glEnableVertexAttribArray = call_user_get_proc_address(user_get_proc_address, "glEnableVertexAttribArray\0"): *fp_glEnableVertexAttribArray;
	glEnableVertexAttribArrayARB = call_user_get_proc_address(user_get_proc_address, "glEnableVertexAttribArrayARB\0"): *fp_glEnableVertexAttribArrayARB;
	glEnablei = call_user_get_proc_address(user_get_proc_address, "glEnablei\0"): *fp_glEnablei;
	glEndConditionalRender = call_user_get_proc_address(user_get_proc_address, "glEndConditionalRender\0"): *fp_glEndConditionalRender;
	glEndConditionalRenderNV = call_user_get_proc_address(user_get_proc_address, "glEndConditionalRenderNV\0"): *fp_glEndConditionalRenderNV;
	glEndConditionalRenderNVX = call_user_get_proc_address(user_get_proc_address, "glEndConditionalRenderNVX\0"): *fp_glEndConditionalRenderNVX;
	glEndFragmentShaderATI = call_user_get_proc_address(user_get_proc_address, "glEndFragmentShaderATI\0"): *fp_glEndFragmentShaderATI;
	glEndOcclusionQueryNV = call_user_get_proc_address(user_get_proc_address, "glEndOcclusionQueryNV\0"): *fp_glEndOcclusionQueryNV;
	glEndPerfMonitorAMD = call_user_get_proc_address(user_get_proc_address, "glEndPerfMonitorAMD\0"): *fp_glEndPerfMonitorAMD;
	glEndPerfQueryINTEL = call_user_get_proc_address(user_get_proc_address, "glEndPerfQueryINTEL\0"): *fp_glEndPerfQueryINTEL;
	glEndQuery = call_user_get_proc_address(user_get_proc_address, "glEndQuery\0"): *fp_glEndQuery;
	glEndQueryARB = call_user_get_proc_address(user_get_proc_address, "glEndQueryARB\0"): *fp_glEndQueryARB;
	glEndQueryIndexed = call_user_get_proc_address(user_get_proc_address, "glEndQueryIndexed\0"): *fp_glEndQueryIndexed;
	glEndTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glEndTransformFeedback\0"): *fp_glEndTransformFeedback;
	glEndTransformFeedbackEXT = call_user_get_proc_address(user_get_proc_address, "glEndTransformFeedbackEXT\0"): *fp_glEndTransformFeedbackEXT;
	glEndTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glEndTransformFeedbackNV\0"): *fp_glEndTransformFeedbackNV;
	glEndVertexShaderEXT = call_user_get_proc_address(user_get_proc_address, "glEndVertexShaderEXT\0"): *fp_glEndVertexShaderEXT;
	glEndVideoCaptureNV = call_user_get_proc_address(user_get_proc_address, "glEndVideoCaptureNV\0"): *fp_glEndVideoCaptureNV;
	glEvalCoord1xOES = call_user_get_proc_address(user_get_proc_address, "glEvalCoord1xOES\0"): *fp_glEvalCoord1xOES;
	glEvalCoord1xvOES = call_user_get_proc_address(user_get_proc_address, "glEvalCoord1xvOES\0"): *fp_glEvalCoord1xvOES;
	glEvalCoord2xOES = call_user_get_proc_address(user_get_proc_address, "glEvalCoord2xOES\0"): *fp_glEvalCoord2xOES;
	glEvalCoord2xvOES = call_user_get_proc_address(user_get_proc_address, "glEvalCoord2xvOES\0"): *fp_glEvalCoord2xvOES;
	glEvalMapsNV = call_user_get_proc_address(user_get_proc_address, "glEvalMapsNV\0"): *fp_glEvalMapsNV;
	glEvaluateDepthValuesARB = call_user_get_proc_address(user_get_proc_address, "glEvaluateDepthValuesARB\0"): *fp_glEvaluateDepthValuesARB;
	glExecuteProgramNV = call_user_get_proc_address(user_get_proc_address, "glExecuteProgramNV\0"): *fp_glExecuteProgramNV;
	glExtractComponentEXT = call_user_get_proc_address(user_get_proc_address, "glExtractComponentEXT\0"): *fp_glExtractComponentEXT;
	glFeedbackBufferxOES = call_user_get_proc_address(user_get_proc_address, "glFeedbackBufferxOES\0"): *fp_glFeedbackBufferxOES;
	glFenceSync = call_user_get_proc_address(user_get_proc_address, "glFenceSync\0"): *fp_glFenceSync;
	glFinalCombinerInputNV = call_user_get_proc_address(user_get_proc_address, "glFinalCombinerInputNV\0"): *fp_glFinalCombinerInputNV;
	glFinish = call_user_get_proc_address(user_get_proc_address, "glFinish\0"): *fp_glFinish;
	glFinishAsyncSGIX = call_user_get_proc_address(user_get_proc_address, "glFinishAsyncSGIX\0"): *fp_glFinishAsyncSGIX;
	glFinishFenceAPPLE = call_user_get_proc_address(user_get_proc_address, "glFinishFenceAPPLE\0"): *fp_glFinishFenceAPPLE;
	glFinishFenceNV = call_user_get_proc_address(user_get_proc_address, "glFinishFenceNV\0"): *fp_glFinishFenceNV;
	glFinishObjectAPPLE = call_user_get_proc_address(user_get_proc_address, "glFinishObjectAPPLE\0"): *fp_glFinishObjectAPPLE;
	glFinishTextureSUNX = call_user_get_proc_address(user_get_proc_address, "glFinishTextureSUNX\0"): *fp_glFinishTextureSUNX;
	glFlush = call_user_get_proc_address(user_get_proc_address, "glFlush\0"): *fp_glFlush;
	glFlushMappedBufferRange = call_user_get_proc_address(user_get_proc_address, "glFlushMappedBufferRange\0"): *fp_glFlushMappedBufferRange;
	glFlushMappedBufferRangeAPPLE = call_user_get_proc_address(user_get_proc_address, "glFlushMappedBufferRangeAPPLE\0"): *fp_glFlushMappedBufferRangeAPPLE;
	glFlushMappedNamedBufferRange = call_user_get_proc_address(user_get_proc_address, "glFlushMappedNamedBufferRange\0"): *fp_glFlushMappedNamedBufferRange;
	glFlushMappedNamedBufferRangeEXT = call_user_get_proc_address(user_get_proc_address, "glFlushMappedNamedBufferRangeEXT\0"): *fp_glFlushMappedNamedBufferRangeEXT;
	glFlushPixelDataRangeNV = call_user_get_proc_address(user_get_proc_address, "glFlushPixelDataRangeNV\0"): *fp_glFlushPixelDataRangeNV;
	glFlushRasterSGIX = call_user_get_proc_address(user_get_proc_address, "glFlushRasterSGIX\0"): *fp_glFlushRasterSGIX;
	glFlushStaticDataIBM = call_user_get_proc_address(user_get_proc_address, "glFlushStaticDataIBM\0"): *fp_glFlushStaticDataIBM;
	glFlushVertexArrayRangeAPPLE = call_user_get_proc_address(user_get_proc_address, "glFlushVertexArrayRangeAPPLE\0"): *fp_glFlushVertexArrayRangeAPPLE;
	glFlushVertexArrayRangeNV = call_user_get_proc_address(user_get_proc_address, "glFlushVertexArrayRangeNV\0"): *fp_glFlushVertexArrayRangeNV;
	glFogCoordFormatNV = call_user_get_proc_address(user_get_proc_address, "glFogCoordFormatNV\0"): *fp_glFogCoordFormatNV;
	glFogCoordPointerEXT = call_user_get_proc_address(user_get_proc_address, "glFogCoordPointerEXT\0"): *fp_glFogCoordPointerEXT;
	glFogCoordPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glFogCoordPointerListIBM\0"): *fp_glFogCoordPointerListIBM;
	glFogCoorddEXT = call_user_get_proc_address(user_get_proc_address, "glFogCoorddEXT\0"): *fp_glFogCoorddEXT;
	glFogCoorddvEXT = call_user_get_proc_address(user_get_proc_address, "glFogCoorddvEXT\0"): *fp_glFogCoorddvEXT;
	glFogCoordfEXT = call_user_get_proc_address(user_get_proc_address, "glFogCoordfEXT\0"): *fp_glFogCoordfEXT;
	glFogCoordfvEXT = call_user_get_proc_address(user_get_proc_address, "glFogCoordfvEXT\0"): *fp_glFogCoordfvEXT;
	glFogCoordhNV = call_user_get_proc_address(user_get_proc_address, "glFogCoordhNV\0"): *fp_glFogCoordhNV;
	glFogCoordhvNV = call_user_get_proc_address(user_get_proc_address, "glFogCoordhvNV\0"): *fp_glFogCoordhvNV;
	glFogFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glFogFuncSGIS\0"): *fp_glFogFuncSGIS;
	glFogxOES = call_user_get_proc_address(user_get_proc_address, "glFogxOES\0"): *fp_glFogxOES;
	glFogxvOES = call_user_get_proc_address(user_get_proc_address, "glFogxvOES\0"): *fp_glFogxvOES;
	glFragmentColorMaterialSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentColorMaterialSGIX\0"): *fp_glFragmentColorMaterialSGIX;
	glFragmentCoverageColorNV = call_user_get_proc_address(user_get_proc_address, "glFragmentCoverageColorNV\0"): *fp_glFragmentCoverageColorNV;
	glFragmentLightModelfSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightModelfSGIX\0"): *fp_glFragmentLightModelfSGIX;
	glFragmentLightModelfvSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightModelfvSGIX\0"): *fp_glFragmentLightModelfvSGIX;
	glFragmentLightModeliSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightModeliSGIX\0"): *fp_glFragmentLightModeliSGIX;
	glFragmentLightModelivSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightModelivSGIX\0"): *fp_glFragmentLightModelivSGIX;
	glFragmentLightfSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightfSGIX\0"): *fp_glFragmentLightfSGIX;
	glFragmentLightfvSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightfvSGIX\0"): *fp_glFragmentLightfvSGIX;
	glFragmentLightiSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightiSGIX\0"): *fp_glFragmentLightiSGIX;
	glFragmentLightivSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentLightivSGIX\0"): *fp_glFragmentLightivSGIX;
	glFragmentMaterialfSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentMaterialfSGIX\0"): *fp_glFragmentMaterialfSGIX;
	glFragmentMaterialfvSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentMaterialfvSGIX\0"): *fp_glFragmentMaterialfvSGIX;
	glFragmentMaterialiSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentMaterialiSGIX\0"): *fp_glFragmentMaterialiSGIX;
	glFragmentMaterialivSGIX = call_user_get_proc_address(user_get_proc_address, "glFragmentMaterialivSGIX\0"): *fp_glFragmentMaterialivSGIX;
	glFrameTerminatorGREMEDY = call_user_get_proc_address(user_get_proc_address, "glFrameTerminatorGREMEDY\0"): *fp_glFrameTerminatorGREMEDY;
	glFrameZoomSGIX = call_user_get_proc_address(user_get_proc_address, "glFrameZoomSGIX\0"): *fp_glFrameZoomSGIX;
	glFramebufferDrawBufferEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferDrawBufferEXT\0"): *fp_glFramebufferDrawBufferEXT;
	glFramebufferDrawBuffersEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferDrawBuffersEXT\0"): *fp_glFramebufferDrawBuffersEXT;
	glFramebufferFetchBarrierEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferFetchBarrierEXT\0"): *fp_glFramebufferFetchBarrierEXT;
	glFramebufferParameteri = call_user_get_proc_address(user_get_proc_address, "glFramebufferParameteri\0"): *fp_glFramebufferParameteri;
	glFramebufferParameteriMESA = call_user_get_proc_address(user_get_proc_address, "glFramebufferParameteriMESA\0"): *fp_glFramebufferParameteriMESA;
	glFramebufferReadBufferEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferReadBufferEXT\0"): *fp_glFramebufferReadBufferEXT;
	glFramebufferRenderbuffer = call_user_get_proc_address(user_get_proc_address, "glFramebufferRenderbuffer\0"): *fp_glFramebufferRenderbuffer;
	glFramebufferRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferRenderbufferEXT\0"): *fp_glFramebufferRenderbufferEXT;
	glFramebufferSampleLocationsfvARB = call_user_get_proc_address(user_get_proc_address, "glFramebufferSampleLocationsfvARB\0"): *fp_glFramebufferSampleLocationsfvARB;
	glFramebufferSampleLocationsfvNV = call_user_get_proc_address(user_get_proc_address, "glFramebufferSampleLocationsfvNV\0"): *fp_glFramebufferSampleLocationsfvNV;
	glFramebufferSamplePositionsfvAMD = call_user_get_proc_address(user_get_proc_address, "glFramebufferSamplePositionsfvAMD\0"): *fp_glFramebufferSamplePositionsfvAMD;
	glFramebufferTexture = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture\0"): *fp_glFramebufferTexture;
	glFramebufferTexture1D = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture1D\0"): *fp_glFramebufferTexture1D;
	glFramebufferTexture1DEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture1DEXT\0"): *fp_glFramebufferTexture1DEXT;
	glFramebufferTexture2D = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture2D\0"): *fp_glFramebufferTexture2D;
	glFramebufferTexture2DEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture2DEXT\0"): *fp_glFramebufferTexture2DEXT;
	glFramebufferTexture3D = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture3D\0"): *fp_glFramebufferTexture3D;
	glFramebufferTexture3DEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTexture3DEXT\0"): *fp_glFramebufferTexture3DEXT;
	glFramebufferTextureARB = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureARB\0"): *fp_glFramebufferTextureARB;
	glFramebufferTextureEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureEXT\0"): *fp_glFramebufferTextureEXT;
	glFramebufferTextureFaceARB = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureFaceARB\0"): *fp_glFramebufferTextureFaceARB;
	glFramebufferTextureFaceEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureFaceEXT\0"): *fp_glFramebufferTextureFaceEXT;
	glFramebufferTextureLayer = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureLayer\0"): *fp_glFramebufferTextureLayer;
	glFramebufferTextureLayerARB = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureLayerARB\0"): *fp_glFramebufferTextureLayerARB;
	glFramebufferTextureLayerEXT = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureLayerEXT\0"): *fp_glFramebufferTextureLayerEXT;
	glFramebufferTextureMultiviewOVR = call_user_get_proc_address(user_get_proc_address, "glFramebufferTextureMultiviewOVR\0"): *fp_glFramebufferTextureMultiviewOVR;
	glFreeObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glFreeObjectBufferATI\0"): *fp_glFreeObjectBufferATI;
	glFrontFace = call_user_get_proc_address(user_get_proc_address, "glFrontFace\0"): *fp_glFrontFace;
	glFrustumfOES = call_user_get_proc_address(user_get_proc_address, "glFrustumfOES\0"): *fp_glFrustumfOES;
	glFrustumxOES = call_user_get_proc_address(user_get_proc_address, "glFrustumxOES\0"): *fp_glFrustumxOES;
	glGenAsyncMarkersSGIX = call_user_get_proc_address(user_get_proc_address, "glGenAsyncMarkersSGIX\0"): *fp_glGenAsyncMarkersSGIX;
	glGenBuffers = call_user_get_proc_address(user_get_proc_address, "glGenBuffers\0"): *fp_glGenBuffers;
	glGenBuffersARB = call_user_get_proc_address(user_get_proc_address, "glGenBuffersARB\0"): *fp_glGenBuffersARB;
	glGenFencesAPPLE = call_user_get_proc_address(user_get_proc_address, "glGenFencesAPPLE\0"): *fp_glGenFencesAPPLE;
	glGenFencesNV = call_user_get_proc_address(user_get_proc_address, "glGenFencesNV\0"): *fp_glGenFencesNV;
	glGenFragmentShadersATI = call_user_get_proc_address(user_get_proc_address, "glGenFragmentShadersATI\0"): *fp_glGenFragmentShadersATI;
	glGenFramebuffers = call_user_get_proc_address(user_get_proc_address, "glGenFramebuffers\0"): *fp_glGenFramebuffers;
	glGenFramebuffersEXT = call_user_get_proc_address(user_get_proc_address, "glGenFramebuffersEXT\0"): *fp_glGenFramebuffersEXT;
	glGenNamesAMD = call_user_get_proc_address(user_get_proc_address, "glGenNamesAMD\0"): *fp_glGenNamesAMD;
	glGenOcclusionQueriesNV = call_user_get_proc_address(user_get_proc_address, "glGenOcclusionQueriesNV\0"): *fp_glGenOcclusionQueriesNV;
	glGenPathsNV = call_user_get_proc_address(user_get_proc_address, "glGenPathsNV\0"): *fp_glGenPathsNV;
	glGenPerfMonitorsAMD = call_user_get_proc_address(user_get_proc_address, "glGenPerfMonitorsAMD\0"): *fp_glGenPerfMonitorsAMD;
	glGenProgramPipelines = call_user_get_proc_address(user_get_proc_address, "glGenProgramPipelines\0"): *fp_glGenProgramPipelines;
	glGenProgramsARB = call_user_get_proc_address(user_get_proc_address, "glGenProgramsARB\0"): *fp_glGenProgramsARB;
	glGenProgramsNV = call_user_get_proc_address(user_get_proc_address, "glGenProgramsNV\0"): *fp_glGenProgramsNV;
	glGenQueries = call_user_get_proc_address(user_get_proc_address, "glGenQueries\0"): *fp_glGenQueries;
	glGenQueriesARB = call_user_get_proc_address(user_get_proc_address, "glGenQueriesARB\0"): *fp_glGenQueriesARB;
	glGenQueryResourceTagNV = call_user_get_proc_address(user_get_proc_address, "glGenQueryResourceTagNV\0"): *fp_glGenQueryResourceTagNV;
	glGenRenderbuffers = call_user_get_proc_address(user_get_proc_address, "glGenRenderbuffers\0"): *fp_glGenRenderbuffers;
	glGenRenderbuffersEXT = call_user_get_proc_address(user_get_proc_address, "glGenRenderbuffersEXT\0"): *fp_glGenRenderbuffersEXT;
	glGenSamplers = call_user_get_proc_address(user_get_proc_address, "glGenSamplers\0"): *fp_glGenSamplers;
	glGenSemaphoresEXT = call_user_get_proc_address(user_get_proc_address, "glGenSemaphoresEXT\0"): *fp_glGenSemaphoresEXT;
	glGenSymbolsEXT = call_user_get_proc_address(user_get_proc_address, "glGenSymbolsEXT\0"): *fp_glGenSymbolsEXT;
	glGenTextures = call_user_get_proc_address(user_get_proc_address, "glGenTextures\0"): *fp_glGenTextures;
	glGenTexturesEXT = call_user_get_proc_address(user_get_proc_address, "glGenTexturesEXT\0"): *fp_glGenTexturesEXT;
	glGenTransformFeedbacks = call_user_get_proc_address(user_get_proc_address, "glGenTransformFeedbacks\0"): *fp_glGenTransformFeedbacks;
	glGenTransformFeedbacksNV = call_user_get_proc_address(user_get_proc_address, "glGenTransformFeedbacksNV\0"): *fp_glGenTransformFeedbacksNV;
	glGenVertexArrays = call_user_get_proc_address(user_get_proc_address, "glGenVertexArrays\0"): *fp_glGenVertexArrays;
	glGenVertexArraysAPPLE = call_user_get_proc_address(user_get_proc_address, "glGenVertexArraysAPPLE\0"): *fp_glGenVertexArraysAPPLE;
	glGenVertexShadersEXT = call_user_get_proc_address(user_get_proc_address, "glGenVertexShadersEXT\0"): *fp_glGenVertexShadersEXT;
	glGenerateMipmap = call_user_get_proc_address(user_get_proc_address, "glGenerateMipmap\0"): *fp_glGenerateMipmap;
	glGenerateMipmapEXT = call_user_get_proc_address(user_get_proc_address, "glGenerateMipmapEXT\0"): *fp_glGenerateMipmapEXT;
	glGenerateMultiTexMipmapEXT = call_user_get_proc_address(user_get_proc_address, "glGenerateMultiTexMipmapEXT\0"): *fp_glGenerateMultiTexMipmapEXT;
	glGenerateTextureMipmap = call_user_get_proc_address(user_get_proc_address, "glGenerateTextureMipmap\0"): *fp_glGenerateTextureMipmap;
	glGenerateTextureMipmapEXT = call_user_get_proc_address(user_get_proc_address, "glGenerateTextureMipmapEXT\0"): *fp_glGenerateTextureMipmapEXT;
	glGetActiveAtomicCounterBufferiv = call_user_get_proc_address(user_get_proc_address, "glGetActiveAtomicCounterBufferiv\0"): *fp_glGetActiveAtomicCounterBufferiv;
	glGetActiveAttrib = call_user_get_proc_address(user_get_proc_address, "glGetActiveAttrib\0"): *fp_glGetActiveAttrib;
	glGetActiveAttribARB = call_user_get_proc_address(user_get_proc_address, "glGetActiveAttribARB\0"): *fp_glGetActiveAttribARB;
	glGetActiveSubroutineName = call_user_get_proc_address(user_get_proc_address, "glGetActiveSubroutineName\0"): *fp_glGetActiveSubroutineName;
	glGetActiveSubroutineUniformName = call_user_get_proc_address(user_get_proc_address, "glGetActiveSubroutineUniformName\0"): *fp_glGetActiveSubroutineUniformName;
	glGetActiveSubroutineUniformiv = call_user_get_proc_address(user_get_proc_address, "glGetActiveSubroutineUniformiv\0"): *fp_glGetActiveSubroutineUniformiv;
	glGetActiveUniform = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniform\0"): *fp_glGetActiveUniform;
	glGetActiveUniformARB = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniformARB\0"): *fp_glGetActiveUniformARB;
	glGetActiveUniformBlockName = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniformBlockName\0"): *fp_glGetActiveUniformBlockName;
	glGetActiveUniformBlockiv = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniformBlockiv\0"): *fp_glGetActiveUniformBlockiv;
	glGetActiveUniformName = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniformName\0"): *fp_glGetActiveUniformName;
	glGetActiveUniformsiv = call_user_get_proc_address(user_get_proc_address, "glGetActiveUniformsiv\0"): *fp_glGetActiveUniformsiv;
	glGetActiveVaryingNV = call_user_get_proc_address(user_get_proc_address, "glGetActiveVaryingNV\0"): *fp_glGetActiveVaryingNV;
	glGetArrayObjectfvATI = call_user_get_proc_address(user_get_proc_address, "glGetArrayObjectfvATI\0"): *fp_glGetArrayObjectfvATI;
	glGetArrayObjectivATI = call_user_get_proc_address(user_get_proc_address, "glGetArrayObjectivATI\0"): *fp_glGetArrayObjectivATI;
	glGetAttachedObjectsARB = call_user_get_proc_address(user_get_proc_address, "glGetAttachedObjectsARB\0"): *fp_glGetAttachedObjectsARB;
	glGetAttachedShaders = call_user_get_proc_address(user_get_proc_address, "glGetAttachedShaders\0"): *fp_glGetAttachedShaders;
	glGetAttribLocation = call_user_get_proc_address(user_get_proc_address, "glGetAttribLocation\0"): *fp_glGetAttribLocation;
	glGetAttribLocationARB = call_user_get_proc_address(user_get_proc_address, "glGetAttribLocationARB\0"): *fp_glGetAttribLocationARB;
	glGetBooleanIndexedvEXT = call_user_get_proc_address(user_get_proc_address, "glGetBooleanIndexedvEXT\0"): *fp_glGetBooleanIndexedvEXT;
	glGetBooleani_v = call_user_get_proc_address(user_get_proc_address, "glGetBooleani_v\0"): *fp_glGetBooleani_v;
	glGetBooleanv = call_user_get_proc_address(user_get_proc_address, "glGetBooleanv\0"): *fp_glGetBooleanv;
	glGetBufferParameteri64v = call_user_get_proc_address(user_get_proc_address, "glGetBufferParameteri64v\0"): *fp_glGetBufferParameteri64v;
	glGetBufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetBufferParameteriv\0"): *fp_glGetBufferParameteriv;
	glGetBufferParameterivARB = call_user_get_proc_address(user_get_proc_address, "glGetBufferParameterivARB\0"): *fp_glGetBufferParameterivARB;
	glGetBufferParameterui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetBufferParameterui64vNV\0"): *fp_glGetBufferParameterui64vNV;
	glGetBufferPointerv = call_user_get_proc_address(user_get_proc_address, "glGetBufferPointerv\0"): *fp_glGetBufferPointerv;
	glGetBufferPointervARB = call_user_get_proc_address(user_get_proc_address, "glGetBufferPointervARB\0"): *fp_glGetBufferPointervARB;
	glGetBufferSubData = call_user_get_proc_address(user_get_proc_address, "glGetBufferSubData\0"): *fp_glGetBufferSubData;
	glGetBufferSubDataARB = call_user_get_proc_address(user_get_proc_address, "glGetBufferSubDataARB\0"): *fp_glGetBufferSubDataARB;
	glGetClipPlanefOES = call_user_get_proc_address(user_get_proc_address, "glGetClipPlanefOES\0"): *fp_glGetClipPlanefOES;
	glGetClipPlanexOES = call_user_get_proc_address(user_get_proc_address, "glGetClipPlanexOES\0"): *fp_glGetClipPlanexOES;
	glGetColorTableEXT = call_user_get_proc_address(user_get_proc_address, "glGetColorTableEXT\0"): *fp_glGetColorTableEXT;
	glGetColorTableParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetColorTableParameterfvEXT\0"): *fp_glGetColorTableParameterfvEXT;
	glGetColorTableParameterfvSGI = call_user_get_proc_address(user_get_proc_address, "glGetColorTableParameterfvSGI\0"): *fp_glGetColorTableParameterfvSGI;
	glGetColorTableParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetColorTableParameterivEXT\0"): *fp_glGetColorTableParameterivEXT;
	glGetColorTableParameterivSGI = call_user_get_proc_address(user_get_proc_address, "glGetColorTableParameterivSGI\0"): *fp_glGetColorTableParameterivSGI;
	glGetColorTableSGI = call_user_get_proc_address(user_get_proc_address, "glGetColorTableSGI\0"): *fp_glGetColorTableSGI;
	glGetCombinerInputParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetCombinerInputParameterfvNV\0"): *fp_glGetCombinerInputParameterfvNV;
	glGetCombinerInputParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetCombinerInputParameterivNV\0"): *fp_glGetCombinerInputParameterivNV;
	glGetCombinerOutputParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetCombinerOutputParameterfvNV\0"): *fp_glGetCombinerOutputParameterfvNV;
	glGetCombinerOutputParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetCombinerOutputParameterivNV\0"): *fp_glGetCombinerOutputParameterivNV;
	glGetCombinerStageParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetCombinerStageParameterfvNV\0"): *fp_glGetCombinerStageParameterfvNV;
	glGetCommandHeaderNV = call_user_get_proc_address(user_get_proc_address, "glGetCommandHeaderNV\0"): *fp_glGetCommandHeaderNV;
	glGetCompressedMultiTexImageEXT = call_user_get_proc_address(user_get_proc_address, "glGetCompressedMultiTexImageEXT\0"): *fp_glGetCompressedMultiTexImageEXT;
	glGetCompressedTexImage = call_user_get_proc_address(user_get_proc_address, "glGetCompressedTexImage\0"): *fp_glGetCompressedTexImage;
	glGetCompressedTexImageARB = call_user_get_proc_address(user_get_proc_address, "glGetCompressedTexImageARB\0"): *fp_glGetCompressedTexImageARB;
	glGetCompressedTextureImage = call_user_get_proc_address(user_get_proc_address, "glGetCompressedTextureImage\0"): *fp_glGetCompressedTextureImage;
	glGetCompressedTextureImageEXT = call_user_get_proc_address(user_get_proc_address, "glGetCompressedTextureImageEXT\0"): *fp_glGetCompressedTextureImageEXT;
	glGetCompressedTextureSubImage = call_user_get_proc_address(user_get_proc_address, "glGetCompressedTextureSubImage\0"): *fp_glGetCompressedTextureSubImage;
	glGetConvolutionFilterEXT = call_user_get_proc_address(user_get_proc_address, "glGetConvolutionFilterEXT\0"): *fp_glGetConvolutionFilterEXT;
	glGetConvolutionParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetConvolutionParameterfvEXT\0"): *fp_glGetConvolutionParameterfvEXT;
	glGetConvolutionParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetConvolutionParameterivEXT\0"): *fp_glGetConvolutionParameterivEXT;
	glGetConvolutionParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glGetConvolutionParameterxvOES\0"): *fp_glGetConvolutionParameterxvOES;
	glGetCoverageModulationTableNV = call_user_get_proc_address(user_get_proc_address, "glGetCoverageModulationTableNV\0"): *fp_glGetCoverageModulationTableNV;
	glGetDebugMessageLog = call_user_get_proc_address(user_get_proc_address, "glGetDebugMessageLog\0"): *fp_glGetDebugMessageLog;
	glGetDebugMessageLogAMD = call_user_get_proc_address(user_get_proc_address, "glGetDebugMessageLogAMD\0"): *fp_glGetDebugMessageLogAMD;
	glGetDebugMessageLogARB = call_user_get_proc_address(user_get_proc_address, "glGetDebugMessageLogARB\0"): *fp_glGetDebugMessageLogARB;
	glGetDetailTexFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glGetDetailTexFuncSGIS\0"): *fp_glGetDetailTexFuncSGIS;
	glGetDoubleIndexedvEXT = call_user_get_proc_address(user_get_proc_address, "glGetDoubleIndexedvEXT\0"): *fp_glGetDoubleIndexedvEXT;
	glGetDoublei_v = call_user_get_proc_address(user_get_proc_address, "glGetDoublei_v\0"): *fp_glGetDoublei_v;
	glGetDoublei_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetDoublei_vEXT\0"): *fp_glGetDoublei_vEXT;
	glGetDoublev = call_user_get_proc_address(user_get_proc_address, "glGetDoublev\0"): *fp_glGetDoublev;
	glGetError = call_user_get_proc_address(user_get_proc_address, "glGetError\0"): *fp_glGetError;
	glGetFenceivNV = call_user_get_proc_address(user_get_proc_address, "glGetFenceivNV\0"): *fp_glGetFenceivNV;
	glGetFinalCombinerInputParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetFinalCombinerInputParameterfvNV\0"): *fp_glGetFinalCombinerInputParameterfvNV;
	glGetFinalCombinerInputParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetFinalCombinerInputParameterivNV\0"): *fp_glGetFinalCombinerInputParameterivNV;
	glGetFirstPerfQueryIdINTEL = call_user_get_proc_address(user_get_proc_address, "glGetFirstPerfQueryIdINTEL\0"): *fp_glGetFirstPerfQueryIdINTEL;
	glGetFixedvOES = call_user_get_proc_address(user_get_proc_address, "glGetFixedvOES\0"): *fp_glGetFixedvOES;
	glGetFloatIndexedvEXT = call_user_get_proc_address(user_get_proc_address, "glGetFloatIndexedvEXT\0"): *fp_glGetFloatIndexedvEXT;
	glGetFloati_v = call_user_get_proc_address(user_get_proc_address, "glGetFloati_v\0"): *fp_glGetFloati_v;
	glGetFloati_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetFloati_vEXT\0"): *fp_glGetFloati_vEXT;
	glGetFloatv = call_user_get_proc_address(user_get_proc_address, "glGetFloatv\0"): *fp_glGetFloatv;
	glGetFogFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glGetFogFuncSGIS\0"): *fp_glGetFogFuncSGIS;
	glGetFragDataIndex = call_user_get_proc_address(user_get_proc_address, "glGetFragDataIndex\0"): *fp_glGetFragDataIndex;
	glGetFragDataLocation = call_user_get_proc_address(user_get_proc_address, "glGetFragDataLocation\0"): *fp_glGetFragDataLocation;
	glGetFragDataLocationEXT = call_user_get_proc_address(user_get_proc_address, "glGetFragDataLocationEXT\0"): *fp_glGetFragDataLocationEXT;
	glGetFragmentLightfvSGIX = call_user_get_proc_address(user_get_proc_address, "glGetFragmentLightfvSGIX\0"): *fp_glGetFragmentLightfvSGIX;
	glGetFragmentLightivSGIX = call_user_get_proc_address(user_get_proc_address, "glGetFragmentLightivSGIX\0"): *fp_glGetFragmentLightivSGIX;
	glGetFragmentMaterialfvSGIX = call_user_get_proc_address(user_get_proc_address, "glGetFragmentMaterialfvSGIX\0"): *fp_glGetFragmentMaterialfvSGIX;
	glGetFragmentMaterialivSGIX = call_user_get_proc_address(user_get_proc_address, "glGetFragmentMaterialivSGIX\0"): *fp_glGetFragmentMaterialivSGIX;
	glGetFramebufferAttachmentParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferAttachmentParameteriv\0"): *fp_glGetFramebufferAttachmentParameteriv;
	glGetFramebufferAttachmentParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferAttachmentParameterivEXT\0"): *fp_glGetFramebufferAttachmentParameterivEXT;
	glGetFramebufferParameterfvAMD = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferParameterfvAMD\0"): *fp_glGetFramebufferParameterfvAMD;
	glGetFramebufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferParameteriv\0"): *fp_glGetFramebufferParameteriv;
	glGetFramebufferParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferParameterivEXT\0"): *fp_glGetFramebufferParameterivEXT;
	glGetFramebufferParameterivMESA = call_user_get_proc_address(user_get_proc_address, "glGetFramebufferParameterivMESA\0"): *fp_glGetFramebufferParameterivMESA;
	glGetGraphicsResetStatus = call_user_get_proc_address(user_get_proc_address, "glGetGraphicsResetStatus\0"): *fp_glGetGraphicsResetStatus;
	glGetGraphicsResetStatusARB = call_user_get_proc_address(user_get_proc_address, "glGetGraphicsResetStatusARB\0"): *fp_glGetGraphicsResetStatusARB;
	glGetHandleARB = call_user_get_proc_address(user_get_proc_address, "glGetHandleARB\0"): *fp_glGetHandleARB;
	glGetHistogramEXT = call_user_get_proc_address(user_get_proc_address, "glGetHistogramEXT\0"): *fp_glGetHistogramEXT;
	glGetHistogramParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetHistogramParameterfvEXT\0"): *fp_glGetHistogramParameterfvEXT;
	glGetHistogramParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetHistogramParameterivEXT\0"): *fp_glGetHistogramParameterivEXT;
	glGetHistogramParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glGetHistogramParameterxvOES\0"): *fp_glGetHistogramParameterxvOES;
	glGetImageHandleARB = call_user_get_proc_address(user_get_proc_address, "glGetImageHandleARB\0"): *fp_glGetImageHandleARB;
	glGetImageHandleNV = call_user_get_proc_address(user_get_proc_address, "glGetImageHandleNV\0"): *fp_glGetImageHandleNV;
	glGetImageTransformParameterfvHP = call_user_get_proc_address(user_get_proc_address, "glGetImageTransformParameterfvHP\0"): *fp_glGetImageTransformParameterfvHP;
	glGetImageTransformParameterivHP = call_user_get_proc_address(user_get_proc_address, "glGetImageTransformParameterivHP\0"): *fp_glGetImageTransformParameterivHP;
	glGetInfoLogARB = call_user_get_proc_address(user_get_proc_address, "glGetInfoLogARB\0"): *fp_glGetInfoLogARB;
	glGetInstrumentsSGIX = call_user_get_proc_address(user_get_proc_address, "glGetInstrumentsSGIX\0"): *fp_glGetInstrumentsSGIX;
	glGetInteger64i_v = call_user_get_proc_address(user_get_proc_address, "glGetInteger64i_v\0"): *fp_glGetInteger64i_v;
	glGetInteger64v = call_user_get_proc_address(user_get_proc_address, "glGetInteger64v\0"): *fp_glGetInteger64v;
	glGetIntegerIndexedvEXT = call_user_get_proc_address(user_get_proc_address, "glGetIntegerIndexedvEXT\0"): *fp_glGetIntegerIndexedvEXT;
	glGetIntegeri_v = call_user_get_proc_address(user_get_proc_address, "glGetIntegeri_v\0"): *fp_glGetIntegeri_v;
	glGetIntegerui64i_vNV = call_user_get_proc_address(user_get_proc_address, "glGetIntegerui64i_vNV\0"): *fp_glGetIntegerui64i_vNV;
	glGetIntegerui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetIntegerui64vNV\0"): *fp_glGetIntegerui64vNV;
	glGetIntegerv = call_user_get_proc_address(user_get_proc_address, "glGetIntegerv\0"): *fp_glGetIntegerv;
	glGetInternalformatSampleivNV = call_user_get_proc_address(user_get_proc_address, "glGetInternalformatSampleivNV\0"): *fp_glGetInternalformatSampleivNV;
	glGetInternalformati64v = call_user_get_proc_address(user_get_proc_address, "glGetInternalformati64v\0"): *fp_glGetInternalformati64v;
	glGetInternalformativ = call_user_get_proc_address(user_get_proc_address, "glGetInternalformativ\0"): *fp_glGetInternalformativ;
	glGetInvariantBooleanvEXT = call_user_get_proc_address(user_get_proc_address, "glGetInvariantBooleanvEXT\0"): *fp_glGetInvariantBooleanvEXT;
	glGetInvariantFloatvEXT = call_user_get_proc_address(user_get_proc_address, "glGetInvariantFloatvEXT\0"): *fp_glGetInvariantFloatvEXT;
	glGetInvariantIntegervEXT = call_user_get_proc_address(user_get_proc_address, "glGetInvariantIntegervEXT\0"): *fp_glGetInvariantIntegervEXT;
	glGetLightxOES = call_user_get_proc_address(user_get_proc_address, "glGetLightxOES\0"): *fp_glGetLightxOES;
	glGetListParameterfvSGIX = call_user_get_proc_address(user_get_proc_address, "glGetListParameterfvSGIX\0"): *fp_glGetListParameterfvSGIX;
	glGetListParameterivSGIX = call_user_get_proc_address(user_get_proc_address, "glGetListParameterivSGIX\0"): *fp_glGetListParameterivSGIX;
	glGetLocalConstantBooleanvEXT = call_user_get_proc_address(user_get_proc_address, "glGetLocalConstantBooleanvEXT\0"): *fp_glGetLocalConstantBooleanvEXT;
	glGetLocalConstantFloatvEXT = call_user_get_proc_address(user_get_proc_address, "glGetLocalConstantFloatvEXT\0"): *fp_glGetLocalConstantFloatvEXT;
	glGetLocalConstantIntegervEXT = call_user_get_proc_address(user_get_proc_address, "glGetLocalConstantIntegervEXT\0"): *fp_glGetLocalConstantIntegervEXT;
	glGetMapAttribParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetMapAttribParameterfvNV\0"): *fp_glGetMapAttribParameterfvNV;
	glGetMapAttribParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetMapAttribParameterivNV\0"): *fp_glGetMapAttribParameterivNV;
	glGetMapControlPointsNV = call_user_get_proc_address(user_get_proc_address, "glGetMapControlPointsNV\0"): *fp_glGetMapControlPointsNV;
	glGetMapParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetMapParameterfvNV\0"): *fp_glGetMapParameterfvNV;
	glGetMapParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetMapParameterivNV\0"): *fp_glGetMapParameterivNV;
	glGetMapxvOES = call_user_get_proc_address(user_get_proc_address, "glGetMapxvOES\0"): *fp_glGetMapxvOES;
	glGetMaterialxOES = call_user_get_proc_address(user_get_proc_address, "glGetMaterialxOES\0"): *fp_glGetMaterialxOES;
	glGetMemoryObjectDetachedResourcesuivNV = call_user_get_proc_address(user_get_proc_address, "glGetMemoryObjectDetachedResourcesuivNV\0"): *fp_glGetMemoryObjectDetachedResourcesuivNV;
	glGetMemoryObjectParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMemoryObjectParameterivEXT\0"): *fp_glGetMemoryObjectParameterivEXT;
	glGetMinmaxEXT = call_user_get_proc_address(user_get_proc_address, "glGetMinmaxEXT\0"): *fp_glGetMinmaxEXT;
	glGetMinmaxParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMinmaxParameterfvEXT\0"): *fp_glGetMinmaxParameterfvEXT;
	glGetMinmaxParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMinmaxParameterivEXT\0"): *fp_glGetMinmaxParameterivEXT;
	glGetMultiTexEnvfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexEnvfvEXT\0"): *fp_glGetMultiTexEnvfvEXT;
	glGetMultiTexEnvivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexEnvivEXT\0"): *fp_glGetMultiTexEnvivEXT;
	glGetMultiTexGendvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexGendvEXT\0"): *fp_glGetMultiTexGendvEXT;
	glGetMultiTexGenfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexGenfvEXT\0"): *fp_glGetMultiTexGenfvEXT;
	glGetMultiTexGenivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexGenivEXT\0"): *fp_glGetMultiTexGenivEXT;
	glGetMultiTexImageEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexImageEXT\0"): *fp_glGetMultiTexImageEXT;
	glGetMultiTexLevelParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexLevelParameterfvEXT\0"): *fp_glGetMultiTexLevelParameterfvEXT;
	glGetMultiTexLevelParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexLevelParameterivEXT\0"): *fp_glGetMultiTexLevelParameterivEXT;
	glGetMultiTexParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexParameterIivEXT\0"): *fp_glGetMultiTexParameterIivEXT;
	glGetMultiTexParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexParameterIuivEXT\0"): *fp_glGetMultiTexParameterIuivEXT;
	glGetMultiTexParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexParameterfvEXT\0"): *fp_glGetMultiTexParameterfvEXT;
	glGetMultiTexParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetMultiTexParameterivEXT\0"): *fp_glGetMultiTexParameterivEXT;
	glGetMultisamplefv = call_user_get_proc_address(user_get_proc_address, "glGetMultisamplefv\0"): *fp_glGetMultisamplefv;
	glGetMultisamplefvNV = call_user_get_proc_address(user_get_proc_address, "glGetMultisamplefvNV\0"): *fp_glGetMultisamplefvNV;
	glGetNamedBufferParameteri64v = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferParameteri64v\0"): *fp_glGetNamedBufferParameteri64v;
	glGetNamedBufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferParameteriv\0"): *fp_glGetNamedBufferParameteriv;
	glGetNamedBufferParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferParameterivEXT\0"): *fp_glGetNamedBufferParameterivEXT;
	glGetNamedBufferParameterui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferParameterui64vNV\0"): *fp_glGetNamedBufferParameterui64vNV;
	glGetNamedBufferPointerv = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferPointerv\0"): *fp_glGetNamedBufferPointerv;
	glGetNamedBufferPointervEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferPointervEXT\0"): *fp_glGetNamedBufferPointervEXT;
	glGetNamedBufferSubData = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferSubData\0"): *fp_glGetNamedBufferSubData;
	glGetNamedBufferSubDataEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedBufferSubDataEXT\0"): *fp_glGetNamedBufferSubDataEXT;
	glGetNamedFramebufferAttachmentParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetNamedFramebufferAttachmentParameteriv\0"): *fp_glGetNamedFramebufferAttachmentParameteriv;
	glGetNamedFramebufferAttachmentParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedFramebufferAttachmentParameterivEXT\0"): *fp_glGetNamedFramebufferAttachmentParameterivEXT;
	glGetNamedFramebufferParameterfvAMD = call_user_get_proc_address(user_get_proc_address, "glGetNamedFramebufferParameterfvAMD\0"): *fp_glGetNamedFramebufferParameterfvAMD;
	glGetNamedFramebufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetNamedFramebufferParameteriv\0"): *fp_glGetNamedFramebufferParameteriv;
	glGetNamedFramebufferParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedFramebufferParameterivEXT\0"): *fp_glGetNamedFramebufferParameterivEXT;
	glGetNamedProgramLocalParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramLocalParameterIivEXT\0"): *fp_glGetNamedProgramLocalParameterIivEXT;
	glGetNamedProgramLocalParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramLocalParameterIuivEXT\0"): *fp_glGetNamedProgramLocalParameterIuivEXT;
	glGetNamedProgramLocalParameterdvEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramLocalParameterdvEXT\0"): *fp_glGetNamedProgramLocalParameterdvEXT;
	glGetNamedProgramLocalParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramLocalParameterfvEXT\0"): *fp_glGetNamedProgramLocalParameterfvEXT;
	glGetNamedProgramStringEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramStringEXT\0"): *fp_glGetNamedProgramStringEXT;
	glGetNamedProgramivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedProgramivEXT\0"): *fp_glGetNamedProgramivEXT;
	glGetNamedRenderbufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetNamedRenderbufferParameteriv\0"): *fp_glGetNamedRenderbufferParameteriv;
	glGetNamedRenderbufferParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetNamedRenderbufferParameterivEXT\0"): *fp_glGetNamedRenderbufferParameterivEXT;
	glGetNamedStringARB = call_user_get_proc_address(user_get_proc_address, "glGetNamedStringARB\0"): *fp_glGetNamedStringARB;
	glGetNamedStringivARB = call_user_get_proc_address(user_get_proc_address, "glGetNamedStringivARB\0"): *fp_glGetNamedStringivARB;
	glGetNextPerfQueryIdINTEL = call_user_get_proc_address(user_get_proc_address, "glGetNextPerfQueryIdINTEL\0"): *fp_glGetNextPerfQueryIdINTEL;
	glGetObjectBufferfvATI = call_user_get_proc_address(user_get_proc_address, "glGetObjectBufferfvATI\0"): *fp_glGetObjectBufferfvATI;
	glGetObjectBufferivATI = call_user_get_proc_address(user_get_proc_address, "glGetObjectBufferivATI\0"): *fp_glGetObjectBufferivATI;
	glGetObjectLabel = call_user_get_proc_address(user_get_proc_address, "glGetObjectLabel\0"): *fp_glGetObjectLabel;
	glGetObjectLabelEXT = call_user_get_proc_address(user_get_proc_address, "glGetObjectLabelEXT\0"): *fp_glGetObjectLabelEXT;
	glGetObjectParameterfvARB = call_user_get_proc_address(user_get_proc_address, "glGetObjectParameterfvARB\0"): *fp_glGetObjectParameterfvARB;
	glGetObjectParameterivAPPLE = call_user_get_proc_address(user_get_proc_address, "glGetObjectParameterivAPPLE\0"): *fp_glGetObjectParameterivAPPLE;
	glGetObjectParameterivARB = call_user_get_proc_address(user_get_proc_address, "glGetObjectParameterivARB\0"): *fp_glGetObjectParameterivARB;
	glGetObjectPtrLabel = call_user_get_proc_address(user_get_proc_address, "glGetObjectPtrLabel\0"): *fp_glGetObjectPtrLabel;
	glGetOcclusionQueryivNV = call_user_get_proc_address(user_get_proc_address, "glGetOcclusionQueryivNV\0"): *fp_glGetOcclusionQueryivNV;
	glGetOcclusionQueryuivNV = call_user_get_proc_address(user_get_proc_address, "glGetOcclusionQueryuivNV\0"): *fp_glGetOcclusionQueryuivNV;
	glGetPathCommandsNV = call_user_get_proc_address(user_get_proc_address, "glGetPathCommandsNV\0"): *fp_glGetPathCommandsNV;
	glGetPathCoordsNV = call_user_get_proc_address(user_get_proc_address, "glGetPathCoordsNV\0"): *fp_glGetPathCoordsNV;
	glGetPathDashArrayNV = call_user_get_proc_address(user_get_proc_address, "glGetPathDashArrayNV\0"): *fp_glGetPathDashArrayNV;
	glGetPathLengthNV = call_user_get_proc_address(user_get_proc_address, "glGetPathLengthNV\0"): *fp_glGetPathLengthNV;
	glGetPathMetricRangeNV = call_user_get_proc_address(user_get_proc_address, "glGetPathMetricRangeNV\0"): *fp_glGetPathMetricRangeNV;
	glGetPathMetricsNV = call_user_get_proc_address(user_get_proc_address, "glGetPathMetricsNV\0"): *fp_glGetPathMetricsNV;
	glGetPathParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetPathParameterfvNV\0"): *fp_glGetPathParameterfvNV;
	glGetPathParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetPathParameterivNV\0"): *fp_glGetPathParameterivNV;
	glGetPathSpacingNV = call_user_get_proc_address(user_get_proc_address, "glGetPathSpacingNV\0"): *fp_glGetPathSpacingNV;
	glGetPerfCounterInfoINTEL = call_user_get_proc_address(user_get_proc_address, "glGetPerfCounterInfoINTEL\0"): *fp_glGetPerfCounterInfoINTEL;
	glGetPerfMonitorCounterDataAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorCounterDataAMD\0"): *fp_glGetPerfMonitorCounterDataAMD;
	glGetPerfMonitorCounterInfoAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorCounterInfoAMD\0"): *fp_glGetPerfMonitorCounterInfoAMD;
	glGetPerfMonitorCounterStringAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorCounterStringAMD\0"): *fp_glGetPerfMonitorCounterStringAMD;
	glGetPerfMonitorCountersAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorCountersAMD\0"): *fp_glGetPerfMonitorCountersAMD;
	glGetPerfMonitorGroupStringAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorGroupStringAMD\0"): *fp_glGetPerfMonitorGroupStringAMD;
	glGetPerfMonitorGroupsAMD = call_user_get_proc_address(user_get_proc_address, "glGetPerfMonitorGroupsAMD\0"): *fp_glGetPerfMonitorGroupsAMD;
	glGetPerfQueryDataINTEL = call_user_get_proc_address(user_get_proc_address, "glGetPerfQueryDataINTEL\0"): *fp_glGetPerfQueryDataINTEL;
	glGetPerfQueryIdByNameINTEL = call_user_get_proc_address(user_get_proc_address, "glGetPerfQueryIdByNameINTEL\0"): *fp_glGetPerfQueryIdByNameINTEL;
	glGetPerfQueryInfoINTEL = call_user_get_proc_address(user_get_proc_address, "glGetPerfQueryInfoINTEL\0"): *fp_glGetPerfQueryInfoINTEL;
	glGetPixelMapxv = call_user_get_proc_address(user_get_proc_address, "glGetPixelMapxv\0"): *fp_glGetPixelMapxv;
	glGetPixelTexGenParameterfvSGIS = call_user_get_proc_address(user_get_proc_address, "glGetPixelTexGenParameterfvSGIS\0"): *fp_glGetPixelTexGenParameterfvSGIS;
	glGetPixelTexGenParameterivSGIS = call_user_get_proc_address(user_get_proc_address, "glGetPixelTexGenParameterivSGIS\0"): *fp_glGetPixelTexGenParameterivSGIS;
	glGetPixelTransformParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetPixelTransformParameterfvEXT\0"): *fp_glGetPixelTransformParameterfvEXT;
	glGetPixelTransformParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetPixelTransformParameterivEXT\0"): *fp_glGetPixelTransformParameterivEXT;
	glGetPointerIndexedvEXT = call_user_get_proc_address(user_get_proc_address, "glGetPointerIndexedvEXT\0"): *fp_glGetPointerIndexedvEXT;
	glGetPointeri_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetPointeri_vEXT\0"): *fp_glGetPointeri_vEXT;
	glGetPointerv = call_user_get_proc_address(user_get_proc_address, "glGetPointerv\0"): *fp_glGetPointerv;
	glGetPointervEXT = call_user_get_proc_address(user_get_proc_address, "glGetPointervEXT\0"): *fp_glGetPointervEXT;
	glGetProgramBinary = call_user_get_proc_address(user_get_proc_address, "glGetProgramBinary\0"): *fp_glGetProgramBinary;
	glGetProgramEnvParameterIivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramEnvParameterIivNV\0"): *fp_glGetProgramEnvParameterIivNV;
	glGetProgramEnvParameterIuivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramEnvParameterIuivNV\0"): *fp_glGetProgramEnvParameterIuivNV;
	glGetProgramEnvParameterdvARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramEnvParameterdvARB\0"): *fp_glGetProgramEnvParameterdvARB;
	glGetProgramEnvParameterfvARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramEnvParameterfvARB\0"): *fp_glGetProgramEnvParameterfvARB;
	glGetProgramInfoLog = call_user_get_proc_address(user_get_proc_address, "glGetProgramInfoLog\0"): *fp_glGetProgramInfoLog;
	glGetProgramInterfaceiv = call_user_get_proc_address(user_get_proc_address, "glGetProgramInterfaceiv\0"): *fp_glGetProgramInterfaceiv;
	glGetProgramLocalParameterIivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramLocalParameterIivNV\0"): *fp_glGetProgramLocalParameterIivNV;
	glGetProgramLocalParameterIuivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramLocalParameterIuivNV\0"): *fp_glGetProgramLocalParameterIuivNV;
	glGetProgramLocalParameterdvARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramLocalParameterdvARB\0"): *fp_glGetProgramLocalParameterdvARB;
	glGetProgramLocalParameterfvARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramLocalParameterfvARB\0"): *fp_glGetProgramLocalParameterfvARB;
	glGetProgramNamedParameterdvNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramNamedParameterdvNV\0"): *fp_glGetProgramNamedParameterdvNV;
	glGetProgramNamedParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramNamedParameterfvNV\0"): *fp_glGetProgramNamedParameterfvNV;
	glGetProgramParameterdvNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramParameterdvNV\0"): *fp_glGetProgramParameterdvNV;
	glGetProgramParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramParameterfvNV\0"): *fp_glGetProgramParameterfvNV;
	glGetProgramPipelineInfoLog = call_user_get_proc_address(user_get_proc_address, "glGetProgramPipelineInfoLog\0"): *fp_glGetProgramPipelineInfoLog;
	glGetProgramPipelineiv = call_user_get_proc_address(user_get_proc_address, "glGetProgramPipelineiv\0"): *fp_glGetProgramPipelineiv;
	glGetProgramResourceIndex = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourceIndex\0"): *fp_glGetProgramResourceIndex;
	glGetProgramResourceLocation = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourceLocation\0"): *fp_glGetProgramResourceLocation;
	glGetProgramResourceLocationIndex = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourceLocationIndex\0"): *fp_glGetProgramResourceLocationIndex;
	glGetProgramResourceName = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourceName\0"): *fp_glGetProgramResourceName;
	glGetProgramResourcefvNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourcefvNV\0"): *fp_glGetProgramResourcefvNV;
	glGetProgramResourceiv = call_user_get_proc_address(user_get_proc_address, "glGetProgramResourceiv\0"): *fp_glGetProgramResourceiv;
	glGetProgramStageiv = call_user_get_proc_address(user_get_proc_address, "glGetProgramStageiv\0"): *fp_glGetProgramStageiv;
	glGetProgramStringARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramStringARB\0"): *fp_glGetProgramStringARB;
	glGetProgramStringNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramStringNV\0"): *fp_glGetProgramStringNV;
	glGetProgramSubroutineParameteruivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramSubroutineParameteruivNV\0"): *fp_glGetProgramSubroutineParameteruivNV;
	glGetProgramiv = call_user_get_proc_address(user_get_proc_address, "glGetProgramiv\0"): *fp_glGetProgramiv;
	glGetProgramivARB = call_user_get_proc_address(user_get_proc_address, "glGetProgramivARB\0"): *fp_glGetProgramivARB;
	glGetProgramivNV = call_user_get_proc_address(user_get_proc_address, "glGetProgramivNV\0"): *fp_glGetProgramivNV;
	glGetQueryBufferObjecti64v = call_user_get_proc_address(user_get_proc_address, "glGetQueryBufferObjecti64v\0"): *fp_glGetQueryBufferObjecti64v;
	glGetQueryBufferObjectiv = call_user_get_proc_address(user_get_proc_address, "glGetQueryBufferObjectiv\0"): *fp_glGetQueryBufferObjectiv;
	glGetQueryBufferObjectui64v = call_user_get_proc_address(user_get_proc_address, "glGetQueryBufferObjectui64v\0"): *fp_glGetQueryBufferObjectui64v;
	glGetQueryBufferObjectuiv = call_user_get_proc_address(user_get_proc_address, "glGetQueryBufferObjectuiv\0"): *fp_glGetQueryBufferObjectuiv;
	glGetQueryIndexediv = call_user_get_proc_address(user_get_proc_address, "glGetQueryIndexediv\0"): *fp_glGetQueryIndexediv;
	glGetQueryObjecti64v = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjecti64v\0"): *fp_glGetQueryObjecti64v;
	glGetQueryObjecti64vEXT = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjecti64vEXT\0"): *fp_glGetQueryObjecti64vEXT;
	glGetQueryObjectiv = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectiv\0"): *fp_glGetQueryObjectiv;
	glGetQueryObjectivARB = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectivARB\0"): *fp_glGetQueryObjectivARB;
	glGetQueryObjectui64v = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectui64v\0"): *fp_glGetQueryObjectui64v;
	glGetQueryObjectui64vEXT = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectui64vEXT\0"): *fp_glGetQueryObjectui64vEXT;
	glGetQueryObjectuiv = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectuiv\0"): *fp_glGetQueryObjectuiv;
	glGetQueryObjectuivARB = call_user_get_proc_address(user_get_proc_address, "glGetQueryObjectuivARB\0"): *fp_glGetQueryObjectuivARB;
	glGetQueryiv = call_user_get_proc_address(user_get_proc_address, "glGetQueryiv\0"): *fp_glGetQueryiv;
	glGetQueryivARB = call_user_get_proc_address(user_get_proc_address, "glGetQueryivARB\0"): *fp_glGetQueryivARB;
	glGetRenderbufferParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetRenderbufferParameteriv\0"): *fp_glGetRenderbufferParameteriv;
	glGetRenderbufferParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetRenderbufferParameterivEXT\0"): *fp_glGetRenderbufferParameterivEXT;
	glGetSamplerParameterIiv = call_user_get_proc_address(user_get_proc_address, "glGetSamplerParameterIiv\0"): *fp_glGetSamplerParameterIiv;
	glGetSamplerParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glGetSamplerParameterIuiv\0"): *fp_glGetSamplerParameterIuiv;
	glGetSamplerParameterfv = call_user_get_proc_address(user_get_proc_address, "glGetSamplerParameterfv\0"): *fp_glGetSamplerParameterfv;
	glGetSamplerParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetSamplerParameteriv\0"): *fp_glGetSamplerParameteriv;
	glGetSemaphoreParameterivNV = call_user_get_proc_address(user_get_proc_address, "glGetSemaphoreParameterivNV\0"): *fp_glGetSemaphoreParameterivNV;
	glGetSemaphoreParameterui64vEXT = call_user_get_proc_address(user_get_proc_address, "glGetSemaphoreParameterui64vEXT\0"): *fp_glGetSemaphoreParameterui64vEXT;
	glGetSeparableFilterEXT = call_user_get_proc_address(user_get_proc_address, "glGetSeparableFilterEXT\0"): *fp_glGetSeparableFilterEXT;
	glGetShaderInfoLog = call_user_get_proc_address(user_get_proc_address, "glGetShaderInfoLog\0"): *fp_glGetShaderInfoLog;
	glGetShaderPrecisionFormat = call_user_get_proc_address(user_get_proc_address, "glGetShaderPrecisionFormat\0"): *fp_glGetShaderPrecisionFormat;
	glGetShaderSource = call_user_get_proc_address(user_get_proc_address, "glGetShaderSource\0"): *fp_glGetShaderSource;
	glGetShaderSourceARB = call_user_get_proc_address(user_get_proc_address, "glGetShaderSourceARB\0"): *fp_glGetShaderSourceARB;
	glGetShaderiv = call_user_get_proc_address(user_get_proc_address, "glGetShaderiv\0"): *fp_glGetShaderiv;
	glGetShadingRateImagePaletteNV = call_user_get_proc_address(user_get_proc_address, "glGetShadingRateImagePaletteNV\0"): *fp_glGetShadingRateImagePaletteNV;
	glGetShadingRateSampleLocationivNV = call_user_get_proc_address(user_get_proc_address, "glGetShadingRateSampleLocationivNV\0"): *fp_glGetShadingRateSampleLocationivNV;
	glGetSharpenTexFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glGetSharpenTexFuncSGIS\0"): *fp_glGetSharpenTexFuncSGIS;
	glGetStageIndexNV = call_user_get_proc_address(user_get_proc_address, "glGetStageIndexNV\0"): *fp_glGetStageIndexNV;
	glGetString = call_user_get_proc_address(user_get_proc_address, "glGetString\0"): *fp_glGetString;
	glGetStringi = call_user_get_proc_address(user_get_proc_address, "glGetStringi\0"): *fp_glGetStringi;
	glGetSubroutineIndex = call_user_get_proc_address(user_get_proc_address, "glGetSubroutineIndex\0"): *fp_glGetSubroutineIndex;
	glGetSubroutineUniformLocation = call_user_get_proc_address(user_get_proc_address, "glGetSubroutineUniformLocation\0"): *fp_glGetSubroutineUniformLocation;
	glGetSynciv = call_user_get_proc_address(user_get_proc_address, "glGetSynciv\0"): *fp_glGetSynciv;
	glGetTexBumpParameterfvATI = call_user_get_proc_address(user_get_proc_address, "glGetTexBumpParameterfvATI\0"): *fp_glGetTexBumpParameterfvATI;
	glGetTexBumpParameterivATI = call_user_get_proc_address(user_get_proc_address, "glGetTexBumpParameterivATI\0"): *fp_glGetTexBumpParameterivATI;
	glGetTexEnvxvOES = call_user_get_proc_address(user_get_proc_address, "glGetTexEnvxvOES\0"): *fp_glGetTexEnvxvOES;
	glGetTexFilterFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glGetTexFilterFuncSGIS\0"): *fp_glGetTexFilterFuncSGIS;
	glGetTexGenxvOES = call_user_get_proc_address(user_get_proc_address, "glGetTexGenxvOES\0"): *fp_glGetTexGenxvOES;
	glGetTexImage = call_user_get_proc_address(user_get_proc_address, "glGetTexImage\0"): *fp_glGetTexImage;
	glGetTexLevelParameterfv = call_user_get_proc_address(user_get_proc_address, "glGetTexLevelParameterfv\0"): *fp_glGetTexLevelParameterfv;
	glGetTexLevelParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetTexLevelParameteriv\0"): *fp_glGetTexLevelParameteriv;
	glGetTexLevelParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glGetTexLevelParameterxvOES\0"): *fp_glGetTexLevelParameterxvOES;
	glGetTexParameterIiv = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterIiv\0"): *fp_glGetTexParameterIiv;
	glGetTexParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterIivEXT\0"): *fp_glGetTexParameterIivEXT;
	glGetTexParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterIuiv\0"): *fp_glGetTexParameterIuiv;
	glGetTexParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterIuivEXT\0"): *fp_glGetTexParameterIuivEXT;
	glGetTexParameterPointervAPPLE = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterPointervAPPLE\0"): *fp_glGetTexParameterPointervAPPLE;
	glGetTexParameterfv = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterfv\0"): *fp_glGetTexParameterfv;
	glGetTexParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetTexParameteriv\0"): *fp_glGetTexParameteriv;
	glGetTexParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glGetTexParameterxvOES\0"): *fp_glGetTexParameterxvOES;
	glGetTextureHandleARB = call_user_get_proc_address(user_get_proc_address, "glGetTextureHandleARB\0"): *fp_glGetTextureHandleARB;
	glGetTextureHandleNV = call_user_get_proc_address(user_get_proc_address, "glGetTextureHandleNV\0"): *fp_glGetTextureHandleNV;
	glGetTextureImage = call_user_get_proc_address(user_get_proc_address, "glGetTextureImage\0"): *fp_glGetTextureImage;
	glGetTextureImageEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureImageEXT\0"): *fp_glGetTextureImageEXT;
	glGetTextureLevelParameterfv = call_user_get_proc_address(user_get_proc_address, "glGetTextureLevelParameterfv\0"): *fp_glGetTextureLevelParameterfv;
	glGetTextureLevelParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureLevelParameterfvEXT\0"): *fp_glGetTextureLevelParameterfvEXT;
	glGetTextureLevelParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetTextureLevelParameteriv\0"): *fp_glGetTextureLevelParameteriv;
	glGetTextureLevelParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureLevelParameterivEXT\0"): *fp_glGetTextureLevelParameterivEXT;
	glGetTextureParameterIiv = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterIiv\0"): *fp_glGetTextureParameterIiv;
	glGetTextureParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterIivEXT\0"): *fp_glGetTextureParameterIivEXT;
	glGetTextureParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterIuiv\0"): *fp_glGetTextureParameterIuiv;
	glGetTextureParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterIuivEXT\0"): *fp_glGetTextureParameterIuivEXT;
	glGetTextureParameterfv = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterfv\0"): *fp_glGetTextureParameterfv;
	glGetTextureParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterfvEXT\0"): *fp_glGetTextureParameterfvEXT;
	glGetTextureParameteriv = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameteriv\0"): *fp_glGetTextureParameteriv;
	glGetTextureParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glGetTextureParameterivEXT\0"): *fp_glGetTextureParameterivEXT;
	glGetTextureSamplerHandleARB = call_user_get_proc_address(user_get_proc_address, "glGetTextureSamplerHandleARB\0"): *fp_glGetTextureSamplerHandleARB;
	glGetTextureSamplerHandleNV = call_user_get_proc_address(user_get_proc_address, "glGetTextureSamplerHandleNV\0"): *fp_glGetTextureSamplerHandleNV;
	glGetTextureSubImage = call_user_get_proc_address(user_get_proc_address, "glGetTextureSubImage\0"): *fp_glGetTextureSubImage;
	glGetTrackMatrixivNV = call_user_get_proc_address(user_get_proc_address, "glGetTrackMatrixivNV\0"): *fp_glGetTrackMatrixivNV;
	glGetTransformFeedbackVarying = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbackVarying\0"): *fp_glGetTransformFeedbackVarying;
	glGetTransformFeedbackVaryingEXT = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbackVaryingEXT\0"): *fp_glGetTransformFeedbackVaryingEXT;
	glGetTransformFeedbackVaryingNV = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbackVaryingNV\0"): *fp_glGetTransformFeedbackVaryingNV;
	glGetTransformFeedbacki64_v = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbacki64_v\0"): *fp_glGetTransformFeedbacki64_v;
	glGetTransformFeedbacki_v = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbacki_v\0"): *fp_glGetTransformFeedbacki_v;
	glGetTransformFeedbackiv = call_user_get_proc_address(user_get_proc_address, "glGetTransformFeedbackiv\0"): *fp_glGetTransformFeedbackiv;
	glGetUniformBlockIndex = call_user_get_proc_address(user_get_proc_address, "glGetUniformBlockIndex\0"): *fp_glGetUniformBlockIndex;
	glGetUniformBufferSizeEXT = call_user_get_proc_address(user_get_proc_address, "glGetUniformBufferSizeEXT\0"): *fp_glGetUniformBufferSizeEXT;
	glGetUniformIndices = call_user_get_proc_address(user_get_proc_address, "glGetUniformIndices\0"): *fp_glGetUniformIndices;
	glGetUniformLocation = call_user_get_proc_address(user_get_proc_address, "glGetUniformLocation\0"): *fp_glGetUniformLocation;
	glGetUniformLocationARB = call_user_get_proc_address(user_get_proc_address, "glGetUniformLocationARB\0"): *fp_glGetUniformLocationARB;
	glGetUniformOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glGetUniformOffsetEXT\0"): *fp_glGetUniformOffsetEXT;
	glGetUniformSubroutineuiv = call_user_get_proc_address(user_get_proc_address, "glGetUniformSubroutineuiv\0"): *fp_glGetUniformSubroutineuiv;
	glGetUniformdv = call_user_get_proc_address(user_get_proc_address, "glGetUniformdv\0"): *fp_glGetUniformdv;
	glGetUniformfv = call_user_get_proc_address(user_get_proc_address, "glGetUniformfv\0"): *fp_glGetUniformfv;
	glGetUniformfvARB = call_user_get_proc_address(user_get_proc_address, "glGetUniformfvARB\0"): *fp_glGetUniformfvARB;
	glGetUniformi64vARB = call_user_get_proc_address(user_get_proc_address, "glGetUniformi64vARB\0"): *fp_glGetUniformi64vARB;
	glGetUniformi64vNV = call_user_get_proc_address(user_get_proc_address, "glGetUniformi64vNV\0"): *fp_glGetUniformi64vNV;
	glGetUniformiv = call_user_get_proc_address(user_get_proc_address, "glGetUniformiv\0"): *fp_glGetUniformiv;
	glGetUniformivARB = call_user_get_proc_address(user_get_proc_address, "glGetUniformivARB\0"): *fp_glGetUniformivARB;
	glGetUniformui64vARB = call_user_get_proc_address(user_get_proc_address, "glGetUniformui64vARB\0"): *fp_glGetUniformui64vARB;
	glGetUniformui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetUniformui64vNV\0"): *fp_glGetUniformui64vNV;
	glGetUniformuiv = call_user_get_proc_address(user_get_proc_address, "glGetUniformuiv\0"): *fp_glGetUniformuiv;
	glGetUniformuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetUniformuivEXT\0"): *fp_glGetUniformuivEXT;
	glGetUnsignedBytei_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetUnsignedBytei_vEXT\0"): *fp_glGetUnsignedBytei_vEXT;
	glGetUnsignedBytevEXT = call_user_get_proc_address(user_get_proc_address, "glGetUnsignedBytevEXT\0"): *fp_glGetUnsignedBytevEXT;
	glGetVariantArrayObjectfvATI = call_user_get_proc_address(user_get_proc_address, "glGetVariantArrayObjectfvATI\0"): *fp_glGetVariantArrayObjectfvATI;
	glGetVariantArrayObjectivATI = call_user_get_proc_address(user_get_proc_address, "glGetVariantArrayObjectivATI\0"): *fp_glGetVariantArrayObjectivATI;
	glGetVariantBooleanvEXT = call_user_get_proc_address(user_get_proc_address, "glGetVariantBooleanvEXT\0"): *fp_glGetVariantBooleanvEXT;
	glGetVariantFloatvEXT = call_user_get_proc_address(user_get_proc_address, "glGetVariantFloatvEXT\0"): *fp_glGetVariantFloatvEXT;
	glGetVariantIntegervEXT = call_user_get_proc_address(user_get_proc_address, "glGetVariantIntegervEXT\0"): *fp_glGetVariantIntegervEXT;
	glGetVariantPointervEXT = call_user_get_proc_address(user_get_proc_address, "glGetVariantPointervEXT\0"): *fp_glGetVariantPointervEXT;
	glGetVaryingLocationNV = call_user_get_proc_address(user_get_proc_address, "glGetVaryingLocationNV\0"): *fp_glGetVaryingLocationNV;
	glGetVertexArrayIndexed64iv = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayIndexed64iv\0"): *fp_glGetVertexArrayIndexed64iv;
	glGetVertexArrayIndexediv = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayIndexediv\0"): *fp_glGetVertexArrayIndexediv;
	glGetVertexArrayIntegeri_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayIntegeri_vEXT\0"): *fp_glGetVertexArrayIntegeri_vEXT;
	glGetVertexArrayIntegervEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayIntegervEXT\0"): *fp_glGetVertexArrayIntegervEXT;
	glGetVertexArrayPointeri_vEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayPointeri_vEXT\0"): *fp_glGetVertexArrayPointeri_vEXT;
	glGetVertexArrayPointervEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayPointervEXT\0"): *fp_glGetVertexArrayPointervEXT;
	glGetVertexArrayiv = call_user_get_proc_address(user_get_proc_address, "glGetVertexArrayiv\0"): *fp_glGetVertexArrayiv;
	glGetVertexAttribArrayObjectfvATI = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribArrayObjectfvATI\0"): *fp_glGetVertexAttribArrayObjectfvATI;
	glGetVertexAttribArrayObjectivATI = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribArrayObjectivATI\0"): *fp_glGetVertexAttribArrayObjectivATI;
	glGetVertexAttribIiv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribIiv\0"): *fp_glGetVertexAttribIiv;
	glGetVertexAttribIivEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribIivEXT\0"): *fp_glGetVertexAttribIivEXT;
	glGetVertexAttribIuiv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribIuiv\0"): *fp_glGetVertexAttribIuiv;
	glGetVertexAttribIuivEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribIuivEXT\0"): *fp_glGetVertexAttribIuivEXT;
	glGetVertexAttribLdv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribLdv\0"): *fp_glGetVertexAttribLdv;
	glGetVertexAttribLdvEXT = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribLdvEXT\0"): *fp_glGetVertexAttribLdvEXT;
	glGetVertexAttribLi64vNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribLi64vNV\0"): *fp_glGetVertexAttribLi64vNV;
	glGetVertexAttribLui64vARB = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribLui64vARB\0"): *fp_glGetVertexAttribLui64vARB;
	glGetVertexAttribLui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribLui64vNV\0"): *fp_glGetVertexAttribLui64vNV;
	glGetVertexAttribPointerv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribPointerv\0"): *fp_glGetVertexAttribPointerv;
	glGetVertexAttribPointervARB = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribPointervARB\0"): *fp_glGetVertexAttribPointervARB;
	glGetVertexAttribPointervNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribPointervNV\0"): *fp_glGetVertexAttribPointervNV;
	glGetVertexAttribdv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribdv\0"): *fp_glGetVertexAttribdv;
	glGetVertexAttribdvARB = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribdvARB\0"): *fp_glGetVertexAttribdvARB;
	glGetVertexAttribdvNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribdvNV\0"): *fp_glGetVertexAttribdvNV;
	glGetVertexAttribfv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribfv\0"): *fp_glGetVertexAttribfv;
	glGetVertexAttribfvARB = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribfvARB\0"): *fp_glGetVertexAttribfvARB;
	glGetVertexAttribfvNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribfvNV\0"): *fp_glGetVertexAttribfvNV;
	glGetVertexAttribiv = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribiv\0"): *fp_glGetVertexAttribiv;
	glGetVertexAttribivARB = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribivARB\0"): *fp_glGetVertexAttribivARB;
	glGetVertexAttribivNV = call_user_get_proc_address(user_get_proc_address, "glGetVertexAttribivNV\0"): *fp_glGetVertexAttribivNV;
	glGetVideoCaptureStreamdvNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoCaptureStreamdvNV\0"): *fp_glGetVideoCaptureStreamdvNV;
	glGetVideoCaptureStreamfvNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoCaptureStreamfvNV\0"): *fp_glGetVideoCaptureStreamfvNV;
	glGetVideoCaptureStreamivNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoCaptureStreamivNV\0"): *fp_glGetVideoCaptureStreamivNV;
	glGetVideoCaptureivNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoCaptureivNV\0"): *fp_glGetVideoCaptureivNV;
	glGetVideoi64vNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoi64vNV\0"): *fp_glGetVideoi64vNV;
	glGetVideoivNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoivNV\0"): *fp_glGetVideoivNV;
	glGetVideoui64vNV = call_user_get_proc_address(user_get_proc_address, "glGetVideoui64vNV\0"): *fp_glGetVideoui64vNV;
	glGetVideouivNV = call_user_get_proc_address(user_get_proc_address, "glGetVideouivNV\0"): *fp_glGetVideouivNV;
	glGetVkProcAddrNV = call_user_get_proc_address(user_get_proc_address, "glGetVkProcAddrNV\0"): *fp_glGetVkProcAddrNV;
	glGetnCompressedTexImageARB = call_user_get_proc_address(user_get_proc_address, "glGetnCompressedTexImageARB\0"): *fp_glGetnCompressedTexImageARB;
	glGetnTexImageARB = call_user_get_proc_address(user_get_proc_address, "glGetnTexImageARB\0"): *fp_glGetnTexImageARB;
	glGetnUniformdvARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformdvARB\0"): *fp_glGetnUniformdvARB;
	glGetnUniformfv = call_user_get_proc_address(user_get_proc_address, "glGetnUniformfv\0"): *fp_glGetnUniformfv;
	glGetnUniformfvARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformfvARB\0"): *fp_glGetnUniformfvARB;
	glGetnUniformi64vARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformi64vARB\0"): *fp_glGetnUniformi64vARB;
	glGetnUniformiv = call_user_get_proc_address(user_get_proc_address, "glGetnUniformiv\0"): *fp_glGetnUniformiv;
	glGetnUniformivARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformivARB\0"): *fp_glGetnUniformivARB;
	glGetnUniformui64vARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformui64vARB\0"): *fp_glGetnUniformui64vARB;
	glGetnUniformuiv = call_user_get_proc_address(user_get_proc_address, "glGetnUniformuiv\0"): *fp_glGetnUniformuiv;
	glGetnUniformuivARB = call_user_get_proc_address(user_get_proc_address, "glGetnUniformuivARB\0"): *fp_glGetnUniformuivARB;
	glGlobalAlphaFactorbSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactorbSUN\0"): *fp_glGlobalAlphaFactorbSUN;
	glGlobalAlphaFactordSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactordSUN\0"): *fp_glGlobalAlphaFactordSUN;
	glGlobalAlphaFactorfSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactorfSUN\0"): *fp_glGlobalAlphaFactorfSUN;
	glGlobalAlphaFactoriSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactoriSUN\0"): *fp_glGlobalAlphaFactoriSUN;
	glGlobalAlphaFactorsSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactorsSUN\0"): *fp_glGlobalAlphaFactorsSUN;
	glGlobalAlphaFactorubSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactorubSUN\0"): *fp_glGlobalAlphaFactorubSUN;
	glGlobalAlphaFactoruiSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactoruiSUN\0"): *fp_glGlobalAlphaFactoruiSUN;
	glGlobalAlphaFactorusSUN = call_user_get_proc_address(user_get_proc_address, "glGlobalAlphaFactorusSUN\0"): *fp_glGlobalAlphaFactorusSUN;
	glHint = call_user_get_proc_address(user_get_proc_address, "glHint\0"): *fp_glHint;
	glHintPGI = call_user_get_proc_address(user_get_proc_address, "glHintPGI\0"): *fp_glHintPGI;
	glHistogramEXT = call_user_get_proc_address(user_get_proc_address, "glHistogramEXT\0"): *fp_glHistogramEXT;
	glIglooInterfaceSGIX = call_user_get_proc_address(user_get_proc_address, "glIglooInterfaceSGIX\0"): *fp_glIglooInterfaceSGIX;
	glImageTransformParameterfHP = call_user_get_proc_address(user_get_proc_address, "glImageTransformParameterfHP\0"): *fp_glImageTransformParameterfHP;
	glImageTransformParameterfvHP = call_user_get_proc_address(user_get_proc_address, "glImageTransformParameterfvHP\0"): *fp_glImageTransformParameterfvHP;
	glImageTransformParameteriHP = call_user_get_proc_address(user_get_proc_address, "glImageTransformParameteriHP\0"): *fp_glImageTransformParameteriHP;
	glImageTransformParameterivHP = call_user_get_proc_address(user_get_proc_address, "glImageTransformParameterivHP\0"): *fp_glImageTransformParameterivHP;
	glImportMemoryFdEXT = call_user_get_proc_address(user_get_proc_address, "glImportMemoryFdEXT\0"): *fp_glImportMemoryFdEXT;
	glImportMemoryWin32HandleEXT = call_user_get_proc_address(user_get_proc_address, "glImportMemoryWin32HandleEXT\0"): *fp_glImportMemoryWin32HandleEXT;
	glImportMemoryWin32NameEXT = call_user_get_proc_address(user_get_proc_address, "glImportMemoryWin32NameEXT\0"): *fp_glImportMemoryWin32NameEXT;
	glImportSemaphoreFdEXT = call_user_get_proc_address(user_get_proc_address, "glImportSemaphoreFdEXT\0"): *fp_glImportSemaphoreFdEXT;
	glImportSemaphoreWin32HandleEXT = call_user_get_proc_address(user_get_proc_address, "glImportSemaphoreWin32HandleEXT\0"): *fp_glImportSemaphoreWin32HandleEXT;
	glImportSemaphoreWin32NameEXT = call_user_get_proc_address(user_get_proc_address, "glImportSemaphoreWin32NameEXT\0"): *fp_glImportSemaphoreWin32NameEXT;
	glImportSyncEXT = call_user_get_proc_address(user_get_proc_address, "glImportSyncEXT\0"): *fp_glImportSyncEXT;
	glIndexFormatNV = call_user_get_proc_address(user_get_proc_address, "glIndexFormatNV\0"): *fp_glIndexFormatNV;
	glIndexFuncEXT = call_user_get_proc_address(user_get_proc_address, "glIndexFuncEXT\0"): *fp_glIndexFuncEXT;
	glIndexMaterialEXT = call_user_get_proc_address(user_get_proc_address, "glIndexMaterialEXT\0"): *fp_glIndexMaterialEXT;
	glIndexPointerEXT = call_user_get_proc_address(user_get_proc_address, "glIndexPointerEXT\0"): *fp_glIndexPointerEXT;
	glIndexPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glIndexPointerListIBM\0"): *fp_glIndexPointerListIBM;
	glIndexxOES = call_user_get_proc_address(user_get_proc_address, "glIndexxOES\0"): *fp_glIndexxOES;
	glIndexxvOES = call_user_get_proc_address(user_get_proc_address, "glIndexxvOES\0"): *fp_glIndexxvOES;
	glInsertComponentEXT = call_user_get_proc_address(user_get_proc_address, "glInsertComponentEXT\0"): *fp_glInsertComponentEXT;
	glInsertEventMarkerEXT = call_user_get_proc_address(user_get_proc_address, "glInsertEventMarkerEXT\0"): *fp_glInsertEventMarkerEXT;
	glInstrumentsBufferSGIX = call_user_get_proc_address(user_get_proc_address, "glInstrumentsBufferSGIX\0"): *fp_glInstrumentsBufferSGIX;
	glInterpolatePathsNV = call_user_get_proc_address(user_get_proc_address, "glInterpolatePathsNV\0"): *fp_glInterpolatePathsNV;
	glInvalidateBufferData = call_user_get_proc_address(user_get_proc_address, "glInvalidateBufferData\0"): *fp_glInvalidateBufferData;
	glInvalidateBufferSubData = call_user_get_proc_address(user_get_proc_address, "glInvalidateBufferSubData\0"): *fp_glInvalidateBufferSubData;
	glInvalidateFramebuffer = call_user_get_proc_address(user_get_proc_address, "glInvalidateFramebuffer\0"): *fp_glInvalidateFramebuffer;
	glInvalidateNamedFramebufferData = call_user_get_proc_address(user_get_proc_address, "glInvalidateNamedFramebufferData\0"): *fp_glInvalidateNamedFramebufferData;
	glInvalidateNamedFramebufferSubData = call_user_get_proc_address(user_get_proc_address, "glInvalidateNamedFramebufferSubData\0"): *fp_glInvalidateNamedFramebufferSubData;
	glInvalidateSubFramebuffer = call_user_get_proc_address(user_get_proc_address, "glInvalidateSubFramebuffer\0"): *fp_glInvalidateSubFramebuffer;
	glInvalidateTexImage = call_user_get_proc_address(user_get_proc_address, "glInvalidateTexImage\0"): *fp_glInvalidateTexImage;
	glInvalidateTexSubImage = call_user_get_proc_address(user_get_proc_address, "glInvalidateTexSubImage\0"): *fp_glInvalidateTexSubImage;
	glIsAsyncMarkerSGIX = call_user_get_proc_address(user_get_proc_address, "glIsAsyncMarkerSGIX\0"): *fp_glIsAsyncMarkerSGIX;
	glIsBuffer = call_user_get_proc_address(user_get_proc_address, "glIsBuffer\0"): *fp_glIsBuffer;
	glIsBufferARB = call_user_get_proc_address(user_get_proc_address, "glIsBufferARB\0"): *fp_glIsBufferARB;
	glIsBufferResidentNV = call_user_get_proc_address(user_get_proc_address, "glIsBufferResidentNV\0"): *fp_glIsBufferResidentNV;
	glIsCommandListNV = call_user_get_proc_address(user_get_proc_address, "glIsCommandListNV\0"): *fp_glIsCommandListNV;
	glIsEnabled = call_user_get_proc_address(user_get_proc_address, "glIsEnabled\0"): *fp_glIsEnabled;
	glIsEnabledIndexedEXT = call_user_get_proc_address(user_get_proc_address, "glIsEnabledIndexedEXT\0"): *fp_glIsEnabledIndexedEXT;
	glIsEnabledi = call_user_get_proc_address(user_get_proc_address, "glIsEnabledi\0"): *fp_glIsEnabledi;
	glIsFenceAPPLE = call_user_get_proc_address(user_get_proc_address, "glIsFenceAPPLE\0"): *fp_glIsFenceAPPLE;
	glIsFenceNV = call_user_get_proc_address(user_get_proc_address, "glIsFenceNV\0"): *fp_glIsFenceNV;
	glIsFramebuffer = call_user_get_proc_address(user_get_proc_address, "glIsFramebuffer\0"): *fp_glIsFramebuffer;
	glIsFramebufferEXT = call_user_get_proc_address(user_get_proc_address, "glIsFramebufferEXT\0"): *fp_glIsFramebufferEXT;
	glIsImageHandleResidentARB = call_user_get_proc_address(user_get_proc_address, "glIsImageHandleResidentARB\0"): *fp_glIsImageHandleResidentARB;
	glIsImageHandleResidentNV = call_user_get_proc_address(user_get_proc_address, "glIsImageHandleResidentNV\0"): *fp_glIsImageHandleResidentNV;
	glIsMemoryObjectEXT = call_user_get_proc_address(user_get_proc_address, "glIsMemoryObjectEXT\0"): *fp_glIsMemoryObjectEXT;
	glIsNameAMD = call_user_get_proc_address(user_get_proc_address, "glIsNameAMD\0"): *fp_glIsNameAMD;
	glIsNamedBufferResidentNV = call_user_get_proc_address(user_get_proc_address, "glIsNamedBufferResidentNV\0"): *fp_glIsNamedBufferResidentNV;
	glIsNamedStringARB = call_user_get_proc_address(user_get_proc_address, "glIsNamedStringARB\0"): *fp_glIsNamedStringARB;
	glIsObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glIsObjectBufferATI\0"): *fp_glIsObjectBufferATI;
	glIsOcclusionQueryNV = call_user_get_proc_address(user_get_proc_address, "glIsOcclusionQueryNV\0"): *fp_glIsOcclusionQueryNV;
	glIsPathNV = call_user_get_proc_address(user_get_proc_address, "glIsPathNV\0"): *fp_glIsPathNV;
	glIsPointInFillPathNV = call_user_get_proc_address(user_get_proc_address, "glIsPointInFillPathNV\0"): *fp_glIsPointInFillPathNV;
	glIsPointInStrokePathNV = call_user_get_proc_address(user_get_proc_address, "glIsPointInStrokePathNV\0"): *fp_glIsPointInStrokePathNV;
	glIsProgram = call_user_get_proc_address(user_get_proc_address, "glIsProgram\0"): *fp_glIsProgram;
	glIsProgramARB = call_user_get_proc_address(user_get_proc_address, "glIsProgramARB\0"): *fp_glIsProgramARB;
	glIsProgramNV = call_user_get_proc_address(user_get_proc_address, "glIsProgramNV\0"): *fp_glIsProgramNV;
	glIsProgramPipeline = call_user_get_proc_address(user_get_proc_address, "glIsProgramPipeline\0"): *fp_glIsProgramPipeline;
	glIsQuery = call_user_get_proc_address(user_get_proc_address, "glIsQuery\0"): *fp_glIsQuery;
	glIsQueryARB = call_user_get_proc_address(user_get_proc_address, "glIsQueryARB\0"): *fp_glIsQueryARB;
	glIsRenderbuffer = call_user_get_proc_address(user_get_proc_address, "glIsRenderbuffer\0"): *fp_glIsRenderbuffer;
	glIsRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glIsRenderbufferEXT\0"): *fp_glIsRenderbufferEXT;
	glIsSampler = call_user_get_proc_address(user_get_proc_address, "glIsSampler\0"): *fp_glIsSampler;
	glIsSemaphoreEXT = call_user_get_proc_address(user_get_proc_address, "glIsSemaphoreEXT\0"): *fp_glIsSemaphoreEXT;
	glIsShader = call_user_get_proc_address(user_get_proc_address, "glIsShader\0"): *fp_glIsShader;
	glIsStateNV = call_user_get_proc_address(user_get_proc_address, "glIsStateNV\0"): *fp_glIsStateNV;
	glIsSync = call_user_get_proc_address(user_get_proc_address, "glIsSync\0"): *fp_glIsSync;
	glIsTexture = call_user_get_proc_address(user_get_proc_address, "glIsTexture\0"): *fp_glIsTexture;
	glIsTextureEXT = call_user_get_proc_address(user_get_proc_address, "glIsTextureEXT\0"): *fp_glIsTextureEXT;
	glIsTextureHandleResidentARB = call_user_get_proc_address(user_get_proc_address, "glIsTextureHandleResidentARB\0"): *fp_glIsTextureHandleResidentARB;
	glIsTextureHandleResidentNV = call_user_get_proc_address(user_get_proc_address, "glIsTextureHandleResidentNV\0"): *fp_glIsTextureHandleResidentNV;
	glIsTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glIsTransformFeedback\0"): *fp_glIsTransformFeedback;
	glIsTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glIsTransformFeedbackNV\0"): *fp_glIsTransformFeedbackNV;
	glIsVariantEnabledEXT = call_user_get_proc_address(user_get_proc_address, "glIsVariantEnabledEXT\0"): *fp_glIsVariantEnabledEXT;
	glIsVertexArray = call_user_get_proc_address(user_get_proc_address, "glIsVertexArray\0"): *fp_glIsVertexArray;
	glIsVertexArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glIsVertexArrayAPPLE\0"): *fp_glIsVertexArrayAPPLE;
	glIsVertexAttribEnabledAPPLE = call_user_get_proc_address(user_get_proc_address, "glIsVertexAttribEnabledAPPLE\0"): *fp_glIsVertexAttribEnabledAPPLE;
	glLGPUCopyImageSubDataNVX = call_user_get_proc_address(user_get_proc_address, "glLGPUCopyImageSubDataNVX\0"): *fp_glLGPUCopyImageSubDataNVX;
	glLGPUInterlockNVX = call_user_get_proc_address(user_get_proc_address, "glLGPUInterlockNVX\0"): *fp_glLGPUInterlockNVX;
	glLGPUNamedBufferSubDataNVX = call_user_get_proc_address(user_get_proc_address, "glLGPUNamedBufferSubDataNVX\0"): *fp_glLGPUNamedBufferSubDataNVX;
	glLabelObjectEXT = call_user_get_proc_address(user_get_proc_address, "glLabelObjectEXT\0"): *fp_glLabelObjectEXT;
	glLightEnviSGIX = call_user_get_proc_address(user_get_proc_address, "glLightEnviSGIX\0"): *fp_glLightEnviSGIX;
	glLightModelxOES = call_user_get_proc_address(user_get_proc_address, "glLightModelxOES\0"): *fp_glLightModelxOES;
	glLightModelxvOES = call_user_get_proc_address(user_get_proc_address, "glLightModelxvOES\0"): *fp_glLightModelxvOES;
	glLightxOES = call_user_get_proc_address(user_get_proc_address, "glLightxOES\0"): *fp_glLightxOES;
	glLightxvOES = call_user_get_proc_address(user_get_proc_address, "glLightxvOES\0"): *fp_glLightxvOES;
	glLineWidth = call_user_get_proc_address(user_get_proc_address, "glLineWidth\0"): *fp_glLineWidth;
	glLineWidthxOES = call_user_get_proc_address(user_get_proc_address, "glLineWidthxOES\0"): *fp_glLineWidthxOES;
	glLinkProgram = call_user_get_proc_address(user_get_proc_address, "glLinkProgram\0"): *fp_glLinkProgram;
	glLinkProgramARB = call_user_get_proc_address(user_get_proc_address, "glLinkProgramARB\0"): *fp_glLinkProgramARB;
	glListDrawCommandsStatesClientNV = call_user_get_proc_address(user_get_proc_address, "glListDrawCommandsStatesClientNV\0"): *fp_glListDrawCommandsStatesClientNV;
	glListParameterfSGIX = call_user_get_proc_address(user_get_proc_address, "glListParameterfSGIX\0"): *fp_glListParameterfSGIX;
	glListParameterfvSGIX = call_user_get_proc_address(user_get_proc_address, "glListParameterfvSGIX\0"): *fp_glListParameterfvSGIX;
	glListParameteriSGIX = call_user_get_proc_address(user_get_proc_address, "glListParameteriSGIX\0"): *fp_glListParameteriSGIX;
	glListParameterivSGIX = call_user_get_proc_address(user_get_proc_address, "glListParameterivSGIX\0"): *fp_glListParameterivSGIX;
	glLoadIdentityDeformationMapSGIX = call_user_get_proc_address(user_get_proc_address, "glLoadIdentityDeformationMapSGIX\0"): *fp_glLoadIdentityDeformationMapSGIX;
	glLoadMatrixxOES = call_user_get_proc_address(user_get_proc_address, "glLoadMatrixxOES\0"): *fp_glLoadMatrixxOES;
	glLoadProgramNV = call_user_get_proc_address(user_get_proc_address, "glLoadProgramNV\0"): *fp_glLoadProgramNV;
	glLoadTransposeMatrixdARB = call_user_get_proc_address(user_get_proc_address, "glLoadTransposeMatrixdARB\0"): *fp_glLoadTransposeMatrixdARB;
	glLoadTransposeMatrixfARB = call_user_get_proc_address(user_get_proc_address, "glLoadTransposeMatrixfARB\0"): *fp_glLoadTransposeMatrixfARB;
	glLoadTransposeMatrixxOES = call_user_get_proc_address(user_get_proc_address, "glLoadTransposeMatrixxOES\0"): *fp_glLoadTransposeMatrixxOES;
	glLockArraysEXT = call_user_get_proc_address(user_get_proc_address, "glLockArraysEXT\0"): *fp_glLockArraysEXT;
	glLogicOp = call_user_get_proc_address(user_get_proc_address, "glLogicOp\0"): *fp_glLogicOp;
	glMakeBufferNonResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeBufferNonResidentNV\0"): *fp_glMakeBufferNonResidentNV;
	glMakeBufferResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeBufferResidentNV\0"): *fp_glMakeBufferResidentNV;
	glMakeImageHandleNonResidentARB = call_user_get_proc_address(user_get_proc_address, "glMakeImageHandleNonResidentARB\0"): *fp_glMakeImageHandleNonResidentARB;
	glMakeImageHandleNonResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeImageHandleNonResidentNV\0"): *fp_glMakeImageHandleNonResidentNV;
	glMakeImageHandleResidentARB = call_user_get_proc_address(user_get_proc_address, "glMakeImageHandleResidentARB\0"): *fp_glMakeImageHandleResidentARB;
	glMakeImageHandleResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeImageHandleResidentNV\0"): *fp_glMakeImageHandleResidentNV;
	glMakeNamedBufferNonResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeNamedBufferNonResidentNV\0"): *fp_glMakeNamedBufferNonResidentNV;
	glMakeNamedBufferResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeNamedBufferResidentNV\0"): *fp_glMakeNamedBufferResidentNV;
	glMakeTextureHandleNonResidentARB = call_user_get_proc_address(user_get_proc_address, "glMakeTextureHandleNonResidentARB\0"): *fp_glMakeTextureHandleNonResidentARB;
	glMakeTextureHandleNonResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeTextureHandleNonResidentNV\0"): *fp_glMakeTextureHandleNonResidentNV;
	glMakeTextureHandleResidentARB = call_user_get_proc_address(user_get_proc_address, "glMakeTextureHandleResidentARB\0"): *fp_glMakeTextureHandleResidentARB;
	glMakeTextureHandleResidentNV = call_user_get_proc_address(user_get_proc_address, "glMakeTextureHandleResidentNV\0"): *fp_glMakeTextureHandleResidentNV;
	glMap1xOES = call_user_get_proc_address(user_get_proc_address, "glMap1xOES\0"): *fp_glMap1xOES;
	glMap2xOES = call_user_get_proc_address(user_get_proc_address, "glMap2xOES\0"): *fp_glMap2xOES;
	glMapBuffer = call_user_get_proc_address(user_get_proc_address, "glMapBuffer\0"): *fp_glMapBuffer;
	glMapBufferARB = call_user_get_proc_address(user_get_proc_address, "glMapBufferARB\0"): *fp_glMapBufferARB;
	glMapBufferRange = call_user_get_proc_address(user_get_proc_address, "glMapBufferRange\0"): *fp_glMapBufferRange;
	glMapControlPointsNV = call_user_get_proc_address(user_get_proc_address, "glMapControlPointsNV\0"): *fp_glMapControlPointsNV;
	glMapGrid1xOES = call_user_get_proc_address(user_get_proc_address, "glMapGrid1xOES\0"): *fp_glMapGrid1xOES;
	glMapGrid2xOES = call_user_get_proc_address(user_get_proc_address, "glMapGrid2xOES\0"): *fp_glMapGrid2xOES;
	glMapNamedBuffer = call_user_get_proc_address(user_get_proc_address, "glMapNamedBuffer\0"): *fp_glMapNamedBuffer;
	glMapNamedBufferEXT = call_user_get_proc_address(user_get_proc_address, "glMapNamedBufferEXT\0"): *fp_glMapNamedBufferEXT;
	glMapNamedBufferRange = call_user_get_proc_address(user_get_proc_address, "glMapNamedBufferRange\0"): *fp_glMapNamedBufferRange;
	glMapNamedBufferRangeEXT = call_user_get_proc_address(user_get_proc_address, "glMapNamedBufferRangeEXT\0"): *fp_glMapNamedBufferRangeEXT;
	glMapObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glMapObjectBufferATI\0"): *fp_glMapObjectBufferATI;
	glMapParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glMapParameterfvNV\0"): *fp_glMapParameterfvNV;
	glMapParameterivNV = call_user_get_proc_address(user_get_proc_address, "glMapParameterivNV\0"): *fp_glMapParameterivNV;
	glMapTexture2DINTEL = call_user_get_proc_address(user_get_proc_address, "glMapTexture2DINTEL\0"): *fp_glMapTexture2DINTEL;
	glMapVertexAttrib1dAPPLE = call_user_get_proc_address(user_get_proc_address, "glMapVertexAttrib1dAPPLE\0"): *fp_glMapVertexAttrib1dAPPLE;
	glMapVertexAttrib1fAPPLE = call_user_get_proc_address(user_get_proc_address, "glMapVertexAttrib1fAPPLE\0"): *fp_glMapVertexAttrib1fAPPLE;
	glMapVertexAttrib2dAPPLE = call_user_get_proc_address(user_get_proc_address, "glMapVertexAttrib2dAPPLE\0"): *fp_glMapVertexAttrib2dAPPLE;
	glMapVertexAttrib2fAPPLE = call_user_get_proc_address(user_get_proc_address, "glMapVertexAttrib2fAPPLE\0"): *fp_glMapVertexAttrib2fAPPLE;
	glMaterialxOES = call_user_get_proc_address(user_get_proc_address, "glMaterialxOES\0"): *fp_glMaterialxOES;
	glMaterialxvOES = call_user_get_proc_address(user_get_proc_address, "glMaterialxvOES\0"): *fp_glMaterialxvOES;
	glMatrixFrustumEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixFrustumEXT\0"): *fp_glMatrixFrustumEXT;
	glMatrixIndexPointerARB = call_user_get_proc_address(user_get_proc_address, "glMatrixIndexPointerARB\0"): *fp_glMatrixIndexPointerARB;
	glMatrixIndexubvARB = call_user_get_proc_address(user_get_proc_address, "glMatrixIndexubvARB\0"): *fp_glMatrixIndexubvARB;
	glMatrixIndexuivARB = call_user_get_proc_address(user_get_proc_address, "glMatrixIndexuivARB\0"): *fp_glMatrixIndexuivARB;
	glMatrixIndexusvARB = call_user_get_proc_address(user_get_proc_address, "glMatrixIndexusvARB\0"): *fp_glMatrixIndexusvARB;
	glMatrixLoad3x2fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixLoad3x2fNV\0"): *fp_glMatrixLoad3x2fNV;
	glMatrixLoad3x3fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixLoad3x3fNV\0"): *fp_glMatrixLoad3x3fNV;
	glMatrixLoadIdentityEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixLoadIdentityEXT\0"): *fp_glMatrixLoadIdentityEXT;
	glMatrixLoadTranspose3x3fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixLoadTranspose3x3fNV\0"): *fp_glMatrixLoadTranspose3x3fNV;
	glMatrixLoadTransposedEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixLoadTransposedEXT\0"): *fp_glMatrixLoadTransposedEXT;
	glMatrixLoadTransposefEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixLoadTransposefEXT\0"): *fp_glMatrixLoadTransposefEXT;
	glMatrixLoaddEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixLoaddEXT\0"): *fp_glMatrixLoaddEXT;
	glMatrixLoadfEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixLoadfEXT\0"): *fp_glMatrixLoadfEXT;
	glMatrixMult3x2fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixMult3x2fNV\0"): *fp_glMatrixMult3x2fNV;
	glMatrixMult3x3fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixMult3x3fNV\0"): *fp_glMatrixMult3x3fNV;
	glMatrixMultTranspose3x3fNV = call_user_get_proc_address(user_get_proc_address, "glMatrixMultTranspose3x3fNV\0"): *fp_glMatrixMultTranspose3x3fNV;
	glMatrixMultTransposedEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixMultTransposedEXT\0"): *fp_glMatrixMultTransposedEXT;
	glMatrixMultTransposefEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixMultTransposefEXT\0"): *fp_glMatrixMultTransposefEXT;
	glMatrixMultdEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixMultdEXT\0"): *fp_glMatrixMultdEXT;
	glMatrixMultfEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixMultfEXT\0"): *fp_glMatrixMultfEXT;
	glMatrixOrthoEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixOrthoEXT\0"): *fp_glMatrixOrthoEXT;
	glMatrixPopEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixPopEXT\0"): *fp_glMatrixPopEXT;
	glMatrixPushEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixPushEXT\0"): *fp_glMatrixPushEXT;
	glMatrixRotatedEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixRotatedEXT\0"): *fp_glMatrixRotatedEXT;
	glMatrixRotatefEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixRotatefEXT\0"): *fp_glMatrixRotatefEXT;
	glMatrixScaledEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixScaledEXT\0"): *fp_glMatrixScaledEXT;
	glMatrixScalefEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixScalefEXT\0"): *fp_glMatrixScalefEXT;
	glMatrixTranslatedEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixTranslatedEXT\0"): *fp_glMatrixTranslatedEXT;
	glMatrixTranslatefEXT = call_user_get_proc_address(user_get_proc_address, "glMatrixTranslatefEXT\0"): *fp_glMatrixTranslatefEXT;
	glMaxShaderCompilerThreadsARB = call_user_get_proc_address(user_get_proc_address, "glMaxShaderCompilerThreadsARB\0"): *fp_glMaxShaderCompilerThreadsARB;
	glMaxShaderCompilerThreadsKHR = call_user_get_proc_address(user_get_proc_address, "glMaxShaderCompilerThreadsKHR\0"): *fp_glMaxShaderCompilerThreadsKHR;
	glMemoryBarrier = call_user_get_proc_address(user_get_proc_address, "glMemoryBarrier\0"): *fp_glMemoryBarrier;
	glMemoryBarrierByRegion = call_user_get_proc_address(user_get_proc_address, "glMemoryBarrierByRegion\0"): *fp_glMemoryBarrierByRegion;
	glMemoryBarrierEXT = call_user_get_proc_address(user_get_proc_address, "glMemoryBarrierEXT\0"): *fp_glMemoryBarrierEXT;
	glMemoryObjectParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glMemoryObjectParameterivEXT\0"): *fp_glMemoryObjectParameterivEXT;
	glMinSampleShadingARB = call_user_get_proc_address(user_get_proc_address, "glMinSampleShadingARB\0"): *fp_glMinSampleShadingARB;
	glMinmaxEXT = call_user_get_proc_address(user_get_proc_address, "glMinmaxEXT\0"): *fp_glMinmaxEXT;
	glMultMatrixxOES = call_user_get_proc_address(user_get_proc_address, "glMultMatrixxOES\0"): *fp_glMultMatrixxOES;
	glMultTransposeMatrixdARB = call_user_get_proc_address(user_get_proc_address, "glMultTransposeMatrixdARB\0"): *fp_glMultTransposeMatrixdARB;
	glMultTransposeMatrixfARB = call_user_get_proc_address(user_get_proc_address, "glMultTransposeMatrixfARB\0"): *fp_glMultTransposeMatrixfARB;
	glMultTransposeMatrixxOES = call_user_get_proc_address(user_get_proc_address, "glMultTransposeMatrixxOES\0"): *fp_glMultTransposeMatrixxOES;
	glMultiDrawArrays = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArrays\0"): *fp_glMultiDrawArrays;
	glMultiDrawArraysEXT = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysEXT\0"): *fp_glMultiDrawArraysEXT;
	glMultiDrawArraysIndirect = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysIndirect\0"): *fp_glMultiDrawArraysIndirect;
	glMultiDrawArraysIndirectAMD = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysIndirectAMD\0"): *fp_glMultiDrawArraysIndirectAMD;
	glMultiDrawArraysIndirectBindlessCountNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysIndirectBindlessCountNV\0"): *fp_glMultiDrawArraysIndirectBindlessCountNV;
	glMultiDrawArraysIndirectBindlessNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysIndirectBindlessNV\0"): *fp_glMultiDrawArraysIndirectBindlessNV;
	glMultiDrawArraysIndirectCountARB = call_user_get_proc_address(user_get_proc_address, "glMultiDrawArraysIndirectCountARB\0"): *fp_glMultiDrawArraysIndirectCountARB;
	glMultiDrawElementArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementArrayAPPLE\0"): *fp_glMultiDrawElementArrayAPPLE;
	glMultiDrawElements = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElements\0"): *fp_glMultiDrawElements;
	glMultiDrawElementsBaseVertex = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsBaseVertex\0"): *fp_glMultiDrawElementsBaseVertex;
	glMultiDrawElementsEXT = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsEXT\0"): *fp_glMultiDrawElementsEXT;
	glMultiDrawElementsIndirect = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsIndirect\0"): *fp_glMultiDrawElementsIndirect;
	glMultiDrawElementsIndirectAMD = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsIndirectAMD\0"): *fp_glMultiDrawElementsIndirectAMD;
	glMultiDrawElementsIndirectBindlessCountNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsIndirectBindlessCountNV\0"): *fp_glMultiDrawElementsIndirectBindlessCountNV;
	glMultiDrawElementsIndirectBindlessNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsIndirectBindlessNV\0"): *fp_glMultiDrawElementsIndirectBindlessNV;
	glMultiDrawElementsIndirectCountARB = call_user_get_proc_address(user_get_proc_address, "glMultiDrawElementsIndirectCountARB\0"): *fp_glMultiDrawElementsIndirectCountARB;
	glMultiDrawMeshTasksIndirectCountNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawMeshTasksIndirectCountNV\0"): *fp_glMultiDrawMeshTasksIndirectCountNV;
	glMultiDrawMeshTasksIndirectNV = call_user_get_proc_address(user_get_proc_address, "glMultiDrawMeshTasksIndirectNV\0"): *fp_glMultiDrawMeshTasksIndirectNV;
	glMultiDrawRangeElementArrayAPPLE = call_user_get_proc_address(user_get_proc_address, "glMultiDrawRangeElementArrayAPPLE\0"): *fp_glMultiDrawRangeElementArrayAPPLE;
	glMultiModeDrawArraysIBM = call_user_get_proc_address(user_get_proc_address, "glMultiModeDrawArraysIBM\0"): *fp_glMultiModeDrawArraysIBM;
	glMultiModeDrawElementsIBM = call_user_get_proc_address(user_get_proc_address, "glMultiModeDrawElementsIBM\0"): *fp_glMultiModeDrawElementsIBM;
	glMultiTexBufferEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexBufferEXT\0"): *fp_glMultiTexBufferEXT;
	glMultiTexCoord1bOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1bOES\0"): *fp_glMultiTexCoord1bOES;
	glMultiTexCoord1bvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1bvOES\0"): *fp_glMultiTexCoord1bvOES;
	glMultiTexCoord1dARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1dARB\0"): *fp_glMultiTexCoord1dARB;
	glMultiTexCoord1dvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1dvARB\0"): *fp_glMultiTexCoord1dvARB;
	glMultiTexCoord1fARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1fARB\0"): *fp_glMultiTexCoord1fARB;
	glMultiTexCoord1fvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1fvARB\0"): *fp_glMultiTexCoord1fvARB;
	glMultiTexCoord1hNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1hNV\0"): *fp_glMultiTexCoord1hNV;
	glMultiTexCoord1hvNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1hvNV\0"): *fp_glMultiTexCoord1hvNV;
	glMultiTexCoord1iARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1iARB\0"): *fp_glMultiTexCoord1iARB;
	glMultiTexCoord1ivARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1ivARB\0"): *fp_glMultiTexCoord1ivARB;
	glMultiTexCoord1sARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1sARB\0"): *fp_glMultiTexCoord1sARB;
	glMultiTexCoord1svARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1svARB\0"): *fp_glMultiTexCoord1svARB;
	glMultiTexCoord1xOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1xOES\0"): *fp_glMultiTexCoord1xOES;
	glMultiTexCoord1xvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord1xvOES\0"): *fp_glMultiTexCoord1xvOES;
	glMultiTexCoord2bOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2bOES\0"): *fp_glMultiTexCoord2bOES;
	glMultiTexCoord2bvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2bvOES\0"): *fp_glMultiTexCoord2bvOES;
	glMultiTexCoord2dARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2dARB\0"): *fp_glMultiTexCoord2dARB;
	glMultiTexCoord2dvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2dvARB\0"): *fp_glMultiTexCoord2dvARB;
	glMultiTexCoord2fARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2fARB\0"): *fp_glMultiTexCoord2fARB;
	glMultiTexCoord2fvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2fvARB\0"): *fp_glMultiTexCoord2fvARB;
	glMultiTexCoord2hNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2hNV\0"): *fp_glMultiTexCoord2hNV;
	glMultiTexCoord2hvNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2hvNV\0"): *fp_glMultiTexCoord2hvNV;
	glMultiTexCoord2iARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2iARB\0"): *fp_glMultiTexCoord2iARB;
	glMultiTexCoord2ivARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2ivARB\0"): *fp_glMultiTexCoord2ivARB;
	glMultiTexCoord2sARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2sARB\0"): *fp_glMultiTexCoord2sARB;
	glMultiTexCoord2svARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2svARB\0"): *fp_glMultiTexCoord2svARB;
	glMultiTexCoord2xOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2xOES\0"): *fp_glMultiTexCoord2xOES;
	glMultiTexCoord2xvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord2xvOES\0"): *fp_glMultiTexCoord2xvOES;
	glMultiTexCoord3bOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3bOES\0"): *fp_glMultiTexCoord3bOES;
	glMultiTexCoord3bvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3bvOES\0"): *fp_glMultiTexCoord3bvOES;
	glMultiTexCoord3dARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3dARB\0"): *fp_glMultiTexCoord3dARB;
	glMultiTexCoord3dvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3dvARB\0"): *fp_glMultiTexCoord3dvARB;
	glMultiTexCoord3fARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3fARB\0"): *fp_glMultiTexCoord3fARB;
	glMultiTexCoord3fvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3fvARB\0"): *fp_glMultiTexCoord3fvARB;
	glMultiTexCoord3hNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3hNV\0"): *fp_glMultiTexCoord3hNV;
	glMultiTexCoord3hvNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3hvNV\0"): *fp_glMultiTexCoord3hvNV;
	glMultiTexCoord3iARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3iARB\0"): *fp_glMultiTexCoord3iARB;
	glMultiTexCoord3ivARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3ivARB\0"): *fp_glMultiTexCoord3ivARB;
	glMultiTexCoord3sARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3sARB\0"): *fp_glMultiTexCoord3sARB;
	glMultiTexCoord3svARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3svARB\0"): *fp_glMultiTexCoord3svARB;
	glMultiTexCoord3xOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3xOES\0"): *fp_glMultiTexCoord3xOES;
	glMultiTexCoord3xvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord3xvOES\0"): *fp_glMultiTexCoord3xvOES;
	glMultiTexCoord4bOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4bOES\0"): *fp_glMultiTexCoord4bOES;
	glMultiTexCoord4bvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4bvOES\0"): *fp_glMultiTexCoord4bvOES;
	glMultiTexCoord4dARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4dARB\0"): *fp_glMultiTexCoord4dARB;
	glMultiTexCoord4dvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4dvARB\0"): *fp_glMultiTexCoord4dvARB;
	glMultiTexCoord4fARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4fARB\0"): *fp_glMultiTexCoord4fARB;
	glMultiTexCoord4fvARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4fvARB\0"): *fp_glMultiTexCoord4fvARB;
	glMultiTexCoord4hNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4hNV\0"): *fp_glMultiTexCoord4hNV;
	glMultiTexCoord4hvNV = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4hvNV\0"): *fp_glMultiTexCoord4hvNV;
	glMultiTexCoord4iARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4iARB\0"): *fp_glMultiTexCoord4iARB;
	glMultiTexCoord4ivARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4ivARB\0"): *fp_glMultiTexCoord4ivARB;
	glMultiTexCoord4sARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4sARB\0"): *fp_glMultiTexCoord4sARB;
	glMultiTexCoord4svARB = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4svARB\0"): *fp_glMultiTexCoord4svARB;
	glMultiTexCoord4xOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4xOES\0"): *fp_glMultiTexCoord4xOES;
	glMultiTexCoord4xvOES = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoord4xvOES\0"): *fp_glMultiTexCoord4xvOES;
	glMultiTexCoordPointerEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexCoordPointerEXT\0"): *fp_glMultiTexCoordPointerEXT;
	glMultiTexEnvfEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexEnvfEXT\0"): *fp_glMultiTexEnvfEXT;
	glMultiTexEnvfvEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexEnvfvEXT\0"): *fp_glMultiTexEnvfvEXT;
	glMultiTexEnviEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexEnviEXT\0"): *fp_glMultiTexEnviEXT;
	glMultiTexEnvivEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexEnvivEXT\0"): *fp_glMultiTexEnvivEXT;
	glMultiTexGendEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGendEXT\0"): *fp_glMultiTexGendEXT;
	glMultiTexGendvEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGendvEXT\0"): *fp_glMultiTexGendvEXT;
	glMultiTexGenfEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGenfEXT\0"): *fp_glMultiTexGenfEXT;
	glMultiTexGenfvEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGenfvEXT\0"): *fp_glMultiTexGenfvEXT;
	glMultiTexGeniEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGeniEXT\0"): *fp_glMultiTexGeniEXT;
	glMultiTexGenivEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexGenivEXT\0"): *fp_glMultiTexGenivEXT;
	glMultiTexImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexImage1DEXT\0"): *fp_glMultiTexImage1DEXT;
	glMultiTexImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexImage2DEXT\0"): *fp_glMultiTexImage2DEXT;
	glMultiTexImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexImage3DEXT\0"): *fp_glMultiTexImage3DEXT;
	glMultiTexParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameterIivEXT\0"): *fp_glMultiTexParameterIivEXT;
	glMultiTexParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameterIuivEXT\0"): *fp_glMultiTexParameterIuivEXT;
	glMultiTexParameterfEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameterfEXT\0"): *fp_glMultiTexParameterfEXT;
	glMultiTexParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameterfvEXT\0"): *fp_glMultiTexParameterfvEXT;
	glMultiTexParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameteriEXT\0"): *fp_glMultiTexParameteriEXT;
	glMultiTexParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexParameterivEXT\0"): *fp_glMultiTexParameterivEXT;
	glMultiTexRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexRenderbufferEXT\0"): *fp_glMultiTexRenderbufferEXT;
	glMultiTexSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexSubImage1DEXT\0"): *fp_glMultiTexSubImage1DEXT;
	glMultiTexSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexSubImage2DEXT\0"): *fp_glMultiTexSubImage2DEXT;
	glMultiTexSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glMultiTexSubImage3DEXT\0"): *fp_glMultiTexSubImage3DEXT;
	glMulticastBarrierNV = call_user_get_proc_address(user_get_proc_address, "glMulticastBarrierNV\0"): *fp_glMulticastBarrierNV;
	glMulticastBlitFramebufferNV = call_user_get_proc_address(user_get_proc_address, "glMulticastBlitFramebufferNV\0"): *fp_glMulticastBlitFramebufferNV;
	glMulticastBufferSubDataNV = call_user_get_proc_address(user_get_proc_address, "glMulticastBufferSubDataNV\0"): *fp_glMulticastBufferSubDataNV;
	glMulticastCopyBufferSubDataNV = call_user_get_proc_address(user_get_proc_address, "glMulticastCopyBufferSubDataNV\0"): *fp_glMulticastCopyBufferSubDataNV;
	glMulticastCopyImageSubDataNV = call_user_get_proc_address(user_get_proc_address, "glMulticastCopyImageSubDataNV\0"): *fp_glMulticastCopyImageSubDataNV;
	glMulticastFramebufferSampleLocationsfvNV = call_user_get_proc_address(user_get_proc_address, "glMulticastFramebufferSampleLocationsfvNV\0"): *fp_glMulticastFramebufferSampleLocationsfvNV;
	glMulticastGetQueryObjecti64vNV = call_user_get_proc_address(user_get_proc_address, "glMulticastGetQueryObjecti64vNV\0"): *fp_glMulticastGetQueryObjecti64vNV;
	glMulticastGetQueryObjectivNV = call_user_get_proc_address(user_get_proc_address, "glMulticastGetQueryObjectivNV\0"): *fp_glMulticastGetQueryObjectivNV;
	glMulticastGetQueryObjectui64vNV = call_user_get_proc_address(user_get_proc_address, "glMulticastGetQueryObjectui64vNV\0"): *fp_glMulticastGetQueryObjectui64vNV;
	glMulticastGetQueryObjectuivNV = call_user_get_proc_address(user_get_proc_address, "glMulticastGetQueryObjectuivNV\0"): *fp_glMulticastGetQueryObjectuivNV;
	glMulticastScissorArrayvNVX = call_user_get_proc_address(user_get_proc_address, "glMulticastScissorArrayvNVX\0"): *fp_glMulticastScissorArrayvNVX;
	glMulticastViewportArrayvNVX = call_user_get_proc_address(user_get_proc_address, "glMulticastViewportArrayvNVX\0"): *fp_glMulticastViewportArrayvNVX;
	glMulticastViewportPositionWScaleNVX = call_user_get_proc_address(user_get_proc_address, "glMulticastViewportPositionWScaleNVX\0"): *fp_glMulticastViewportPositionWScaleNVX;
	glMulticastWaitSyncNV = call_user_get_proc_address(user_get_proc_address, "glMulticastWaitSyncNV\0"): *fp_glMulticastWaitSyncNV;
	glNamedBufferAttachMemoryNV = call_user_get_proc_address(user_get_proc_address, "glNamedBufferAttachMemoryNV\0"): *fp_glNamedBufferAttachMemoryNV;
	glNamedBufferData = call_user_get_proc_address(user_get_proc_address, "glNamedBufferData\0"): *fp_glNamedBufferData;
	glNamedBufferDataEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferDataEXT\0"): *fp_glNamedBufferDataEXT;
	glNamedBufferPageCommitmentARB = call_user_get_proc_address(user_get_proc_address, "glNamedBufferPageCommitmentARB\0"): *fp_glNamedBufferPageCommitmentARB;
	glNamedBufferPageCommitmentEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferPageCommitmentEXT\0"): *fp_glNamedBufferPageCommitmentEXT;
	glNamedBufferPageCommitmentMemNV = call_user_get_proc_address(user_get_proc_address, "glNamedBufferPageCommitmentMemNV\0"): *fp_glNamedBufferPageCommitmentMemNV;
	glNamedBufferStorage = call_user_get_proc_address(user_get_proc_address, "glNamedBufferStorage\0"): *fp_glNamedBufferStorage;
	glNamedBufferStorageEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferStorageEXT\0"): *fp_glNamedBufferStorageEXT;
	glNamedBufferStorageExternalEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferStorageExternalEXT\0"): *fp_glNamedBufferStorageExternalEXT;
	glNamedBufferStorageMemEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferStorageMemEXT\0"): *fp_glNamedBufferStorageMemEXT;
	glNamedBufferSubData = call_user_get_proc_address(user_get_proc_address, "glNamedBufferSubData\0"): *fp_glNamedBufferSubData;
	glNamedBufferSubDataEXT = call_user_get_proc_address(user_get_proc_address, "glNamedBufferSubDataEXT\0"): *fp_glNamedBufferSubDataEXT;
	glNamedCopyBufferSubDataEXT = call_user_get_proc_address(user_get_proc_address, "glNamedCopyBufferSubDataEXT\0"): *fp_glNamedCopyBufferSubDataEXT;
	glNamedFramebufferDrawBuffer = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferDrawBuffer\0"): *fp_glNamedFramebufferDrawBuffer;
	glNamedFramebufferDrawBuffers = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferDrawBuffers\0"): *fp_glNamedFramebufferDrawBuffers;
	glNamedFramebufferParameteri = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferParameteri\0"): *fp_glNamedFramebufferParameteri;
	glNamedFramebufferParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferParameteriEXT\0"): *fp_glNamedFramebufferParameteriEXT;
	glNamedFramebufferReadBuffer = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferReadBuffer\0"): *fp_glNamedFramebufferReadBuffer;
	glNamedFramebufferRenderbuffer = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferRenderbuffer\0"): *fp_glNamedFramebufferRenderbuffer;
	glNamedFramebufferRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferRenderbufferEXT\0"): *fp_glNamedFramebufferRenderbufferEXT;
	glNamedFramebufferSampleLocationsfvARB = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferSampleLocationsfvARB\0"): *fp_glNamedFramebufferSampleLocationsfvARB;
	glNamedFramebufferSampleLocationsfvNV = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferSampleLocationsfvNV\0"): *fp_glNamedFramebufferSampleLocationsfvNV;
	glNamedFramebufferSamplePositionsfvAMD = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferSamplePositionsfvAMD\0"): *fp_glNamedFramebufferSamplePositionsfvAMD;
	glNamedFramebufferTexture = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTexture\0"): *fp_glNamedFramebufferTexture;
	glNamedFramebufferTexture1DEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTexture1DEXT\0"): *fp_glNamedFramebufferTexture1DEXT;
	glNamedFramebufferTexture2DEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTexture2DEXT\0"): *fp_glNamedFramebufferTexture2DEXT;
	glNamedFramebufferTexture3DEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTexture3DEXT\0"): *fp_glNamedFramebufferTexture3DEXT;
	glNamedFramebufferTextureEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTextureEXT\0"): *fp_glNamedFramebufferTextureEXT;
	glNamedFramebufferTextureFaceEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTextureFaceEXT\0"): *fp_glNamedFramebufferTextureFaceEXT;
	glNamedFramebufferTextureLayer = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTextureLayer\0"): *fp_glNamedFramebufferTextureLayer;
	glNamedFramebufferTextureLayerEXT = call_user_get_proc_address(user_get_proc_address, "glNamedFramebufferTextureLayerEXT\0"): *fp_glNamedFramebufferTextureLayerEXT;
	glNamedProgramLocalParameter4dEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameter4dEXT\0"): *fp_glNamedProgramLocalParameter4dEXT;
	glNamedProgramLocalParameter4dvEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameter4dvEXT\0"): *fp_glNamedProgramLocalParameter4dvEXT;
	glNamedProgramLocalParameter4fEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameter4fEXT\0"): *fp_glNamedProgramLocalParameter4fEXT;
	glNamedProgramLocalParameter4fvEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameter4fvEXT\0"): *fp_glNamedProgramLocalParameter4fvEXT;
	glNamedProgramLocalParameterI4iEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameterI4iEXT\0"): *fp_glNamedProgramLocalParameterI4iEXT;
	glNamedProgramLocalParameterI4ivEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameterI4ivEXT\0"): *fp_glNamedProgramLocalParameterI4ivEXT;
	glNamedProgramLocalParameterI4uiEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameterI4uiEXT\0"): *fp_glNamedProgramLocalParameterI4uiEXT;
	glNamedProgramLocalParameterI4uivEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameterI4uivEXT\0"): *fp_glNamedProgramLocalParameterI4uivEXT;
	glNamedProgramLocalParameters4fvEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParameters4fvEXT\0"): *fp_glNamedProgramLocalParameters4fvEXT;
	glNamedProgramLocalParametersI4ivEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParametersI4ivEXT\0"): *fp_glNamedProgramLocalParametersI4ivEXT;
	glNamedProgramLocalParametersI4uivEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramLocalParametersI4uivEXT\0"): *fp_glNamedProgramLocalParametersI4uivEXT;
	glNamedProgramStringEXT = call_user_get_proc_address(user_get_proc_address, "glNamedProgramStringEXT\0"): *fp_glNamedProgramStringEXT;
	glNamedRenderbufferStorage = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorage\0"): *fp_glNamedRenderbufferStorage;
	glNamedRenderbufferStorageEXT = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorageEXT\0"): *fp_glNamedRenderbufferStorageEXT;
	glNamedRenderbufferStorageMultisample = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorageMultisample\0"): *fp_glNamedRenderbufferStorageMultisample;
	glNamedRenderbufferStorageMultisampleAdvancedAMD = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorageMultisampleAdvancedAMD\0"): *fp_glNamedRenderbufferStorageMultisampleAdvancedAMD;
	glNamedRenderbufferStorageMultisampleCoverageEXT = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorageMultisampleCoverageEXT\0"): *fp_glNamedRenderbufferStorageMultisampleCoverageEXT;
	glNamedRenderbufferStorageMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glNamedRenderbufferStorageMultisampleEXT\0"): *fp_glNamedRenderbufferStorageMultisampleEXT;
	glNamedStringARB = call_user_get_proc_address(user_get_proc_address, "glNamedStringARB\0"): *fp_glNamedStringARB;
	glNewObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glNewObjectBufferATI\0"): *fp_glNewObjectBufferATI;
	glNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glNormal3fVertex3fSUN\0"): *fp_glNormal3fVertex3fSUN;
	glNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glNormal3fVertex3fvSUN\0"): *fp_glNormal3fVertex3fvSUN;
	glNormal3hNV = call_user_get_proc_address(user_get_proc_address, "glNormal3hNV\0"): *fp_glNormal3hNV;
	glNormal3hvNV = call_user_get_proc_address(user_get_proc_address, "glNormal3hvNV\0"): *fp_glNormal3hvNV;
	glNormal3xOES = call_user_get_proc_address(user_get_proc_address, "glNormal3xOES\0"): *fp_glNormal3xOES;
	glNormal3xvOES = call_user_get_proc_address(user_get_proc_address, "glNormal3xvOES\0"): *fp_glNormal3xvOES;
	glNormalFormatNV = call_user_get_proc_address(user_get_proc_address, "glNormalFormatNV\0"): *fp_glNormalFormatNV;
	glNormalPointerEXT = call_user_get_proc_address(user_get_proc_address, "glNormalPointerEXT\0"): *fp_glNormalPointerEXT;
	glNormalPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glNormalPointerListIBM\0"): *fp_glNormalPointerListIBM;
	glNormalPointervINTEL = call_user_get_proc_address(user_get_proc_address, "glNormalPointervINTEL\0"): *fp_glNormalPointervINTEL;
	glNormalStream3bATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3bATI\0"): *fp_glNormalStream3bATI;
	glNormalStream3bvATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3bvATI\0"): *fp_glNormalStream3bvATI;
	glNormalStream3dATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3dATI\0"): *fp_glNormalStream3dATI;
	glNormalStream3dvATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3dvATI\0"): *fp_glNormalStream3dvATI;
	glNormalStream3fATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3fATI\0"): *fp_glNormalStream3fATI;
	glNormalStream3fvATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3fvATI\0"): *fp_glNormalStream3fvATI;
	glNormalStream3iATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3iATI\0"): *fp_glNormalStream3iATI;
	glNormalStream3ivATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3ivATI\0"): *fp_glNormalStream3ivATI;
	glNormalStream3sATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3sATI\0"): *fp_glNormalStream3sATI;
	glNormalStream3svATI = call_user_get_proc_address(user_get_proc_address, "glNormalStream3svATI\0"): *fp_glNormalStream3svATI;
	glObjectLabel = call_user_get_proc_address(user_get_proc_address, "glObjectLabel\0"): *fp_glObjectLabel;
	glObjectPtrLabel = call_user_get_proc_address(user_get_proc_address, "glObjectPtrLabel\0"): *fp_glObjectPtrLabel;
	glObjectPurgeableAPPLE = call_user_get_proc_address(user_get_proc_address, "glObjectPurgeableAPPLE\0"): *fp_glObjectPurgeableAPPLE;
	glObjectUnpurgeableAPPLE = call_user_get_proc_address(user_get_proc_address, "glObjectUnpurgeableAPPLE\0"): *fp_glObjectUnpurgeableAPPLE;
	glOrthofOES = call_user_get_proc_address(user_get_proc_address, "glOrthofOES\0"): *fp_glOrthofOES;
	glOrthoxOES = call_user_get_proc_address(user_get_proc_address, "glOrthoxOES\0"): *fp_glOrthoxOES;
	glPNTrianglesfATI = call_user_get_proc_address(user_get_proc_address, "glPNTrianglesfATI\0"): *fp_glPNTrianglesfATI;
	glPNTrianglesiATI = call_user_get_proc_address(user_get_proc_address, "glPNTrianglesiATI\0"): *fp_glPNTrianglesiATI;
	glPassTexCoordATI = call_user_get_proc_address(user_get_proc_address, "glPassTexCoordATI\0"): *fp_glPassTexCoordATI;
	glPassThroughxOES = call_user_get_proc_address(user_get_proc_address, "glPassThroughxOES\0"): *fp_glPassThroughxOES;
	glPatchParameterfv = call_user_get_proc_address(user_get_proc_address, "glPatchParameterfv\0"): *fp_glPatchParameterfv;
	glPatchParameteri = call_user_get_proc_address(user_get_proc_address, "glPatchParameteri\0"): *fp_glPatchParameteri;
	glPathCommandsNV = call_user_get_proc_address(user_get_proc_address, "glPathCommandsNV\0"): *fp_glPathCommandsNV;
	glPathCoordsNV = call_user_get_proc_address(user_get_proc_address, "glPathCoordsNV\0"): *fp_glPathCoordsNV;
	glPathCoverDepthFuncNV = call_user_get_proc_address(user_get_proc_address, "glPathCoverDepthFuncNV\0"): *fp_glPathCoverDepthFuncNV;
	glPathDashArrayNV = call_user_get_proc_address(user_get_proc_address, "glPathDashArrayNV\0"): *fp_glPathDashArrayNV;
	glPathGlyphIndexArrayNV = call_user_get_proc_address(user_get_proc_address, "glPathGlyphIndexArrayNV\0"): *fp_glPathGlyphIndexArrayNV;
	glPathGlyphIndexRangeNV = call_user_get_proc_address(user_get_proc_address, "glPathGlyphIndexRangeNV\0"): *fp_glPathGlyphIndexRangeNV;
	glPathGlyphRangeNV = call_user_get_proc_address(user_get_proc_address, "glPathGlyphRangeNV\0"): *fp_glPathGlyphRangeNV;
	glPathGlyphsNV = call_user_get_proc_address(user_get_proc_address, "glPathGlyphsNV\0"): *fp_glPathGlyphsNV;
	glPathMemoryGlyphIndexArrayNV = call_user_get_proc_address(user_get_proc_address, "glPathMemoryGlyphIndexArrayNV\0"): *fp_glPathMemoryGlyphIndexArrayNV;
	glPathParameterfNV = call_user_get_proc_address(user_get_proc_address, "glPathParameterfNV\0"): *fp_glPathParameterfNV;
	glPathParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glPathParameterfvNV\0"): *fp_glPathParameterfvNV;
	glPathParameteriNV = call_user_get_proc_address(user_get_proc_address, "glPathParameteriNV\0"): *fp_glPathParameteriNV;
	glPathParameterivNV = call_user_get_proc_address(user_get_proc_address, "glPathParameterivNV\0"): *fp_glPathParameterivNV;
	glPathStencilDepthOffsetNV = call_user_get_proc_address(user_get_proc_address, "glPathStencilDepthOffsetNV\0"): *fp_glPathStencilDepthOffsetNV;
	glPathStencilFuncNV = call_user_get_proc_address(user_get_proc_address, "glPathStencilFuncNV\0"): *fp_glPathStencilFuncNV;
	glPathStringNV = call_user_get_proc_address(user_get_proc_address, "glPathStringNV\0"): *fp_glPathStringNV;
	glPathSubCommandsNV = call_user_get_proc_address(user_get_proc_address, "glPathSubCommandsNV\0"): *fp_glPathSubCommandsNV;
	glPathSubCoordsNV = call_user_get_proc_address(user_get_proc_address, "glPathSubCoordsNV\0"): *fp_glPathSubCoordsNV;
	glPauseTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glPauseTransformFeedback\0"): *fp_glPauseTransformFeedback;
	glPauseTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glPauseTransformFeedbackNV\0"): *fp_glPauseTransformFeedbackNV;
	glPixelDataRangeNV = call_user_get_proc_address(user_get_proc_address, "glPixelDataRangeNV\0"): *fp_glPixelDataRangeNV;
	glPixelMapx = call_user_get_proc_address(user_get_proc_address, "glPixelMapx\0"): *fp_glPixelMapx;
	glPixelStoref = call_user_get_proc_address(user_get_proc_address, "glPixelStoref\0"): *fp_glPixelStoref;
	glPixelStorei = call_user_get_proc_address(user_get_proc_address, "glPixelStorei\0"): *fp_glPixelStorei;
	glPixelStorex = call_user_get_proc_address(user_get_proc_address, "glPixelStorex\0"): *fp_glPixelStorex;
	glPixelTexGenParameterfSGIS = call_user_get_proc_address(user_get_proc_address, "glPixelTexGenParameterfSGIS\0"): *fp_glPixelTexGenParameterfSGIS;
	glPixelTexGenParameterfvSGIS = call_user_get_proc_address(user_get_proc_address, "glPixelTexGenParameterfvSGIS\0"): *fp_glPixelTexGenParameterfvSGIS;
	glPixelTexGenParameteriSGIS = call_user_get_proc_address(user_get_proc_address, "glPixelTexGenParameteriSGIS\0"): *fp_glPixelTexGenParameteriSGIS;
	glPixelTexGenParameterivSGIS = call_user_get_proc_address(user_get_proc_address, "glPixelTexGenParameterivSGIS\0"): *fp_glPixelTexGenParameterivSGIS;
	glPixelTexGenSGIX = call_user_get_proc_address(user_get_proc_address, "glPixelTexGenSGIX\0"): *fp_glPixelTexGenSGIX;
	glPixelTransferxOES = call_user_get_proc_address(user_get_proc_address, "glPixelTransferxOES\0"): *fp_glPixelTransferxOES;
	glPixelTransformParameterfEXT = call_user_get_proc_address(user_get_proc_address, "glPixelTransformParameterfEXT\0"): *fp_glPixelTransformParameterfEXT;
	glPixelTransformParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glPixelTransformParameterfvEXT\0"): *fp_glPixelTransformParameterfvEXT;
	glPixelTransformParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glPixelTransformParameteriEXT\0"): *fp_glPixelTransformParameteriEXT;
	glPixelTransformParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glPixelTransformParameterivEXT\0"): *fp_glPixelTransformParameterivEXT;
	glPixelZoomxOES = call_user_get_proc_address(user_get_proc_address, "glPixelZoomxOES\0"): *fp_glPixelZoomxOES;
	glPointAlongPathNV = call_user_get_proc_address(user_get_proc_address, "glPointAlongPathNV\0"): *fp_glPointAlongPathNV;
	glPointParameterf = call_user_get_proc_address(user_get_proc_address, "glPointParameterf\0"): *fp_glPointParameterf;
	glPointParameterfARB = call_user_get_proc_address(user_get_proc_address, "glPointParameterfARB\0"): *fp_glPointParameterfARB;
	glPointParameterfEXT = call_user_get_proc_address(user_get_proc_address, "glPointParameterfEXT\0"): *fp_glPointParameterfEXT;
	glPointParameterfSGIS = call_user_get_proc_address(user_get_proc_address, "glPointParameterfSGIS\0"): *fp_glPointParameterfSGIS;
	glPointParameterfv = call_user_get_proc_address(user_get_proc_address, "glPointParameterfv\0"): *fp_glPointParameterfv;
	glPointParameterfvARB = call_user_get_proc_address(user_get_proc_address, "glPointParameterfvARB\0"): *fp_glPointParameterfvARB;
	glPointParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glPointParameterfvEXT\0"): *fp_glPointParameterfvEXT;
	glPointParameterfvSGIS = call_user_get_proc_address(user_get_proc_address, "glPointParameterfvSGIS\0"): *fp_glPointParameterfvSGIS;
	glPointParameteri = call_user_get_proc_address(user_get_proc_address, "glPointParameteri\0"): *fp_glPointParameteri;
	glPointParameteriNV = call_user_get_proc_address(user_get_proc_address, "glPointParameteriNV\0"): *fp_glPointParameteriNV;
	glPointParameteriv = call_user_get_proc_address(user_get_proc_address, "glPointParameteriv\0"): *fp_glPointParameteriv;
	glPointParameterivNV = call_user_get_proc_address(user_get_proc_address, "glPointParameterivNV\0"): *fp_glPointParameterivNV;
	glPointParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glPointParameterxvOES\0"): *fp_glPointParameterxvOES;
	glPointSize = call_user_get_proc_address(user_get_proc_address, "glPointSize\0"): *fp_glPointSize;
	glPointSizexOES = call_user_get_proc_address(user_get_proc_address, "glPointSizexOES\0"): *fp_glPointSizexOES;
	glPollAsyncSGIX = call_user_get_proc_address(user_get_proc_address, "glPollAsyncSGIX\0"): *fp_glPollAsyncSGIX;
	glPollInstrumentsSGIX = call_user_get_proc_address(user_get_proc_address, "glPollInstrumentsSGIX\0"): *fp_glPollInstrumentsSGIX;
	glPolygonMode = call_user_get_proc_address(user_get_proc_address, "glPolygonMode\0"): *fp_glPolygonMode;
	glPolygonOffset = call_user_get_proc_address(user_get_proc_address, "glPolygonOffset\0"): *fp_glPolygonOffset;
	glPolygonOffsetClamp = call_user_get_proc_address(user_get_proc_address, "glPolygonOffsetClamp\0"): *fp_glPolygonOffsetClamp;
	glPolygonOffsetClampEXT = call_user_get_proc_address(user_get_proc_address, "glPolygonOffsetClampEXT\0"): *fp_glPolygonOffsetClampEXT;
	glPolygonOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glPolygonOffsetEXT\0"): *fp_glPolygonOffsetEXT;
	glPolygonOffsetxOES = call_user_get_proc_address(user_get_proc_address, "glPolygonOffsetxOES\0"): *fp_glPolygonOffsetxOES;
	glPopDebugGroup = call_user_get_proc_address(user_get_proc_address, "glPopDebugGroup\0"): *fp_glPopDebugGroup;
	glPopGroupMarkerEXT = call_user_get_proc_address(user_get_proc_address, "glPopGroupMarkerEXT\0"): *fp_glPopGroupMarkerEXT;
	glPresentFrameDualFillNV = call_user_get_proc_address(user_get_proc_address, "glPresentFrameDualFillNV\0"): *fp_glPresentFrameDualFillNV;
	glPresentFrameKeyedNV = call_user_get_proc_address(user_get_proc_address, "glPresentFrameKeyedNV\0"): *fp_glPresentFrameKeyedNV;
	glPrimitiveBoundingBoxARB = call_user_get_proc_address(user_get_proc_address, "glPrimitiveBoundingBoxARB\0"): *fp_glPrimitiveBoundingBoxARB;
	glPrimitiveRestartIndex = call_user_get_proc_address(user_get_proc_address, "glPrimitiveRestartIndex\0"): *fp_glPrimitiveRestartIndex;
	glPrimitiveRestartIndexNV = call_user_get_proc_address(user_get_proc_address, "glPrimitiveRestartIndexNV\0"): *fp_glPrimitiveRestartIndexNV;
	glPrimitiveRestartNV = call_user_get_proc_address(user_get_proc_address, "glPrimitiveRestartNV\0"): *fp_glPrimitiveRestartNV;
	glPrioritizeTexturesEXT = call_user_get_proc_address(user_get_proc_address, "glPrioritizeTexturesEXT\0"): *fp_glPrioritizeTexturesEXT;
	glPrioritizeTexturesxOES = call_user_get_proc_address(user_get_proc_address, "glPrioritizeTexturesxOES\0"): *fp_glPrioritizeTexturesxOES;
	glProgramBinary = call_user_get_proc_address(user_get_proc_address, "glProgramBinary\0"): *fp_glProgramBinary;
	glProgramBufferParametersIivNV = call_user_get_proc_address(user_get_proc_address, "glProgramBufferParametersIivNV\0"): *fp_glProgramBufferParametersIivNV;
	glProgramBufferParametersIuivNV = call_user_get_proc_address(user_get_proc_address, "glProgramBufferParametersIuivNV\0"): *fp_glProgramBufferParametersIuivNV;
	glProgramBufferParametersfvNV = call_user_get_proc_address(user_get_proc_address, "glProgramBufferParametersfvNV\0"): *fp_glProgramBufferParametersfvNV;
	glProgramEnvParameter4dARB = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameter4dARB\0"): *fp_glProgramEnvParameter4dARB;
	glProgramEnvParameter4dvARB = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameter4dvARB\0"): *fp_glProgramEnvParameter4dvARB;
	glProgramEnvParameter4fARB = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameter4fARB\0"): *fp_glProgramEnvParameter4fARB;
	glProgramEnvParameter4fvARB = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameter4fvARB\0"): *fp_glProgramEnvParameter4fvARB;
	glProgramEnvParameterI4iNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameterI4iNV\0"): *fp_glProgramEnvParameterI4iNV;
	glProgramEnvParameterI4ivNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameterI4ivNV\0"): *fp_glProgramEnvParameterI4ivNV;
	glProgramEnvParameterI4uiNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameterI4uiNV\0"): *fp_glProgramEnvParameterI4uiNV;
	glProgramEnvParameterI4uivNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameterI4uivNV\0"): *fp_glProgramEnvParameterI4uivNV;
	glProgramEnvParameters4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParameters4fvEXT\0"): *fp_glProgramEnvParameters4fvEXT;
	glProgramEnvParametersI4ivNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParametersI4ivNV\0"): *fp_glProgramEnvParametersI4ivNV;
	glProgramEnvParametersI4uivNV = call_user_get_proc_address(user_get_proc_address, "glProgramEnvParametersI4uivNV\0"): *fp_glProgramEnvParametersI4uivNV;
	glProgramLocalParameter4dARB = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameter4dARB\0"): *fp_glProgramLocalParameter4dARB;
	glProgramLocalParameter4dvARB = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameter4dvARB\0"): *fp_glProgramLocalParameter4dvARB;
	glProgramLocalParameter4fARB = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameter4fARB\0"): *fp_glProgramLocalParameter4fARB;
	glProgramLocalParameter4fvARB = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameter4fvARB\0"): *fp_glProgramLocalParameter4fvARB;
	glProgramLocalParameterI4iNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameterI4iNV\0"): *fp_glProgramLocalParameterI4iNV;
	glProgramLocalParameterI4ivNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameterI4ivNV\0"): *fp_glProgramLocalParameterI4ivNV;
	glProgramLocalParameterI4uiNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameterI4uiNV\0"): *fp_glProgramLocalParameterI4uiNV;
	glProgramLocalParameterI4uivNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameterI4uivNV\0"): *fp_glProgramLocalParameterI4uivNV;
	glProgramLocalParameters4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParameters4fvEXT\0"): *fp_glProgramLocalParameters4fvEXT;
	glProgramLocalParametersI4ivNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParametersI4ivNV\0"): *fp_glProgramLocalParametersI4ivNV;
	glProgramLocalParametersI4uivNV = call_user_get_proc_address(user_get_proc_address, "glProgramLocalParametersI4uivNV\0"): *fp_glProgramLocalParametersI4uivNV;
	glProgramNamedParameter4dNV = call_user_get_proc_address(user_get_proc_address, "glProgramNamedParameter4dNV\0"): *fp_glProgramNamedParameter4dNV;
	glProgramNamedParameter4dvNV = call_user_get_proc_address(user_get_proc_address, "glProgramNamedParameter4dvNV\0"): *fp_glProgramNamedParameter4dvNV;
	glProgramNamedParameter4fNV = call_user_get_proc_address(user_get_proc_address, "glProgramNamedParameter4fNV\0"): *fp_glProgramNamedParameter4fNV;
	glProgramNamedParameter4fvNV = call_user_get_proc_address(user_get_proc_address, "glProgramNamedParameter4fvNV\0"): *fp_glProgramNamedParameter4fvNV;
	glProgramParameter4dNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameter4dNV\0"): *fp_glProgramParameter4dNV;
	glProgramParameter4dvNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameter4dvNV\0"): *fp_glProgramParameter4dvNV;
	glProgramParameter4fNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameter4fNV\0"): *fp_glProgramParameter4fNV;
	glProgramParameter4fvNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameter4fvNV\0"): *fp_glProgramParameter4fvNV;
	glProgramParameteri = call_user_get_proc_address(user_get_proc_address, "glProgramParameteri\0"): *fp_glProgramParameteri;
	glProgramParameteriARB = call_user_get_proc_address(user_get_proc_address, "glProgramParameteriARB\0"): *fp_glProgramParameteriARB;
	glProgramParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glProgramParameteriEXT\0"): *fp_glProgramParameteriEXT;
	glProgramParameters4dvNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameters4dvNV\0"): *fp_glProgramParameters4dvNV;
	glProgramParameters4fvNV = call_user_get_proc_address(user_get_proc_address, "glProgramParameters4fvNV\0"): *fp_glProgramParameters4fvNV;
	glProgramPathFragmentInputGenNV = call_user_get_proc_address(user_get_proc_address, "glProgramPathFragmentInputGenNV\0"): *fp_glProgramPathFragmentInputGenNV;
	glProgramStringARB = call_user_get_proc_address(user_get_proc_address, "glProgramStringARB\0"): *fp_glProgramStringARB;
	glProgramSubroutineParametersuivNV = call_user_get_proc_address(user_get_proc_address, "glProgramSubroutineParametersuivNV\0"): *fp_glProgramSubroutineParametersuivNV;
	glProgramUniform1d = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1d\0"): *fp_glProgramUniform1d;
	glProgramUniform1dEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1dEXT\0"): *fp_glProgramUniform1dEXT;
	glProgramUniform1dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1dv\0"): *fp_glProgramUniform1dv;
	glProgramUniform1dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1dvEXT\0"): *fp_glProgramUniform1dvEXT;
	glProgramUniform1f = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1f\0"): *fp_glProgramUniform1f;
	glProgramUniform1fEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1fEXT\0"): *fp_glProgramUniform1fEXT;
	glProgramUniform1fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1fv\0"): *fp_glProgramUniform1fv;
	glProgramUniform1fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1fvEXT\0"): *fp_glProgramUniform1fvEXT;
	glProgramUniform1i = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1i\0"): *fp_glProgramUniform1i;
	glProgramUniform1i64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1i64ARB\0"): *fp_glProgramUniform1i64ARB;
	glProgramUniform1i64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1i64NV\0"): *fp_glProgramUniform1i64NV;
	glProgramUniform1i64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1i64vARB\0"): *fp_glProgramUniform1i64vARB;
	glProgramUniform1i64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1i64vNV\0"): *fp_glProgramUniform1i64vNV;
	glProgramUniform1iEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1iEXT\0"): *fp_glProgramUniform1iEXT;
	glProgramUniform1iv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1iv\0"): *fp_glProgramUniform1iv;
	glProgramUniform1ivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ivEXT\0"): *fp_glProgramUniform1ivEXT;
	glProgramUniform1ui = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ui\0"): *fp_glProgramUniform1ui;
	glProgramUniform1ui64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ui64ARB\0"): *fp_glProgramUniform1ui64ARB;
	glProgramUniform1ui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ui64NV\0"): *fp_glProgramUniform1ui64NV;
	glProgramUniform1ui64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ui64vARB\0"): *fp_glProgramUniform1ui64vARB;
	glProgramUniform1ui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1ui64vNV\0"): *fp_glProgramUniform1ui64vNV;
	glProgramUniform1uiEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1uiEXT\0"): *fp_glProgramUniform1uiEXT;
	glProgramUniform1uiv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1uiv\0"): *fp_glProgramUniform1uiv;
	glProgramUniform1uivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform1uivEXT\0"): *fp_glProgramUniform1uivEXT;
	glProgramUniform2d = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2d\0"): *fp_glProgramUniform2d;
	glProgramUniform2dEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2dEXT\0"): *fp_glProgramUniform2dEXT;
	glProgramUniform2dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2dv\0"): *fp_glProgramUniform2dv;
	glProgramUniform2dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2dvEXT\0"): *fp_glProgramUniform2dvEXT;
	glProgramUniform2f = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2f\0"): *fp_glProgramUniform2f;
	glProgramUniform2fEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2fEXT\0"): *fp_glProgramUniform2fEXT;
	glProgramUniform2fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2fv\0"): *fp_glProgramUniform2fv;
	glProgramUniform2fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2fvEXT\0"): *fp_glProgramUniform2fvEXT;
	glProgramUniform2i = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2i\0"): *fp_glProgramUniform2i;
	glProgramUniform2i64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2i64ARB\0"): *fp_glProgramUniform2i64ARB;
	glProgramUniform2i64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2i64NV\0"): *fp_glProgramUniform2i64NV;
	glProgramUniform2i64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2i64vARB\0"): *fp_glProgramUniform2i64vARB;
	glProgramUniform2i64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2i64vNV\0"): *fp_glProgramUniform2i64vNV;
	glProgramUniform2iEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2iEXT\0"): *fp_glProgramUniform2iEXT;
	glProgramUniform2iv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2iv\0"): *fp_glProgramUniform2iv;
	glProgramUniform2ivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ivEXT\0"): *fp_glProgramUniform2ivEXT;
	glProgramUniform2ui = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ui\0"): *fp_glProgramUniform2ui;
	glProgramUniform2ui64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ui64ARB\0"): *fp_glProgramUniform2ui64ARB;
	glProgramUniform2ui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ui64NV\0"): *fp_glProgramUniform2ui64NV;
	glProgramUniform2ui64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ui64vARB\0"): *fp_glProgramUniform2ui64vARB;
	glProgramUniform2ui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2ui64vNV\0"): *fp_glProgramUniform2ui64vNV;
	glProgramUniform2uiEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2uiEXT\0"): *fp_glProgramUniform2uiEXT;
	glProgramUniform2uiv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2uiv\0"): *fp_glProgramUniform2uiv;
	glProgramUniform2uivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform2uivEXT\0"): *fp_glProgramUniform2uivEXT;
	glProgramUniform3d = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3d\0"): *fp_glProgramUniform3d;
	glProgramUniform3dEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3dEXT\0"): *fp_glProgramUniform3dEXT;
	glProgramUniform3dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3dv\0"): *fp_glProgramUniform3dv;
	glProgramUniform3dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3dvEXT\0"): *fp_glProgramUniform3dvEXT;
	glProgramUniform3f = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3f\0"): *fp_glProgramUniform3f;
	glProgramUniform3fEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3fEXT\0"): *fp_glProgramUniform3fEXT;
	glProgramUniform3fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3fv\0"): *fp_glProgramUniform3fv;
	glProgramUniform3fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3fvEXT\0"): *fp_glProgramUniform3fvEXT;
	glProgramUniform3i = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3i\0"): *fp_glProgramUniform3i;
	glProgramUniform3i64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3i64ARB\0"): *fp_glProgramUniform3i64ARB;
	glProgramUniform3i64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3i64NV\0"): *fp_glProgramUniform3i64NV;
	glProgramUniform3i64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3i64vARB\0"): *fp_glProgramUniform3i64vARB;
	glProgramUniform3i64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3i64vNV\0"): *fp_glProgramUniform3i64vNV;
	glProgramUniform3iEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3iEXT\0"): *fp_glProgramUniform3iEXT;
	glProgramUniform3iv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3iv\0"): *fp_glProgramUniform3iv;
	glProgramUniform3ivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ivEXT\0"): *fp_glProgramUniform3ivEXT;
	glProgramUniform3ui = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ui\0"): *fp_glProgramUniform3ui;
	glProgramUniform3ui64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ui64ARB\0"): *fp_glProgramUniform3ui64ARB;
	glProgramUniform3ui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ui64NV\0"): *fp_glProgramUniform3ui64NV;
	glProgramUniform3ui64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ui64vARB\0"): *fp_glProgramUniform3ui64vARB;
	glProgramUniform3ui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3ui64vNV\0"): *fp_glProgramUniform3ui64vNV;
	glProgramUniform3uiEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3uiEXT\0"): *fp_glProgramUniform3uiEXT;
	glProgramUniform3uiv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3uiv\0"): *fp_glProgramUniform3uiv;
	glProgramUniform3uivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform3uivEXT\0"): *fp_glProgramUniform3uivEXT;
	glProgramUniform4d = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4d\0"): *fp_glProgramUniform4d;
	glProgramUniform4dEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4dEXT\0"): *fp_glProgramUniform4dEXT;
	glProgramUniform4dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4dv\0"): *fp_glProgramUniform4dv;
	glProgramUniform4dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4dvEXT\0"): *fp_glProgramUniform4dvEXT;
	glProgramUniform4f = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4f\0"): *fp_glProgramUniform4f;
	glProgramUniform4fEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4fEXT\0"): *fp_glProgramUniform4fEXT;
	glProgramUniform4fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4fv\0"): *fp_glProgramUniform4fv;
	glProgramUniform4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4fvEXT\0"): *fp_glProgramUniform4fvEXT;
	glProgramUniform4i = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4i\0"): *fp_glProgramUniform4i;
	glProgramUniform4i64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4i64ARB\0"): *fp_glProgramUniform4i64ARB;
	glProgramUniform4i64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4i64NV\0"): *fp_glProgramUniform4i64NV;
	glProgramUniform4i64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4i64vARB\0"): *fp_glProgramUniform4i64vARB;
	glProgramUniform4i64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4i64vNV\0"): *fp_glProgramUniform4i64vNV;
	glProgramUniform4iEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4iEXT\0"): *fp_glProgramUniform4iEXT;
	glProgramUniform4iv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4iv\0"): *fp_glProgramUniform4iv;
	glProgramUniform4ivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ivEXT\0"): *fp_glProgramUniform4ivEXT;
	glProgramUniform4ui = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ui\0"): *fp_glProgramUniform4ui;
	glProgramUniform4ui64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ui64ARB\0"): *fp_glProgramUniform4ui64ARB;
	glProgramUniform4ui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ui64NV\0"): *fp_glProgramUniform4ui64NV;
	glProgramUniform4ui64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ui64vARB\0"): *fp_glProgramUniform4ui64vARB;
	glProgramUniform4ui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4ui64vNV\0"): *fp_glProgramUniform4ui64vNV;
	glProgramUniform4uiEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4uiEXT\0"): *fp_glProgramUniform4uiEXT;
	glProgramUniform4uiv = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4uiv\0"): *fp_glProgramUniform4uiv;
	glProgramUniform4uivEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniform4uivEXT\0"): *fp_glProgramUniform4uivEXT;
	glProgramUniformHandleui64ARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniformHandleui64ARB\0"): *fp_glProgramUniformHandleui64ARB;
	glProgramUniformHandleui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniformHandleui64NV\0"): *fp_glProgramUniformHandleui64NV;
	glProgramUniformHandleui64vARB = call_user_get_proc_address(user_get_proc_address, "glProgramUniformHandleui64vARB\0"): *fp_glProgramUniformHandleui64vARB;
	glProgramUniformHandleui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniformHandleui64vNV\0"): *fp_glProgramUniformHandleui64vNV;
	glProgramUniformMatrix2dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2dv\0"): *fp_glProgramUniformMatrix2dv;
	glProgramUniformMatrix2dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2dvEXT\0"): *fp_glProgramUniformMatrix2dvEXT;
	glProgramUniformMatrix2fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2fv\0"): *fp_glProgramUniformMatrix2fv;
	glProgramUniformMatrix2fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2fvEXT\0"): *fp_glProgramUniformMatrix2fvEXT;
	glProgramUniformMatrix2x3dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x3dv\0"): *fp_glProgramUniformMatrix2x3dv;
	glProgramUniformMatrix2x3dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x3dvEXT\0"): *fp_glProgramUniformMatrix2x3dvEXT;
	glProgramUniformMatrix2x3fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x3fv\0"): *fp_glProgramUniformMatrix2x3fv;
	glProgramUniformMatrix2x3fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x3fvEXT\0"): *fp_glProgramUniformMatrix2x3fvEXT;
	glProgramUniformMatrix2x4dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x4dv\0"): *fp_glProgramUniformMatrix2x4dv;
	glProgramUniformMatrix2x4dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x4dvEXT\0"): *fp_glProgramUniformMatrix2x4dvEXT;
	glProgramUniformMatrix2x4fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x4fv\0"): *fp_glProgramUniformMatrix2x4fv;
	glProgramUniformMatrix2x4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix2x4fvEXT\0"): *fp_glProgramUniformMatrix2x4fvEXT;
	glProgramUniformMatrix3dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3dv\0"): *fp_glProgramUniformMatrix3dv;
	glProgramUniformMatrix3dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3dvEXT\0"): *fp_glProgramUniformMatrix3dvEXT;
	glProgramUniformMatrix3fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3fv\0"): *fp_glProgramUniformMatrix3fv;
	glProgramUniformMatrix3fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3fvEXT\0"): *fp_glProgramUniformMatrix3fvEXT;
	glProgramUniformMatrix3x2dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x2dv\0"): *fp_glProgramUniformMatrix3x2dv;
	glProgramUniformMatrix3x2dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x2dvEXT\0"): *fp_glProgramUniformMatrix3x2dvEXT;
	glProgramUniformMatrix3x2fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x2fv\0"): *fp_glProgramUniformMatrix3x2fv;
	glProgramUniformMatrix3x2fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x2fvEXT\0"): *fp_glProgramUniformMatrix3x2fvEXT;
	glProgramUniformMatrix3x4dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x4dv\0"): *fp_glProgramUniformMatrix3x4dv;
	glProgramUniformMatrix3x4dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x4dvEXT\0"): *fp_glProgramUniformMatrix3x4dvEXT;
	glProgramUniformMatrix3x4fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x4fv\0"): *fp_glProgramUniformMatrix3x4fv;
	glProgramUniformMatrix3x4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix3x4fvEXT\0"): *fp_glProgramUniformMatrix3x4fvEXT;
	glProgramUniformMatrix4dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4dv\0"): *fp_glProgramUniformMatrix4dv;
	glProgramUniformMatrix4dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4dvEXT\0"): *fp_glProgramUniformMatrix4dvEXT;
	glProgramUniformMatrix4fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4fv\0"): *fp_glProgramUniformMatrix4fv;
	glProgramUniformMatrix4fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4fvEXT\0"): *fp_glProgramUniformMatrix4fvEXT;
	glProgramUniformMatrix4x2dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x2dv\0"): *fp_glProgramUniformMatrix4x2dv;
	glProgramUniformMatrix4x2dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x2dvEXT\0"): *fp_glProgramUniformMatrix4x2dvEXT;
	glProgramUniformMatrix4x2fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x2fv\0"): *fp_glProgramUniformMatrix4x2fv;
	glProgramUniformMatrix4x2fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x2fvEXT\0"): *fp_glProgramUniformMatrix4x2fvEXT;
	glProgramUniformMatrix4x3dv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x3dv\0"): *fp_glProgramUniformMatrix4x3dv;
	glProgramUniformMatrix4x3dvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x3dvEXT\0"): *fp_glProgramUniformMatrix4x3dvEXT;
	glProgramUniformMatrix4x3fv = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x3fv\0"): *fp_glProgramUniformMatrix4x3fv;
	glProgramUniformMatrix4x3fvEXT = call_user_get_proc_address(user_get_proc_address, "glProgramUniformMatrix4x3fvEXT\0"): *fp_glProgramUniformMatrix4x3fvEXT;
	glProgramUniformui64NV = call_user_get_proc_address(user_get_proc_address, "glProgramUniformui64NV\0"): *fp_glProgramUniformui64NV;
	glProgramUniformui64vNV = call_user_get_proc_address(user_get_proc_address, "glProgramUniformui64vNV\0"): *fp_glProgramUniformui64vNV;
	glProgramVertexLimitNV = call_user_get_proc_address(user_get_proc_address, "glProgramVertexLimitNV\0"): *fp_glProgramVertexLimitNV;
	glProvokingVertex = call_user_get_proc_address(user_get_proc_address, "glProvokingVertex\0"): *fp_glProvokingVertex;
	glProvokingVertexEXT = call_user_get_proc_address(user_get_proc_address, "glProvokingVertexEXT\0"): *fp_glProvokingVertexEXT;
	glPushClientAttribDefaultEXT = call_user_get_proc_address(user_get_proc_address, "glPushClientAttribDefaultEXT\0"): *fp_glPushClientAttribDefaultEXT;
	glPushDebugGroup = call_user_get_proc_address(user_get_proc_address, "glPushDebugGroup\0"): *fp_glPushDebugGroup;
	glPushGroupMarkerEXT = call_user_get_proc_address(user_get_proc_address, "glPushGroupMarkerEXT\0"): *fp_glPushGroupMarkerEXT;
	glQueryCounter = call_user_get_proc_address(user_get_proc_address, "glQueryCounter\0"): *fp_glQueryCounter;
	glQueryMatrixxOES = call_user_get_proc_address(user_get_proc_address, "glQueryMatrixxOES\0"): *fp_glQueryMatrixxOES;
	glQueryObjectParameteruiAMD = call_user_get_proc_address(user_get_proc_address, "glQueryObjectParameteruiAMD\0"): *fp_glQueryObjectParameteruiAMD;
	glQueryResourceNV = call_user_get_proc_address(user_get_proc_address, "glQueryResourceNV\0"): *fp_glQueryResourceNV;
	glQueryResourceTagNV = call_user_get_proc_address(user_get_proc_address, "glQueryResourceTagNV\0"): *fp_glQueryResourceTagNV;
	glRasterPos2xOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos2xOES\0"): *fp_glRasterPos2xOES;
	glRasterPos2xvOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos2xvOES\0"): *fp_glRasterPos2xvOES;
	glRasterPos3xOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos3xOES\0"): *fp_glRasterPos3xOES;
	glRasterPos3xvOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos3xvOES\0"): *fp_glRasterPos3xvOES;
	glRasterPos4xOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos4xOES\0"): *fp_glRasterPos4xOES;
	glRasterPos4xvOES = call_user_get_proc_address(user_get_proc_address, "glRasterPos4xvOES\0"): *fp_glRasterPos4xvOES;
	glRasterSamplesEXT = call_user_get_proc_address(user_get_proc_address, "glRasterSamplesEXT\0"): *fp_glRasterSamplesEXT;
	glReadBuffer = call_user_get_proc_address(user_get_proc_address, "glReadBuffer\0"): *fp_glReadBuffer;
	glReadInstrumentsSGIX = call_user_get_proc_address(user_get_proc_address, "glReadInstrumentsSGIX\0"): *fp_glReadInstrumentsSGIX;
	glReadPixels = call_user_get_proc_address(user_get_proc_address, "glReadPixels\0"): *fp_glReadPixels;
	glReadnPixels = call_user_get_proc_address(user_get_proc_address, "glReadnPixels\0"): *fp_glReadnPixels;
	glReadnPixelsARB = call_user_get_proc_address(user_get_proc_address, "glReadnPixelsARB\0"): *fp_glReadnPixelsARB;
	glRectxOES = call_user_get_proc_address(user_get_proc_address, "glRectxOES\0"): *fp_glRectxOES;
	glRectxvOES = call_user_get_proc_address(user_get_proc_address, "glRectxvOES\0"): *fp_glRectxvOES;
	glReferencePlaneSGIX = call_user_get_proc_address(user_get_proc_address, "glReferencePlaneSGIX\0"): *fp_glReferencePlaneSGIX;
	glReleaseKeyedMutexWin32EXT = call_user_get_proc_address(user_get_proc_address, "glReleaseKeyedMutexWin32EXT\0"): *fp_glReleaseKeyedMutexWin32EXT;
	glReleaseShaderCompiler = call_user_get_proc_address(user_get_proc_address, "glReleaseShaderCompiler\0"): *fp_glReleaseShaderCompiler;
	glRenderGpuMaskNV = call_user_get_proc_address(user_get_proc_address, "glRenderGpuMaskNV\0"): *fp_glRenderGpuMaskNV;
	glRenderbufferStorage = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorage\0"): *fp_glRenderbufferStorage;
	glRenderbufferStorageEXT = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorageEXT\0"): *fp_glRenderbufferStorageEXT;
	glRenderbufferStorageMultisample = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorageMultisample\0"): *fp_glRenderbufferStorageMultisample;
	glRenderbufferStorageMultisampleAdvancedAMD = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorageMultisampleAdvancedAMD\0"): *fp_glRenderbufferStorageMultisampleAdvancedAMD;
	glRenderbufferStorageMultisampleCoverageNV = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorageMultisampleCoverageNV\0"): *fp_glRenderbufferStorageMultisampleCoverageNV;
	glRenderbufferStorageMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glRenderbufferStorageMultisampleEXT\0"): *fp_glRenderbufferStorageMultisampleEXT;
	glReplacementCodePointerSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodePointerSUN\0"): *fp_glReplacementCodePointerSUN;
	glReplacementCodeubSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeubSUN\0"): *fp_glReplacementCodeubSUN;
	glReplacementCodeubvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeubvSUN\0"): *fp_glReplacementCodeubvSUN;
	glReplacementCodeuiColor3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor3fVertex3fSUN\0"): *fp_glReplacementCodeuiColor3fVertex3fSUN;
	glReplacementCodeuiColor3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor3fVertex3fvSUN\0"): *fp_glReplacementCodeuiColor3fVertex3fvSUN;
	glReplacementCodeuiColor4fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor4fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
	glReplacementCodeuiColor4fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor4fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
	glReplacementCodeuiColor4ubVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor4ubVertex3fSUN\0"): *fp_glReplacementCodeuiColor4ubVertex3fSUN;
	glReplacementCodeuiColor4ubVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiColor4ubVertex3fvSUN\0"): *fp_glReplacementCodeuiColor4ubVertex3fvSUN;
	glReplacementCodeuiNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiNormal3fVertex3fSUN;
	glReplacementCodeuiNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiNormal3fVertex3fvSUN;
	glReplacementCodeuiSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiSUN\0"): *fp_glReplacementCodeuiSUN;
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
	glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
	glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
	glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
	glReplacementCodeuiTexCoord2fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fVertex3fSUN\0"): *fp_glReplacementCodeuiTexCoord2fVertex3fSUN;
	glReplacementCodeuiTexCoord2fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiTexCoord2fVertex3fvSUN\0"): *fp_glReplacementCodeuiTexCoord2fVertex3fvSUN;
	glReplacementCodeuiVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiVertex3fSUN\0"): *fp_glReplacementCodeuiVertex3fSUN;
	glReplacementCodeuiVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuiVertex3fvSUN\0"): *fp_glReplacementCodeuiVertex3fvSUN;
	glReplacementCodeuivSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeuivSUN\0"): *fp_glReplacementCodeuivSUN;
	glReplacementCodeusSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeusSUN\0"): *fp_glReplacementCodeusSUN;
	glReplacementCodeusvSUN = call_user_get_proc_address(user_get_proc_address, "glReplacementCodeusvSUN\0"): *fp_glReplacementCodeusvSUN;
	glRequestResidentProgramsNV = call_user_get_proc_address(user_get_proc_address, "glRequestResidentProgramsNV\0"): *fp_glRequestResidentProgramsNV;
	glResetHistogramEXT = call_user_get_proc_address(user_get_proc_address, "glResetHistogramEXT\0"): *fp_glResetHistogramEXT;
	glResetMemoryObjectParameterNV = call_user_get_proc_address(user_get_proc_address, "glResetMemoryObjectParameterNV\0"): *fp_glResetMemoryObjectParameterNV;
	glResetMinmaxEXT = call_user_get_proc_address(user_get_proc_address, "glResetMinmaxEXT\0"): *fp_glResetMinmaxEXT;
	glResizeBuffersMESA = call_user_get_proc_address(user_get_proc_address, "glResizeBuffersMESA\0"): *fp_glResizeBuffersMESA;
	glResolveDepthValuesNV = call_user_get_proc_address(user_get_proc_address, "glResolveDepthValuesNV\0"): *fp_glResolveDepthValuesNV;
	glResumeTransformFeedback = call_user_get_proc_address(user_get_proc_address, "glResumeTransformFeedback\0"): *fp_glResumeTransformFeedback;
	glResumeTransformFeedbackNV = call_user_get_proc_address(user_get_proc_address, "glResumeTransformFeedbackNV\0"): *fp_glResumeTransformFeedbackNV;
	glRotatexOES = call_user_get_proc_address(user_get_proc_address, "glRotatexOES\0"): *fp_glRotatexOES;
	glSampleCoverage = call_user_get_proc_address(user_get_proc_address, "glSampleCoverage\0"): *fp_glSampleCoverage;
	glSampleCoverageARB = call_user_get_proc_address(user_get_proc_address, "glSampleCoverageARB\0"): *fp_glSampleCoverageARB;
	glSampleMapATI = call_user_get_proc_address(user_get_proc_address, "glSampleMapATI\0"): *fp_glSampleMapATI;
	glSampleMaskEXT = call_user_get_proc_address(user_get_proc_address, "glSampleMaskEXT\0"): *fp_glSampleMaskEXT;
	glSampleMaskIndexedNV = call_user_get_proc_address(user_get_proc_address, "glSampleMaskIndexedNV\0"): *fp_glSampleMaskIndexedNV;
	glSampleMaskSGIS = call_user_get_proc_address(user_get_proc_address, "glSampleMaskSGIS\0"): *fp_glSampleMaskSGIS;
	glSampleMaski = call_user_get_proc_address(user_get_proc_address, "glSampleMaski\0"): *fp_glSampleMaski;
	glSamplePatternEXT = call_user_get_proc_address(user_get_proc_address, "glSamplePatternEXT\0"): *fp_glSamplePatternEXT;
	glSamplePatternSGIS = call_user_get_proc_address(user_get_proc_address, "glSamplePatternSGIS\0"): *fp_glSamplePatternSGIS;
	glSamplerParameterIiv = call_user_get_proc_address(user_get_proc_address, "glSamplerParameterIiv\0"): *fp_glSamplerParameterIiv;
	glSamplerParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glSamplerParameterIuiv\0"): *fp_glSamplerParameterIuiv;
	glSamplerParameterf = call_user_get_proc_address(user_get_proc_address, "glSamplerParameterf\0"): *fp_glSamplerParameterf;
	glSamplerParameterfv = call_user_get_proc_address(user_get_proc_address, "glSamplerParameterfv\0"): *fp_glSamplerParameterfv;
	glSamplerParameteri = call_user_get_proc_address(user_get_proc_address, "glSamplerParameteri\0"): *fp_glSamplerParameteri;
	glSamplerParameteriv = call_user_get_proc_address(user_get_proc_address, "glSamplerParameteriv\0"): *fp_glSamplerParameteriv;
	glScalexOES = call_user_get_proc_address(user_get_proc_address, "glScalexOES\0"): *fp_glScalexOES;
	glScissor = call_user_get_proc_address(user_get_proc_address, "glScissor\0"): *fp_glScissor;
	glScissorArrayv = call_user_get_proc_address(user_get_proc_address, "glScissorArrayv\0"): *fp_glScissorArrayv;
	glScissorExclusiveArrayvNV = call_user_get_proc_address(user_get_proc_address, "glScissorExclusiveArrayvNV\0"): *fp_glScissorExclusiveArrayvNV;
	glScissorExclusiveNV = call_user_get_proc_address(user_get_proc_address, "glScissorExclusiveNV\0"): *fp_glScissorExclusiveNV;
	glScissorIndexed = call_user_get_proc_address(user_get_proc_address, "glScissorIndexed\0"): *fp_glScissorIndexed;
	glScissorIndexedv = call_user_get_proc_address(user_get_proc_address, "glScissorIndexedv\0"): *fp_glScissorIndexedv;
	glSecondaryColor3bEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3bEXT\0"): *fp_glSecondaryColor3bEXT;
	glSecondaryColor3bvEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3bvEXT\0"): *fp_glSecondaryColor3bvEXT;
	glSecondaryColor3dEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3dEXT\0"): *fp_glSecondaryColor3dEXT;
	glSecondaryColor3dvEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3dvEXT\0"): *fp_glSecondaryColor3dvEXT;
	glSecondaryColor3fEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3fEXT\0"): *fp_glSecondaryColor3fEXT;
	glSecondaryColor3fvEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3fvEXT\0"): *fp_glSecondaryColor3fvEXT;
	glSecondaryColor3hNV = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3hNV\0"): *fp_glSecondaryColor3hNV;
	glSecondaryColor3hvNV = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3hvNV\0"): *fp_glSecondaryColor3hvNV;
	glSecondaryColor3iEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3iEXT\0"): *fp_glSecondaryColor3iEXT;
	glSecondaryColor3ivEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3ivEXT\0"): *fp_glSecondaryColor3ivEXT;
	glSecondaryColor3sEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3sEXT\0"): *fp_glSecondaryColor3sEXT;
	glSecondaryColor3svEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3svEXT\0"): *fp_glSecondaryColor3svEXT;
	glSecondaryColor3ubEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3ubEXT\0"): *fp_glSecondaryColor3ubEXT;
	glSecondaryColor3ubvEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3ubvEXT\0"): *fp_glSecondaryColor3ubvEXT;
	glSecondaryColor3uiEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3uiEXT\0"): *fp_glSecondaryColor3uiEXT;
	glSecondaryColor3uivEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3uivEXT\0"): *fp_glSecondaryColor3uivEXT;
	glSecondaryColor3usEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3usEXT\0"): *fp_glSecondaryColor3usEXT;
	glSecondaryColor3usvEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColor3usvEXT\0"): *fp_glSecondaryColor3usvEXT;
	glSecondaryColorFormatNV = call_user_get_proc_address(user_get_proc_address, "glSecondaryColorFormatNV\0"): *fp_glSecondaryColorFormatNV;
	glSecondaryColorPointerEXT = call_user_get_proc_address(user_get_proc_address, "glSecondaryColorPointerEXT\0"): *fp_glSecondaryColorPointerEXT;
	glSecondaryColorPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glSecondaryColorPointerListIBM\0"): *fp_glSecondaryColorPointerListIBM;
	glSelectPerfMonitorCountersAMD = call_user_get_proc_address(user_get_proc_address, "glSelectPerfMonitorCountersAMD\0"): *fp_glSelectPerfMonitorCountersAMD;
	glSemaphoreParameterivNV = call_user_get_proc_address(user_get_proc_address, "glSemaphoreParameterivNV\0"): *fp_glSemaphoreParameterivNV;
	glSemaphoreParameterui64vEXT = call_user_get_proc_address(user_get_proc_address, "glSemaphoreParameterui64vEXT\0"): *fp_glSemaphoreParameterui64vEXT;
	glSeparableFilter2DEXT = call_user_get_proc_address(user_get_proc_address, "glSeparableFilter2DEXT\0"): *fp_glSeparableFilter2DEXT;
	glSetFenceAPPLE = call_user_get_proc_address(user_get_proc_address, "glSetFenceAPPLE\0"): *fp_glSetFenceAPPLE;
	glSetFenceNV = call_user_get_proc_address(user_get_proc_address, "glSetFenceNV\0"): *fp_glSetFenceNV;
	glSetFragmentShaderConstantATI = call_user_get_proc_address(user_get_proc_address, "glSetFragmentShaderConstantATI\0"): *fp_glSetFragmentShaderConstantATI;
	glSetInvariantEXT = call_user_get_proc_address(user_get_proc_address, "glSetInvariantEXT\0"): *fp_glSetInvariantEXT;
	glSetLocalConstantEXT = call_user_get_proc_address(user_get_proc_address, "glSetLocalConstantEXT\0"): *fp_glSetLocalConstantEXT;
	glSetMultisamplefvAMD = call_user_get_proc_address(user_get_proc_address, "glSetMultisamplefvAMD\0"): *fp_glSetMultisamplefvAMD;
	glShaderBinary = call_user_get_proc_address(user_get_proc_address, "glShaderBinary\0"): *fp_glShaderBinary;
	glShaderOp1EXT = call_user_get_proc_address(user_get_proc_address, "glShaderOp1EXT\0"): *fp_glShaderOp1EXT;
	glShaderOp2EXT = call_user_get_proc_address(user_get_proc_address, "glShaderOp2EXT\0"): *fp_glShaderOp2EXT;
	glShaderOp3EXT = call_user_get_proc_address(user_get_proc_address, "glShaderOp3EXT\0"): *fp_glShaderOp3EXT;
	glShaderSource = call_user_get_proc_address(user_get_proc_address, "glShaderSource\0"): *fp_glShaderSource;
	glShaderSourceARB = call_user_get_proc_address(user_get_proc_address, "glShaderSourceARB\0"): *fp_glShaderSourceARB;
	glShaderStorageBlockBinding = call_user_get_proc_address(user_get_proc_address, "glShaderStorageBlockBinding\0"): *fp_glShaderStorageBlockBinding;
	glShadingRateImageBarrierNV = call_user_get_proc_address(user_get_proc_address, "glShadingRateImageBarrierNV\0"): *fp_glShadingRateImageBarrierNV;
	glShadingRateImagePaletteNV = call_user_get_proc_address(user_get_proc_address, "glShadingRateImagePaletteNV\0"): *fp_glShadingRateImagePaletteNV;
	glShadingRateSampleOrderCustomNV = call_user_get_proc_address(user_get_proc_address, "glShadingRateSampleOrderCustomNV\0"): *fp_glShadingRateSampleOrderCustomNV;
	glShadingRateSampleOrderNV = call_user_get_proc_address(user_get_proc_address, "glShadingRateSampleOrderNV\0"): *fp_glShadingRateSampleOrderNV;
	glSharpenTexFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glSharpenTexFuncSGIS\0"): *fp_glSharpenTexFuncSGIS;
	glSignalSemaphoreEXT = call_user_get_proc_address(user_get_proc_address, "glSignalSemaphoreEXT\0"): *fp_glSignalSemaphoreEXT;
	glSignalSemaphoreui64NVX = call_user_get_proc_address(user_get_proc_address, "glSignalSemaphoreui64NVX\0"): *fp_glSignalSemaphoreui64NVX;
	glSignalVkFenceNV = call_user_get_proc_address(user_get_proc_address, "glSignalVkFenceNV\0"): *fp_glSignalVkFenceNV;
	glSignalVkSemaphoreNV = call_user_get_proc_address(user_get_proc_address, "glSignalVkSemaphoreNV\0"): *fp_glSignalVkSemaphoreNV;
	glSpecializeShaderARB = call_user_get_proc_address(user_get_proc_address, "glSpecializeShaderARB\0"): *fp_glSpecializeShaderARB;
	glSpriteParameterfSGIX = call_user_get_proc_address(user_get_proc_address, "glSpriteParameterfSGIX\0"): *fp_glSpriteParameterfSGIX;
	glSpriteParameterfvSGIX = call_user_get_proc_address(user_get_proc_address, "glSpriteParameterfvSGIX\0"): *fp_glSpriteParameterfvSGIX;
	glSpriteParameteriSGIX = call_user_get_proc_address(user_get_proc_address, "glSpriteParameteriSGIX\0"): *fp_glSpriteParameteriSGIX;
	glSpriteParameterivSGIX = call_user_get_proc_address(user_get_proc_address, "glSpriteParameterivSGIX\0"): *fp_glSpriteParameterivSGIX;
	glStartInstrumentsSGIX = call_user_get_proc_address(user_get_proc_address, "glStartInstrumentsSGIX\0"): *fp_glStartInstrumentsSGIX;
	glStateCaptureNV = call_user_get_proc_address(user_get_proc_address, "glStateCaptureNV\0"): *fp_glStateCaptureNV;
	glStencilClearTagEXT = call_user_get_proc_address(user_get_proc_address, "glStencilClearTagEXT\0"): *fp_glStencilClearTagEXT;
	glStencilFillPathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glStencilFillPathInstancedNV\0"): *fp_glStencilFillPathInstancedNV;
	glStencilFillPathNV = call_user_get_proc_address(user_get_proc_address, "glStencilFillPathNV\0"): *fp_glStencilFillPathNV;
	glStencilFunc = call_user_get_proc_address(user_get_proc_address, "glStencilFunc\0"): *fp_glStencilFunc;
	glStencilFuncSeparate = call_user_get_proc_address(user_get_proc_address, "glStencilFuncSeparate\0"): *fp_glStencilFuncSeparate;
	glStencilFuncSeparateATI = call_user_get_proc_address(user_get_proc_address, "glStencilFuncSeparateATI\0"): *fp_glStencilFuncSeparateATI;
	glStencilMask = call_user_get_proc_address(user_get_proc_address, "glStencilMask\0"): *fp_glStencilMask;
	glStencilMaskSeparate = call_user_get_proc_address(user_get_proc_address, "glStencilMaskSeparate\0"): *fp_glStencilMaskSeparate;
	glStencilOp = call_user_get_proc_address(user_get_proc_address, "glStencilOp\0"): *fp_glStencilOp;
	glStencilOpSeparate = call_user_get_proc_address(user_get_proc_address, "glStencilOpSeparate\0"): *fp_glStencilOpSeparate;
	glStencilOpSeparateATI = call_user_get_proc_address(user_get_proc_address, "glStencilOpSeparateATI\0"): *fp_glStencilOpSeparateATI;
	glStencilOpValueAMD = call_user_get_proc_address(user_get_proc_address, "glStencilOpValueAMD\0"): *fp_glStencilOpValueAMD;
	glStencilStrokePathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glStencilStrokePathInstancedNV\0"): *fp_glStencilStrokePathInstancedNV;
	glStencilStrokePathNV = call_user_get_proc_address(user_get_proc_address, "glStencilStrokePathNV\0"): *fp_glStencilStrokePathNV;
	glStencilThenCoverFillPathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glStencilThenCoverFillPathInstancedNV\0"): *fp_glStencilThenCoverFillPathInstancedNV;
	glStencilThenCoverFillPathNV = call_user_get_proc_address(user_get_proc_address, "glStencilThenCoverFillPathNV\0"): *fp_glStencilThenCoverFillPathNV;
	glStencilThenCoverStrokePathInstancedNV = call_user_get_proc_address(user_get_proc_address, "glStencilThenCoverStrokePathInstancedNV\0"): *fp_glStencilThenCoverStrokePathInstancedNV;
	glStencilThenCoverStrokePathNV = call_user_get_proc_address(user_get_proc_address, "glStencilThenCoverStrokePathNV\0"): *fp_glStencilThenCoverStrokePathNV;
	glStopInstrumentsSGIX = call_user_get_proc_address(user_get_proc_address, "glStopInstrumentsSGIX\0"): *fp_glStopInstrumentsSGIX;
	glStringMarkerGREMEDY = call_user_get_proc_address(user_get_proc_address, "glStringMarkerGREMEDY\0"): *fp_glStringMarkerGREMEDY;
	glSubpixelPrecisionBiasNV = call_user_get_proc_address(user_get_proc_address, "glSubpixelPrecisionBiasNV\0"): *fp_glSubpixelPrecisionBiasNV;
	glSwizzleEXT = call_user_get_proc_address(user_get_proc_address, "glSwizzleEXT\0"): *fp_glSwizzleEXT;
	glSyncTextureINTEL = call_user_get_proc_address(user_get_proc_address, "glSyncTextureINTEL\0"): *fp_glSyncTextureINTEL;
	glTagSampleBufferSGIX = call_user_get_proc_address(user_get_proc_address, "glTagSampleBufferSGIX\0"): *fp_glTagSampleBufferSGIX;
	glTangent3bEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3bEXT\0"): *fp_glTangent3bEXT;
	glTangent3bvEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3bvEXT\0"): *fp_glTangent3bvEXT;
	glTangent3dEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3dEXT\0"): *fp_glTangent3dEXT;
	glTangent3dvEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3dvEXT\0"): *fp_glTangent3dvEXT;
	glTangent3fEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3fEXT\0"): *fp_glTangent3fEXT;
	glTangent3fvEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3fvEXT\0"): *fp_glTangent3fvEXT;
	glTangent3iEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3iEXT\0"): *fp_glTangent3iEXT;
	glTangent3ivEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3ivEXT\0"): *fp_glTangent3ivEXT;
	glTangent3sEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3sEXT\0"): *fp_glTangent3sEXT;
	glTangent3svEXT = call_user_get_proc_address(user_get_proc_address, "glTangent3svEXT\0"): *fp_glTangent3svEXT;
	glTangentPointerEXT = call_user_get_proc_address(user_get_proc_address, "glTangentPointerEXT\0"): *fp_glTangentPointerEXT;
	glTbufferMask3DFX = call_user_get_proc_address(user_get_proc_address, "glTbufferMask3DFX\0"): *fp_glTbufferMask3DFX;
	glTessellationFactorAMD = call_user_get_proc_address(user_get_proc_address, "glTessellationFactorAMD\0"): *fp_glTessellationFactorAMD;
	glTessellationModeAMD = call_user_get_proc_address(user_get_proc_address, "glTessellationModeAMD\0"): *fp_glTessellationModeAMD;
	glTestFenceAPPLE = call_user_get_proc_address(user_get_proc_address, "glTestFenceAPPLE\0"): *fp_glTestFenceAPPLE;
	glTestFenceNV = call_user_get_proc_address(user_get_proc_address, "glTestFenceNV\0"): *fp_glTestFenceNV;
	glTestObjectAPPLE = call_user_get_proc_address(user_get_proc_address, "glTestObjectAPPLE\0"): *fp_glTestObjectAPPLE;
	glTexAttachMemoryNV = call_user_get_proc_address(user_get_proc_address, "glTexAttachMemoryNV\0"): *fp_glTexAttachMemoryNV;
	glTexBuffer = call_user_get_proc_address(user_get_proc_address, "glTexBuffer\0"): *fp_glTexBuffer;
	glTexBufferARB = call_user_get_proc_address(user_get_proc_address, "glTexBufferARB\0"): *fp_glTexBufferARB;
	glTexBufferEXT = call_user_get_proc_address(user_get_proc_address, "glTexBufferEXT\0"): *fp_glTexBufferEXT;
	glTexBufferRange = call_user_get_proc_address(user_get_proc_address, "glTexBufferRange\0"): *fp_glTexBufferRange;
	glTexBumpParameterfvATI = call_user_get_proc_address(user_get_proc_address, "glTexBumpParameterfvATI\0"): *fp_glTexBumpParameterfvATI;
	glTexBumpParameterivATI = call_user_get_proc_address(user_get_proc_address, "glTexBumpParameterivATI\0"): *fp_glTexBumpParameterivATI;
	glTexCoord1bOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord1bOES\0"): *fp_glTexCoord1bOES;
	glTexCoord1bvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord1bvOES\0"): *fp_glTexCoord1bvOES;
	glTexCoord1hNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord1hNV\0"): *fp_glTexCoord1hNV;
	glTexCoord1hvNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord1hvNV\0"): *fp_glTexCoord1hvNV;
	glTexCoord1xOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord1xOES\0"): *fp_glTexCoord1xOES;
	glTexCoord1xvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord1xvOES\0"): *fp_glTexCoord1xvOES;
	glTexCoord2bOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord2bOES\0"): *fp_glTexCoord2bOES;
	glTexCoord2bvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord2bvOES\0"): *fp_glTexCoord2bvOES;
	glTexCoord2fColor3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor3fVertex3fSUN\0"): *fp_glTexCoord2fColor3fVertex3fSUN;
	glTexCoord2fColor3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor3fVertex3fvSUN\0"): *fp_glTexCoord2fColor3fVertex3fvSUN;
	glTexCoord2fColor4fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor4fNormal3fVertex3fSUN\0"): *fp_glTexCoord2fColor4fNormal3fVertex3fSUN;
	glTexCoord2fColor4fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor4fNormal3fVertex3fvSUN\0"): *fp_glTexCoord2fColor4fNormal3fVertex3fvSUN;
	glTexCoord2fColor4ubVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor4ubVertex3fSUN\0"): *fp_glTexCoord2fColor4ubVertex3fSUN;
	glTexCoord2fColor4ubVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fColor4ubVertex3fvSUN\0"): *fp_glTexCoord2fColor4ubVertex3fvSUN;
	glTexCoord2fNormal3fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fNormal3fVertex3fSUN\0"): *fp_glTexCoord2fNormal3fVertex3fSUN;
	glTexCoord2fNormal3fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fNormal3fVertex3fvSUN\0"): *fp_glTexCoord2fNormal3fVertex3fvSUN;
	glTexCoord2fVertex3fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fVertex3fSUN\0"): *fp_glTexCoord2fVertex3fSUN;
	glTexCoord2fVertex3fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord2fVertex3fvSUN\0"): *fp_glTexCoord2fVertex3fvSUN;
	glTexCoord2hNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord2hNV\0"): *fp_glTexCoord2hNV;
	glTexCoord2hvNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord2hvNV\0"): *fp_glTexCoord2hvNV;
	glTexCoord2xOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord2xOES\0"): *fp_glTexCoord2xOES;
	glTexCoord2xvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord2xvOES\0"): *fp_glTexCoord2xvOES;
	glTexCoord3bOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord3bOES\0"): *fp_glTexCoord3bOES;
	glTexCoord3bvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord3bvOES\0"): *fp_glTexCoord3bvOES;
	glTexCoord3hNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord3hNV\0"): *fp_glTexCoord3hNV;
	glTexCoord3hvNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord3hvNV\0"): *fp_glTexCoord3hvNV;
	glTexCoord3xOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord3xOES\0"): *fp_glTexCoord3xOES;
	glTexCoord3xvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord3xvOES\0"): *fp_glTexCoord3xvOES;
	glTexCoord4bOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord4bOES\0"): *fp_glTexCoord4bOES;
	glTexCoord4bvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord4bvOES\0"): *fp_glTexCoord4bvOES;
	glTexCoord4fColor4fNormal3fVertex4fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord4fColor4fNormal3fVertex4fSUN\0"): *fp_glTexCoord4fColor4fNormal3fVertex4fSUN;
	glTexCoord4fColor4fNormal3fVertex4fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord4fColor4fNormal3fVertex4fvSUN\0"): *fp_glTexCoord4fColor4fNormal3fVertex4fvSUN;
	glTexCoord4fVertex4fSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord4fVertex4fSUN\0"): *fp_glTexCoord4fVertex4fSUN;
	glTexCoord4fVertex4fvSUN = call_user_get_proc_address(user_get_proc_address, "glTexCoord4fVertex4fvSUN\0"): *fp_glTexCoord4fVertex4fvSUN;
	glTexCoord4hNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord4hNV\0"): *fp_glTexCoord4hNV;
	glTexCoord4hvNV = call_user_get_proc_address(user_get_proc_address, "glTexCoord4hvNV\0"): *fp_glTexCoord4hvNV;
	glTexCoord4xOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord4xOES\0"): *fp_glTexCoord4xOES;
	glTexCoord4xvOES = call_user_get_proc_address(user_get_proc_address, "glTexCoord4xvOES\0"): *fp_glTexCoord4xvOES;
	glTexCoordFormatNV = call_user_get_proc_address(user_get_proc_address, "glTexCoordFormatNV\0"): *fp_glTexCoordFormatNV;
	glTexCoordPointerEXT = call_user_get_proc_address(user_get_proc_address, "glTexCoordPointerEXT\0"): *fp_glTexCoordPointerEXT;
	glTexCoordPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glTexCoordPointerListIBM\0"): *fp_glTexCoordPointerListIBM;
	glTexCoordPointervINTEL = call_user_get_proc_address(user_get_proc_address, "glTexCoordPointervINTEL\0"): *fp_glTexCoordPointervINTEL;
	glTexEnvxOES = call_user_get_proc_address(user_get_proc_address, "glTexEnvxOES\0"): *fp_glTexEnvxOES;
	glTexEnvxvOES = call_user_get_proc_address(user_get_proc_address, "glTexEnvxvOES\0"): *fp_glTexEnvxvOES;
	glTexFilterFuncSGIS = call_user_get_proc_address(user_get_proc_address, "glTexFilterFuncSGIS\0"): *fp_glTexFilterFuncSGIS;
	glTexGenxOES = call_user_get_proc_address(user_get_proc_address, "glTexGenxOES\0"): *fp_glTexGenxOES;
	glTexGenxvOES = call_user_get_proc_address(user_get_proc_address, "glTexGenxvOES\0"): *fp_glTexGenxvOES;
	glTexImage1D = call_user_get_proc_address(user_get_proc_address, "glTexImage1D\0"): *fp_glTexImage1D;
	glTexImage2D = call_user_get_proc_address(user_get_proc_address, "glTexImage2D\0"): *fp_glTexImage2D;
	glTexImage2DMultisample = call_user_get_proc_address(user_get_proc_address, "glTexImage2DMultisample\0"): *fp_glTexImage2DMultisample;
	glTexImage2DMultisampleCoverageNV = call_user_get_proc_address(user_get_proc_address, "glTexImage2DMultisampleCoverageNV\0"): *fp_glTexImage2DMultisampleCoverageNV;
	glTexImage3D = call_user_get_proc_address(user_get_proc_address, "glTexImage3D\0"): *fp_glTexImage3D;
	glTexImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTexImage3DEXT\0"): *fp_glTexImage3DEXT;
	glTexImage3DMultisample = call_user_get_proc_address(user_get_proc_address, "glTexImage3DMultisample\0"): *fp_glTexImage3DMultisample;
	glTexImage3DMultisampleCoverageNV = call_user_get_proc_address(user_get_proc_address, "glTexImage3DMultisampleCoverageNV\0"): *fp_glTexImage3DMultisampleCoverageNV;
	glTexImage4DSGIS = call_user_get_proc_address(user_get_proc_address, "glTexImage4DSGIS\0"): *fp_glTexImage4DSGIS;
	glTexPageCommitmentARB = call_user_get_proc_address(user_get_proc_address, "glTexPageCommitmentARB\0"): *fp_glTexPageCommitmentARB;
	glTexPageCommitmentMemNV = call_user_get_proc_address(user_get_proc_address, "glTexPageCommitmentMemNV\0"): *fp_glTexPageCommitmentMemNV;
	glTexParameterIiv = call_user_get_proc_address(user_get_proc_address, "glTexParameterIiv\0"): *fp_glTexParameterIiv;
	glTexParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glTexParameterIivEXT\0"): *fp_glTexParameterIivEXT;
	glTexParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glTexParameterIuiv\0"): *fp_glTexParameterIuiv;
	glTexParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glTexParameterIuivEXT\0"): *fp_glTexParameterIuivEXT;
	glTexParameterf = call_user_get_proc_address(user_get_proc_address, "glTexParameterf\0"): *fp_glTexParameterf;
	glTexParameterfv = call_user_get_proc_address(user_get_proc_address, "glTexParameterfv\0"): *fp_glTexParameterfv;
	glTexParameteri = call_user_get_proc_address(user_get_proc_address, "glTexParameteri\0"): *fp_glTexParameteri;
	glTexParameteriv = call_user_get_proc_address(user_get_proc_address, "glTexParameteriv\0"): *fp_glTexParameteriv;
	glTexParameterxOES = call_user_get_proc_address(user_get_proc_address, "glTexParameterxOES\0"): *fp_glTexParameterxOES;
	glTexParameterxvOES = call_user_get_proc_address(user_get_proc_address, "glTexParameterxvOES\0"): *fp_glTexParameterxvOES;
	glTexRenderbufferNV = call_user_get_proc_address(user_get_proc_address, "glTexRenderbufferNV\0"): *fp_glTexRenderbufferNV;
	glTexStorage1D = call_user_get_proc_address(user_get_proc_address, "glTexStorage1D\0"): *fp_glTexStorage1D;
	glTexStorage1DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorage1DEXT\0"): *fp_glTexStorage1DEXT;
	glTexStorage2D = call_user_get_proc_address(user_get_proc_address, "glTexStorage2D\0"): *fp_glTexStorage2D;
	glTexStorage2DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorage2DEXT\0"): *fp_glTexStorage2DEXT;
	glTexStorage2DMultisample = call_user_get_proc_address(user_get_proc_address, "glTexStorage2DMultisample\0"): *fp_glTexStorage2DMultisample;
	glTexStorage3D = call_user_get_proc_address(user_get_proc_address, "glTexStorage3D\0"): *fp_glTexStorage3D;
	glTexStorage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorage3DEXT\0"): *fp_glTexStorage3DEXT;
	glTexStorage3DMultisample = call_user_get_proc_address(user_get_proc_address, "glTexStorage3DMultisample\0"): *fp_glTexStorage3DMultisample;
	glTexStorageMem1DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorageMem1DEXT\0"): *fp_glTexStorageMem1DEXT;
	glTexStorageMem2DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorageMem2DEXT\0"): *fp_glTexStorageMem2DEXT;
	glTexStorageMem2DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorageMem2DMultisampleEXT\0"): *fp_glTexStorageMem2DMultisampleEXT;
	glTexStorageMem3DEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorageMem3DEXT\0"): *fp_glTexStorageMem3DEXT;
	glTexStorageMem3DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTexStorageMem3DMultisampleEXT\0"): *fp_glTexStorageMem3DMultisampleEXT;
	glTexStorageSparseAMD = call_user_get_proc_address(user_get_proc_address, "glTexStorageSparseAMD\0"): *fp_glTexStorageSparseAMD;
	glTexSubImage1D = call_user_get_proc_address(user_get_proc_address, "glTexSubImage1D\0"): *fp_glTexSubImage1D;
	glTexSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glTexSubImage1DEXT\0"): *fp_glTexSubImage1DEXT;
	glTexSubImage2D = call_user_get_proc_address(user_get_proc_address, "glTexSubImage2D\0"): *fp_glTexSubImage2D;
	glTexSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glTexSubImage2DEXT\0"): *fp_glTexSubImage2DEXT;
	glTexSubImage3D = call_user_get_proc_address(user_get_proc_address, "glTexSubImage3D\0"): *fp_glTexSubImage3D;
	glTexSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTexSubImage3DEXT\0"): *fp_glTexSubImage3DEXT;
	glTexSubImage4DSGIS = call_user_get_proc_address(user_get_proc_address, "glTexSubImage4DSGIS\0"): *fp_glTexSubImage4DSGIS;
	glTextureAttachMemoryNV = call_user_get_proc_address(user_get_proc_address, "glTextureAttachMemoryNV\0"): *fp_glTextureAttachMemoryNV;
	glTextureBarrier = call_user_get_proc_address(user_get_proc_address, "glTextureBarrier\0"): *fp_glTextureBarrier;
	glTextureBarrierNV = call_user_get_proc_address(user_get_proc_address, "glTextureBarrierNV\0"): *fp_glTextureBarrierNV;
	glTextureBuffer = call_user_get_proc_address(user_get_proc_address, "glTextureBuffer\0"): *fp_glTextureBuffer;
	glTextureBufferEXT = call_user_get_proc_address(user_get_proc_address, "glTextureBufferEXT\0"): *fp_glTextureBufferEXT;
	glTextureBufferRange = call_user_get_proc_address(user_get_proc_address, "glTextureBufferRange\0"): *fp_glTextureBufferRange;
	glTextureBufferRangeEXT = call_user_get_proc_address(user_get_proc_address, "glTextureBufferRangeEXT\0"): *fp_glTextureBufferRangeEXT;
	glTextureColorMaskSGIS = call_user_get_proc_address(user_get_proc_address, "glTextureColorMaskSGIS\0"): *fp_glTextureColorMaskSGIS;
	glTextureImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureImage1DEXT\0"): *fp_glTextureImage1DEXT;
	glTextureImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureImage2DEXT\0"): *fp_glTextureImage2DEXT;
	glTextureImage2DMultisampleCoverageNV = call_user_get_proc_address(user_get_proc_address, "glTextureImage2DMultisampleCoverageNV\0"): *fp_glTextureImage2DMultisampleCoverageNV;
	glTextureImage2DMultisampleNV = call_user_get_proc_address(user_get_proc_address, "glTextureImage2DMultisampleNV\0"): *fp_glTextureImage2DMultisampleNV;
	glTextureImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureImage3DEXT\0"): *fp_glTextureImage3DEXT;
	glTextureImage3DMultisampleCoverageNV = call_user_get_proc_address(user_get_proc_address, "glTextureImage3DMultisampleCoverageNV\0"): *fp_glTextureImage3DMultisampleCoverageNV;
	glTextureImage3DMultisampleNV = call_user_get_proc_address(user_get_proc_address, "glTextureImage3DMultisampleNV\0"): *fp_glTextureImage3DMultisampleNV;
	glTextureLightEXT = call_user_get_proc_address(user_get_proc_address, "glTextureLightEXT\0"): *fp_glTextureLightEXT;
	glTextureMaterialEXT = call_user_get_proc_address(user_get_proc_address, "glTextureMaterialEXT\0"): *fp_glTextureMaterialEXT;
	glTextureNormalEXT = call_user_get_proc_address(user_get_proc_address, "glTextureNormalEXT\0"): *fp_glTextureNormalEXT;
	glTexturePageCommitmentEXT = call_user_get_proc_address(user_get_proc_address, "glTexturePageCommitmentEXT\0"): *fp_glTexturePageCommitmentEXT;
	glTexturePageCommitmentMemNV = call_user_get_proc_address(user_get_proc_address, "glTexturePageCommitmentMemNV\0"): *fp_glTexturePageCommitmentMemNV;
	glTextureParameterIiv = call_user_get_proc_address(user_get_proc_address, "glTextureParameterIiv\0"): *fp_glTextureParameterIiv;
	glTextureParameterIivEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameterIivEXT\0"): *fp_glTextureParameterIivEXT;
	glTextureParameterIuiv = call_user_get_proc_address(user_get_proc_address, "glTextureParameterIuiv\0"): *fp_glTextureParameterIuiv;
	glTextureParameterIuivEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameterIuivEXT\0"): *fp_glTextureParameterIuivEXT;
	glTextureParameterf = call_user_get_proc_address(user_get_proc_address, "glTextureParameterf\0"): *fp_glTextureParameterf;
	glTextureParameterfEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameterfEXT\0"): *fp_glTextureParameterfEXT;
	glTextureParameterfv = call_user_get_proc_address(user_get_proc_address, "glTextureParameterfv\0"): *fp_glTextureParameterfv;
	glTextureParameterfvEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameterfvEXT\0"): *fp_glTextureParameterfvEXT;
	glTextureParameteri = call_user_get_proc_address(user_get_proc_address, "glTextureParameteri\0"): *fp_glTextureParameteri;
	glTextureParameteriEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameteriEXT\0"): *fp_glTextureParameteriEXT;
	glTextureParameteriv = call_user_get_proc_address(user_get_proc_address, "glTextureParameteriv\0"): *fp_glTextureParameteriv;
	glTextureParameterivEXT = call_user_get_proc_address(user_get_proc_address, "glTextureParameterivEXT\0"): *fp_glTextureParameterivEXT;
	glTextureRangeAPPLE = call_user_get_proc_address(user_get_proc_address, "glTextureRangeAPPLE\0"): *fp_glTextureRangeAPPLE;
	glTextureRenderbufferEXT = call_user_get_proc_address(user_get_proc_address, "glTextureRenderbufferEXT\0"): *fp_glTextureRenderbufferEXT;
	glTextureStorage1D = call_user_get_proc_address(user_get_proc_address, "glTextureStorage1D\0"): *fp_glTextureStorage1D;
	glTextureStorage1DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorage1DEXT\0"): *fp_glTextureStorage1DEXT;
	glTextureStorage2D = call_user_get_proc_address(user_get_proc_address, "glTextureStorage2D\0"): *fp_glTextureStorage2D;
	glTextureStorage2DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorage2DEXT\0"): *fp_glTextureStorage2DEXT;
	glTextureStorage2DMultisample = call_user_get_proc_address(user_get_proc_address, "glTextureStorage2DMultisample\0"): *fp_glTextureStorage2DMultisample;
	glTextureStorage2DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorage2DMultisampleEXT\0"): *fp_glTextureStorage2DMultisampleEXT;
	glTextureStorage3D = call_user_get_proc_address(user_get_proc_address, "glTextureStorage3D\0"): *fp_glTextureStorage3D;
	glTextureStorage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorage3DEXT\0"): *fp_glTextureStorage3DEXT;
	glTextureStorage3DMultisample = call_user_get_proc_address(user_get_proc_address, "glTextureStorage3DMultisample\0"): *fp_glTextureStorage3DMultisample;
	glTextureStorage3DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorage3DMultisampleEXT\0"): *fp_glTextureStorage3DMultisampleEXT;
	glTextureStorageMem1DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorageMem1DEXT\0"): *fp_glTextureStorageMem1DEXT;
	glTextureStorageMem2DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorageMem2DEXT\0"): *fp_glTextureStorageMem2DEXT;
	glTextureStorageMem2DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorageMem2DMultisampleEXT\0"): *fp_glTextureStorageMem2DMultisampleEXT;
	glTextureStorageMem3DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorageMem3DEXT\0"): *fp_glTextureStorageMem3DEXT;
	glTextureStorageMem3DMultisampleEXT = call_user_get_proc_address(user_get_proc_address, "glTextureStorageMem3DMultisampleEXT\0"): *fp_glTextureStorageMem3DMultisampleEXT;
	glTextureStorageSparseAMD = call_user_get_proc_address(user_get_proc_address, "glTextureStorageSparseAMD\0"): *fp_glTextureStorageSparseAMD;
	glTextureSubImage1D = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage1D\0"): *fp_glTextureSubImage1D;
	glTextureSubImage1DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage1DEXT\0"): *fp_glTextureSubImage1DEXT;
	glTextureSubImage2D = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage2D\0"): *fp_glTextureSubImage2D;
	glTextureSubImage2DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage2DEXT\0"): *fp_glTextureSubImage2DEXT;
	glTextureSubImage3D = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage3D\0"): *fp_glTextureSubImage3D;
	glTextureSubImage3DEXT = call_user_get_proc_address(user_get_proc_address, "glTextureSubImage3DEXT\0"): *fp_glTextureSubImage3DEXT;
	glTextureView = call_user_get_proc_address(user_get_proc_address, "glTextureView\0"): *fp_glTextureView;
	glTrackMatrixNV = call_user_get_proc_address(user_get_proc_address, "glTrackMatrixNV\0"): *fp_glTrackMatrixNV;
	glTransformFeedbackAttribsNV = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackAttribsNV\0"): *fp_glTransformFeedbackAttribsNV;
	glTransformFeedbackBufferBase = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackBufferBase\0"): *fp_glTransformFeedbackBufferBase;
	glTransformFeedbackBufferRange = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackBufferRange\0"): *fp_glTransformFeedbackBufferRange;
	glTransformFeedbackStreamAttribsNV = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackStreamAttribsNV\0"): *fp_glTransformFeedbackStreamAttribsNV;
	glTransformFeedbackVaryings = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackVaryings\0"): *fp_glTransformFeedbackVaryings;
	glTransformFeedbackVaryingsEXT = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackVaryingsEXT\0"): *fp_glTransformFeedbackVaryingsEXT;
	glTransformFeedbackVaryingsNV = call_user_get_proc_address(user_get_proc_address, "glTransformFeedbackVaryingsNV\0"): *fp_glTransformFeedbackVaryingsNV;
	glTransformPathNV = call_user_get_proc_address(user_get_proc_address, "glTransformPathNV\0"): *fp_glTransformPathNV;
	glTranslatexOES = call_user_get_proc_address(user_get_proc_address, "glTranslatexOES\0"): *fp_glTranslatexOES;
	glUniform1d = call_user_get_proc_address(user_get_proc_address, "glUniform1d\0"): *fp_glUniform1d;
	glUniform1dv = call_user_get_proc_address(user_get_proc_address, "glUniform1dv\0"): *fp_glUniform1dv;
	glUniform1f = call_user_get_proc_address(user_get_proc_address, "glUniform1f\0"): *fp_glUniform1f;
	glUniform1fARB = call_user_get_proc_address(user_get_proc_address, "glUniform1fARB\0"): *fp_glUniform1fARB;
	glUniform1fv = call_user_get_proc_address(user_get_proc_address, "glUniform1fv\0"): *fp_glUniform1fv;
	glUniform1fvARB = call_user_get_proc_address(user_get_proc_address, "glUniform1fvARB\0"): *fp_glUniform1fvARB;
	glUniform1i = call_user_get_proc_address(user_get_proc_address, "glUniform1i\0"): *fp_glUniform1i;
	glUniform1i64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform1i64ARB\0"): *fp_glUniform1i64ARB;
	glUniform1i64NV = call_user_get_proc_address(user_get_proc_address, "glUniform1i64NV\0"): *fp_glUniform1i64NV;
	glUniform1i64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform1i64vARB\0"): *fp_glUniform1i64vARB;
	glUniform1i64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform1i64vNV\0"): *fp_glUniform1i64vNV;
	glUniform1iARB = call_user_get_proc_address(user_get_proc_address, "glUniform1iARB\0"): *fp_glUniform1iARB;
	glUniform1iv = call_user_get_proc_address(user_get_proc_address, "glUniform1iv\0"): *fp_glUniform1iv;
	glUniform1ivARB = call_user_get_proc_address(user_get_proc_address, "glUniform1ivARB\0"): *fp_glUniform1ivARB;
	glUniform1ui = call_user_get_proc_address(user_get_proc_address, "glUniform1ui\0"): *fp_glUniform1ui;
	glUniform1ui64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform1ui64ARB\0"): *fp_glUniform1ui64ARB;
	glUniform1ui64NV = call_user_get_proc_address(user_get_proc_address, "glUniform1ui64NV\0"): *fp_glUniform1ui64NV;
	glUniform1ui64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform1ui64vARB\0"): *fp_glUniform1ui64vARB;
	glUniform1ui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform1ui64vNV\0"): *fp_glUniform1ui64vNV;
	glUniform1uiEXT = call_user_get_proc_address(user_get_proc_address, "glUniform1uiEXT\0"): *fp_glUniform1uiEXT;
	glUniform1uiv = call_user_get_proc_address(user_get_proc_address, "glUniform1uiv\0"): *fp_glUniform1uiv;
	glUniform1uivEXT = call_user_get_proc_address(user_get_proc_address, "glUniform1uivEXT\0"): *fp_glUniform1uivEXT;
	glUniform2d = call_user_get_proc_address(user_get_proc_address, "glUniform2d\0"): *fp_glUniform2d;
	glUniform2dv = call_user_get_proc_address(user_get_proc_address, "glUniform2dv\0"): *fp_glUniform2dv;
	glUniform2f = call_user_get_proc_address(user_get_proc_address, "glUniform2f\0"): *fp_glUniform2f;
	glUniform2fARB = call_user_get_proc_address(user_get_proc_address, "glUniform2fARB\0"): *fp_glUniform2fARB;
	glUniform2fv = call_user_get_proc_address(user_get_proc_address, "glUniform2fv\0"): *fp_glUniform2fv;
	glUniform2fvARB = call_user_get_proc_address(user_get_proc_address, "glUniform2fvARB\0"): *fp_glUniform2fvARB;
	glUniform2i = call_user_get_proc_address(user_get_proc_address, "glUniform2i\0"): *fp_glUniform2i;
	glUniform2i64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform2i64ARB\0"): *fp_glUniform2i64ARB;
	glUniform2i64NV = call_user_get_proc_address(user_get_proc_address, "glUniform2i64NV\0"): *fp_glUniform2i64NV;
	glUniform2i64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform2i64vARB\0"): *fp_glUniform2i64vARB;
	glUniform2i64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform2i64vNV\0"): *fp_glUniform2i64vNV;
	glUniform2iARB = call_user_get_proc_address(user_get_proc_address, "glUniform2iARB\0"): *fp_glUniform2iARB;
	glUniform2iv = call_user_get_proc_address(user_get_proc_address, "glUniform2iv\0"): *fp_glUniform2iv;
	glUniform2ivARB = call_user_get_proc_address(user_get_proc_address, "glUniform2ivARB\0"): *fp_glUniform2ivARB;
	glUniform2ui = call_user_get_proc_address(user_get_proc_address, "glUniform2ui\0"): *fp_glUniform2ui;
	glUniform2ui64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform2ui64ARB\0"): *fp_glUniform2ui64ARB;
	glUniform2ui64NV = call_user_get_proc_address(user_get_proc_address, "glUniform2ui64NV\0"): *fp_glUniform2ui64NV;
	glUniform2ui64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform2ui64vARB\0"): *fp_glUniform2ui64vARB;
	glUniform2ui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform2ui64vNV\0"): *fp_glUniform2ui64vNV;
	glUniform2uiEXT = call_user_get_proc_address(user_get_proc_address, "glUniform2uiEXT\0"): *fp_glUniform2uiEXT;
	glUniform2uiv = call_user_get_proc_address(user_get_proc_address, "glUniform2uiv\0"): *fp_glUniform2uiv;
	glUniform2uivEXT = call_user_get_proc_address(user_get_proc_address, "glUniform2uivEXT\0"): *fp_glUniform2uivEXT;
	glUniform3d = call_user_get_proc_address(user_get_proc_address, "glUniform3d\0"): *fp_glUniform3d;
	glUniform3dv = call_user_get_proc_address(user_get_proc_address, "glUniform3dv\0"): *fp_glUniform3dv;
	glUniform3f = call_user_get_proc_address(user_get_proc_address, "glUniform3f\0"): *fp_glUniform3f;
	glUniform3fARB = call_user_get_proc_address(user_get_proc_address, "glUniform3fARB\0"): *fp_glUniform3fARB;
	glUniform3fv = call_user_get_proc_address(user_get_proc_address, "glUniform3fv\0"): *fp_glUniform3fv;
	glUniform3fvARB = call_user_get_proc_address(user_get_proc_address, "glUniform3fvARB\0"): *fp_glUniform3fvARB;
	glUniform3i = call_user_get_proc_address(user_get_proc_address, "glUniform3i\0"): *fp_glUniform3i;
	glUniform3i64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform3i64ARB\0"): *fp_glUniform3i64ARB;
	glUniform3i64NV = call_user_get_proc_address(user_get_proc_address, "glUniform3i64NV\0"): *fp_glUniform3i64NV;
	glUniform3i64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform3i64vARB\0"): *fp_glUniform3i64vARB;
	glUniform3i64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform3i64vNV\0"): *fp_glUniform3i64vNV;
	glUniform3iARB = call_user_get_proc_address(user_get_proc_address, "glUniform3iARB\0"): *fp_glUniform3iARB;
	glUniform3iv = call_user_get_proc_address(user_get_proc_address, "glUniform3iv\0"): *fp_glUniform3iv;
	glUniform3ivARB = call_user_get_proc_address(user_get_proc_address, "glUniform3ivARB\0"): *fp_glUniform3ivARB;
	glUniform3ui = call_user_get_proc_address(user_get_proc_address, "glUniform3ui\0"): *fp_glUniform3ui;
	glUniform3ui64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform3ui64ARB\0"): *fp_glUniform3ui64ARB;
	glUniform3ui64NV = call_user_get_proc_address(user_get_proc_address, "glUniform3ui64NV\0"): *fp_glUniform3ui64NV;
	glUniform3ui64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform3ui64vARB\0"): *fp_glUniform3ui64vARB;
	glUniform3ui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform3ui64vNV\0"): *fp_glUniform3ui64vNV;
	glUniform3uiEXT = call_user_get_proc_address(user_get_proc_address, "glUniform3uiEXT\0"): *fp_glUniform3uiEXT;
	glUniform3uiv = call_user_get_proc_address(user_get_proc_address, "glUniform3uiv\0"): *fp_glUniform3uiv;
	glUniform3uivEXT = call_user_get_proc_address(user_get_proc_address, "glUniform3uivEXT\0"): *fp_glUniform3uivEXT;
	glUniform4d = call_user_get_proc_address(user_get_proc_address, "glUniform4d\0"): *fp_glUniform4d;
	glUniform4dv = call_user_get_proc_address(user_get_proc_address, "glUniform4dv\0"): *fp_glUniform4dv;
	glUniform4f = call_user_get_proc_address(user_get_proc_address, "glUniform4f\0"): *fp_glUniform4f;
	glUniform4fARB = call_user_get_proc_address(user_get_proc_address, "glUniform4fARB\0"): *fp_glUniform4fARB;
	glUniform4fv = call_user_get_proc_address(user_get_proc_address, "glUniform4fv\0"): *fp_glUniform4fv;
	glUniform4fvARB = call_user_get_proc_address(user_get_proc_address, "glUniform4fvARB\0"): *fp_glUniform4fvARB;
	glUniform4i = call_user_get_proc_address(user_get_proc_address, "glUniform4i\0"): *fp_glUniform4i;
	glUniform4i64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform4i64ARB\0"): *fp_glUniform4i64ARB;
	glUniform4i64NV = call_user_get_proc_address(user_get_proc_address, "glUniform4i64NV\0"): *fp_glUniform4i64NV;
	glUniform4i64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform4i64vARB\0"): *fp_glUniform4i64vARB;
	glUniform4i64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform4i64vNV\0"): *fp_glUniform4i64vNV;
	glUniform4iARB = call_user_get_proc_address(user_get_proc_address, "glUniform4iARB\0"): *fp_glUniform4iARB;
	glUniform4iv = call_user_get_proc_address(user_get_proc_address, "glUniform4iv\0"): *fp_glUniform4iv;
	glUniform4ivARB = call_user_get_proc_address(user_get_proc_address, "glUniform4ivARB\0"): *fp_glUniform4ivARB;
	glUniform4ui = call_user_get_proc_address(user_get_proc_address, "glUniform4ui\0"): *fp_glUniform4ui;
	glUniform4ui64ARB = call_user_get_proc_address(user_get_proc_address, "glUniform4ui64ARB\0"): *fp_glUniform4ui64ARB;
	glUniform4ui64NV = call_user_get_proc_address(user_get_proc_address, "glUniform4ui64NV\0"): *fp_glUniform4ui64NV;
	glUniform4ui64vARB = call_user_get_proc_address(user_get_proc_address, "glUniform4ui64vARB\0"): *fp_glUniform4ui64vARB;
	glUniform4ui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniform4ui64vNV\0"): *fp_glUniform4ui64vNV;
	glUniform4uiEXT = call_user_get_proc_address(user_get_proc_address, "glUniform4uiEXT\0"): *fp_glUniform4uiEXT;
	glUniform4uiv = call_user_get_proc_address(user_get_proc_address, "glUniform4uiv\0"): *fp_glUniform4uiv;
	glUniform4uivEXT = call_user_get_proc_address(user_get_proc_address, "glUniform4uivEXT\0"): *fp_glUniform4uivEXT;
	glUniformBlockBinding = call_user_get_proc_address(user_get_proc_address, "glUniformBlockBinding\0"): *fp_glUniformBlockBinding;
	glUniformBufferEXT = call_user_get_proc_address(user_get_proc_address, "glUniformBufferEXT\0"): *fp_glUniformBufferEXT;
	glUniformHandleui64ARB = call_user_get_proc_address(user_get_proc_address, "glUniformHandleui64ARB\0"): *fp_glUniformHandleui64ARB;
	glUniformHandleui64NV = call_user_get_proc_address(user_get_proc_address, "glUniformHandleui64NV\0"): *fp_glUniformHandleui64NV;
	glUniformHandleui64vARB = call_user_get_proc_address(user_get_proc_address, "glUniformHandleui64vARB\0"): *fp_glUniformHandleui64vARB;
	glUniformHandleui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniformHandleui64vNV\0"): *fp_glUniformHandleui64vNV;
	glUniformMatrix2dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2dv\0"): *fp_glUniformMatrix2dv;
	glUniformMatrix2fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2fv\0"): *fp_glUniformMatrix2fv;
	glUniformMatrix2fvARB = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2fvARB\0"): *fp_glUniformMatrix2fvARB;
	glUniformMatrix2x3dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2x3dv\0"): *fp_glUniformMatrix2x3dv;
	glUniformMatrix2x3fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2x3fv\0"): *fp_glUniformMatrix2x3fv;
	glUniformMatrix2x4dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2x4dv\0"): *fp_glUniformMatrix2x4dv;
	glUniformMatrix2x4fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix2x4fv\0"): *fp_glUniformMatrix2x4fv;
	glUniformMatrix3dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3dv\0"): *fp_glUniformMatrix3dv;
	glUniformMatrix3fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3fv\0"): *fp_glUniformMatrix3fv;
	glUniformMatrix3fvARB = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3fvARB\0"): *fp_glUniformMatrix3fvARB;
	glUniformMatrix3x2dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3x2dv\0"): *fp_glUniformMatrix3x2dv;
	glUniformMatrix3x2fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3x2fv\0"): *fp_glUniformMatrix3x2fv;
	glUniformMatrix3x4dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3x4dv\0"): *fp_glUniformMatrix3x4dv;
	glUniformMatrix3x4fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix3x4fv\0"): *fp_glUniformMatrix3x4fv;
	glUniformMatrix4dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4dv\0"): *fp_glUniformMatrix4dv;
	glUniformMatrix4fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4fv\0"): *fp_glUniformMatrix4fv;
	glUniformMatrix4fvARB = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4fvARB\0"): *fp_glUniformMatrix4fvARB;
	glUniformMatrix4x2dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4x2dv\0"): *fp_glUniformMatrix4x2dv;
	glUniformMatrix4x2fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4x2fv\0"): *fp_glUniformMatrix4x2fv;
	glUniformMatrix4x3dv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4x3dv\0"): *fp_glUniformMatrix4x3dv;
	glUniformMatrix4x3fv = call_user_get_proc_address(user_get_proc_address, "glUniformMatrix4x3fv\0"): *fp_glUniformMatrix4x3fv;
	glUniformSubroutinesuiv = call_user_get_proc_address(user_get_proc_address, "glUniformSubroutinesuiv\0"): *fp_glUniformSubroutinesuiv;
	glUniformui64NV = call_user_get_proc_address(user_get_proc_address, "glUniformui64NV\0"): *fp_glUniformui64NV;
	glUniformui64vNV = call_user_get_proc_address(user_get_proc_address, "glUniformui64vNV\0"): *fp_glUniformui64vNV;
	glUnlockArraysEXT = call_user_get_proc_address(user_get_proc_address, "glUnlockArraysEXT\0"): *fp_glUnlockArraysEXT;
	glUnmapBuffer = call_user_get_proc_address(user_get_proc_address, "glUnmapBuffer\0"): *fp_glUnmapBuffer;
	glUnmapBufferARB = call_user_get_proc_address(user_get_proc_address, "glUnmapBufferARB\0"): *fp_glUnmapBufferARB;
	glUnmapNamedBuffer = call_user_get_proc_address(user_get_proc_address, "glUnmapNamedBuffer\0"): *fp_glUnmapNamedBuffer;
	glUnmapNamedBufferEXT = call_user_get_proc_address(user_get_proc_address, "glUnmapNamedBufferEXT\0"): *fp_glUnmapNamedBufferEXT;
	glUnmapObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glUnmapObjectBufferATI\0"): *fp_glUnmapObjectBufferATI;
	glUnmapTexture2DINTEL = call_user_get_proc_address(user_get_proc_address, "glUnmapTexture2DINTEL\0"): *fp_glUnmapTexture2DINTEL;
	glUpdateObjectBufferATI = call_user_get_proc_address(user_get_proc_address, "glUpdateObjectBufferATI\0"): *fp_glUpdateObjectBufferATI;
	glUploadGpuMaskNVX = call_user_get_proc_address(user_get_proc_address, "glUploadGpuMaskNVX\0"): *fp_glUploadGpuMaskNVX;
	glUseProgram = call_user_get_proc_address(user_get_proc_address, "glUseProgram\0"): *fp_glUseProgram;
	glUseProgramObjectARB = call_user_get_proc_address(user_get_proc_address, "glUseProgramObjectARB\0"): *fp_glUseProgramObjectARB;
	glUseProgramStages = call_user_get_proc_address(user_get_proc_address, "glUseProgramStages\0"): *fp_glUseProgramStages;
	glUseShaderProgramEXT = call_user_get_proc_address(user_get_proc_address, "glUseShaderProgramEXT\0"): *fp_glUseShaderProgramEXT;
	glVDPAUFiniNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUFiniNV\0"): *fp_glVDPAUFiniNV;
	glVDPAUGetSurfaceivNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUGetSurfaceivNV\0"): *fp_glVDPAUGetSurfaceivNV;
	glVDPAUInitNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUInitNV\0"): *fp_glVDPAUInitNV;
	glVDPAUIsSurfaceNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUIsSurfaceNV\0"): *fp_glVDPAUIsSurfaceNV;
	glVDPAUMapSurfacesNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUMapSurfacesNV\0"): *fp_glVDPAUMapSurfacesNV;
	glVDPAURegisterOutputSurfaceNV = call_user_get_proc_address(user_get_proc_address, "glVDPAURegisterOutputSurfaceNV\0"): *fp_glVDPAURegisterOutputSurfaceNV;
	glVDPAURegisterVideoSurfaceNV = call_user_get_proc_address(user_get_proc_address, "glVDPAURegisterVideoSurfaceNV\0"): *fp_glVDPAURegisterVideoSurfaceNV;
	glVDPAURegisterVideoSurfaceWithPictureStructureNV = call_user_get_proc_address(user_get_proc_address, "glVDPAURegisterVideoSurfaceWithPictureStructureNV\0"): *fp_glVDPAURegisterVideoSurfaceWithPictureStructureNV;
	glVDPAUSurfaceAccessNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUSurfaceAccessNV\0"): *fp_glVDPAUSurfaceAccessNV;
	glVDPAUUnmapSurfacesNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUUnmapSurfacesNV\0"): *fp_glVDPAUUnmapSurfacesNV;
	glVDPAUUnregisterSurfaceNV = call_user_get_proc_address(user_get_proc_address, "glVDPAUUnregisterSurfaceNV\0"): *fp_glVDPAUUnregisterSurfaceNV;
	glValidateProgram = call_user_get_proc_address(user_get_proc_address, "glValidateProgram\0"): *fp_glValidateProgram;
	glValidateProgramARB = call_user_get_proc_address(user_get_proc_address, "glValidateProgramARB\0"): *fp_glValidateProgramARB;
	glValidateProgramPipeline = call_user_get_proc_address(user_get_proc_address, "glValidateProgramPipeline\0"): *fp_glValidateProgramPipeline;
	glVariantArrayObjectATI = call_user_get_proc_address(user_get_proc_address, "glVariantArrayObjectATI\0"): *fp_glVariantArrayObjectATI;
	glVariantPointerEXT = call_user_get_proc_address(user_get_proc_address, "glVariantPointerEXT\0"): *fp_glVariantPointerEXT;
	glVariantbvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantbvEXT\0"): *fp_glVariantbvEXT;
	glVariantdvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantdvEXT\0"): *fp_glVariantdvEXT;
	glVariantfvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantfvEXT\0"): *fp_glVariantfvEXT;
	glVariantivEXT = call_user_get_proc_address(user_get_proc_address, "glVariantivEXT\0"): *fp_glVariantivEXT;
	glVariantsvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantsvEXT\0"): *fp_glVariantsvEXT;
	glVariantubvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantubvEXT\0"): *fp_glVariantubvEXT;
	glVariantuivEXT = call_user_get_proc_address(user_get_proc_address, "glVariantuivEXT\0"): *fp_glVariantuivEXT;
	glVariantusvEXT = call_user_get_proc_address(user_get_proc_address, "glVariantusvEXT\0"): *fp_glVariantusvEXT;
	glVertex2bOES = call_user_get_proc_address(user_get_proc_address, "glVertex2bOES\0"): *fp_glVertex2bOES;
	glVertex2bvOES = call_user_get_proc_address(user_get_proc_address, "glVertex2bvOES\0"): *fp_glVertex2bvOES;
	glVertex2hNV = call_user_get_proc_address(user_get_proc_address, "glVertex2hNV\0"): *fp_glVertex2hNV;
	glVertex2hvNV = call_user_get_proc_address(user_get_proc_address, "glVertex2hvNV\0"): *fp_glVertex2hvNV;
	glVertex2xOES = call_user_get_proc_address(user_get_proc_address, "glVertex2xOES\0"): *fp_glVertex2xOES;
	glVertex2xvOES = call_user_get_proc_address(user_get_proc_address, "glVertex2xvOES\0"): *fp_glVertex2xvOES;
	glVertex3bOES = call_user_get_proc_address(user_get_proc_address, "glVertex3bOES\0"): *fp_glVertex3bOES;
	glVertex3bvOES = call_user_get_proc_address(user_get_proc_address, "glVertex3bvOES\0"): *fp_glVertex3bvOES;
	glVertex3hNV = call_user_get_proc_address(user_get_proc_address, "glVertex3hNV\0"): *fp_glVertex3hNV;
	glVertex3hvNV = call_user_get_proc_address(user_get_proc_address, "glVertex3hvNV\0"): *fp_glVertex3hvNV;
	glVertex3xOES = call_user_get_proc_address(user_get_proc_address, "glVertex3xOES\0"): *fp_glVertex3xOES;
	glVertex3xvOES = call_user_get_proc_address(user_get_proc_address, "glVertex3xvOES\0"): *fp_glVertex3xvOES;
	glVertex4bOES = call_user_get_proc_address(user_get_proc_address, "glVertex4bOES\0"): *fp_glVertex4bOES;
	glVertex4bvOES = call_user_get_proc_address(user_get_proc_address, "glVertex4bvOES\0"): *fp_glVertex4bvOES;
	glVertex4hNV = call_user_get_proc_address(user_get_proc_address, "glVertex4hNV\0"): *fp_glVertex4hNV;
	glVertex4hvNV = call_user_get_proc_address(user_get_proc_address, "glVertex4hvNV\0"): *fp_glVertex4hvNV;
	glVertex4xOES = call_user_get_proc_address(user_get_proc_address, "glVertex4xOES\0"): *fp_glVertex4xOES;
	glVertex4xvOES = call_user_get_proc_address(user_get_proc_address, "glVertex4xvOES\0"): *fp_glVertex4xvOES;
	glVertexArrayAttribBinding = call_user_get_proc_address(user_get_proc_address, "glVertexArrayAttribBinding\0"): *fp_glVertexArrayAttribBinding;
	glVertexArrayAttribFormat = call_user_get_proc_address(user_get_proc_address, "glVertexArrayAttribFormat\0"): *fp_glVertexArrayAttribFormat;
	glVertexArrayAttribIFormat = call_user_get_proc_address(user_get_proc_address, "glVertexArrayAttribIFormat\0"): *fp_glVertexArrayAttribIFormat;
	glVertexArrayAttribLFormat = call_user_get_proc_address(user_get_proc_address, "glVertexArrayAttribLFormat\0"): *fp_glVertexArrayAttribLFormat;
	glVertexArrayBindVertexBufferEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayBindVertexBufferEXT\0"): *fp_glVertexArrayBindVertexBufferEXT;
	glVertexArrayBindingDivisor = call_user_get_proc_address(user_get_proc_address, "glVertexArrayBindingDivisor\0"): *fp_glVertexArrayBindingDivisor;
	glVertexArrayColorOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayColorOffsetEXT\0"): *fp_glVertexArrayColorOffsetEXT;
	glVertexArrayEdgeFlagOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayEdgeFlagOffsetEXT\0"): *fp_glVertexArrayEdgeFlagOffsetEXT;
	glVertexArrayElementBuffer = call_user_get_proc_address(user_get_proc_address, "glVertexArrayElementBuffer\0"): *fp_glVertexArrayElementBuffer;
	glVertexArrayFogCoordOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayFogCoordOffsetEXT\0"): *fp_glVertexArrayFogCoordOffsetEXT;
	glVertexArrayIndexOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayIndexOffsetEXT\0"): *fp_glVertexArrayIndexOffsetEXT;
	glVertexArrayMultiTexCoordOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayMultiTexCoordOffsetEXT\0"): *fp_glVertexArrayMultiTexCoordOffsetEXT;
	glVertexArrayNormalOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayNormalOffsetEXT\0"): *fp_glVertexArrayNormalOffsetEXT;
	glVertexArrayParameteriAPPLE = call_user_get_proc_address(user_get_proc_address, "glVertexArrayParameteriAPPLE\0"): *fp_glVertexArrayParameteriAPPLE;
	glVertexArrayRangeAPPLE = call_user_get_proc_address(user_get_proc_address, "glVertexArrayRangeAPPLE\0"): *fp_glVertexArrayRangeAPPLE;
	glVertexArrayRangeNV = call_user_get_proc_address(user_get_proc_address, "glVertexArrayRangeNV\0"): *fp_glVertexArrayRangeNV;
	glVertexArraySecondaryColorOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArraySecondaryColorOffsetEXT\0"): *fp_glVertexArraySecondaryColorOffsetEXT;
	glVertexArrayTexCoordOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayTexCoordOffsetEXT\0"): *fp_glVertexArrayTexCoordOffsetEXT;
	glVertexArrayVertexAttribBindingEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribBindingEXT\0"): *fp_glVertexArrayVertexAttribBindingEXT;
	glVertexArrayVertexAttribDivisorEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribDivisorEXT\0"): *fp_glVertexArrayVertexAttribDivisorEXT;
	glVertexArrayVertexAttribFormatEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribFormatEXT\0"): *fp_glVertexArrayVertexAttribFormatEXT;
	glVertexArrayVertexAttribIFormatEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribIFormatEXT\0"): *fp_glVertexArrayVertexAttribIFormatEXT;
	glVertexArrayVertexAttribIOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribIOffsetEXT\0"): *fp_glVertexArrayVertexAttribIOffsetEXT;
	glVertexArrayVertexAttribLFormatEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribLFormatEXT\0"): *fp_glVertexArrayVertexAttribLFormatEXT;
	glVertexArrayVertexAttribLOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribLOffsetEXT\0"): *fp_glVertexArrayVertexAttribLOffsetEXT;
	glVertexArrayVertexAttribOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexAttribOffsetEXT\0"): *fp_glVertexArrayVertexAttribOffsetEXT;
	glVertexArrayVertexBindingDivisorEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexBindingDivisorEXT\0"): *fp_glVertexArrayVertexBindingDivisorEXT;
	glVertexArrayVertexBuffer = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexBuffer\0"): *fp_glVertexArrayVertexBuffer;
	glVertexArrayVertexBuffers = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexBuffers\0"): *fp_glVertexArrayVertexBuffers;
	glVertexArrayVertexOffsetEXT = call_user_get_proc_address(user_get_proc_address, "glVertexArrayVertexOffsetEXT\0"): *fp_glVertexArrayVertexOffsetEXT;
	glVertexAttrib1d = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1d\0"): *fp_glVertexAttrib1d;
	glVertexAttrib1dARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1dARB\0"): *fp_glVertexAttrib1dARB;
	glVertexAttrib1dNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1dNV\0"): *fp_glVertexAttrib1dNV;
	glVertexAttrib1dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1dv\0"): *fp_glVertexAttrib1dv;
	glVertexAttrib1dvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1dvARB\0"): *fp_glVertexAttrib1dvARB;
	glVertexAttrib1dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1dvNV\0"): *fp_glVertexAttrib1dvNV;
	glVertexAttrib1f = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1f\0"): *fp_glVertexAttrib1f;
	glVertexAttrib1fARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1fARB\0"): *fp_glVertexAttrib1fARB;
	glVertexAttrib1fNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1fNV\0"): *fp_glVertexAttrib1fNV;
	glVertexAttrib1fv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1fv\0"): *fp_glVertexAttrib1fv;
	glVertexAttrib1fvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1fvARB\0"): *fp_glVertexAttrib1fvARB;
	glVertexAttrib1fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1fvNV\0"): *fp_glVertexAttrib1fvNV;
	glVertexAttrib1hNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1hNV\0"): *fp_glVertexAttrib1hNV;
	glVertexAttrib1hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1hvNV\0"): *fp_glVertexAttrib1hvNV;
	glVertexAttrib1s = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1s\0"): *fp_glVertexAttrib1s;
	glVertexAttrib1sARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1sARB\0"): *fp_glVertexAttrib1sARB;
	glVertexAttrib1sNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1sNV\0"): *fp_glVertexAttrib1sNV;
	glVertexAttrib1sv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1sv\0"): *fp_glVertexAttrib1sv;
	glVertexAttrib1svARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1svARB\0"): *fp_glVertexAttrib1svARB;
	glVertexAttrib1svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib1svNV\0"): *fp_glVertexAttrib1svNV;
	glVertexAttrib2d = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2d\0"): *fp_glVertexAttrib2d;
	glVertexAttrib2dARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2dARB\0"): *fp_glVertexAttrib2dARB;
	glVertexAttrib2dNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2dNV\0"): *fp_glVertexAttrib2dNV;
	glVertexAttrib2dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2dv\0"): *fp_glVertexAttrib2dv;
	glVertexAttrib2dvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2dvARB\0"): *fp_glVertexAttrib2dvARB;
	glVertexAttrib2dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2dvNV\0"): *fp_glVertexAttrib2dvNV;
	glVertexAttrib2f = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2f\0"): *fp_glVertexAttrib2f;
	glVertexAttrib2fARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2fARB\0"): *fp_glVertexAttrib2fARB;
	glVertexAttrib2fNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2fNV\0"): *fp_glVertexAttrib2fNV;
	glVertexAttrib2fv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2fv\0"): *fp_glVertexAttrib2fv;
	glVertexAttrib2fvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2fvARB\0"): *fp_glVertexAttrib2fvARB;
	glVertexAttrib2fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2fvNV\0"): *fp_glVertexAttrib2fvNV;
	glVertexAttrib2hNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2hNV\0"): *fp_glVertexAttrib2hNV;
	glVertexAttrib2hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2hvNV\0"): *fp_glVertexAttrib2hvNV;
	glVertexAttrib2s = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2s\0"): *fp_glVertexAttrib2s;
	glVertexAttrib2sARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2sARB\0"): *fp_glVertexAttrib2sARB;
	glVertexAttrib2sNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2sNV\0"): *fp_glVertexAttrib2sNV;
	glVertexAttrib2sv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2sv\0"): *fp_glVertexAttrib2sv;
	glVertexAttrib2svARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2svARB\0"): *fp_glVertexAttrib2svARB;
	glVertexAttrib2svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib2svNV\0"): *fp_glVertexAttrib2svNV;
	glVertexAttrib3d = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3d\0"): *fp_glVertexAttrib3d;
	glVertexAttrib3dARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3dARB\0"): *fp_glVertexAttrib3dARB;
	glVertexAttrib3dNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3dNV\0"): *fp_glVertexAttrib3dNV;
	glVertexAttrib3dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3dv\0"): *fp_glVertexAttrib3dv;
	glVertexAttrib3dvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3dvARB\0"): *fp_glVertexAttrib3dvARB;
	glVertexAttrib3dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3dvNV\0"): *fp_glVertexAttrib3dvNV;
	glVertexAttrib3f = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3f\0"): *fp_glVertexAttrib3f;
	glVertexAttrib3fARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3fARB\0"): *fp_glVertexAttrib3fARB;
	glVertexAttrib3fNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3fNV\0"): *fp_glVertexAttrib3fNV;
	glVertexAttrib3fv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3fv\0"): *fp_glVertexAttrib3fv;
	glVertexAttrib3fvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3fvARB\0"): *fp_glVertexAttrib3fvARB;
	glVertexAttrib3fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3fvNV\0"): *fp_glVertexAttrib3fvNV;
	glVertexAttrib3hNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3hNV\0"): *fp_glVertexAttrib3hNV;
	glVertexAttrib3hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3hvNV\0"): *fp_glVertexAttrib3hvNV;
	glVertexAttrib3s = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3s\0"): *fp_glVertexAttrib3s;
	glVertexAttrib3sARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3sARB\0"): *fp_glVertexAttrib3sARB;
	glVertexAttrib3sNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3sNV\0"): *fp_glVertexAttrib3sNV;
	glVertexAttrib3sv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3sv\0"): *fp_glVertexAttrib3sv;
	glVertexAttrib3svARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3svARB\0"): *fp_glVertexAttrib3svARB;
	glVertexAttrib3svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib3svNV\0"): *fp_glVertexAttrib3svNV;
	glVertexAttrib4Nbv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nbv\0"): *fp_glVertexAttrib4Nbv;
	glVertexAttrib4NbvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NbvARB\0"): *fp_glVertexAttrib4NbvARB;
	glVertexAttrib4Niv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Niv\0"): *fp_glVertexAttrib4Niv;
	glVertexAttrib4NivARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NivARB\0"): *fp_glVertexAttrib4NivARB;
	glVertexAttrib4Nsv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nsv\0"): *fp_glVertexAttrib4Nsv;
	glVertexAttrib4NsvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NsvARB\0"): *fp_glVertexAttrib4NsvARB;
	glVertexAttrib4Nub = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nub\0"): *fp_glVertexAttrib4Nub;
	glVertexAttrib4NubARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NubARB\0"): *fp_glVertexAttrib4NubARB;
	glVertexAttrib4Nubv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nubv\0"): *fp_glVertexAttrib4Nubv;
	glVertexAttrib4NubvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NubvARB\0"): *fp_glVertexAttrib4NubvARB;
	glVertexAttrib4Nuiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nuiv\0"): *fp_glVertexAttrib4Nuiv;
	glVertexAttrib4NuivARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NuivARB\0"): *fp_glVertexAttrib4NuivARB;
	glVertexAttrib4Nusv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4Nusv\0"): *fp_glVertexAttrib4Nusv;
	glVertexAttrib4NusvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4NusvARB\0"): *fp_glVertexAttrib4NusvARB;
	glVertexAttrib4bv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4bv\0"): *fp_glVertexAttrib4bv;
	glVertexAttrib4bvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4bvARB\0"): *fp_glVertexAttrib4bvARB;
	glVertexAttrib4d = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4d\0"): *fp_glVertexAttrib4d;
	glVertexAttrib4dARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4dARB\0"): *fp_glVertexAttrib4dARB;
	glVertexAttrib4dNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4dNV\0"): *fp_glVertexAttrib4dNV;
	glVertexAttrib4dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4dv\0"): *fp_glVertexAttrib4dv;
	glVertexAttrib4dvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4dvARB\0"): *fp_glVertexAttrib4dvARB;
	glVertexAttrib4dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4dvNV\0"): *fp_glVertexAttrib4dvNV;
	glVertexAttrib4f = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4f\0"): *fp_glVertexAttrib4f;
	glVertexAttrib4fARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4fARB\0"): *fp_glVertexAttrib4fARB;
	glVertexAttrib4fNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4fNV\0"): *fp_glVertexAttrib4fNV;
	glVertexAttrib4fv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4fv\0"): *fp_glVertexAttrib4fv;
	glVertexAttrib4fvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4fvARB\0"): *fp_glVertexAttrib4fvARB;
	glVertexAttrib4fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4fvNV\0"): *fp_glVertexAttrib4fvNV;
	glVertexAttrib4hNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4hNV\0"): *fp_glVertexAttrib4hNV;
	glVertexAttrib4hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4hvNV\0"): *fp_glVertexAttrib4hvNV;
	glVertexAttrib4iv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4iv\0"): *fp_glVertexAttrib4iv;
	glVertexAttrib4ivARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4ivARB\0"): *fp_glVertexAttrib4ivARB;
	glVertexAttrib4s = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4s\0"): *fp_glVertexAttrib4s;
	glVertexAttrib4sARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4sARB\0"): *fp_glVertexAttrib4sARB;
	glVertexAttrib4sNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4sNV\0"): *fp_glVertexAttrib4sNV;
	glVertexAttrib4sv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4sv\0"): *fp_glVertexAttrib4sv;
	glVertexAttrib4svARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4svARB\0"): *fp_glVertexAttrib4svARB;
	glVertexAttrib4svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4svNV\0"): *fp_glVertexAttrib4svNV;
	glVertexAttrib4ubNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4ubNV\0"): *fp_glVertexAttrib4ubNV;
	glVertexAttrib4ubv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4ubv\0"): *fp_glVertexAttrib4ubv;
	glVertexAttrib4ubvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4ubvARB\0"): *fp_glVertexAttrib4ubvARB;
	glVertexAttrib4ubvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4ubvNV\0"): *fp_glVertexAttrib4ubvNV;
	glVertexAttrib4uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4uiv\0"): *fp_glVertexAttrib4uiv;
	glVertexAttrib4uivARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4uivARB\0"): *fp_glVertexAttrib4uivARB;
	glVertexAttrib4usv = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4usv\0"): *fp_glVertexAttrib4usv;
	glVertexAttrib4usvARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttrib4usvARB\0"): *fp_glVertexAttrib4usvARB;
	glVertexAttribArrayObjectATI = call_user_get_proc_address(user_get_proc_address, "glVertexAttribArrayObjectATI\0"): *fp_glVertexAttribArrayObjectATI;
	glVertexAttribBinding = call_user_get_proc_address(user_get_proc_address, "glVertexAttribBinding\0"): *fp_glVertexAttribBinding;
	glVertexAttribDivisor = call_user_get_proc_address(user_get_proc_address, "glVertexAttribDivisor\0"): *fp_glVertexAttribDivisor;
	glVertexAttribDivisorARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttribDivisorARB\0"): *fp_glVertexAttribDivisorARB;
	glVertexAttribFormat = call_user_get_proc_address(user_get_proc_address, "glVertexAttribFormat\0"): *fp_glVertexAttribFormat;
	glVertexAttribFormatNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribFormatNV\0"): *fp_glVertexAttribFormatNV;
	glVertexAttribI1i = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1i\0"): *fp_glVertexAttribI1i;
	glVertexAttribI1iEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1iEXT\0"): *fp_glVertexAttribI1iEXT;
	glVertexAttribI1iv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1iv\0"): *fp_glVertexAttribI1iv;
	glVertexAttribI1ivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1ivEXT\0"): *fp_glVertexAttribI1ivEXT;
	glVertexAttribI1ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1ui\0"): *fp_glVertexAttribI1ui;
	glVertexAttribI1uiEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1uiEXT\0"): *fp_glVertexAttribI1uiEXT;
	glVertexAttribI1uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1uiv\0"): *fp_glVertexAttribI1uiv;
	glVertexAttribI1uivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI1uivEXT\0"): *fp_glVertexAttribI1uivEXT;
	glVertexAttribI2i = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2i\0"): *fp_glVertexAttribI2i;
	glVertexAttribI2iEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2iEXT\0"): *fp_glVertexAttribI2iEXT;
	glVertexAttribI2iv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2iv\0"): *fp_glVertexAttribI2iv;
	glVertexAttribI2ivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2ivEXT\0"): *fp_glVertexAttribI2ivEXT;
	glVertexAttribI2ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2ui\0"): *fp_glVertexAttribI2ui;
	glVertexAttribI2uiEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2uiEXT\0"): *fp_glVertexAttribI2uiEXT;
	glVertexAttribI2uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2uiv\0"): *fp_glVertexAttribI2uiv;
	glVertexAttribI2uivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI2uivEXT\0"): *fp_glVertexAttribI2uivEXT;
	glVertexAttribI3i = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3i\0"): *fp_glVertexAttribI3i;
	glVertexAttribI3iEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3iEXT\0"): *fp_glVertexAttribI3iEXT;
	glVertexAttribI3iv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3iv\0"): *fp_glVertexAttribI3iv;
	glVertexAttribI3ivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3ivEXT\0"): *fp_glVertexAttribI3ivEXT;
	glVertexAttribI3ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3ui\0"): *fp_glVertexAttribI3ui;
	glVertexAttribI3uiEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3uiEXT\0"): *fp_glVertexAttribI3uiEXT;
	glVertexAttribI3uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3uiv\0"): *fp_glVertexAttribI3uiv;
	glVertexAttribI3uivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI3uivEXT\0"): *fp_glVertexAttribI3uivEXT;
	glVertexAttribI4bv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4bv\0"): *fp_glVertexAttribI4bv;
	glVertexAttribI4bvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4bvEXT\0"): *fp_glVertexAttribI4bvEXT;
	glVertexAttribI4i = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4i\0"): *fp_glVertexAttribI4i;
	glVertexAttribI4iEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4iEXT\0"): *fp_glVertexAttribI4iEXT;
	glVertexAttribI4iv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4iv\0"): *fp_glVertexAttribI4iv;
	glVertexAttribI4ivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4ivEXT\0"): *fp_glVertexAttribI4ivEXT;
	glVertexAttribI4sv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4sv\0"): *fp_glVertexAttribI4sv;
	glVertexAttribI4svEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4svEXT\0"): *fp_glVertexAttribI4svEXT;
	glVertexAttribI4ubv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4ubv\0"): *fp_glVertexAttribI4ubv;
	glVertexAttribI4ubvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4ubvEXT\0"): *fp_glVertexAttribI4ubvEXT;
	glVertexAttribI4ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4ui\0"): *fp_glVertexAttribI4ui;
	glVertexAttribI4uiEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4uiEXT\0"): *fp_glVertexAttribI4uiEXT;
	glVertexAttribI4uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4uiv\0"): *fp_glVertexAttribI4uiv;
	glVertexAttribI4uivEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4uivEXT\0"): *fp_glVertexAttribI4uivEXT;
	glVertexAttribI4usv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4usv\0"): *fp_glVertexAttribI4usv;
	glVertexAttribI4usvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribI4usvEXT\0"): *fp_glVertexAttribI4usvEXT;
	glVertexAttribIFormat = call_user_get_proc_address(user_get_proc_address, "glVertexAttribIFormat\0"): *fp_glVertexAttribIFormat;
	glVertexAttribIFormatNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribIFormatNV\0"): *fp_glVertexAttribIFormatNV;
	glVertexAttribIPointer = call_user_get_proc_address(user_get_proc_address, "glVertexAttribIPointer\0"): *fp_glVertexAttribIPointer;
	glVertexAttribIPointerEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribIPointerEXT\0"): *fp_glVertexAttribIPointerEXT;
	glVertexAttribL1d = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1d\0"): *fp_glVertexAttribL1d;
	glVertexAttribL1dEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1dEXT\0"): *fp_glVertexAttribL1dEXT;
	glVertexAttribL1dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1dv\0"): *fp_glVertexAttribL1dv;
	glVertexAttribL1dvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1dvEXT\0"): *fp_glVertexAttribL1dvEXT;
	glVertexAttribL1i64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1i64NV\0"): *fp_glVertexAttribL1i64NV;
	glVertexAttribL1i64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1i64vNV\0"): *fp_glVertexAttribL1i64vNV;
	glVertexAttribL1ui64ARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1ui64ARB\0"): *fp_glVertexAttribL1ui64ARB;
	glVertexAttribL1ui64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1ui64NV\0"): *fp_glVertexAttribL1ui64NV;
	glVertexAttribL1ui64vARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1ui64vARB\0"): *fp_glVertexAttribL1ui64vARB;
	glVertexAttribL1ui64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL1ui64vNV\0"): *fp_glVertexAttribL1ui64vNV;
	glVertexAttribL2d = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2d\0"): *fp_glVertexAttribL2d;
	glVertexAttribL2dEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2dEXT\0"): *fp_glVertexAttribL2dEXT;
	glVertexAttribL2dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2dv\0"): *fp_glVertexAttribL2dv;
	glVertexAttribL2dvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2dvEXT\0"): *fp_glVertexAttribL2dvEXT;
	glVertexAttribL2i64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2i64NV\0"): *fp_glVertexAttribL2i64NV;
	glVertexAttribL2i64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2i64vNV\0"): *fp_glVertexAttribL2i64vNV;
	glVertexAttribL2ui64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2ui64NV\0"): *fp_glVertexAttribL2ui64NV;
	glVertexAttribL2ui64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL2ui64vNV\0"): *fp_glVertexAttribL2ui64vNV;
	glVertexAttribL3d = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3d\0"): *fp_glVertexAttribL3d;
	glVertexAttribL3dEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3dEXT\0"): *fp_glVertexAttribL3dEXT;
	glVertexAttribL3dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3dv\0"): *fp_glVertexAttribL3dv;
	glVertexAttribL3dvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3dvEXT\0"): *fp_glVertexAttribL3dvEXT;
	glVertexAttribL3i64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3i64NV\0"): *fp_glVertexAttribL3i64NV;
	glVertexAttribL3i64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3i64vNV\0"): *fp_glVertexAttribL3i64vNV;
	glVertexAttribL3ui64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3ui64NV\0"): *fp_glVertexAttribL3ui64NV;
	glVertexAttribL3ui64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL3ui64vNV\0"): *fp_glVertexAttribL3ui64vNV;
	glVertexAttribL4d = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4d\0"): *fp_glVertexAttribL4d;
	glVertexAttribL4dEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4dEXT\0"): *fp_glVertexAttribL4dEXT;
	glVertexAttribL4dv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4dv\0"): *fp_glVertexAttribL4dv;
	glVertexAttribL4dvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4dvEXT\0"): *fp_glVertexAttribL4dvEXT;
	glVertexAttribL4i64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4i64NV\0"): *fp_glVertexAttribL4i64NV;
	glVertexAttribL4i64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4i64vNV\0"): *fp_glVertexAttribL4i64vNV;
	glVertexAttribL4ui64NV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4ui64NV\0"): *fp_glVertexAttribL4ui64NV;
	glVertexAttribL4ui64vNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribL4ui64vNV\0"): *fp_glVertexAttribL4ui64vNV;
	glVertexAttribLFormat = call_user_get_proc_address(user_get_proc_address, "glVertexAttribLFormat\0"): *fp_glVertexAttribLFormat;
	glVertexAttribLFormatNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribLFormatNV\0"): *fp_glVertexAttribLFormatNV;
	glVertexAttribLPointer = call_user_get_proc_address(user_get_proc_address, "glVertexAttribLPointer\0"): *fp_glVertexAttribLPointer;
	glVertexAttribLPointerEXT = call_user_get_proc_address(user_get_proc_address, "glVertexAttribLPointerEXT\0"): *fp_glVertexAttribLPointerEXT;
	glVertexAttribP1ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP1ui\0"): *fp_glVertexAttribP1ui;
	glVertexAttribP1uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP1uiv\0"): *fp_glVertexAttribP1uiv;
	glVertexAttribP2ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP2ui\0"): *fp_glVertexAttribP2ui;
	glVertexAttribP2uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP2uiv\0"): *fp_glVertexAttribP2uiv;
	glVertexAttribP3ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP3ui\0"): *fp_glVertexAttribP3ui;
	glVertexAttribP3uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP3uiv\0"): *fp_glVertexAttribP3uiv;
	glVertexAttribP4ui = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP4ui\0"): *fp_glVertexAttribP4ui;
	glVertexAttribP4uiv = call_user_get_proc_address(user_get_proc_address, "glVertexAttribP4uiv\0"): *fp_glVertexAttribP4uiv;
	glVertexAttribParameteriAMD = call_user_get_proc_address(user_get_proc_address, "glVertexAttribParameteriAMD\0"): *fp_glVertexAttribParameteriAMD;
	glVertexAttribPointer = call_user_get_proc_address(user_get_proc_address, "glVertexAttribPointer\0"): *fp_glVertexAttribPointer;
	glVertexAttribPointerARB = call_user_get_proc_address(user_get_proc_address, "glVertexAttribPointerARB\0"): *fp_glVertexAttribPointerARB;
	glVertexAttribPointerNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribPointerNV\0"): *fp_glVertexAttribPointerNV;
	glVertexAttribs1dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs1dvNV\0"): *fp_glVertexAttribs1dvNV;
	glVertexAttribs1fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs1fvNV\0"): *fp_glVertexAttribs1fvNV;
	glVertexAttribs1hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs1hvNV\0"): *fp_glVertexAttribs1hvNV;
	glVertexAttribs1svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs1svNV\0"): *fp_glVertexAttribs1svNV;
	glVertexAttribs2dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs2dvNV\0"): *fp_glVertexAttribs2dvNV;
	glVertexAttribs2fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs2fvNV\0"): *fp_glVertexAttribs2fvNV;
	glVertexAttribs2hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs2hvNV\0"): *fp_glVertexAttribs2hvNV;
	glVertexAttribs2svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs2svNV\0"): *fp_glVertexAttribs2svNV;
	glVertexAttribs3dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs3dvNV\0"): *fp_glVertexAttribs3dvNV;
	glVertexAttribs3fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs3fvNV\0"): *fp_glVertexAttribs3fvNV;
	glVertexAttribs3hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs3hvNV\0"): *fp_glVertexAttribs3hvNV;
	glVertexAttribs3svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs3svNV\0"): *fp_glVertexAttribs3svNV;
	glVertexAttribs4dvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs4dvNV\0"): *fp_glVertexAttribs4dvNV;
	glVertexAttribs4fvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs4fvNV\0"): *fp_glVertexAttribs4fvNV;
	glVertexAttribs4hvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs4hvNV\0"): *fp_glVertexAttribs4hvNV;
	glVertexAttribs4svNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs4svNV\0"): *fp_glVertexAttribs4svNV;
	glVertexAttribs4ubvNV = call_user_get_proc_address(user_get_proc_address, "glVertexAttribs4ubvNV\0"): *fp_glVertexAttribs4ubvNV;
	glVertexBindingDivisor = call_user_get_proc_address(user_get_proc_address, "glVertexBindingDivisor\0"): *fp_glVertexBindingDivisor;
	glVertexBlendARB = call_user_get_proc_address(user_get_proc_address, "glVertexBlendARB\0"): *fp_glVertexBlendARB;
	glVertexBlendEnvfATI = call_user_get_proc_address(user_get_proc_address, "glVertexBlendEnvfATI\0"): *fp_glVertexBlendEnvfATI;
	glVertexBlendEnviATI = call_user_get_proc_address(user_get_proc_address, "glVertexBlendEnviATI\0"): *fp_glVertexBlendEnviATI;
	glVertexFormatNV = call_user_get_proc_address(user_get_proc_address, "glVertexFormatNV\0"): *fp_glVertexFormatNV;
	glVertexPointerEXT = call_user_get_proc_address(user_get_proc_address, "glVertexPointerEXT\0"): *fp_glVertexPointerEXT;
	glVertexPointerListIBM = call_user_get_proc_address(user_get_proc_address, "glVertexPointerListIBM\0"): *fp_glVertexPointerListIBM;
	glVertexPointervINTEL = call_user_get_proc_address(user_get_proc_address, "glVertexPointervINTEL\0"): *fp_glVertexPointervINTEL;
	glVertexStream1dATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1dATI\0"): *fp_glVertexStream1dATI;
	glVertexStream1dvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1dvATI\0"): *fp_glVertexStream1dvATI;
	glVertexStream1fATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1fATI\0"): *fp_glVertexStream1fATI;
	glVertexStream1fvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1fvATI\0"): *fp_glVertexStream1fvATI;
	glVertexStream1iATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1iATI\0"): *fp_glVertexStream1iATI;
	glVertexStream1ivATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1ivATI\0"): *fp_glVertexStream1ivATI;
	glVertexStream1sATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1sATI\0"): *fp_glVertexStream1sATI;
	glVertexStream1svATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream1svATI\0"): *fp_glVertexStream1svATI;
	glVertexStream2dATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2dATI\0"): *fp_glVertexStream2dATI;
	glVertexStream2dvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2dvATI\0"): *fp_glVertexStream2dvATI;
	glVertexStream2fATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2fATI\0"): *fp_glVertexStream2fATI;
	glVertexStream2fvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2fvATI\0"): *fp_glVertexStream2fvATI;
	glVertexStream2iATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2iATI\0"): *fp_glVertexStream2iATI;
	glVertexStream2ivATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2ivATI\0"): *fp_glVertexStream2ivATI;
	glVertexStream2sATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2sATI\0"): *fp_glVertexStream2sATI;
	glVertexStream2svATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream2svATI\0"): *fp_glVertexStream2svATI;
	glVertexStream3dATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3dATI\0"): *fp_glVertexStream3dATI;
	glVertexStream3dvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3dvATI\0"): *fp_glVertexStream3dvATI;
	glVertexStream3fATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3fATI\0"): *fp_glVertexStream3fATI;
	glVertexStream3fvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3fvATI\0"): *fp_glVertexStream3fvATI;
	glVertexStream3iATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3iATI\0"): *fp_glVertexStream3iATI;
	glVertexStream3ivATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3ivATI\0"): *fp_glVertexStream3ivATI;
	glVertexStream3sATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3sATI\0"): *fp_glVertexStream3sATI;
	glVertexStream3svATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream3svATI\0"): *fp_glVertexStream3svATI;
	glVertexStream4dATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4dATI\0"): *fp_glVertexStream4dATI;
	glVertexStream4dvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4dvATI\0"): *fp_glVertexStream4dvATI;
	glVertexStream4fATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4fATI\0"): *fp_glVertexStream4fATI;
	glVertexStream4fvATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4fvATI\0"): *fp_glVertexStream4fvATI;
	glVertexStream4iATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4iATI\0"): *fp_glVertexStream4iATI;
	glVertexStream4ivATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4ivATI\0"): *fp_glVertexStream4ivATI;
	glVertexStream4sATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4sATI\0"): *fp_glVertexStream4sATI;
	glVertexStream4svATI = call_user_get_proc_address(user_get_proc_address, "glVertexStream4svATI\0"): *fp_glVertexStream4svATI;
	glVertexWeightPointerEXT = call_user_get_proc_address(user_get_proc_address, "glVertexWeightPointerEXT\0"): *fp_glVertexWeightPointerEXT;
	glVertexWeightfEXT = call_user_get_proc_address(user_get_proc_address, "glVertexWeightfEXT\0"): *fp_glVertexWeightfEXT;
	glVertexWeightfvEXT = call_user_get_proc_address(user_get_proc_address, "glVertexWeightfvEXT\0"): *fp_glVertexWeightfvEXT;
	glVertexWeighthNV = call_user_get_proc_address(user_get_proc_address, "glVertexWeighthNV\0"): *fp_glVertexWeighthNV;
	glVertexWeighthvNV = call_user_get_proc_address(user_get_proc_address, "glVertexWeighthvNV\0"): *fp_glVertexWeighthvNV;
	glVideoCaptureNV = call_user_get_proc_address(user_get_proc_address, "glVideoCaptureNV\0"): *fp_glVideoCaptureNV;
	glVideoCaptureStreamParameterdvNV = call_user_get_proc_address(user_get_proc_address, "glVideoCaptureStreamParameterdvNV\0"): *fp_glVideoCaptureStreamParameterdvNV;
	glVideoCaptureStreamParameterfvNV = call_user_get_proc_address(user_get_proc_address, "glVideoCaptureStreamParameterfvNV\0"): *fp_glVideoCaptureStreamParameterfvNV;
	glVideoCaptureStreamParameterivNV = call_user_get_proc_address(user_get_proc_address, "glVideoCaptureStreamParameterivNV\0"): *fp_glVideoCaptureStreamParameterivNV;
	glViewport = call_user_get_proc_address(user_get_proc_address, "glViewport\0"): *fp_glViewport;
	glViewportArrayv = call_user_get_proc_address(user_get_proc_address, "glViewportArrayv\0"): *fp_glViewportArrayv;
	glViewportIndexedf = call_user_get_proc_address(user_get_proc_address, "glViewportIndexedf\0"): *fp_glViewportIndexedf;
	glViewportIndexedfv = call_user_get_proc_address(user_get_proc_address, "glViewportIndexedfv\0"): *fp_glViewportIndexedfv;
	glViewportPositionWScaleNV = call_user_get_proc_address(user_get_proc_address, "glViewportPositionWScaleNV\0"): *fp_glViewportPositionWScaleNV;
	glViewportSwizzleNV = call_user_get_proc_address(user_get_proc_address, "glViewportSwizzleNV\0"): *fp_glViewportSwizzleNV;
	glWaitSemaphoreEXT = call_user_get_proc_address(user_get_proc_address, "glWaitSemaphoreEXT\0"): *fp_glWaitSemaphoreEXT;
	glWaitSemaphoreui64NVX = call_user_get_proc_address(user_get_proc_address, "glWaitSemaphoreui64NVX\0"): *fp_glWaitSemaphoreui64NVX;
	glWaitSync = call_user_get_proc_address(user_get_proc_address, "glWaitSync\0"): *fp_glWaitSync;
	glWaitVkSemaphoreNV = call_user_get_proc_address(user_get_proc_address, "glWaitVkSemaphoreNV\0"): *fp_glWaitVkSemaphoreNV;
	glWeightPathsNV = call_user_get_proc_address(user_get_proc_address, "glWeightPathsNV\0"): *fp_glWeightPathsNV;
	glWeightPointerARB = call_user_get_proc_address(user_get_proc_address, "glWeightPointerARB\0"): *fp_glWeightPointerARB;
	glWeightbvARB = call_user_get_proc_address(user_get_proc_address, "glWeightbvARB\0"): *fp_glWeightbvARB;
	glWeightdvARB = call_user_get_proc_address(user_get_proc_address, "glWeightdvARB\0"): *fp_glWeightdvARB;
	glWeightfvARB = call_user_get_proc_address(user_get_proc_address, "glWeightfvARB\0"): *fp_glWeightfvARB;
	glWeightivARB = call_user_get_proc_address(user_get_proc_address, "glWeightivARB\0"): *fp_glWeightivARB;
	glWeightsvARB = call_user_get_proc_address(user_get_proc_address, "glWeightsvARB\0"): *fp_glWeightsvARB;
	glWeightubvARB = call_user_get_proc_address(user_get_proc_address, "glWeightubvARB\0"): *fp_glWeightubvARB;
	glWeightuivARB = call_user_get_proc_address(user_get_proc_address, "glWeightuivARB\0"): *fp_glWeightuivARB;
	glWeightusvARB = call_user_get_proc_address(user_get_proc_address, "glWeightusvARB\0"): *fp_glWeightusvARB;
	glWindowPos2dARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2dARB\0"): *fp_glWindowPos2dARB;
	glWindowPos2dMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2dMESA\0"): *fp_glWindowPos2dMESA;
	glWindowPos2dvARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2dvARB\0"): *fp_glWindowPos2dvARB;
	glWindowPos2dvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2dvMESA\0"): *fp_glWindowPos2dvMESA;
	glWindowPos2fARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2fARB\0"): *fp_glWindowPos2fARB;
	glWindowPos2fMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2fMESA\0"): *fp_glWindowPos2fMESA;
	glWindowPos2fvARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2fvARB\0"): *fp_glWindowPos2fvARB;
	glWindowPos2fvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2fvMESA\0"): *fp_glWindowPos2fvMESA;
	glWindowPos2iARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2iARB\0"): *fp_glWindowPos2iARB;
	glWindowPos2iMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2iMESA\0"): *fp_glWindowPos2iMESA;
	glWindowPos2ivARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2ivARB\0"): *fp_glWindowPos2ivARB;
	glWindowPos2ivMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2ivMESA\0"): *fp_glWindowPos2ivMESA;
	glWindowPos2sARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2sARB\0"): *fp_glWindowPos2sARB;
	glWindowPos2sMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2sMESA\0"): *fp_glWindowPos2sMESA;
	glWindowPos2svARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos2svARB\0"): *fp_glWindowPos2svARB;
	glWindowPos2svMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos2svMESA\0"): *fp_glWindowPos2svMESA;
	glWindowPos3dARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3dARB\0"): *fp_glWindowPos3dARB;
	glWindowPos3dMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3dMESA\0"): *fp_glWindowPos3dMESA;
	glWindowPos3dvARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3dvARB\0"): *fp_glWindowPos3dvARB;
	glWindowPos3dvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3dvMESA\0"): *fp_glWindowPos3dvMESA;
	glWindowPos3fARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3fARB\0"): *fp_glWindowPos3fARB;
	glWindowPos3fMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3fMESA\0"): *fp_glWindowPos3fMESA;
	glWindowPos3fvARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3fvARB\0"): *fp_glWindowPos3fvARB;
	glWindowPos3fvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3fvMESA\0"): *fp_glWindowPos3fvMESA;
	glWindowPos3iARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3iARB\0"): *fp_glWindowPos3iARB;
	glWindowPos3iMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3iMESA\0"): *fp_glWindowPos3iMESA;
	glWindowPos3ivARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3ivARB\0"): *fp_glWindowPos3ivARB;
	glWindowPos3ivMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3ivMESA\0"): *fp_glWindowPos3ivMESA;
	glWindowPos3sARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3sARB\0"): *fp_glWindowPos3sARB;
	glWindowPos3sMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3sMESA\0"): *fp_glWindowPos3sMESA;
	glWindowPos3svARB = call_user_get_proc_address(user_get_proc_address, "glWindowPos3svARB\0"): *fp_glWindowPos3svARB;
	glWindowPos3svMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos3svMESA\0"): *fp_glWindowPos3svMESA;
	glWindowPos4dMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4dMESA\0"): *fp_glWindowPos4dMESA;
	glWindowPos4dvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4dvMESA\0"): *fp_glWindowPos4dvMESA;
	glWindowPos4fMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4fMESA\0"): *fp_glWindowPos4fMESA;
	glWindowPos4fvMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4fvMESA\0"): *fp_glWindowPos4fvMESA;
	glWindowPos4iMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4iMESA\0"): *fp_glWindowPos4iMESA;
	glWindowPos4ivMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4ivMESA\0"): *fp_glWindowPos4ivMESA;
	glWindowPos4sMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4sMESA\0"): *fp_glWindowPos4sMESA;
	glWindowPos4svMESA = call_user_get_proc_address(user_get_proc_address, "glWindowPos4svMESA\0"): *fp_glWindowPos4svMESA;
	glWindowRectanglesEXT = call_user_get_proc_address(user_get_proc_address, "glWindowRectanglesEXT\0"): *fp_glWindowRectanglesEXT;
	glWriteMaskEXT = call_user_get_proc_address(user_get_proc_address, "glWriteMaskEXT\0"): *fp_glWriteMaskEXT;
};
